<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>如何利用jekyll建立你的blogger</title>
    <url>/posts/201405/2014-05-14-how-to-build-blog-by-using-jekyll.html</url>
    <content><![CDATA[<p>以下詳細介紹如何在windows環境下使用sublime text在github上建立屬於你自己的部落格</p>
<p>以下教學來自下列兩個網站</p>
<ul>
<li><a href="http://yizeng.me/2013/05/10/setup-jekyll-on-windows/">yizeng的blogger</a></li>
<li>[madhur的blogger](<a href="http://www.madhur.co.in/blog/2011/09/01/runningjekyllwindows.html">http://www.madhur.co.in/blog/2011/09/01/runningjekyllwindows.html</a></li>
</ul>
<a id="more"></a>

<h2 id="安裝步驟如下"><a href="#安裝步驟如下" class="headerlink" title="安裝步驟如下:"></a>安裝步驟如下:</h2><p>A. 下載我壓縮的工具包：<a href="https://drive.google.com/open?id=0B1UBN4lCLHrVU3JOR0JDQ1J4Zmc">Google drive</a><br>解壓縮之後，裡面包含九個檔案：</p>
<ul>
<li>rubyinstaller-2.3.0-x64.exe</li>
<li>DevKit-mingw64-64-4.7.2-20130224-1432-sfx.exe</li>
<li>Anaconda2-4.1.0-Windows-x86_64.exe</li>
<li>install.bat</li>
<li>Git-1.9.5-preview20150319.exe</li>
<li>RedmondPathzip.rar</li>
</ul>
<p>這六個檔案分別為ruby安裝檔、ruby開發環境的檔案、python安裝檔案、python安裝bat檔、Git安裝檔案以及path修改的軟體，請依下面指示安裝。</p>
<ul>
<li>ruby預設安裝到C:\Ruby23-x64。</li>
<li>點擊兩下DevKit-mingw64-64-4.7.2-20130224-1432-sfx.exe，進行解壓縮，為了方便說明，以及環境設定，請解壓縮到C:\rubydevkit</li>
<li>解壓縮RedmondPathzip.rar，打開資料夾中的Redmond Path.exe，在任意視窗中下方加入; C:\Ruby23-x64，(你安裝路徑有更動，請跟著更改)，如下圖下示：<br><img src="/images/path_setup.png"></li>
<li>點擊Anaconda2-4.1.0-Windows-x86_64.exe，安裝python，預設安裝到C:\Anaconda2，然後點擊兩下install.bat，會詢問你是否安裝，按下y，便完成python安裝。</li>
<li>點擊Git-1.9.5-preview20150319.exe安裝Git，中間要注意，勾選Use Git from the Windows Command Prompt<br><img src="/images/git_install.PNG"></li>
</ul>
<p>B. 為了工作方便，請先按下windows鍵(在Ctr跟Alt之間)+R，開啟執行視窗，鍵入cmd，打開<code>Windows Command Prompt</code>，為了解釋方便，以後稱這個視窗為cmd。<br><img src="/images/cmd_1.png"><br><img src="/images/cmd_2.png"></p>
<p>打開cmd，他的預設目錄是在你的使用者下，請先輸入<code>cd ../..</code>，退到C:&gt;，如圖：<br><img src="/images/cmd_3.png"></p>
<p>然後在cmd中輸入下列指令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> C:/rubydevkit</span><br><span class="line">ruby dk.rb init</span><br><span class="line">notepad config.yml</span><br></pre></td></tr></table></figure>

<p>輸入完以上三行指令後，將會用記事本打開一個名為<code>_config.yml</code>的檔案，最後一行改成 <code> - C:\Ruby23-x64</code>。<br><img src="/images/dk_rb_edit.png"></p>
<p>回到cmd，鍵入<code>ruby dk.rb install</code>，如果成功會出現下面的訊息：<br><img src="/images/dk_rb_edit_2.png"></p>
<p>然後回到cmd，鍵入<code>gem install jekyll</code>，然後等待一下之後，他會安裝數個gems(不一定是27)，如圖：<br><img src="/images/ruby_install_jekyll_1.png"><br><img src="/images/ruby_install_jekyll_2.png"></p>
<p>另外，還需要安裝pygments，請鍵入<code>gem install pygments.rb</code>。</p>
<p>C. 申請git，並且clone我的庫當作基底。請到 <a href="https://github.com/">Github</a>申請一個帳號，假設你的使用者名稱(username)為USERNAME，在你的github中建立一個新的repository，repository的名稱請設定為USERNAME.github.com，這樣就完成github初步的設定。接下來，請先建立好你的工作目錄，例如我設定在E:\website中，那我可以利用這個指令<code>cd /d E:\website</code>到該目錄下，你可以自行更改工作目錄，假設clone我的庫做為基底，輸入下方指令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir USERNAME.github.com</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/ChingChuan-Chen/chingchuan-chen.github.com USERNAME.github.com</span><br></pre></td></tr></table></figure>

<p>記得當中的USERNAME要改成你在github的username。例如我的username叫做imstupid，預期output如下圖：<br><img src="/images/cmd_3.png"></p>
<p>再來就是init github的本地倉庫，以及設定你的github遠端帳號，指令如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> USERNAME.github.com</span><br><span class="line">git init</span><br><span class="line">git remote <span class="built_in">set</span>-url origin https://github.com/USERNAME/USERNAME.github.com.git</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure>

<p>過程中會要求輸入你的github的帳號(username)以及其密碼(password)，之後你就可以在你的github上看到你上傳的檔案了！最後就是一些簡單的修改，例如記事本去修改<code>_config.yml</code> (簡單的指令是<code>notepad _config.yml</code>，或是用記事本把它打開)：<br><img src="/images/config.png"><br><img src="/images/config2.png"></p>
<p>檔案中，#是註解，程式不會去閱讀的部分可以寫在#後面，其他前面沒有#的部分就是你可以更改的部分，當然更進階的話，你還可以添加一些選項進去，像是更動<code>title :</code>後面的文字就是在更改你主題頁的名稱。修改之後存檔，在cmd中輸入<code>git commit -am &quot;message&quot;</code>這個目的是儲存你所有的修改，以及添加修改的相關訊息message (這個可以自己改)，例如我想記錄這次的修改是增加新的文章，我可以打<code>git commit -am &quot;new post&quot;</code>。</p>
<p>還有git的使用如你想在你的目錄下新增東西，你要讓它能夠出現在網站上就要先加入名單中，輸入<code>git add .</code>的指令加入你所新增的檔案，舉例來說，我增加了幾張圖，我就先打入<code>git add .</code>，接著commit，然後push(上傳)到我的github，操作示範如下：<br><img src="/images/cmd_5.png"></p>
<p>如果想移除檔案，就輸入<code>git rm filename</code>，filename是你的檔案名稱，只是注意的是這個操作不只把從github抹除，同時也會把你硬碟的檔案刪除。其他的指令利用可能就要慢慢再去學習。</p>
<p>D. 其他部分，最重要的是如何預覽，在cmd中輸入<code>jekyll serve</code>會出現下面：<br><img src="/images/cmd_6.png"></p>
<p>然後在你的瀏覽器(例如IE, chrome or firefox)輸入<code>localhost:4000</code>，就可以出現你blogger的預覽畫面：<br><img src="/images/browser.png"></p>
<p>還有PO文部分，可以先更改_posts下我的文章，它的檔案格式是yyyy-mm-dd-ANameOfPost.md，可以直接利用記事本做編輯，最前面是一些基本設定：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">layout: post</span><br><span class="line">cTitle: 如何利用jekyll建立你的blogger</span><br><span class="line">title: how to build blog by using jekyll</span><br><span class="line">description: &quot;&quot;</span><br><span class="line">---</span><br><span class="line">&#123;&#125;</span><br><span class="line">一些文字...</span><br><span class="line">123</span><br><span class="line"></span><br><span class="line">456</span><br></pre></td></tr></table></figure>

<p>兩個—中是關於你post的設定，layout是設定我現在的格式是什麼，在_posts裡面就理所當然是設定post，title是設定你文章的標題(這是顯示的標題)，title是標題(提供給程式控制)，decription是關於你這篇文章的敘述，category是你文章的分類，cssdemo是檔案的格式，這部分我還不熟，請先跟我設定相同，或是你自行摸索，tags是標籤，方便你自己以及其他人找尋相關文章，最後，published是設定是否要公開於網站上，你如果還沒寫好的文章就可以先改成false，那你確定要公開就改成true，include部分是必須要引入的設定，最好不要省略，more那列是在首頁顯示部分到此，例如上面的例子，就是首頁只會顯示123，而456要等你點開文章才會看到。剩下還要更改的部分是index.html以及一些小地方，如果需要幫助，再到左下角點選我的名字就可以連到我的facebook與我聯絡。最後，溫馨提醒：文章的編寫可以對照我的post跟我的blogger顯示文章去推敲寫法，總之，從模仿開始，我也才剛學會架設blogger一周而已。</p>
<p>Note: github不會即時更新，需要等待幾分鐘才會更新你新的上傳。</p>
<p>2016-01-18增補：</p>
<p>沒空寫新的文章，根據這個部落格風格的原作者表示出了一個github-page的gem，用法參考這篇，<a href="http://wcc723.github.io/jekyll/2014/09/05/github-page">這篇</a>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gem install github-pages</span><br><span class="line">gem install rails</span><br><span class="line"><span class="built_in">cd</span> USERNAME.github.com</span><br><span class="line">bundle install</span><br><span class="line">bundle <span class="built_in">exec</span> jekyll serve --watch</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>jekyll</category>
      </categories>
      <tags>
        <tag>jekyll</tag>
      </tags>
  </entry>
  <entry>
    <title>Sublime Text 3 in Linux</title>
    <url>/posts/201405/2014-05-18-sublime-text-in-linux.html</url>
    <content><![CDATA[<p>以下文章參考下列四個網址：</p>
<ol>
<li><a href="https://www.sinosky.org/linux-sublime-text-fcitx.html">完美解决 Linux 下 Sublime Text 中文输入</a></li>
<li><a href="http://askubuntu.com/questions/396938/how-do-i-make-sublime-text-3-the-default-text-editor">How do I make Sublime Text 3 the default text editor</a></li>
</ol>
<p>linux上，中文輸入法一直是難題，應用程式沒辦法支援中文輸入是非常常見的事情，連sublime text也是。還不只如此，還有輸入法的戰爭，我在進入linux時，最一開使用的輸入法是gcin，然後去用hime，最後因為sublime text的解決方法只能只用fcitx，最後用了這個輸入法。</p>
<p>我看了不少文章提供各種sublime text輸入的問題，我覺得下列方法是最方便的：</p>
<ol>
<li>把下列的程式碼存為sublime_imfix.c:</li>
</ol>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">sublime-imfix.c</span></span><br><span class="line"><span class="comment">Use LD_PRELOAD to interpose some function to fix sublime input method support for linux.</span></span><br><span class="line"><span class="comment">By Cjacker Huang</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">gcc -shared -o libsublime-imfix.so sublime-imfix.c `pkg-config --libs --cflags gtk+-2.0` -fPIC</span></span><br><span class="line"><span class="comment">LD_PRELOAD=./libsublime-imfix.so subl</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;gtk/gtk.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;gdk/gdkx.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> GdkSegment GdkRegionBox;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> _<span class="title">GdkRegion</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="keyword">long</span> size;</span><br><span class="line">  <span class="keyword">long</span> numRects;</span><br><span class="line">  GdkRegionBox *rects;</span><br><span class="line">  GdkRegionBox extents;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">GtkIMContext *local_context;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span></span><br><span class="line">gdk_region_get_clipbox (<span class="keyword">const</span> GdkRegion *region,</span><br><span class="line">            GdkRectangle    *rectangle)</span><br><span class="line">&#123;</span><br><span class="line">  g_return_if_fail (region != <span class="literal">NULL</span>);</span><br><span class="line">  g_return_if_fail (rectangle != <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">  rectangle-&gt;x = region-&gt;extents.x1;</span><br><span class="line">  rectangle-&gt;y = region-&gt;extents.y1;</span><br><span class="line">  rectangle-&gt;width = region-&gt;extents.x2 - region-&gt;extents.x1;</span><br><span class="line">  rectangle-&gt;height = region-&gt;extents.y2 - region-&gt;extents.y1;</span><br><span class="line">  GdkRectangle rect;</span><br><span class="line">  rect.x = rectangle-&gt;x;</span><br><span class="line">  rect.y = rectangle-&gt;y;</span><br><span class="line">  rect.width = <span class="number">0</span>;</span><br><span class="line">  rect.height = rectangle-&gt;height;</span><br><span class="line">  <span class="comment">//The caret width is 2;</span></span><br><span class="line">  <span class="comment">//Maybe sometimes we will make a mistake, but for most of the time, it should be the caret.</span></span><br><span class="line">  <span class="keyword">if</span>(rectangle-&gt;width == <span class="number">2</span> &amp;&amp; GTK_IS_IM_CONTEXT(local_context)) &#123;</span><br><span class="line">        gtk_im_context_set_cursor_location(local_context, rectangle);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//this is needed, for example, if you input something in file dialog and return back the edit area</span></span><br><span class="line"><span class="comment">//context will lost, so here we set it again.</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> GdkFilterReturn <span class="title">event_filter</span> <span class="params">(GdkXEvent *xevent, GdkEvent *event, gpointer im_context)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    XEvent *xev = (XEvent *)xevent;</span><br><span class="line">    <span class="keyword">if</span>(xev-&gt;type == KeyRelease &amp;&amp; GTK_IS_IM_CONTEXT(im_context)) &#123;</span><br><span class="line">       GdkWindow * win = g_object_get_data(G_OBJECT(im_context),<span class="string">&quot;window&quot;</span>);</span><br><span class="line">       <span class="keyword">if</span>(GDK_IS_WINDOW(win))</span><br><span class="line">         gtk_im_context_set_client_window(im_context, win);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> GDK_FILTER_CONTINUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gtk_im_context_set_client_window</span> <span class="params">(GtkIMContext *context,</span></span></span><br><span class="line"><span class="function"><span class="params">          GdkWindow    *window)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  GtkIMContextClass *klass;</span><br><span class="line">  g_return_if_fail (GTK_IS_IM_CONTEXT (context));</span><br><span class="line">  klass = GTK_IM_CONTEXT_GET_CLASS (context);</span><br><span class="line">  <span class="keyword">if</span> (klass-&gt;set_client_window)</span><br><span class="line">    klass-&gt;set_client_window (context, window);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(!GDK_IS_WINDOW (window))</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  g_object_set_data(G_OBJECT(context),<span class="string">&quot;window&quot;</span>,window);</span><br><span class="line">  <span class="keyword">int</span> width = gdk_window_get_width(window);</span><br><span class="line">  <span class="keyword">int</span> height = gdk_window_get_height(window);</span><br><span class="line">  <span class="keyword">if</span>(width != <span class="number">0</span> &amp;&amp; height !=<span class="number">0</span>) &#123;</span><br><span class="line">    gtk_im_context_focus_in(context);</span><br><span class="line">    local_context = context;</span><br><span class="line">  &#125;</span><br><span class="line">  gdk_window_add_filter (window, event_filter, context);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>Ctrl+Alt+T打開你的Terminal視窗到你儲存上面檔案的地方，鍵入：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install build-essential libgtk2.0-dev</span><br><span class="line">gcc -shared -o libsublime-imfix.so sublime-imfix.c `pkg-config --libs --cflags gtk+-2.0` -fPIC</span><br><span class="line">sudo mv libsublime-imfix.so /opt/sublime_text/</span><br></pre></td></tr></table></figure>

<p>這樣就完成編譯，並且將檔案放置到安裝目錄了。</p>
<ol start="3">
<li>修改啟動部份</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo subl /usr/share/applications/sublime-text.desktop</span><br></pre></td></tr></table></figure>

<p>在每一個<code>Exec=</code>後面都加上下面的指令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">env LD_PRELOAD=/opt/sublime_text/libsublime-imfix.so</span><br></pre></td></tr></table></figure>

<p>然後輸入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo subl /usr/bin/subl</span><br></pre></td></tr></table></figure>

<p>更動內容為</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="built_in">export</span> LD_PRELOAD=/opt/sublime_text/libsublime-imfix.so</span><br><span class="line"><span class="built_in">exec</span> /opt/sublime_text/sublime_text <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br></pre></td></tr></table></figure>

<ol start="4">
<li>如果想要把sublime text更動為預設編輯器，先使用下列指令確定是否有安裝成功：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ls /usr/share/applications/sublime-text.desktop</span><br></pre></td></tr></table></figure>

<p>接著打開linux的default列表：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo subl /usr/share/applications/defaults.list</span><br></pre></td></tr></table></figure>

<p>按下Ctrl+H replace gedit with sublime-text。接著打開user的設定列表：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">subl ~/.<span class="built_in">local</span>/share/applications/mimeapps.list</span><br></pre></td></tr></table></figure>

<p>修改或添加下列下列文字：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[Added Associations]</span><br><span class="line">text/plain=ubuntu-software-center.desktop;shotwell.desktop;sublime-text.desktop;</span><br><span class="line">text/x-chdr=shotwell-viewer.desktop;</span><br><span class="line"></span><br><span class="line">[Default Applications]</span><br><span class="line">text/plain=sublime-text.desktop</span><br><span class="line">text/x-c++src=sublime-text.desktop</span><br><span class="line">text/x-chdr=sublime-text.desktop</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Sublime Text 3</tag>
      </tags>
  </entry>
  <entry>
    <title>如何compile R with Intel C++ compiler and Intel MKL</title>
    <url>/posts/201405/2014-05-16-how-to-compile-R-with-mkl.html</url>
    <content><![CDATA[<p>以下文章參考下列四個網址：</p>
<ol>
<li><a href="https://software.intel.com/en-us/articles/using-intel-mkl-with-r">Using Intel MKL with R</a></li>
<li><a href="https://software.intel.com/en-us/articles/build-r-301-with-intel-c-compiler-and-intel-mkl-on-linux">Build R-3.0.1 with Intel C++ Compiler and Intel MKL on Linux</a></li>
<li><a href="http://www.r-bloggers.com/compiling-r-3-0-1-with-mkl-support/">Compiling R 3.0.1 with MKL support</a></li>
<li><a href="http://cran.r-project.org/doc/manuals/r-devel/R-admin.html">R Installation and Administraction</a></li>
</ol>
<p>開始之前，先用Default R and R with Openblas來測試看看，I use testing script found in <a href="http://r.research.att.com/benchmarks/">Simon Urbanek’s</a>，Openblas部份參考這個網站<a href="http://www.r-bloggers.com/for-faster-r-use-openblas-instead-better-than-atlas-trivial-to-switch-to-on-ubuntu/">For faster R use OpenBLAS instead: better than ATLAS, trivial to switch to on Ubuntu</a>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># to install package in /usr/lib/R/library</span></span><br><span class="line">sudo chmod -R 774 /usr/lib/R</span><br><span class="line">sudo chown -R celest.celest /usr/lib/R</span><br><span class="line">sudo chmod -R 774 /usr/<span class="built_in">local</span>/lib/R</span><br><span class="line">sudo chown -R celest.celest /usr/<span class="built_in">local</span>/lib/R</span><br><span class="line"><span class="comment"># install required package</span></span><br><span class="line">R -e <span class="string">&quot;install.packages(&#x27;SuppDists&#x27;, repos = &#x27;http://cran.rstudio.com/&#x27;)&quot;</span></span><br><span class="line"><span class="comment"># run benchmark</span></span><br><span class="line">R -e <span class="string">&quot;source(&#x27;http://r.research.att.com/benchmarks/R-benchmark-25.R&#x27;)&quot;</span></span><br><span class="line"><span class="comment"># install OpenBLAS</span></span><br><span class="line">sudo apt-get install libopenblas-base libatlas3gf-base</span><br><span class="line"><span class="comment"># check the BLAS is replaced with OpenBLAS</span></span><br><span class="line">sudo update-alternatives --config libblas.so.3</span><br><span class="line">sudo update-alternatives --config liblapack.so.3</span><br><span class="line"><span class="comment"># run benchmark again</span></span><br><span class="line">R -e <span class="string">&quot;source(&#x27;http://r.research.att.com/benchmarks/R-benchmark-25.R&#x27;)&quot;</span></span><br></pre></td></tr></table></figure>

<p>測試結果如下：<br>Default R：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">   R Benchmark <span class="number">2.5</span></span><br><span class="line">   ===============</span><br><span class="line">Number of times each test is run__________________________:  <span class="number">3</span></span><br><span class="line"></span><br><span class="line">   I. Matrix calculation</span><br><span class="line">   ---------------------</span><br><span class="line">Creation, transp., deformation of a 250<span class="number">0x2500</span> matrix (sec):  <span class="number">0.812333333333334</span></span><br><span class="line">240<span class="number">0x2400</span> normal distributed random matrix ^1000____ (sec):  <span class="number">0.474666666666667</span></span><br><span class="line">Sorting of <span class="number">7</span>,<span class="number">000</span>,<span class="number">000</span> random values__________________ (sec):  <span class="number">0.563333333333333</span></span><br><span class="line">280<span class="number">0x2800</span> cross-product matrix (b = a<span class="string">&#x27; * a)_________ (sec):  8.99466666666667</span></span><br><span class="line"><span class="string">Linear regr. over a 3000x3000 matrix (c = a \ b&#x27;</span>)___ (sec):  <span class="number">4.42166666666667</span></span><br><span class="line">                      --------------------------------------------</span><br><span class="line">                 Trimmed geom. mean (<span class="number">2</span> extremes eliminated):  <span class="number">1.26481956425649</span></span><br><span class="line"></span><br><span class="line">   II. Matrix functions</span><br><span class="line">   --------------------</span><br><span class="line">FFT over <span class="number">2</span>,<span class="number">400</span>,<span class="number">000</span> random values____________________ (sec):  <span class="number">0.396000000000001</span></span><br><span class="line">Eigenvalues of a 64<span class="number">0x640</span> random matrix______________ (sec):  <span class="number">0.718000000000001</span></span><br><span class="line">Determinant of a 250<span class="number">0x2500</span> random matrix____________ (sec):  <span class="number">3.03633333333334</span></span><br><span class="line">Cholesky decomposition of a 300<span class="number">0x3000</span> matrix________ (sec):  <span class="number">3.42433333333333</span></span><br><span class="line">Inverse of a 160<span class="number">0x1600</span> random matrix________________ (sec):  <span class="number">2.56266666666666</span></span><br><span class="line">                      --------------------------------------------</span><br><span class="line">                Trimmed geom. mean (<span class="number">2</span> extremes eliminated):  <span class="number">1.77441555997029</span></span><br><span class="line"></span><br><span class="line">   III. Programmation</span><br><span class="line">   ------------------</span><br><span class="line"><span class="number">3</span>,<span class="number">500</span>,<span class="number">000</span> Fibonacci numbers calculation (vector calc)(sec):  <span class="number">0.543999999999992</span></span><br><span class="line">Creation of a 300<span class="number">0x3000</span> Hilbert matrix (matrix calc) (sec):  <span class="number">0.294333333333337</span></span><br><span class="line">Grand common divisors of <span class="number">400</span>,<span class="number">000</span> pairs (recursion)__ (sec):  <span class="number">0.686666666666658</span></span><br><span class="line">Creation of a 50<span class="number">0x500</span> Toeplitz matrix (loops)_______ (sec):  <span class="number">0.49266666666666</span></span><br><span class="line">Escoufier<span class="string">&#x27;s method on a 45x45 matrix (mixed)________ (sec):  0.378999999999991</span></span><br><span class="line"><span class="string">                      --------------------------------------------</span></span><br><span class="line"><span class="string">                Trimmed geom. mean (2 extremes eliminated):  0.466584631384852</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Total time for all 15 tests_________________________ (sec):  27.8006666666666</span></span><br><span class="line"><span class="string">Overall mean (sum of I, II and III trimmed means/3)_ (sec):  1.01548017027814</span></span><br><span class="line"><span class="string">                      --- End of test ---</span></span><br></pre></td></tr></table></figure>

<p>R with Openblas:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">   R Benchmark <span class="number">2.5</span></span><br><span class="line">   ===============</span><br><span class="line">Number of times each test is run__________________________:  <span class="number">3</span></span><br><span class="line"></span><br><span class="line">   I. Matrix calculation</span><br><span class="line">   ---------------------</span><br><span class="line">Creation, transp., deformation of a 250<span class="number">0x2500</span> matrix (sec):  <span class="number">0.755666666666667</span></span><br><span class="line">240<span class="number">0x2400</span> normal distributed random matrix ^1000____ (sec):  <span class="number">0.473</span></span><br><span class="line">Sorting of <span class="number">7</span>,<span class="number">000</span>,<span class="number">000</span> random values__________________ (sec):  <span class="number">0.572</span></span><br><span class="line">280<span class="number">0x2800</span> cross-product matrix (b = a<span class="string">&#x27; * a)_________ (sec):  0.411</span></span><br><span class="line"><span class="string">Linear regr. over a 3000x3000 matrix (c = a \ b&#x27;</span>)___ (sec):  <span class="number">0.213</span></span><br><span class="line">                      --------------------------------------------</span><br><span class="line">                 Trimmed geom. mean (<span class="number">2</span> extremes eliminated):  <span class="number">0.480875883392325</span></span><br><span class="line"></span><br><span class="line">   II. Matrix functions</span><br><span class="line">   --------------------</span><br><span class="line">FFT over <span class="number">2</span>,<span class="number">400</span>,<span class="number">000</span> random values____________________ (sec):  <span class="number">0.372666666666666</span></span><br><span class="line">Eigenvalues of a 64<span class="number">0x640</span> random matrix______________ (sec):  <span class="number">0.895</span></span><br><span class="line">Determinant of a 250<span class="number">0x2500</span> random matrix____________ (sec):  <span class="number">0.271333333333335</span></span><br><span class="line">Cholesky decomposition of a 300<span class="number">0x3000</span> matrix________ (sec):  <span class="number">0.243333333333333</span></span><br><span class="line">Inverse of a 160<span class="number">0x1600</span> random matrix________________ (sec):  <span class="number">0.328000000000001</span></span><br><span class="line">                      --------------------------------------------</span><br><span class="line">                Trimmed geom. mean (<span class="number">2</span> extremes eliminated):  <span class="number">0.321291459145567</span></span><br><span class="line"></span><br><span class="line">   III. Programmation</span><br><span class="line">   ------------------</span><br><span class="line"><span class="number">3</span>,<span class="number">500</span>,<span class="number">000</span> Fibonacci numbers calculation (vector calc)(sec):  <span class="number">0.522333333333335</span></span><br><span class="line">Creation of a 300<span class="number">0x3000</span> Hilbert matrix (matrix calc) (sec):  <span class="number">0.259666666666668</span></span><br><span class="line">Grand common divisors of <span class="number">400</span>,<span class="number">000</span> pairs (recursion)__ (sec):  <span class="number">0.674333333333337</span></span><br><span class="line">Creation of a 50<span class="number">0x500</span> Toeplitz matrix (loops)_______ (sec):  <span class="number">0.499333333333335</span></span><br><span class="line">Escoufier<span class="string">&#x27;s method on a 45x45 matrix (mixed)________ (sec):  0.352999999999994</span></span><br><span class="line"><span class="string">                      --------------------------------------------</span></span><br><span class="line"><span class="string">                Trimmed geom. mean (2 extremes eliminated):  0.451548428599678</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Total time for all 15 tests_________________________ (sec):  6.84366666666667</span></span><br><span class="line"><span class="string">Overall mean (sum of I, II and III trimmed means/3)_ (sec):  0.411666478563312</span></span><br><span class="line"><span class="string">                      --- End of test ---</span></span><br></pre></td></tr></table></figure>

<p>可以看到total time已經從27.8秒到6.8秒左右，改善幅度已經不少，接著來compile R:</p>
<ol>
<li>取得R與其開發包，並安裝需要的套件，在terminal use following commands:</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:webupd8team/java &amp;&amp; sudo apt-get update &amp;&amp; sudo apt-get install oracle-java8-installer &amp;&amp; sudo apt-get install oracle-java8-set-default</span><br><span class="line">apt-cache search readline xorg-dev &amp;&amp; sudo apt-get install libreadline6 libreadline6-dev texinfo texlive texlive-binaries texlive-latex-base xorg-dev tcl8.6-dev tk8.6-dev libtiff5 libtiff5-dev libjpeg-dev libpng12-dev libcairo2-dev libglu1-mesa-dev libgsl0-dev libicu-dev R-base R-base-dev libnlopt-dev libstdc++6 build-essential libcurl4-openssl-dev texlive-fonts-extra libxml2-dev aptitude</span><br><span class="line"><span class="comment"># sudo apt-get install texlive-latex-extra</span></span><br></pre></td></tr></table></figure>

<p>有一個工具要另外安裝，方式如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget http://ftp.gnu.org/pub/gnu/libiconv/libiconv-1.14.tar.gz</span><br><span class="line">tar -xvzf libiconv-1.14.tar.gz</span><br><span class="line"><span class="built_in">cd</span> libiconv-1.14 &amp;&amp; ./configure --prefix=/usr/<span class="built_in">local</span>/libiconv</span><br><span class="line">make &amp;&amp; sudo make install</span><br></pre></td></tr></table></figure>

<p>但是我在make過程中有出錯，我google之後找到的解法是修改<code>srclib/stdio.in.h</code>的698列:<br>原本的script:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">_GL_WARN_ON_USE (gets, <span class="string">&quot;gets is a security hole - use fgets instead&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>修改後的scipt:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">if</span> defined(__GLIBC__) &amp;&amp; !defined(__UCLIBC__) &amp;&amp; !__GLIBC_PREREQ(2, 16)</span></span><br><span class="line"> _GL_WARN_ON_USE (gets, <span class="string">&quot;gets is a security hole - use fgets instead&quot;</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>

<p>之後再重新make就成功了。</p>
<ol start="2">
<li>取得R source code:</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget http://cran.csie.ntu.edu.tw/src/base/R-3/R-3.2.3.tar.gz</span><br><span class="line">tar -xvzf R-3.2.3.tar.gz</span><br></pre></td></tr></table></figure>

<ol start="3">
<li><p>取得Intel C++ compiler and Intel MKL，你可以取得non-commercial license for this two software in intel website. 另外，64bit linux system不支援32 bits的compiler，安裝時記得取消掉IA32的安裝。</p>
</li>
<li><p>compilitation:</p>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -s</span><br><span class="line"><span class="built_in">source</span> /opt/intel/composer_xe_2015/mkl/bin intel64</span><br><span class="line"><span class="built_in">source</span> /opt/intel/composer_xe_2015/bin/compilervars.sh intel64</span><br><span class="line">MKL_path=/opt/intel/composer_xe_2015/mkl</span><br><span class="line">ICC_path=/opt/intel/composer_xe_2015/compiler</span><br><span class="line"><span class="built_in">export</span> LD=<span class="string">&quot;xild&quot;</span></span><br><span class="line"><span class="built_in">export</span> AR=<span class="string">&quot;xiar&quot;</span></span><br><span class="line"><span class="built_in">export</span> CC=<span class="string">&quot;icc&quot;</span></span><br><span class="line"><span class="built_in">export</span> CXX=<span class="string">&quot;icpc&quot;</span></span><br><span class="line"><span class="built_in">export</span> CFLAGS=<span class="string">&quot;-wd188 -ip -std=gnu99 -g -O3 -openmp -parallel -xHost -ipo -fp-model precise -fp-model source&quot;</span></span><br><span class="line"><span class="built_in">export</span> CXXFLAGS=<span class="string">&quot;-g -O3 -openmp -parallel -xHost -ipo -fp-model precise -fp-model source&quot;</span></span><br><span class="line"><span class="built_in">export</span> F77=ifort</span><br><span class="line"><span class="built_in">export</span> FFLAGS=<span class="string">&quot;-g -O3 -openmp -parallel -xHost -ipo -fp-model source&quot;</span></span><br><span class="line"><span class="built_in">export</span> FC=ifort</span><br><span class="line"><span class="built_in">export</span> FCFLAGS=<span class="string">&quot;-g -O3 -openmp -parallel -xHost -ipo -fp-model source&quot;</span></span><br><span class="line"><span class="built_in">export</span> ICC_LIBS=<span class="variable">$ICC_path</span>/lib/intel64</span><br><span class="line"><span class="built_in">export</span> IFC_LIBS=<span class="variable">$ICC_path</span>/lib/intel64</span><br><span class="line"><span class="built_in">export</span> LDFLAGS=<span class="string">&quot;-L<span class="variable">$ICC_LIBS</span> -L<span class="variable">$IFC_LIBS</span> -L<span class="variable">$MKL_path</span>/lib/intel64 -L/usr/lib -L/usr/local/lib -openmp&quot;</span></span><br><span class="line"><span class="built_in">export</span> SHLIB_CXXLD=icpc</span><br><span class="line"><span class="built_in">export</span> SHLIB_LDFLAGS=<span class="string">&quot;-shared -fPIC&quot;</span></span><br><span class="line"><span class="built_in">export</span> SHLIB_CXXLDFLAGS=<span class="string">&quot;-shared -fPIC&quot;</span></span><br><span class="line">MKL=<span class="string">&quot;-L<span class="variable">$MKL_path</span>/lib/intel64 -lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core -liomp5 -lpthread -ldl -lm&quot;</span></span><br><span class="line">./configure --with-blas=<span class="string">&quot;<span class="variable">$MKL</span>&quot;</span> --with-lapack --with-x --<span class="built_in">enable</span>-memory-profiling --with-tcl-config=/usr/lib/tcl8.6/tclConfig.sh --with-tk-config=/usr/lib/tk8.6/tkConfig.sh --<span class="built_in">enable</span>-R-shlib --<span class="built_in">enable</span>-BLAS-shlib --<span class="built_in">enable</span>-prebuilt-html</span><br></pre></td></tr></table></figure>

<p>如果順利會出現下方的畫面：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">R is now configured <span class="keyword">for</span> x86_64-pc-linux-gnu</span><br><span class="line"></span><br><span class="line">  Source directory:          .</span><br><span class="line">  Installation directory:    /usr/<span class="built_in">local</span></span><br><span class="line"></span><br><span class="line">  C compiler:                icc  -wd188 -ip -std=gnu99 -g -O3 -openmp -parallel -xHost -ipo -fp-model precise -fp-model <span class="built_in">source</span></span><br><span class="line">  Fortran 77 compiler:       ifort  -g -O3 -openmp -parallel -xHost -ipo -fp-model <span class="built_in">source</span></span><br><span class="line"></span><br><span class="line">  C++ compiler:              icpc  -g -O3 -openmp -parallel -xHost -ipo -fp-model precise -fp-model <span class="built_in">source</span></span><br><span class="line">  C++ 11 compiler:           icpc  -std=c++11 -g -O3 -openmp -parallel -xHost -ipo -fp-model precise -fp-model <span class="built_in">source</span></span><br><span class="line">  Fortran 90/95 compiler:    ifort -g -O3 -openmp -parallel -xHost -ipo -fp-model <span class="built_in">source</span></span><br><span class="line">  Obj-C compiler:</span><br><span class="line"></span><br><span class="line">  Interfaces supported:      X11, tcltk</span><br><span class="line">  External libraries:        readline, BLAS(MKL), zlib, bzlib, lzma, PCRE, curl</span><br><span class="line">  Additional capabilities:   PNG, JPEG, TIFF, NLS, cairo, ICU</span><br><span class="line">  Options enabled:           shared R library, shared BLAS, R profiling, memory profiling, static HTML</span><br><span class="line"></span><br><span class="line">  Capabilities skipped:</span><br><span class="line">  Options not enabled:</span><br><span class="line"></span><br><span class="line">  Recommended packages:      yes</span><br></pre></td></tr></table></figure>

<p>出現上方畫面就可以開始make跟install了：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make &amp;&amp; make check</span><br><span class="line"><span class="comment"># removing R before installation</span></span><br><span class="line">rm /usr/lib/libR.so</span><br><span class="line">rm -r /usr/lib/R</span><br><span class="line">rm -r /usr/bin/Rscript</span><br><span class="line">rm -r /usr/<span class="built_in">local</span>/lib/R</span><br><span class="line">make docs</span><br><span class="line">make install</span><br><span class="line">chown -R celest.celest /usr/<span class="built_in">local</span>/lib/R</span><br><span class="line">chmod -R 775 /usr/<span class="built_in">local</span>/lib/R</span><br><span class="line"><span class="comment"># to add mkl and intel c compiler into path</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;source /opt/intel/composer_xe_2015/mkl/bin/mklvars.sh intel64&#x27;</span> &gt;&gt; /etc/bash.bashrc</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;source /opt/intel/composer_xe_2015/bin/compilervars.sh intel64&#x27;</span> &gt;&gt; /etc/bash.bashrc</span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"><span class="comment"># install required package</span></span><br><span class="line">R -e <span class="string">&quot;install.packages(&#x27;SuppDists&#x27;, repos = &#x27;http://cran.rstudio.com/&#x27;)&quot;</span></span><br><span class="line"><span class="comment"># run benchmark</span></span><br><span class="line">R -e <span class="string">&quot;source(&#x27;http://r.research.att.com/benchmarks/R-benchmark-25.R&#x27;)&quot;</span></span><br><span class="line"><span class="comment"># to run rstudio-server, you have two options, first:</span></span><br><span class="line"><span class="comment"># echo &#x27;rsession-which-r=/usr/local/bin/R&#x27; &gt;&gt; /etc/rstudio/rserver.conf</span></span><br><span class="line"><span class="comment"># second , please use option configure with --prefix=/usr</span></span><br></pre></td></tr></table></figure>

<p>然後他就會幫你把R安裝於<code>usr/local/lib/R</code>中。</p>
<ol start="5">
<li>測試結果</li>
</ol>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">   R Benchmark <span class="number">2.5</span></span><br><span class="line">   ===============</span><br><span class="line">Number of times each test is run__________________________:  <span class="number">3</span></span><br><span class="line"></span><br><span class="line">   I. Matrix calculation</span><br><span class="line">   ---------------------</span><br><span class="line">Creation, transp., deformation of a 250<span class="number">0x2500</span> matrix (sec):  <span class="number">0.683</span></span><br><span class="line">240<span class="number">0x2400</span> normal distributed random matrix ^1000____ (sec):  <span class="number">0.259666666666667</span></span><br><span class="line">Sorting of <span class="number">7</span>,<span class="number">000</span>,<span class="number">000</span> random values__________________ (sec):  <span class="number">0.560333333333333</span></span><br><span class="line">280<span class="number">0x2800</span> cross-product matrix (b = a<span class="string">&#x27; * a)_________ (sec):  0.44</span></span><br><span class="line"><span class="string">Linear regr. over a 3000x3000 matrix (c = a \ b&#x27;</span>)___ (sec):  <span class="number">0.193666666666666</span></span><br><span class="line">                      --------------------------------------------</span><br><span class="line">                 Trimmed geom. mean (<span class="number">2</span> extremes eliminated):  <span class="number">0.400041560496478</span></span><br><span class="line"></span><br><span class="line">   II. Matrix functions</span><br><span class="line">   --------------------</span><br><span class="line">FFT over <span class="number">2</span>,<span class="number">400</span>,<span class="number">000</span> random values____________________ (sec):  <span class="number">0.393666666666667</span></span><br><span class="line">Eigenvalues of a 64<span class="number">0x640</span> random matrix______________ (sec):  <span class="number">0.326999999999999</span></span><br><span class="line">Determinant of a 250<span class="number">0x2500</span> random matrix____________ (sec):  <span class="number">0.215666666666666</span></span><br><span class="line">Cholesky decomposition of a 300<span class="number">0x3000</span> matrix________ (sec):  <span class="number">0.183999999999999</span></span><br><span class="line">Inverse of a 160<span class="number">0x1600</span> random matrix________________ (sec):  <span class="number">0.182333333333332</span></span><br><span class="line">                      --------------------------------------------</span><br><span class="line">                Trimmed geom. mean (<span class="number">2</span> extremes eliminated):  <span class="number">0.234990082575285</span></span><br><span class="line"></span><br><span class="line">   III. Programmation</span><br><span class="line">   ------------------</span><br><span class="line"><span class="number">3</span>,<span class="number">500</span>,<span class="number">000</span> Fibonacci numbers calculation (vector calc)(sec):  <span class="number">0.274333333333333</span></span><br><span class="line">Creation of a 300<span class="number">0x3000</span> Hilbert matrix (matrix calc) (sec):  <span class="number">0.221333333333333</span></span><br><span class="line">Grand common divisors of <span class="number">400</span>,<span class="number">000</span> pairs (recursion)__ (sec):  <span class="number">0.275666666666667</span></span><br><span class="line">Creation of a 50<span class="number">0x500</span> Toeplitz matrix (loops)_______ (sec):  <span class="number">0.255</span></span><br><span class="line">Escoufier<span class="string">&#x27;s method on a 45x45 matrix (mixed)________ (sec):  0.338999999999999</span></span><br><span class="line"><span class="string">                      --------------------------------------------</span></span><br><span class="line"><span class="string">                Trimmed geom. mean (2 extremes eliminated):  0.268164327390206</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Total time for all 15 tests_________________________ (sec):  4.80466666666666</span></span><br><span class="line"><span class="string">Overall mean (sum of I, II and III trimmed means/3)_ (sec):  0.293214347493761</span></span><br><span class="line"><span class="string">                      --- End of test ---</span></span><br></pre></td></tr></table></figure>

<p>最後只需要用到4.8秒就可以完成了，可是complitation過程是滿麻煩的，雖然參考了多個網站，可是參數的設定都不太一樣，linux又有權限的限制，而且就算編譯成功，Rcpp這個套件不見得能夠成功，因此花了很久才終於編譯成功，並且能夠直接開啟，只是要利用到c, cpp or fortran時還是需要source compilervars.sh才能夠運行，而且我安裝了三四十個套件都沒有問題了。最後，如果沒有特別要求速度下，其實直接用OpenBLAS就可以省下很多麻煩。另外，我做了一個小小的測試於Rcpp上，速度有不少的提昇(因為用intel C++ compiler，大概增加5~10倍)，測試結果就不放上來了。以上資訊供大家參考，轉載請註明來源，謝謝。</p>
<p>最後附上測試環境: My environment is mint 17.3, R 3.2.3 compiled by Intel c++, fortran compiler with Intel MKL. My CPU is <a href="mailto:&#51;&#x37;&#55;&#48;&#x4b;&#x40;&#52;&#46;&#52;&#x47;&#x48;&#x7a;">&#51;&#x37;&#55;&#48;&#x4b;&#x40;&#52;&#46;&#52;&#x47;&#x48;&#x7a;</a>.</p>
<p>To use the html help page and change the default language of R to english, you can do that:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;options(&quot;help_type&quot;=&quot;html&quot;)&#x27;</span> &gt; ~/.Rprofile</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;LANGUAGE=&quot;en&quot;&#x27;</span> &gt; ~/.Renviron</span><br></pre></td></tr></table></figure>

<p>如果要讓Rstudio Server裡面成功啟動並且可以使用<code>icpc</code>，請在<code>/usr/lib/rstudio-server/R/ServerOptions.R</code>裡面加入下方：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">Sys.setenv(PATH = <span class="string">&quot;/opt/intel/composer_xe_2015.1.133/bin/intel64:/opt/intel/composer_xe_2015.1.133/debugger/gdb/intel64_mic/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/jvm/java-8-oracle/bin:/usr/lib/jvm/java-8-oracle/db/bin:/usr/lib/jvm/java-8-oracle/jre/bin:$PATH&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>java config and install some useful packages:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">R CMD javareconf</span><br><span class="line">install.packages(c(<span class="string">&#x27;devtools&#x27;</span>, <span class="string">&#x27;testthat&#x27;</span>))</span><br><span class="line">devtools::install_github(c(<span class="string">&#x27;klutometis/roxygen&#x27;</span>, <span class="string">&#x27;hadley/assertthat&#x27;</span>, <span class="string">&#x27;RcppCore/Rcpp&#x27;</span>, <span class="string">&#x27;hadley/devtools&#x27;</span>, <span class="string">&#x27;hadley/testthat&#x27;</span>, <span class="string">&#x27;hadley/lazyeval&#x27;</span>))</span><br><span class="line">devtools::install_github(c(<span class="string">&#x27;smbache/magrittr&#x27;</span>, <span class="string">&#x27;Rdatatable/data.table&#x27;</span>, <span class="string">&#x27;hadley/reshape&#x27;</span>, <span class="string">&#x27;hadley/plyr&#x27;</span>, <span class="string">&#x27;hadley/dplyr&#x27;</span>))</span><br><span class="line">devtools::install_github(c(<span class="string">&#x27;RcppCore/RcppArmadillo&#x27;</span>, <span class="string">&#x27;RcppCore/RcppEigen&#x27;</span>, <span class="string">&#x27;RcppCore/RcppParallel&#x27;</span>))</span><br><span class="line">devtools::install_github(c(<span class="string">&#x27;hadley/tidyr&#x27;</span>, <span class="string">&#x27;hadley/purrr&#x27;</span>, <span class="string">&#x27;yihui/knitr&#x27;</span>))</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>Rcpp</tag>
        <tag>MKL</tag>
        <tag>Intel C++</tag>
      </tags>
  </entry>
  <entry>
    <title>如何compile numpy and scipy with Intel C++ compiler and　Intel MKL</title>
    <url>/posts/201405/2014-05-20-how-to-build-numpy-and-scipy-with-MKL.html</url>
    <content><![CDATA[<p>這篇要來敘述怎麼在linux中，利用Intel C++ compiler以及Intel MKL編譯numpy以及scipy這兩個python的套件，以下是參考連結：</p>
<ol>
<li><a href="https://software.intel.com/en-us/articles/numpyscipy-with-intel-mkl">https://software.intel.com/en-us/articles/numpyscipy-with-intel-mkl</a></li>
<li><a href="http://songuke.blogspot.tw/2012/02/compile-numpy-and-scipy-with-intel-math.html">http://songuke.blogspot.tw/2012/02/compile-numpy-and-scipy-with-intel-math.html</a></li>
<li><a href="http://unifius.wordpress.com/2013/01/18/numpy%E4%BD%BF%E7%94%A8mkl%E5%BA%93/">Numpy使用MKL库提升计算性能</a></li>
<li><a href="http://stackoverflow.com/questions/13587136/numpy-fails-with-python-dbg-undefined-symbol-py-initmodule4-64">Numpy fails with python-dbg</a></li>
</ol>
<p>首先，先取得編譯環境以及root權限以方便進行編譯的工作，另外還有一些需要的套件要安裝，命令如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install python-setuptools python-pip python-dev cython</span><br><span class="line"><span class="comment"># python 3</span></span><br><span class="line">sudo apt-get install python3-setuptools python3-pip python3-dev cython3</span><br></pre></td></tr></table></figure>

<p>接著切換到Downloads目錄(這你可以自己調整)並下載numpy以及scipy的原始碼，命令如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span>; <span class="built_in">cd</span> Downloads</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/numpy/numpy.git</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/scipy/scipy.git</span><br></pre></td></tr></table></figure>

<p>接著在numpy資料夾中新增一個site.cfg的檔案(此處以sublime text做編輯器)，命令如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -s</span><br><span class="line"><span class="built_in">source</span> /opt/intel/composer_xe_2013_sp1.3.174/mkl/bin/mklvars.sh intel64</span><br><span class="line"><span class="built_in">source</span> /opt/intel/composer_xe_2013_sp1.3.174/bin/compilervars.sh intel64</span><br><span class="line"><span class="built_in">cd</span> numpy</span><br><span class="line"><span class="comment"># rm -rf build # if there is a build folder</span></span><br><span class="line">subl site.cfg</span><br></pre></td></tr></table></figure>

<p>並且添加內容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[mkl]</span><br><span class="line">library_dirs = /opt/intel/composer_xe_2013_sp1.3.174/compiler/lib/intel64:/opt/intel/composer_xe_2013_sp1.3.174/mkl/lib/intel64</span><br><span class="line">include_dirs = /opt/intel/composer_xe_2013_sp1.3.174/compiler/include:/opt/intel/composer_xe_2013_sp1.3.174/mkl/include</span><br><span class="line">mkl_libs = mkl_def, mkl_intel_lp64, mkl_intel_thread, mkl_core</span><br><span class="line">lapack_libs = mkl_lapack95_lp64</span><br><span class="line">libraries = iomp5</span><br></pre></td></tr></table></figure>

<p>接著修改編譯的參數，</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">subl numpy/distutils/intelccompiler.py</span><br></pre></td></tr></table></figure>

<p>以下方文字分別取代取代文件中<code>self.cc_exe=&#39;icc -fPIC&#39;</code>以及<code>self.cc_exe=&#39;icc -m64 -fPIC&#39;</code>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">self.cc_exe = <span class="string">&#x27;icc -O3 -g -fPIC -fp-model strict -fomit-frame-pointer -openmp -xhost&#x27;</span></span><br><span class="line">self.cc_exe = <span class="string">&#x27;icc -m64 -O3 -g -fPIC -fp-model strict -fomit-frame-pointer -openmp -xhost&#x27;</span></span><br></pre></td></tr></table></figure>

<p>最後運行這個指令就可以進行安裝了。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python setup.py config --compiler=intelem build_clib --compiler=intelem build_ext --compiler=intelem install</span><br><span class="line"><span class="comment"># python 3</span></span><br><span class="line">python3 setup.py config --compiler=intelem build_clib --compiler=intelem build_ext --compiler=intelem install</span><br></pre></td></tr></table></figure>

<p>如果出現<code>No module named msvc9compiler</code>，就把<code>numpy/distutil/intelccompiler.py</code>裡面有關msvc9compiler的code都註解掉就好了。</p>
<p>請先測試numpy是否正常，先安裝nose這個套件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">easy_install nose</span><br><span class="line"><span class="comment"># python3</span></span><br><span class="line">easy_install3 nose</span><br></pre></td></tr></table></figure>

<p>開啟python並運行(注意環境還是要source上方兩個檔案)：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line">numpy.test()</span><br></pre></td></tr></table></figure>

<p>接著編譯scipy，把site.cfg從numpy複製到scipy的資料夾中：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cp site.cfg ../scipy/site.cfg</span><br><span class="line"><span class="built_in">cd</span> ../scipy</span><br><span class="line">python setup.py config --compiler=intelem --fcompiler=intelem build_clib --compiler=intelem --fcompiler=intelem build_ext --compiler=intelem --fcompiler=intelem install</span><br><span class="line"><span class="comment"># python 3</span></span><br><span class="line">python3 setup.py config --compiler=intelem --fcompiler=intelem build_clib --compiler=intelem --fcompiler=intelem build_ext --compiler=intelem --fcompiler=intelem install</span><br></pre></td></tr></table></figure>

<p>開啟python測試scipy(注意環境還是要source上方兩個檔案)：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> scipy</span><br><span class="line">scipy.test()</span><br></pre></td></tr></table></figure>

<p>我跑scipy的測試會失敗三個，看了一下<a href="http://stackoverflow.com/questions/9239989/error-when-testing-scipy">別人的問答</a>，他們認為應該不是太嚴重的錯，我也沒有再裡他了。最後如果中間有出錯，請記得移除掉你安裝套件的位置，假設你使用的python是2.7版就是執行下方指令，在加上tab補全剩下的檔名：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo rm -r /usr/<span class="built_in">local</span>/lib/python2.7/dist-packages/numpy</span><br><span class="line">sudo rm -r /usr/<span class="built_in">local</span>/lib/python2.7/dist-packages/scipy</span><br><span class="line"><span class="comment"># python 3.4</span></span><br><span class="line">sudo rm -r /usr/<span class="built_in">local</span>/lib/python3.4/dist-packages/numpy</span><br><span class="line">sudo rm -r /usr/<span class="built_in">local</span>/lib/python3.4/dist-packages/scipy</span><br></pre></td></tr></table></figure>

<p>Add $LD_LIBRARY_PATH in environment by using <code>subl ~/.bashrc</code>.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=/opt/intel/composer_xe_2013_sp1.3.174/compiler/lib/intel64:/opt/intel/composer_xe_2013_sp1.3.174/mkl/lib/intel64:<span class="variable">$LD_LIBRARY_PATH</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>MKL</tag>
        <tag>Intel C++</tag>
        <tag>Python</tag>
        <tag>numpy</tag>
        <tag>scipy</tag>
      </tags>
  </entry>
  <entry>
    <title>Syntax highlight in Jekyll</title>
    <url>/posts/201405/2014-05-19-syntax-highlight-in-jekyll.html</url>
    <content><![CDATA[<p>從上週就一直在嘗試如何把我部落格的程式碼都上色，弄了好多天才發現主要的癥結。中間參考太多網站，列幾個重要的。參考網站如下：</p>
<ol>
<li><p><a href="http://stackoverflow.com/questions/9652490/do-i-need-to-generate-a-css-file-from-pygments-for-my-jekyll-blog-to-enable-col">Do I need to generate a css file …</a></p>
</li>
<li><p><a href="https://github.com/pudgecon/blog-repository/blob/master/_posts/2012-09-03-add-code-highlight-with-pygments.md">Add code highlight with Pygments</a></p>
</li>
</ol>
<p>你要有syntax highlight的功能，要先安裝幾個重要的工具，第一個是要有Python，並且安裝其套件Pygments，Ruby要安裝Pygments.rb，版本0.5.4可能會出錯，我裝的是0.5.0，這個版本大多人都可以成功。接著需要調整_config.yml中的選項：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">highlighter: pygments</span><br></pre></td></tr></table></figure>

<p>另外，還有要生成highlight所需的css檔案，於cmd中鍵入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pygmentize -S default -f html &gt; pygments.css</span><br></pre></td></tr></table></figure>

<p>然後在themes中的default.html中加上下面這一行：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/path/to/pygments.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>這樣就成功了。</p>
]]></content>
      <categories>
        <category>Jekyll</category>
      </categories>
      <tags>
        <tag>Jekyll</tag>
        <tag>Syntax Highlight</tag>
      </tags>
  </entry>
  <entry>
    <title>Rcpp Attributes with lasso</title>
    <url>/posts/201407/2014-07-19-Rcpp-Attributes-with-lasso.html</url>
    <content><![CDATA[<p>I try to write a lasso algorithm by Rcpp attributes.</p>
<p>Reference:<br>Friedman, J., Hastie, T. and Tibshirani, R. (2008) Regularization Paths for Generalized Linear Models via Coordinate Descent, <a href="http://www.stanford.edu/~hastie/Papers/glmnet.pdf">http://www.stanford.edu/~hastie/Papers/glmnet.pdf</a>, Journal of Statistical Software, Vol. 33(1), 1-22 Feb 2010, <a href="http://www.jstatsoft.org/v33/i01/">http://www.jstatsoft.org/v33/i01/</a></p>
<p>Code:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(Rcpp)</span><br><span class="line"><span class="keyword">library</span>(RcppArmadillo)</span><br><span class="line">sourceCpp(code = <span class="string">&#x27;</span></span><br><span class="line"><span class="string">// [[Rcpp::depends(RcppArmadillo)]]</span></span><br><span class="line"><span class="string">#include &lt;RcppArmadillo.h&gt;</span></span><br><span class="line"><span class="string">#include &lt;ctime&gt;</span></span><br><span class="line"><span class="string">using namespace Rcpp;</span></span><br><span class="line"><span class="string">using namespace arma;</span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">List lasso_fit_f(NumericMatrix Xr, NumericVector yr, int n_penalty = 100)&#123;</span></span><br><span class="line"><span class="string">  int n = Xr.nrow(), p = Xr.ncol();</span></span><br><span class="line"><span class="string">  mat X(Xr.begin(), n, p, false);</span></span><br><span class="line"><span class="string">  colvec y(yr.begin(), n, false);</span></span><br><span class="line"><span class="string">  double z0 = mean(y), penalty;</span></span><br><span class="line"><span class="string">  colvec xydot = (y.t() * X).t();</span></span><br><span class="line"><span class="string">  mat xxdot(p, p);</span></span><br><span class="line"><span class="string">  xxdot = X.t() * X;</span></span><br><span class="line"><span class="string">  double penalty_max_log = log(max(xydot) / n);</span></span><br><span class="line"><span class="string">  colvec penalties = exp(linspace&lt;colvec&gt;(penalty_max_log, penalty_max_log+log(0.05), n_penalty));</span></span><br><span class="line"><span class="string">  mat coef_m(p, n_penalty);</span></span><br><span class="line"><span class="string">  int MaxIter = 1e5;</span></span><br><span class="line"><span class="string">  colvec coef(p), coef_new(p);</span></span><br><span class="line"><span class="string">  for(int k = 1; k &lt; n_penalty; k++)</span></span><br><span class="line"><span class="string">  &#123;</span></span><br><span class="line"><span class="string">    coef = coef_m.col(k-1);</span></span><br><span class="line"><span class="string">    penalty = penalties(k);</span></span><br><span class="line"><span class="string">    for(int i = 0; i &lt; MaxIter; i++)</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">      coef_new = (xydot - xxdot * coef) / n + coef;</span></span><br><span class="line"><span class="string">      coef_new(find(abs(coef_new) &lt; penalty)).zeros();</span></span><br><span class="line"><span class="string">      coef_new(find(coef_new &gt; penalty)) -= penalty;</span></span><br><span class="line"><span class="string">      coef_new(find(coef_new &lt; -penalty)) += penalty;</span></span><br><span class="line"><span class="string">      if( as_scalar((coef - coef_new).t() * (coef - coef_new)) / k &lt; 1e-7)</span></span><br><span class="line"><span class="string">        break;</span></span><br><span class="line"><span class="string">      coef = coef_new;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    coef_m.col(k) = coef;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  return List::create(Named(&quot;intercept&quot;) = z0,</span></span><br><span class="line"><span class="string">                      Named(&quot;coefficients&quot;) = coef_m,</span></span><br><span class="line"><span class="string">                      Named(&quot;penalties&quot;) = penalties);</span></span><br><span class="line"><span class="string">&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">d = <span class="number">1000</span>; N = <span class="number">10000</span></span><br><span class="line">x = matrix(rnorm(N*d), N)</span><br><span class="line">x[,<span class="number">3</span>] = x[,<span class="number">1</span>] - <span class="number">2</span>*x[,<span class="number">2</span>] + rnorm(N)</span><br><span class="line">x[,<span class="number">30</span>] = x[,<span class="number">10</span>] - <span class="number">2</span>*x[,<span class="number">20</span>] + rnorm(N)</span><br><span class="line">y = cbind(<span class="number">1</span>, x) %*% c(-<span class="number">1</span>, <span class="number">2</span>, -<span class="number">0.3</span>, <span class="number">0.7</span>, sample(<span class="number">10</span>**seq(-<span class="number">10</span>, <span class="number">1</span>, length = N), d-<span class="number">3</span>)) + rnorm(N, <span class="number">0</span>, <span class="number">2</span>)</span><br><span class="line">x = scale(x)</span><br><span class="line"></span><br><span class="line">t1 = Sys.time()</span><br><span class="line">a = lasso_fit_f(x, y)</span><br><span class="line">t_cpp = Sys.time() - t1</span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(glmnet)</span><br><span class="line">t1 = Sys.time()</span><br><span class="line">fit = glmnet(x,y, lambda = a$penalties)</span><br><span class="line">t_glmnet = Sys.time() - t1</span><br><span class="line">c(t_glmnet, t_cpp)</span><br><span class="line"><span class="comment"># [1] 0.7171087 0.2032089</span></span><br></pre></td></tr></table></figure>

<p>It works well!!</p>
<p>My environment is ubuntu 14.04, R 3.1.1 compiled by intel c++, fortran compiler with MKL. My CPU is <a href="mailto:&#x33;&#55;&#x37;&#48;&#x4b;&#64;&#52;&#46;&#51;&#x47;&#72;&#x7a;">&#x33;&#55;&#x37;&#48;&#x4b;&#64;&#52;&#46;&#51;&#x47;&#72;&#x7a;</a>.</p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>Rcpp</tag>
        <tag>RcppArmadillo</tag>
        <tag>LASSO</tag>
      </tags>
  </entry>
  <entry>
    <title>Some tips on Linux</title>
    <url>/posts/201407/2014-07-10-Some-tips-on-linux.html</url>
    <content><![CDATA[<p>This post is used to record some tips I can’t categorize in ubuntu.</p>
<p>i. automatically load some shell scripts<br>In my system ubuntu 14.04, I can find the file <code>.bashrc</code> in my home directory.<br>Since I want ubuntu to load intel complier and mkl parameter automatically, all I need to do is to add the two lines in the end of that file: (mint 17: <code>gedit /etc/bash.bashrc</code>)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /opt/intel/composer_xe_2015/mkl/bin/mklvars.sh intel64</span><br><span class="line"><span class="built_in">source</span> /opt/intel/composer_xe_2015/bin/compilervars.sh intel64</span><br></pre></td></tr></table></figure>

<p>Then I success!!</p>
<p>ii. cannot install ubuntu or Mint<br>With the options - acpi=off nolapic noapic, I finally install ubuntu successfully.</p>
<p>iii. cannot boot without nolapic, however, it only recognize one cpu with nolapic<br>I solved this problem by <a href="http://ubuntuforums.org/showthread.php?t=1084622">Dual core recognized as single core because of nolapic?</a>.<br>I edited the grub file with following commands:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo bash</span><br><span class="line">gedit /etc/default/grub</span><br></pre></td></tr></table></figure>

<p>And replace <code>nolapic</code> with <code>pci=assign-busses apicmaintimer idle=poll reboot=cold,hard</code>, the grub file would be contain this two lines:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">GRUB_CMDLINE_LINUX_DEFAULT=<span class="string">&quot;quiet splash acpi_osi=linux&quot;</span></span><br><span class="line">GRUB_CMDLINE_LINUX=<span class="string">&quot;noapic pci=assign-busses apicmaintimer idle=poll reboot=cold,hard&quot;</span></span><br></pre></td></tr></table></figure>

<p>Then use following command to update grub. And the problem is fixed.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo update-grub</span><br></pre></td></tr></table></figure>

<p>iv. to get the permission of ntfs disks, you can edit the fstab in /etc as following:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo gedit /etc/fstab</span><br></pre></td></tr></table></figure>

<p>And you can find the uuid by using the command <code>ls -l /dev/disk/by-uuid</code>. To add the disk and set the permission in the file fstab like this:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">UUID=1c712d26-7f9d-4efc-b796-65bee366c8aa / ext4    noatime,nodiratime,discard,errors=remount-ro 0       1</span><br><span class="line">UUID=9298D0AB98D08EDB /media/Windows ntfs defaults,uid=1000,gid=1000,<span class="built_in">umask</span>=002     0      0</span><br><span class="line">UUID=08C2997EC29970A4 /media/Download ntfs defaults,uid=1000,gid=1000,<span class="built_in">umask</span>=002      0      0</span><br><span class="line">UUID=01CD524F3352C990 /media/Files ntfs defaults,uid=1000,gid=1000,<span class="built_in">umask</span>=002      0      0</span><br></pre></td></tr></table></figure>

<p>Then you can access your ntfs disk and set an alias for each disk.</p>
<p>v. use grub comstomer to edit the boot order. Installation:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:danielrichter2007/grub-customizer</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install grub-customizer</span><br></pre></td></tr></table></figure>

<p>vi. Install font <code>Inconsolata</code><a href="http://www.levien.com/type/myfonts/inconsolata.html">Download Here</a> and unity tweak tool (<code>sudo apt-get install unity-tweak-tool</code>).</p>
<p>vii. Install the chinese input <code>fcitx</code> and language <code>Chinese Traditional</code>.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install fcitx fcitx-chewing fcitx-config-gtk fcitx-frontend-all fcitx-module-cloudpinyin fcitx-ui-classic fcitx-frontend-qt4 fcitx-frontend-qt5 fcitx-frontend-gtk2 fcitx-frontend-gtk3</span><br></pre></td></tr></table></figure>

<p>viii. Install ruby, jekyll and git.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install software-properties-common</span><br><span class="line">sudo apt-add-repository ppa:brightbox/ruby-ng</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install ruby2.2 ruby2.2-dev git python-pip python3-pip</span><br><span class="line">sudo gem install jekyll</span><br><span class="line">sudo pip install pygments</span><br></pre></td></tr></table></figure>

<p>(To be continued.)</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Ubuntu</tag>
        <tag>Mint</tag>
      </tags>
  </entry>
  <entry>
    <title>Rcpp Attributes</title>
    <url>/posts/201407/2014-07-19-Rcpp-Attributes.html</url>
    <content><![CDATA[<p>Recently, I went to the 23th STSC, I got some information about the new API of <code>Rcpp</code>, <code>Rcpp attributes</code>. I had tried some examples and it worked well. Here I demonstrate some examples.</p>
<p>First example: call the <code>pnorm</code> function in Rcpp:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">require</span>(Rcpp)</span><br><span class="line">sourceCpp(code = <span class="string">&#x27;</span></span><br><span class="line"><span class="string">#include &lt;Rcpp.h&gt;</span></span><br><span class="line"><span class="string">using namespace Rcpp;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">DataFrame mypnorm(NumericVector x)&#123;</span></span><br><span class="line"><span class="string">  int n = x.size();</span></span><br><span class="line"><span class="string">  NumericVector y1(n), y2(n), y3(n);</span></span><br><span class="line"><span class="string">  for (int i=0; i&lt;n; i++)&#123;</span></span><br><span class="line"><span class="string">    y1[i] = ::Rf_pnorm5(x[i], 0.0, 1.0, 1, 0);</span></span><br><span class="line"><span class="string">    y2[i] = R::pnorm(x[i], 0.0, 1.0, 1, 0);</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  y3 = pnorm(x);</span></span><br><span class="line"><span class="string">  return DataFrame::create(</span></span><br><span class="line"><span class="string">    Named(&quot;R&quot;) = y1,</span></span><br><span class="line"><span class="string">    Named(&quot;Rf_&quot;) = y2,</span></span><br><span class="line"><span class="string">    Named(&quot;sugar&quot;) = y3);</span></span><br><span class="line"><span class="string">&#125;&#x27;</span>)</span><br><span class="line">mypnorm(runif(<span class="number">10</span>, -<span class="number">3</span>, <span class="number">3</span>))</span><br></pre></td></tr></table></figure>

<p>Rcpp attributes allows user to write Rcpp in a simple way. User does not need to learn about how to write R extension. Just write a cpp script and add the line <code>// [[Rcpp::export]]</code>, then user can use the function in R.</p>
<p>Next two example is about the two extension packages of Rcpp, RcppArmadillo and RcppEigen. The two packages provide Rcpp to link the C++ linear algebra libraries, armadillo and Eigen.</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(Rcpp)</span><br><span class="line"><span class="keyword">library</span>(RcppArmadillo)</span><br><span class="line"><span class="keyword">library</span>(RcppEigen)</span><br><span class="line">sourceCpp(code = <span class="string">&#x27;</span></span><br><span class="line"><span class="string">// [[Rcpp::depends(RcppArmadillo)]]</span></span><br><span class="line"><span class="string">#include &lt;RcppArmadillo.h&gt;</span></span><br><span class="line"><span class="string">using namespace Rcpp;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">List fastLm_RcppArma(NumericVector yr, NumericMatrix Xr) &#123;</span></span><br><span class="line"><span class="string">  int n = Xr.nrow(), k = Xr.ncol();</span></span><br><span class="line"><span class="string">  arma::mat X(Xr.begin(), n, k, false);</span></span><br><span class="line"><span class="string">  arma::colvec y(yr.begin(), yr.size(), false);</span></span><br><span class="line"><span class="string">  arma::colvec coef = arma::solve(X, y);</span></span><br><span class="line"><span class="string">  arma::colvec resid = y - X*coef;</span></span><br><span class="line"><span class="string">  double sig2 = arma::as_scalar(arma::trans(resid)*resid/(n-k));</span></span><br><span class="line"><span class="string">  arma::colvec stderrest = arma::sqrt(sig2 * arma::diagvec( arma::inv(arma::trans(X)*X)));</span></span><br><span class="line"><span class="string">  return List::create(</span></span><br><span class="line"><span class="string">    Named(&quot;coefficients&quot;) = coef,</span></span><br><span class="line"><span class="string">    Named(&quot;stderr&quot;) = stderrest);</span></span><br><span class="line"><span class="string">&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">sourceCpp(code = <span class="string">&#x27;</span></span><br><span class="line"><span class="string">// [[Rcpp::depends(RcppEigen)]]</span></span><br><span class="line"><span class="string">#include &lt;RcppEigen.h&gt;</span></span><br><span class="line"><span class="string">using namespace Rcpp;</span></span><br><span class="line"><span class="string">using Eigen::Map;</span></span><br><span class="line"><span class="string">using Eigen::MatrixXd;</span></span><br><span class="line"><span class="string">using Eigen::VectorXd;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">List fastLm_RcppEigen(NumericVector yr, NumericMatrix Xr) &#123;</span></span><br><span class="line"><span class="string">  const Map&lt;MatrixXd&gt; X(as&lt;Map&lt;MatrixXd&gt; &gt;(Xr));</span></span><br><span class="line"><span class="string">  const Map&lt;VectorXd&gt; y(as&lt;Map&lt;VectorXd&gt; &gt;(yr));</span></span><br><span class="line"><span class="string">  int n = Xr.nrow(), k = Xr.ncol();</span></span><br><span class="line"><span class="string">  VectorXd coef = (X.transpose() * X).llt().solve(X.transpose() * y.col(0));</span></span><br><span class="line"><span class="string">  VectorXd resid = y - X*coef;</span></span><br><span class="line"><span class="string">  double sig2 = resid.squaredNorm() / (n - k);</span></span><br><span class="line"><span class="string">  VectorXd stderrest = (sig2 * ((X.transpose() * X).inverse()).diagonal()).array().sqrt();</span></span><br><span class="line"><span class="string">  return List::create(</span></span><br><span class="line"><span class="string">    Named(&quot;coefficients&quot;) = coef,</span></span><br><span class="line"><span class="string">    Named(&quot;stderr&quot;) = stderrest);</span></span><br><span class="line"><span class="string">&#125;&#x27;</span>)</span><br><span class="line">N = <span class="number">20000</span></span><br><span class="line">p = <span class="number">1000</span></span><br><span class="line">X = matrix(rnorm(N*p), ncol = p)</span><br><span class="line">y = X %*% <span class="number">10</span>**(sample(seq(-<span class="number">5</span>, <span class="number">3</span>, length = N+p), p)) + rnorm(N)</span><br><span class="line"></span><br><span class="line">system.time(fastLm_RcppArma(y, X))</span><br><span class="line"><span class="comment">#   user  system elapsed</span></span><br><span class="line"><span class="comment">#   5.49    0.06    1.46</span></span><br><span class="line">system.time(fastLm_RcppEigen(y, X))</span><br><span class="line"><span class="comment">#   user  system elapsed</span></span><br><span class="line"><span class="comment">#   9.32    0.06    8.96</span></span><br><span class="line">system.time(lm(y~X - <span class="number">1</span>))</span><br><span class="line"><span class="comment">#   user  system elapsed</span></span><br><span class="line"><span class="comment"># 145.13   14.76   91.84</span></span><br></pre></td></tr></table></figure>

<p>The cpp functions are faster 63 times than R function <code>lm</code>. My environment is ubuntu 14.04, R 3.1.1 compiled by intel c++, fortran compiler with MKL. My CPU is <a href="mailto:&#x33;&#55;&#55;&#x30;&#75;&#x40;&#x34;&#x2e;&#51;&#71;&#x48;&#x7a;">&#x33;&#55;&#55;&#x30;&#75;&#x40;&#x34;&#x2e;&#51;&#71;&#x48;&#x7a;</a>. I think that Rcpp is the package which is the worthiest to learn if you want to use R to do statistical computing or machine learning. Rcpp attributes had changed the way to source C++ code in R, it let <code>Rcpp</code> is more convenient and more powerful.</p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>Rcpp</tag>
        <tag>Rcpp Attributes</tag>
      </tags>
  </entry>
  <entry>
    <title>Rcpp Attributes for kernelMatrix with openmp</title>
    <url>/posts/201407/2014-07-20-Rcpp-Attributes-for-kernelMatrix-with-openmp.html</url>
    <content><![CDATA[<p>I use Rcpp Attributes to compute the kernel matrix and show how to link omp to speedup your Rcpp code. I also present that the speed of Rcpp Attributes is competitive with the function kernelMatrix written in C in the R package kernlab.</p>
<p>Code:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(kernlab)</span><br><span class="line"><span class="keyword">library</span>(Rcpp)</span><br><span class="line"><span class="keyword">library</span>(RcppArmadillo)</span><br><span class="line"><span class="comment">## For windows user</span></span><br><span class="line"><span class="comment"># library(inline)</span></span><br><span class="line"><span class="comment"># settings &lt;- getPlugin(&quot;Rcpp&quot;)</span></span><br><span class="line"><span class="comment"># settings$env$PKG_CXXFLAGS &lt;- paste(&#x27;-fopenmp&#x27;, settings$env$PKG_CXXFLAGS)</span></span><br><span class="line"><span class="comment"># settings$env$PKG_LIBS &lt;- paste(&#x27;-fopenmp -lgomp&#x27;, settings$env$PKG_LIBS)</span></span><br><span class="line"><span class="comment"># do.call(Sys.setenv, settings$env)</span></span><br><span class="line">sourceCpp(code = <span class="string">&#x27;</span></span><br><span class="line"><span class="string">// [[Rcpp::depends(RcppArmadillo)]]</span></span><br><span class="line"><span class="string">#include &lt;RcppArmadillo.h&gt;</span></span><br><span class="line"><span class="string">#include &lt;omp.h&gt;</span></span><br><span class="line"><span class="string">using namespace Rcpp;</span></span><br><span class="line"><span class="string">using namespace arma;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">NumericMatrix kernelMatrix_cpp(NumericMatrix Xr, NumericMatrix Centerr, double sigma) &#123;</span></span><br><span class="line"><span class="string">  omp_set_num_threads(omp_get_max_threads());</span></span><br><span class="line"><span class="string">  uword n = Xr.nrow(), b = Centerr.nrow(), row_index, col_index;</span></span><br><span class="line"><span class="string">  mat X(Xr.begin(), n, Xr.ncol(), false);</span></span><br><span class="line"><span class="string">  mat Center(Centerr.begin(), b, Centerr.ncol(), false);</span></span><br><span class="line"><span class="string">  mat KerX(n, b);</span></span><br><span class="line"><span class="string">  #pragma omp parallel private(row_index, col_index)</span></span><br><span class="line"><span class="string">  for (row_index = 0; row_index &lt; n; row_index++)</span></span><br><span class="line"><span class="string">  &#123;</span></span><br><span class="line"><span class="string">    #pragma omp for nowait</span></span><br><span class="line"><span class="string">    for (col_index = 0; col_index &lt; b; col_index++)</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">      KerX(row_index, col_index) = exp(sum(square(X.row(row_index)</span></span><br><span class="line"><span class="string">        - Center.row(col_index))) / (-2.0 * sigma * sigma));</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">    return wrap(KerX);</span></span><br><span class="line"><span class="string">&#125;&#x27;</span>)</span><br><span class="line">N = <span class="number">1000</span></span><br><span class="line">p = <span class="number">100</span></span><br><span class="line">b = <span class="number">300</span></span><br><span class="line">X = matrix(rnorm(N*p), ncol = p)</span><br><span class="line">center = X[sample(<span class="number">1</span>:N, b),]</span><br><span class="line">sigma = <span class="number">3</span></span><br><span class="line">kernel_X &lt;- kernelMatrix(rbfdot(sigma=<span class="number">1</span>/(<span class="number">2</span>*sigma^<span class="number">2</span>)), X, center)</span><br><span class="line">kernel_X_cpp = kernelMatrix_cpp(X, center, sigma)</span><br><span class="line"><span class="comment">## test</span></span><br><span class="line">all.equal(kernel_X@.Data, kernel_X_cpp)</span><br><span class="line"><span class="comment"># TRUE</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(rbenchmark)</span><br><span class="line">benchmark(cpp = kernelMatrix_cpp(X, center, sigma),</span><br><span class="line">  kernlab = kernelMatrix(rbfdot(sigma=<span class="number">1</span>/(<span class="number">2</span>*sigma^<span class="number">2</span>)), X, center),</span><br><span class="line">  columns=c(<span class="string">&quot;test&quot;</span>, <span class="string">&quot;replications&quot;</span>,<span class="string">&quot;elapsed&quot;</span>, <span class="string">&quot;relative&quot;</span>),</span><br><span class="line">  replications=<span class="number">10</span>, order=<span class="string">&quot;relative&quot;</span>)</span><br><span class="line"><span class="comment">#      test replications elapsed relative</span></span><br><span class="line"><span class="comment"># 1     cpp           10   0.131    1.000</span></span><br><span class="line"><span class="comment"># 2 kernlab           10   0.199    1.519</span></span><br></pre></td></tr></table></figure>

<p>With openmp, it is faster than kernlab with small input matrix size, however, the efficiency is too low when the size increase. Another efficient method is listed below:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(kernlab)</span><br><span class="line"><span class="keyword">library</span>(Rcpp)</span><br><span class="line"><span class="keyword">library</span>(RcppArmadillo)</span><br><span class="line"><span class="comment">## For windows user</span></span><br><span class="line"><span class="comment"># library(inline)</span></span><br><span class="line"><span class="comment"># settings &lt;- getPlugin(&quot;Rcpp&quot;)</span></span><br><span class="line"><span class="comment"># settings$env$PKG_CXXFLAGS &lt;- paste(&#x27;-fopenmp&#x27;, settings$env$PKG_CXXFLAGS)</span></span><br><span class="line"><span class="comment"># settings$env$PKG_LIBS &lt;- paste(&#x27;-fopenmp -lgomp&#x27;, settings$env$PKG_LIBS)</span></span><br><span class="line"><span class="comment"># do.call(Sys.setenv, settings$env)</span></span><br><span class="line">sourceCpp(code = <span class="string">&#x27;</span></span><br><span class="line"><span class="string">// [[Rcpp::depends(RcppArmadillo)]]</span></span><br><span class="line"><span class="string">#include &lt;RcppArmadillo.h&gt;</span></span><br><span class="line"><span class="string">using namespace Rcpp;</span></span><br><span class="line"><span class="string">using namespace arma;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">NumericMatrix kernelMatrix_cpp2(NumericMatrix Xr, NumericMatrix Centerr, double sigma) &#123;</span></span><br><span class="line"><span class="string">  uword n = Xr.nrow(), b = Centerr.nrow(), row_index, col_index;</span></span><br><span class="line"><span class="string">  mat X(Xr.begin(), n, Xr.ncol(), false),</span></span><br><span class="line"><span class="string">      Center(Centerr.begin(), b, Centerr.ncol(), false),</span></span><br><span class="line"><span class="string">      KerX(X*Center.t());</span></span><br><span class="line"><span class="string">  colvec X_sq = sum(square(X), 1) / 2;</span></span><br><span class="line"><span class="string">  rowvec Center_sq = (sum(square(Center), 1)).t() / 2;</span></span><br><span class="line"><span class="string">  KerX.each_row() -= Center_sq;</span></span><br><span class="line"><span class="string">  KerX.each_col() -= X_sq;</span></span><br><span class="line"><span class="string">  KerX *= 1 / (sigma * sigma);</span></span><br><span class="line"><span class="string">  KerX = exp(KerX);</span></span><br><span class="line"><span class="string">  return wrap(KerX);</span></span><br><span class="line"><span class="string">&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">N = <span class="number">10000</span></span><br><span class="line">p = <span class="number">1000</span></span><br><span class="line">b = <span class="number">3000</span></span><br><span class="line">X = matrix(rnorm(N*p), ncol = p)</span><br><span class="line">center = X[sample(<span class="number">1</span>:N, b),]</span><br><span class="line">sigma = <span class="number">3</span></span><br><span class="line">t1 = Sys.time()</span><br><span class="line">kernel_X_cpp = kernelMatrix_cpp2(X, center, sigma)</span><br><span class="line"> Sys.time() - t1</span><br><span class="line"> t1 = Sys.time()</span><br><span class="line">kernel_X &lt;- kernelMatrix(rbfdot(sigma=<span class="number">1</span>/(<span class="number">2</span>*sigma^<span class="number">2</span>)), X, center)</span><br><span class="line">Sys.time() - t1</span><br><span class="line"><span class="comment">## Test</span></span><br><span class="line">all.equal(kernel_X@.Data, kernel_X_cpp)</span><br><span class="line"><span class="comment"># TRUE</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(rbenchmark)</span><br><span class="line">benchmark(cpp = kernelMatrix_cpp(X, center, sigma),</span><br><span class="line">          cpp2 = kernelMatrix_cpp2(X, center, sigma),</span><br><span class="line">          kernlab = kernelMatrix(rbfdot(sigma=<span class="number">1</span>/(<span class="number">2</span>*sigma^<span class="number">2</span>)), X, center),</span><br><span class="line">          columns=c(<span class="string">&quot;test&quot;</span>, <span class="string">&quot;replications&quot;</span>,<span class="string">&quot;elapsed&quot;</span>, <span class="string">&quot;relative&quot;</span>),</span><br><span class="line">          replications=<span class="number">10</span>, order=<span class="string">&quot;relative&quot;</span>)</span><br><span class="line"><span class="comment">#      test replications elapsed relative</span></span><br><span class="line"><span class="comment"># 2    cpp2           10  13.810    1.000</span></span><br><span class="line"><span class="comment"># 3 kernlab           10  24.978    1.809</span></span><br><span class="line"><span class="comment"># 1     cpp           10 207.192   15.003</span></span><br><span class="line"></span><br><span class="line">N = <span class="number">1000</span></span><br><span class="line">p = <span class="number">100</span></span><br><span class="line">b = <span class="number">300</span></span><br><span class="line">X = matrix(rnorm(N*p), ncol = p)</span><br><span class="line">center = X[sample(<span class="number">1</span>:N, b),]</span><br><span class="line">sigma = <span class="number">3</span></span><br><span class="line">benchmark(cpp = kernelMatrix_cpp(X, center, sigma),</span><br><span class="line">          cpp2 = kernelMatrix_cpp2(X, center, sigma),</span><br><span class="line">          kernlab = kernelMatrix(rbfdot(sigma=<span class="number">1</span>/(<span class="number">2</span>*sigma^<span class="number">2</span>)), X, center),</span><br><span class="line">          columns=c(<span class="string">&quot;test&quot;</span>, <span class="string">&quot;replications&quot;</span>,<span class="string">&quot;elapsed&quot;</span>, <span class="string">&quot;relative&quot;</span>),</span><br><span class="line">          replications=<span class="number">10</span>, order=<span class="string">&quot;relative&quot;</span>)</span><br><span class="line"><span class="comment">#      test replications elapsed relative</span></span><br><span class="line"><span class="comment"># 2    cpp2           10   0.059    1.000</span></span><br><span class="line"><span class="comment"># 1     cpp           10   0.179    3.034</span></span><br><span class="line"><span class="comment"># 3 kernlab           10   0.230    3.898</span></span><br></pre></td></tr></table></figure>

<p>The above result show that there is a trick you should know to speedup the code: if you can directly use matrix manipulation to finish the calculation, then please do it! Or you get low efficiency if you use for loop.</p>
<p>My environment is ubuntu 14.04, R 3.1.1 compiled by intel c++, fortran compiler with MKL. My CPU is <a href="mailto:&#x33;&#55;&#x37;&#48;&#75;&#64;&#x34;&#x2e;&#51;&#x47;&#72;&#122;">&#x33;&#55;&#x37;&#48;&#75;&#64;&#x34;&#x2e;&#51;&#x47;&#72;&#122;</a>.</p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>Rcpp</tag>
        <tag>RcppArmadillo</tag>
        <tag>openmp</tag>
        <tag>kernel matrix</tag>
      </tags>
  </entry>
  <entry>
    <title>R Performance for calculating the maximum of two normal random variable</title>
    <url>/posts/201407/2014-07-22-R-performance.html</url>
    <content><![CDATA[<p>There is a performance test between R functions, R functions with byte compiler, Rcpp and RcppArmadillo. It is about the generating the normal random variables and the vectorized computations.</p>
<a id="more"></a>

<p>Code:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1</span></span><br><span class="line">a = <span class="keyword">function</span>()&#123;</span><br><span class="line">  sum = <span class="number">0</span></span><br><span class="line">  nreps = <span class="number">1e7</span></span><br><span class="line">  <span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">1</span>:nreps)&#123;</span><br><span class="line">    xy = rnorm(<span class="number">2</span>)</span><br><span class="line">    sum = sum + max(xy)</span><br><span class="line">  &#125;</span><br><span class="line">  print(sum/nreps)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2</span></span><br><span class="line">b = <span class="keyword">function</span>()&#123;</span><br><span class="line">  nreps = <span class="number">1e7</span></span><br><span class="line">  xymat = matrix(rnorm(<span class="number">2</span>*nreps),nreps)</span><br><span class="line">  maxs = pmax(xymat[,<span class="number">1</span>],xymat[,<span class="number">2</span>])</span><br><span class="line">  print(mean(maxs))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3</span></span><br><span class="line">d = <span class="keyword">function</span>()&#123;</span><br><span class="line">  nreps = <span class="number">1e7</span></span><br><span class="line">  print(mean(sapply(<span class="number">1</span>:nreps, <span class="keyword">function</span>(i) max(rnorm(<span class="number">2</span>)))))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4</span></span><br><span class="line">e = <span class="keyword">function</span>()&#123;</span><br><span class="line">  nreps = <span class="number">1e7</span></span><br><span class="line">  xymat = matrix(rnorm(<span class="number">2</span>*nreps),nreps)</span><br><span class="line">  maxs = apply(xymat, <span class="number">1</span>, max)</span><br><span class="line">  print(mean(maxs))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5</span></span><br><span class="line">f = <span class="keyword">function</span>()&#123;</span><br><span class="line">  nreps = <span class="number">1e7</span></span><br><span class="line">  print(Reduce(<span class="string">&#x27;+&#x27;</span>, lapply(<span class="number">1</span>:nreps, <span class="keyword">function</span>(i) max(rnorm(<span class="number">2</span>)))) / nreps)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6</span></span><br><span class="line">g = <span class="keyword">function</span>()&#123;</span><br><span class="line">  nreps = <span class="number">1e7</span></span><br><span class="line">  <span class="keyword">library</span>(snowfall)</span><br><span class="line">  sfInit(<span class="literal">TRUE</span>, <span class="number">8</span>)</span><br><span class="line">  sfExport(<span class="string">&#x27;nreps&#x27;</span>)</span><br><span class="line">  maxs = sfLapply(<span class="number">1</span>:nreps, <span class="keyword">function</span>(i) max(rnorm(<span class="number">2</span>)))</span><br><span class="line">  sfStop()</span><br><span class="line">  print(Reduce(<span class="string">&#x27;+&#x27;</span>, maxs) / nreps)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># cmpfun</span></span><br><span class="line"><span class="keyword">library</span>(compiler)</span><br><span class="line">a_cmp = cmpfun(a)</span><br><span class="line">b_cmp = cmpfun(b)</span><br><span class="line">d_cmp = cmpfun(d)</span><br><span class="line">e_cmp = cmpfun(e)</span><br><span class="line">f_cmp = cmpfun(f)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Rcpp</span></span><br><span class="line"><span class="keyword">library</span>(Rcpp)</span><br><span class="line"><span class="comment">## For windows user</span></span><br><span class="line"><span class="comment"># library(inline)</span></span><br><span class="line"><span class="comment"># settings &lt;- getPlugin(&quot;Rcpp&quot;)</span></span><br><span class="line"><span class="comment"># settings$env$PKG_CXXFLAGS &lt;- paste(&#x27;-fopenmp&#x27;, settings$env$PKG_CXXFLAGS)</span></span><br><span class="line"><span class="comment"># settings$env$PKG_LIBS &lt;- paste(&#x27;-fopenmp -lgomp&#x27;, settings$env$PKG_LIBS)</span></span><br><span class="line"><span class="comment"># do.call(Sys.setenv, settings$env)</span></span><br><span class="line">sourceCpp(code = <span class="string">&#x27;</span></span><br><span class="line"><span class="string">#include &lt;Rcpp.h&gt;</span></span><br><span class="line"><span class="string">#include &lt;omp.h&gt;</span></span><br><span class="line"><span class="string">using namespace Rcpp;</span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">double mm(NumericVector x, NumericVector y) &#123;</span></span><br><span class="line"><span class="string">  int n = x.size();</span></span><br><span class="line"><span class="string">  double sum_maxs = 0;</span></span><br><span class="line"><span class="string">  for(int i = 0; i &lt; n; ++i) &#123;</span></span><br><span class="line"><span class="string">    if(x[i] &gt; y[i]) sum_maxs += x[i];</span></span><br><span class="line"><span class="string">    else sum_maxs += y[i];</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  return sum_maxs / n;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">double mm2(NumericMatrix x) &#123;</span></span><br><span class="line"><span class="string">  int n = x.nrow();</span></span><br><span class="line"><span class="string">  double sum_maxs = 0;</span></span><br><span class="line"><span class="string">  for(int i = 0; i &lt; n; ++i) &#123;</span></span><br><span class="line"><span class="string">    if(x[i] &gt; x[i+n])</span></span><br><span class="line"><span class="string">      sum_maxs += x[i];</span></span><br><span class="line"><span class="string">    else</span></span><br><span class="line"><span class="string">      sum_maxs += x[i+n];</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  return sum_maxs / n;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">double mm3(NumericVector x, NumericVector y) &#123;</span></span><br><span class="line"><span class="string">  omp_set_num_threads(omp_get_max_threads());</span></span><br><span class="line"><span class="string">  int n = x.size();</span></span><br><span class="line"><span class="string">  double sum_maxs = 0;</span></span><br><span class="line"><span class="string">  #pragma omp parallel</span></span><br><span class="line"><span class="string">  &#123;</span></span><br><span class="line"><span class="string">    #pragma omp for reduction( +:sum_maxs)</span></span><br><span class="line"><span class="string">    for(int i = 0; i &lt; n; ++i) &#123;</span></span><br><span class="line"><span class="string">      if(x[i] &gt; y[i])</span></span><br><span class="line"><span class="string">        sum_maxs += x[i];</span></span><br><span class="line"><span class="string">      else</span></span><br><span class="line"><span class="string">        sum_maxs += y[i];</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  return sum_maxs / n;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">double mm4(NumericMatrix x) &#123;</span></span><br><span class="line"><span class="string">  omp_set_num_threads(omp_get_max_threads());</span></span><br><span class="line"><span class="string">  int n = x.nrow();</span></span><br><span class="line"><span class="string">  double sum_maxs = 0;</span></span><br><span class="line"><span class="string">  #pragma omp parallel</span></span><br><span class="line"><span class="string">  &#123;</span></span><br><span class="line"><span class="string">    #pragma omp for reduction( +:sum_maxs)</span></span><br><span class="line"><span class="string">    for(int i = 0; i &lt; n; ++i)</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">      if(x[i] &gt; x[i+n])</span></span><br><span class="line"><span class="string">        sum_maxs += x[i];</span></span><br><span class="line"><span class="string">      else</span></span><br><span class="line"><span class="string">        sum_maxs += x[i+n];</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  return sum_maxs / n;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">double mm5(int n) &#123;</span></span><br><span class="line"><span class="string">  omp_set_num_threads(omp_get_max_threads());</span></span><br><span class="line"><span class="string">  Rcpp::NumericVector x(n);</span></span><br><span class="line"><span class="string">  Rcpp::NumericVector y(n);</span></span><br><span class="line"><span class="string">  RNGScope scope;</span></span><br><span class="line"><span class="string">  x = rnorm(n, 0.0, 1.0);</span></span><br><span class="line"><span class="string">  y = rnorm(n, 0.0, 1.0);</span></span><br><span class="line"><span class="string">  double sum_maxs = 0;</span></span><br><span class="line"><span class="string">  #pragma omp parallel</span></span><br><span class="line"><span class="string">  &#123;</span></span><br><span class="line"><span class="string">    #pragma omp for reduction( +:sum_maxs)</span></span><br><span class="line"><span class="string">    for(int i = 0; i &lt; n; ++i) &#123;</span></span><br><span class="line"><span class="string">      if(x[i] &gt; y[i]) sum_maxs += x[i];</span></span><br><span class="line"><span class="string">      else sum_maxs += y[i];</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  return sum_maxs / n;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span>)</span><br><span class="line">h = <span class="keyword">function</span>()&#123;</span><br><span class="line">  nreps = <span class="number">1e7</span></span><br><span class="line">  x = rnorm(nreps)</span><br><span class="line">  y = rnorm(nreps)</span><br><span class="line">  print(mm(x, y))</span><br><span class="line">&#125;</span><br><span class="line">i = <span class="keyword">function</span>()&#123;</span><br><span class="line">  nreps = <span class="number">1e7</span></span><br><span class="line">  x = matrix(rnorm(<span class="number">2</span>*nreps),nreps)</span><br><span class="line">  print(mm2(x))</span><br><span class="line">&#125;</span><br><span class="line">j = <span class="keyword">function</span>()&#123;</span><br><span class="line">  nreps = <span class="number">1e7</span></span><br><span class="line">  x = rnorm(nreps)</span><br><span class="line">  y = rnorm(nreps)</span><br><span class="line">  print(mm3(x, y))</span><br><span class="line">&#125;</span><br><span class="line">k = <span class="keyword">function</span>()&#123;</span><br><span class="line">  nreps = <span class="number">1e7</span></span><br><span class="line">  x = matrix(rnorm(<span class="number">2</span>*nreps),nreps)</span><br><span class="line">  print(mm4(x))</span><br><span class="line">&#125;</span><br><span class="line">l = <span class="keyword">function</span>()&#123;</span><br><span class="line">  nreps = <span class="number">1e7</span></span><br><span class="line">  print(mm5(nreps))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(RcppArmadillo)</span><br><span class="line">sourceCpp(code = <span class="string">&#x27;</span></span><br><span class="line"><span class="string">// [[Rcpp::depends(RcppArmadillo)]]</span></span><br><span class="line"><span class="string">#include &lt;RcppArmadillo.h&gt;</span></span><br><span class="line"><span class="string">#include &lt;Rcpp.h&gt;</span></span><br><span class="line"><span class="string">using namespace Rcpp;</span></span><br><span class="line"><span class="string">using namespace arma;</span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">double mm6(int n) &#123;</span></span><br><span class="line"><span class="string">  arma_rng::set_seed_random();</span></span><br><span class="line"><span class="string">  colvec x = randn(n), y = randn(n);</span></span><br><span class="line"><span class="string">  return as_scalar(mean(arma::max(x,y)));</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">double mm7(int n) &#123;</span></span><br><span class="line"><span class="string">  arma_rng::set_seed_random();</span></span><br><span class="line"><span class="string">  mat x = randn(n, 2);</span></span><br><span class="line"><span class="string">  return as_scalar(mean(arma::max(x,1)));</span></span><br><span class="line"><span class="string">&#125;&#x27;</span>)</span><br><span class="line">m = <span class="keyword">function</span>()&#123;</span><br><span class="line">  nreps = <span class="number">1e7</span></span><br><span class="line">  print(mm6(nreps))</span><br><span class="line">&#125;</span><br><span class="line">n = <span class="keyword">function</span>()&#123;</span><br><span class="line">  nreps = <span class="number">1e7</span></span><br><span class="line">  print(mm7(nreps))</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">library</span>(rbenchmark)</span><br><span class="line">benchmark(a(),b(),d(),e(),f(),g(),h(),i(),j(),k(),l(),m(),n(), a_cmp(),b_cmp(),d_cmp(),e_cmp(),f_cmp(), replications = <span class="number">10</span>, columns=c(<span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;replications&#x27;</span>, <span class="string">&#x27;elapsed&#x27;</span>,<span class="string">&#x27;relative&#x27;</span>, <span class="string">&#x27;user.self&#x27;</span>), order=<span class="string">&#x27;relative&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## linux</span></span><br><span class="line"><span class="comment">#       test replications elapsed relative user.self</span></span><br><span class="line"><span class="comment"># 12     m()           10   6.909    1.000     8.790</span></span><br><span class="line"><span class="comment"># 13     n()           10   7.161    1.036     7.091</span></span><br><span class="line"><span class="comment"># 11     l()           10  11.123    1.610    29.872</span></span><br><span class="line"><span class="comment"># 7      h()           10  17.842    2.582    17.826</span></span><br><span class="line"><span class="comment"># 9      j()           10  17.873    2.587    34.783</span></span><br><span class="line"><span class="comment"># 10     k()           10  20.029    2.899    37.757</span></span><br><span class="line"><span class="comment"># 8      i()           10  20.925    3.029    20.811</span></span><br><span class="line"><span class="comment"># 15 b_cmp()           10  24.484    3.544    24.282</span></span><br><span class="line"><span class="comment"># 2      b()           10  24.514    3.548    24.290</span></span><br><span class="line"><span class="comment"># 6      g()           10 242.593   35.113   114.829</span></span><br><span class="line"><span class="comment"># 4      e()           10 362.433   52.458   361.964</span></span><br><span class="line"><span class="comment"># 17 e_cmp()           10 370.546   53.632   370.284</span></span><br><span class="line"><span class="comment"># 14 a_cmp()           10 381.048   55.152   381.387</span></span><br><span class="line"><span class="comment"># 1      a()           10 434.574   62.900   434.929</span></span><br><span class="line"><span class="comment"># 5      f()           10 579.186   83.831   579.427</span></span><br><span class="line"><span class="comment"># 18 f_cmp()           10 621.092   89.896   621.314</span></span><br><span class="line"><span class="comment"># 3      d()           10 634.046   91.771   634.205</span></span><br><span class="line"><span class="comment"># 16 d_cmp()           10 686.426   99.352   686.650</span></span><br></pre></td></tr></table></figure>

<p>Number 1, 2, 3, 4, 5 and 6 are the R functions. Number 14, 15, 16, 17 and 18 are R functions with byte compiler. Number 7, 8, 9, 10 and 11 are the Rcpp functions. Number 12 and 13 are RcppArmadillo functions.</p>
<p>Number 1 function is using for-loop in R. Number 2 function is using the function pmax (R vectorized maximum function). Number 3, 4 and 5 functions are the application of sapply, apply and lapply function, respectively. Number 6 function is using the parallel computing package snowfall in R.</p>
<p>Number 7 and 8 function is to locate the two vectors of normal r.v. and to use Rcpp function to calculate. The difference between two functions are the input element, number 7 function input two vectors and number 8 function input one matrix.</p>
<p>Number 9 and 10 functions is the parallel version of number 7 and 8 functions, respectively. Number 11 function is to use the c++ for locate the two vectors of normal r.v. and to calculate in the way of number 9 function. Number 12 and 13 functions are to use armadillo for locating the two vectors of normal r.v. and calculating with vector or matrix manipulation.</p>
<p>The results shows that generating normal r.v. in c++ is fast than generating in R, the vectorized function pmax is fast than other ?apply functions and calculation of two vectors are fast than a matrix (I think that the reason is searching address.).</p>
<p>My environment is ubuntu 14.04, R 3.1.1 compiled by intel c++, fortran compiler with MKL. My CPU is <a href="mailto:&#51;&#55;&#55;&#48;&#x4b;&#64;&#52;&#x2e;&#x33;&#71;&#72;&#x7a;">&#51;&#55;&#55;&#48;&#x4b;&#64;&#52;&#x2e;&#x33;&#71;&#72;&#x7a;</a>.</p>
<p>Remark:<br>I think that the reason why the calculation with matrix is slow is that c++ is a row-major language, so I try another example:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(Rcpp)</span><br><span class="line"><span class="keyword">library</span>(RcppArmadillo)</span><br><span class="line">sourceCpp(code = <span class="string">&#x27;</span></span><br><span class="line"><span class="string">// [[Rcpp::depends(RcppArmadillo)]]</span></span><br><span class="line"><span class="string">#include &lt;RcppArmadillo.h&gt;</span></span><br><span class="line"><span class="string">#include &lt;Rcpp.h&gt;</span></span><br><span class="line"><span class="string">using namespace Rcpp;</span></span><br><span class="line"><span class="string">using namespace arma;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">double mm6(int n) &#123;</span></span><br><span class="line"><span class="string">arma_rng::set_seed_random();</span></span><br><span class="line"><span class="string">colvec x = randn(n), y = randn(n);</span></span><br><span class="line"><span class="string">return as_scalar(mean(arma::max(x,y)));</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">double mm7(int n) &#123;</span></span><br><span class="line"><span class="string">arma_rng::set_seed_random();</span></span><br><span class="line"><span class="string">mat x = randn(n, 2);</span></span><br><span class="line"><span class="string">return as_scalar(mean(arma::max(x,1)));</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">double mm9(int n) &#123;</span></span><br><span class="line"><span class="string">arma_rng::set_seed_random();</span></span><br><span class="line"><span class="string">mat x = randn(2, n);</span></span><br><span class="line"><span class="string">return as_scalar(mean(arma::max(x,0), 1));</span></span><br><span class="line"><span class="string">&#125;&#x27;</span>)</span><br><span class="line">m = <span class="keyword">function</span>()&#123;</span><br><span class="line">  nreps = <span class="number">1e7</span></span><br><span class="line">  print(mm6(nreps))</span><br><span class="line">&#125;</span><br><span class="line">n = <span class="keyword">function</span>()&#123;</span><br><span class="line">  nreps = <span class="number">1e7</span></span><br><span class="line">  print(mm7(nreps))</span><br><span class="line">&#125;</span><br><span class="line">o = <span class="keyword">function</span>()&#123;</span><br><span class="line">  nreps = <span class="number">1e7</span></span><br><span class="line">  print(mm9(nreps))</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">library</span>(rbenchmark)</span><br><span class="line">benchmark(m(),n(),o(), replications = <span class="number">10</span>, columns=c(<span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;replications&#x27;</span>, <span class="string">&#x27;elapsed&#x27;</span>,<span class="string">&#x27;relative&#x27;</span>, <span class="string">&#x27;user.self&#x27;</span>), order=<span class="string">&#x27;relative&#x27;</span>)</span><br><span class="line"><span class="comment">#   test replications elapsed relative user.self</span></span><br><span class="line"><span class="comment"># 1  m()           10   7.001    1.000     6.875</span></span><br><span class="line"><span class="comment"># 3  o()           10   7.090    1.013     6.977</span></span><br><span class="line"><span class="comment"># 2  n()           10   7.247    1.035     7.124</span></span><br></pre></td></tr></table></figure>

<p>The results show that calculation in row and calculation in column is big difference. My environment is ubuntu 14.04, R 3.1.1 compiled by intel c++, fortran compiler with MKL. My CPU is <a href="mailto:&#51;&#x37;&#55;&#48;&#75;&#64;&#52;&#46;&#51;&#71;&#72;&#122;">&#51;&#x37;&#55;&#48;&#75;&#64;&#52;&#46;&#51;&#71;&#72;&#122;</a>.</p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>Rcpp</tag>
        <tag>RcppArmadillo</tag>
        <tag>openmp</tag>
      </tags>
  </entry>
  <entry>
    <title>R data.table - subsets</title>
    <url>/posts/201407/2014-07-29-R-data-table-subsets.html</url>
    <content><![CDATA[<p><code>data.table</code> is a powerful tool for exploring data. However, how is it fast? Here we provides a performance test for subsetting data.</p>
<a id="more"></a>

<p>Code:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(data.table)</span><br><span class="line"><span class="keyword">library</span>(dplyr)</span><br><span class="line"><span class="keyword">library</span>(fastmatch)</span><br><span class="line"><span class="keyword">library</span>(Rcpp)</span><br><span class="line"><span class="keyword">library</span>(rbenchmark)</span><br><span class="line">perf_test = <span class="keyword">function</span>(N)&#123;</span><br><span class="line">    tmp &lt;- list()</span><br><span class="line">    <span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">1</span>:N) tmp[[i]] &lt;- iris</span><br><span class="line">    m &lt;- do.call(rbind, tmp)</span><br><span class="line">    m2 = data.table(m)</span><br><span class="line">    setkey(m2, <span class="string">&quot;Sepal.Width&quot;</span>)</span><br><span class="line">    m3 = as.matrix(m[,<span class="number">1</span>:<span class="number">4</span>])</span><br><span class="line">    benchmark(replications=<span class="number">100</span>, order = <span class="string">&quot;relative&quot;</span>,</span><br><span class="line">        data.frame = m[m$Sepal.Width == <span class="number">3.5</span>,],</span><br><span class="line">        subset = subset(m, Sepal.Width == <span class="number">3.5</span>),</span><br><span class="line">        dt1 = m2[J(<span class="number">3.5</span>)],</span><br><span class="line">        filter_dt = filter(m, Sepal.Width == <span class="number">3.5</span>),</span><br><span class="line">        filter_df = filter(m2, Sepal.Width == <span class="number">3.5</span>),</span><br><span class="line">        dt2 = m2[list(<span class="number">3.5</span>)],</span><br><span class="line">        fmatch = m2[fmatch(m2$Sepal.Width, <span class="number">3.5</span>, nomatch = <span class="number">0L</span>),],</span><br><span class="line">        matrix = m3[m3[,<span class="number">2</span>]==<span class="number">3.5</span>,],</span><br><span class="line">        columns = c(<span class="string">&quot;test&quot;</span>, <span class="string">&quot;replications&quot;</span>, <span class="string">&quot;elapsed&quot;</span>, <span class="string">&quot;relative&quot;</span>)</span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># iris的大小</span></span><br><span class="line">object.size(iris)</span><br><span class="line"><span class="comment"># 7088 bytes</span></span><br><span class="line"><span class="comment"># 200倍的資料量</span></span><br><span class="line">perf_test(<span class="number">200</span>)</span><br><span class="line"><span class="comment">#         test replications elapsed relative</span></span><br><span class="line"><span class="comment"># 4  filter_dt          100   0.038    1.000</span></span><br><span class="line"><span class="comment"># 5  filter_df          100   0.088    2.316</span></span><br><span class="line"><span class="comment"># 6        dt2          100   0.119    3.132</span></span><br><span class="line"><span class="comment"># 3        dt1          100   0.131    3.447</span></span><br><span class="line"><span class="comment"># 8     matrix          100   0.134    3.526</span></span><br><span class="line"><span class="comment"># 7     fmatch          100   0.222    5.842</span></span><br><span class="line"><span class="comment"># 1 data.frame          100   0.407   10.711</span></span><br><span class="line"><span class="comment"># 2     subset          100   0.490   12.895</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 500倍的資料量</span></span><br><span class="line">perf_test(<span class="number">500</span>)</span><br><span class="line"><span class="comment">#         test replications elapsed relative</span></span><br><span class="line"><span class="comment"># 4  filter_dt          100   0.083    1.000</span></span><br><span class="line"><span class="comment"># 5  filter_df          100   0.119    1.434</span></span><br><span class="line"><span class="comment"># 6        dt2          100   0.126    1.518</span></span><br><span class="line"><span class="comment"># 3        dt1          100   0.127    1.530</span></span><br><span class="line"><span class="comment"># 8     matrix          100   0.371    4.470</span></span><br><span class="line"><span class="comment"># 7     fmatch          100   0.517    6.229</span></span><br><span class="line"><span class="comment"># 1 data.frame          100   1.056   12.723</span></span><br><span class="line"><span class="comment"># 2     subset          100   1.224   14.747</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1000倍的資料量</span></span><br><span class="line">perf_test(<span class="number">1000</span>)</span><br><span class="line"><span class="comment">#         test replications elapsed relative</span></span><br><span class="line"><span class="comment"># 3        dt1          100   0.136    1.000</span></span><br><span class="line"><span class="comment"># 6        dt2          100   0.139    1.022</span></span><br><span class="line"><span class="comment"># 4  filter_dt          100   0.159    1.169</span></span><br><span class="line"><span class="comment"># 5  filter_df          100   0.194    1.426</span></span><br><span class="line"><span class="comment"># 8     matrix          100   0.809    5.949</span></span><br><span class="line"><span class="comment"># 7     fmatch          100   1.128    8.294</span></span><br><span class="line"><span class="comment"># 1 data.frame          100   2.157   15.860</span></span><br><span class="line"><span class="comment"># 2     subset          100   2.541   18.684</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1500倍的資料量</span></span><br><span class="line">perf_test(<span class="number">1500</span>)</span><br><span class="line"><span class="comment">#         test replications elapsed relative</span></span><br><span class="line"><span class="comment"># 3        dt1          100   0.144    1.000</span></span><br><span class="line"><span class="comment"># 6        dt2          100   0.148    1.028</span></span><br><span class="line"><span class="comment"># 4  filter_dt          100   0.259    1.799</span></span><br><span class="line"><span class="comment"># 5  filter_df          100   0.287    1.993</span></span><br><span class="line"><span class="comment"># 8     matrix          100   1.204    8.361</span></span><br><span class="line"><span class="comment"># 7     fmatch          100   1.543   10.715</span></span><br><span class="line"><span class="comment"># 1 data.frame          100   3.242   22.514</span></span><br><span class="line"><span class="comment"># 2     subset          100   3.729   25.896</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3000倍的資料量</span></span><br><span class="line">perf_test(<span class="number">3000</span>)</span><br><span class="line"><span class="comment">#         test replications elapsed relative</span></span><br><span class="line"><span class="comment"># 3        dt1          100   0.174    1.000</span></span><br><span class="line"><span class="comment"># 6        dt2          100   0.174    1.000</span></span><br><span class="line"><span class="comment"># 5  filter_df          100   0.405    2.328</span></span><br><span class="line"><span class="comment"># 4  filter_dt          100   0.509    2.925</span></span><br><span class="line"><span class="comment"># 8     matrix          100   2.441   14.029</span></span><br><span class="line"><span class="comment"># 7     fmatch          100   2.993   17.201</span></span><br><span class="line"><span class="comment"># 1 data.frame          100   6.428   36.943</span></span><br><span class="line"><span class="comment"># 2     subset          100   7.458   42.862</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 5000倍的資料量</span></span><br><span class="line">perf_test(<span class="number">5000</span>)</span><br><span class="line"><span class="comment">#         test replications elapsed relative</span></span><br><span class="line"><span class="comment"># 6        dt2          100   0.224    1.000</span></span><br><span class="line"><span class="comment"># 3        dt1          100   0.225    1.004</span></span><br><span class="line"><span class="comment"># 5  filter_df          100   0.632    2.821</span></span><br><span class="line"><span class="comment"># 4  filter_dt          100   0.869    3.879</span></span><br><span class="line"><span class="comment"># 8     matrix          100   4.027   17.978</span></span><br><span class="line"><span class="comment"># 7     fmatch          100   4.797   21.415</span></span><br><span class="line"><span class="comment"># 1 data.frame          100  10.578   47.223</span></span><br><span class="line"><span class="comment"># 2     subset          100  12.177   54.362</span></span><br></pre></td></tr></table></figure>

<p>After above benchmarks, we can see that <code>filter</code> in <code>dplyr</code> is fast when data size is low (lower than 10 MB), but data.table searching by key is faster when data size is larger. Fastmatch is not fast. HAHA!! Even data.frame is slower than matrix. <code>data.table</code> is so worth to learn!</p>
<p>My environment is ubuntu 14.04, R 3.1.1 compiled by intel c++, fortran compiler with MKL. My CPU is <a href="mailto:&#51;&#x37;&#55;&#48;&#x4b;&#64;&#52;&#46;&#51;&#x47;&#x48;&#122;">&#51;&#x37;&#55;&#48;&#x4b;&#64;&#52;&#46;&#51;&#x47;&#x48;&#122;</a>.</p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>data.table</tag>
      </tags>
  </entry>
  <entry>
    <title>R data.table - melt and cast</title>
    <url>/posts/201407/2014-07-29-R-data-table-melt-and-cast.html</url>
    <content><![CDATA[<p><code>data.table</code> is a powerful tool for exploring data.<br>Here we provides a example for melting and casting data.</p>
<a id="more"></a>

<p>Code:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(data.table)</span><br><span class="line"><span class="keyword">library</span>(reshape2)</span><br><span class="line"><span class="keyword">library</span>(dplyr)</span><br><span class="line">dat = list(); length(dat) = <span class="number">3</span></span><br><span class="line">dat[[<span class="number">1</span>]] = data.table(name=c(<span class="string">&quot;A&quot;</span>,<span class="string">&quot;B&quot;</span>,<span class="string">&quot;D&quot;</span>),value=c(<span class="number">23</span>,<span class="number">45</span>,<span class="number">100</span>),day=<span class="string">&quot;day1&quot;</span>)</span><br><span class="line">dat[[<span class="number">2</span>]] = data.table(name=c(<span class="string">&quot;A&quot;</span>,<span class="string">&quot;C&quot;</span>,<span class="string">&quot;D&quot;</span>),value=c(<span class="number">77</span>,<span class="number">11</span>,<span class="number">35</span>),day=<span class="string">&quot;day2&quot;</span>)</span><br><span class="line">dat[[<span class="number">3</span>]] = data.table(name=c(<span class="string">&quot;B&quot;</span>,<span class="string">&quot;D&quot;</span>,<span class="string">&quot;E&quot;</span>),value=c(<span class="number">11</span>,<span class="number">44</span>,<span class="number">55</span>),day=<span class="string">&quot;day3&quot;</span>)</span><br><span class="line"></span><br><span class="line">dat2 = rbindlist(dat)</span><br><span class="line"><span class="comment">#    name value  day</span></span><br><span class="line"><span class="comment"># 1:    A    23 day1</span></span><br><span class="line"><span class="comment"># 2:    B    45 day1</span></span><br><span class="line"><span class="comment"># 3:    D   100 day1</span></span><br><span class="line"><span class="comment"># 4:    A    77 day2</span></span><br><span class="line"><span class="comment"># 5:    C    11 day2</span></span><br><span class="line"><span class="comment"># 6:    D    35 day2</span></span><br><span class="line"><span class="comment"># 7:    B    11 day3</span></span><br><span class="line"><span class="comment"># 8:    D    44 day3</span></span><br><span class="line"><span class="comment"># 9:    E    55 day3</span></span><br><span class="line">dat3 = dcast.data.table(dat2, name ~ day)</span><br><span class="line"><span class="comment">#    name day1 day2 day3</span></span><br><span class="line"><span class="comment"># 1:    A   23   77   NA</span></span><br><span class="line"><span class="comment"># 2:    B   45   NA   11</span></span><br><span class="line"><span class="comment"># 3:    C   NA   11   NA</span></span><br><span class="line"><span class="comment"># 4:    D  100   35   44</span></span><br><span class="line"><span class="comment"># 5:    E   NA   NA   55</span></span><br><span class="line">dat4 = filter(melt(dat3, <span class="string">&quot;name&quot;</span>), !is.na(value))</span><br><span class="line"><span class="comment">#    name variable value</span></span><br><span class="line"><span class="comment"># 1:    A     day1    23</span></span><br><span class="line"><span class="comment"># 2:    B     day1    45</span></span><br><span class="line"><span class="comment"># 3:    D     day1   100</span></span><br><span class="line"><span class="comment"># 4:    A     day2    77</span></span><br><span class="line"><span class="comment"># 5:    C     day2    11</span></span><br><span class="line"><span class="comment"># 6:    D     day2    35</span></span><br><span class="line"><span class="comment"># 7:    B     day3    11</span></span><br><span class="line"><span class="comment"># 8:    D     day3    44</span></span><br><span class="line"><span class="comment"># 9:    E     day3    55</span></span><br></pre></td></tr></table></figure>

<p><code>cast</code> can change raw data into a wide table and <code>melt</code> can change data in wide table format back to raw data. I think that it is faster and easier than other functions on <code>data.frame</code>. (Some functions like <code>reshape</code>, <code>cast</code> and <code>melt</code> in <code>reshape</code>.)</p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>data.table</tag>
      </tags>
  </entry>
  <entry>
    <title>R data.table - collating data</title>
    <url>/posts/201407/2014-07-29-R-data-table-collating-data.html</url>
    <content><![CDATA[<p><code>data.table</code> is a powerful tool for collating data. Here we provides a example. Recently, I join a team and participate a competition of R data analysis.</p>
<a id="more"></a>

<p>It is an estate data which contains housing price and some variables. I put data in my [Google drive].(<a href="https://drive.google.com/open?id=0B1UBN4lCLHrVeWRzQ1FHQUoyem8">https://drive.google.com/open?id=0B1UBN4lCLHrVeWRzQ1FHQUoyem8</a>).</p>
<p>Code:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(data.table)</span><br><span class="line"><span class="keyword">library</span>(dplyr)</span><br><span class="line">dat = lapply(paste0(<span class="string">&quot;List_&quot;</span>, LETTERS[LETTERS!=<span class="string">&quot;L&quot;</span> &amp; LETTERS!=<span class="string">&quot;R&quot;</span> &amp; LETTERS!=<span class="string">&quot;S&quot;</span> &amp; LETTERS!=<span class="string">&quot;Y&quot;</span>], <span class="string">&quot;.csv&quot;</span>), read.csv)</span><br><span class="line">dat2 = rbindlist(dat)</span><br><span class="line">region_v = c(<span class="string">&quot;臺北市&quot;</span>,<span class="string">&quot;臺中市&quot;</span>,<span class="string">&quot;基隆市&quot;</span>,<span class="string">&quot;臺南市&quot;</span>,<span class="string">&quot;高雄市&quot;</span>,<span class="string">&quot;新北市&quot;</span>,<span class="string">&quot;宜蘭縣&quot;</span>,<span class="string">&quot;桃園縣&quot;</span>,<span class="string">&quot;嘉義市&quot;</span>,<span class="string">&quot;新竹縣&quot;</span>,<span class="string">&quot;苗栗縣&quot;</span>,<span class="string">&quot;南投縣&quot;</span>,<span class="string">&quot;彰化縣&quot;</span>,<span class="string">&quot;新竹市&quot;</span>,<span class="string">&quot;雲林縣&quot;</span>,<span class="string">&quot;嘉義縣&quot;</span>,<span class="string">&quot;屏東縣&quot;</span>,<span class="string">&quot;花蓮縣&quot;</span>,<span class="string">&quot;臺東縣&quot;</span>,<span class="string">&quot;金門縣&quot;</span>,<span class="string">&quot;澎湖縣&quot;</span>,<span class="string">&quot;連江縣&quot;</span>)</span><br><span class="line">region = unlist(lapply(<span class="number">1</span>:length(dat), <span class="keyword">function</span>(i) rep(region_v[i], nrow(dat[[i]]))))</span><br><span class="line">dat2 = data.table(dat2, region = region)</span><br><span class="line">cols = c(<span class="number">1</span>:<span class="number">3</span>, <span class="number">5</span>:<span class="number">7</span>, <span class="number">9</span>:<span class="number">15</span>, <span class="number">20</span>:<span class="number">21</span>, <span class="number">24</span>)</span><br><span class="line">dat2[, (cols):=lapply(.SD, as.character),.SDcols=cols]</span><br><span class="line">setnames(dat2, <span class="string">&quot;交易標的&quot;</span>, <span class="string">&quot;trading_target&quot;</span>)</span><br><span class="line">dat2 = filter(dat2, grepl(<span class="string">&quot;建物&quot;</span>, trading_target))</span><br><span class="line"></span><br><span class="line">setnames(dat2, <span class="string">&quot;交易年月&quot;</span>, <span class="string">&quot;trading_ym&quot;</span>)</span><br><span class="line">dat2 = mutate(dat2, year.trading = substr(trading_ym, <span class="number">0</span>, nchar(trading_ym)-<span class="number">2</span>))</span><br><span class="line">dat2 = mutate(dat2, month.trading = substr(trading_ym, nchar(as.character(trading_ym))-<span class="number">1</span>, nchar(trading_ym)))</span><br><span class="line">set(dat2, i = which(dat2$month.trading &gt;= <span class="number">13</span>), j = <span class="string">&quot;month.trading&quot;</span>, value = <span class="literal">NA</span>)</span><br><span class="line">set(dat2, i = which(dat2$month.trading == <span class="number">0</span>), j = <span class="string">&quot;month.trading&quot;</span>, value = <span class="literal">NA</span>)</span><br><span class="line">set(dat2, i = which(is.na(dat2$month.trading)), j = <span class="string">&quot;month.trading&quot;</span>, value = <span class="string">&quot;6&quot;</span>)</span><br><span class="line">set(dat2, j = <span class="string">&quot;year.trading&quot;</span>, value = as.integer(dat2$year.trading))</span><br><span class="line">set(dat2, j = <span class="string">&quot;month.trading&quot;</span>, value = as.integer(dat2$month.trading))</span><br><span class="line"></span><br><span class="line">setnames(dat2, <span class="string">&quot;交易筆棟數&quot;</span>, <span class="string">&quot;trading_detail&quot;</span>)</span><br><span class="line">dat2 = mutate(dat2, n.land = as.integer(substr(trading_detail,<span class="number">3</span>,<span class="number">3</span>)))</span><br><span class="line">dat2 = mutate(dat2, n.building = as.integer(substr(trading_detail,<span class="number">6</span>,<span class="number">6</span>)))</span><br><span class="line">dat2 = mutate(dat2, n.parking_lot = as.integer(substr(trading_detail,<span class="number">9</span>,<span class="number">9</span>)))</span><br><span class="line"></span><br><span class="line">setnames(dat2, <span class="string">&quot;主要建材&quot;</span>, <span class="string">&quot;building_materials&quot;</span>)</span><br><span class="line">dat2 = mutate(dat2, building_materials = as.character(building_materials))</span><br><span class="line">set(dat2, i = which(dat2$building_materials==<span class="string">&quot;&quot;</span>), j = <span class="string">&quot;building_materials&quot;</span>, value = <span class="literal">NA</span>)</span><br><span class="line">dat2 = mutate(dat2, CRC = grepl(<span class="string">&quot;混凝土&quot;</span>, building_materials))</span><br><span class="line"></span><br><span class="line">setnames(dat2, <span class="string">&quot;建築完成年月&quot;</span>, <span class="string">&quot;construction_ym&quot;</span>)</span><br><span class="line">dat2 = mutate(dat2, year.construction = as.numeric(rep(<span class="literal">NA</span>, nrow(dat2))))</span><br><span class="line">dat2 = mutate(dat2, month.construction = as.numeric(rep(<span class="literal">NA</span>, nrow(dat2))))</span><br><span class="line"></span><br><span class="line">dat2[nchar(construction_ym)==<span class="number">2</span> &amp; !is.na(construction_ym), year.construction := as.integer(construction_ym)]</span><br><span class="line"></span><br><span class="line">dat2[nchar(construction_ym)==<span class="number">4</span> &amp; substr(construction_ym, <span class="number">1</span>, <span class="number">2</span>) != <span class="number">10</span> &amp; !is.na(construction_ym), year.construction := as.integer(substr(construction_ym, <span class="number">1</span>, <span class="number">2</span>))]</span><br><span class="line">dat2[nchar(construction_ym)==<span class="number">4</span> &amp; substr(construction_ym, <span class="number">1</span>, <span class="number">2</span>) != <span class="number">10</span> &amp; !is.na(construction_ym), month.construction := as.integer(substr(construction_ym, <span class="number">3</span>, <span class="number">4</span>))]</span><br><span class="line">dat2[nchar(construction_ym)==<span class="number">4</span> &amp; substr(construction_ym, <span class="number">1</span>, <span class="number">2</span>) == <span class="number">10</span> &amp; !is.na(construction_ym), year.construction := as.integer(substr(construction_ym, <span class="number">1</span>, <span class="number">3</span>))]</span><br><span class="line">dat2[nchar(construction_ym)==<span class="number">4</span> &amp; substr(construction_ym, <span class="number">1</span>, <span class="number">2</span>) == <span class="number">10</span> &amp; !is.na(construction_ym), month.construction := as.integer(substr(construction_ym, <span class="number">4</span>, <span class="number">4</span>))]</span><br><span class="line"></span><br><span class="line">dat2[nchar(construction_ym)==<span class="number">5</span> &amp; (substr(dat2$construction_ym, <span class="number">1</span>, <span class="number">1</span>) == <span class="number">1</span> | substr(dat2$construction_ym, <span class="number">1</span>, <span class="number">1</span>) == <span class="number">0</span>) &amp; !is.na(construction_ym), year.construction := as.integer(substr(construction_ym, <span class="number">1</span>, <span class="number">3</span>))]</span><br><span class="line">dat2[nchar(construction_ym)==<span class="number">5</span> &amp; (substr(dat2$construction_ym, <span class="number">1</span>, <span class="number">1</span>) == <span class="number">1</span> | substr(dat2$construction_ym, <span class="number">1</span>, <span class="number">1</span>) == <span class="number">0</span>) &amp; !is.na(construction_ym), month.construction := as.integer(substr(construction_ym, <span class="number">4</span>, <span class="number">5</span>))]</span><br><span class="line">dat2[nchar(construction_ym)==<span class="number">5</span> &amp; substr(dat2$construction_ym, <span class="number">1</span>, <span class="number">1</span>) != <span class="number">1</span> &amp; substr(dat2$construction_ym, <span class="number">1</span>, <span class="number">1</span>) != <span class="number">0</span> &amp; !is.na(construction_ym), year.construction := as.integer(substr(construction_ym, <span class="number">1</span>, <span class="number">2</span>))]</span><br><span class="line">dat2[nchar(construction_ym)==<span class="number">5</span> &amp; substr(dat2$construction_ym, <span class="number">1</span>, <span class="number">1</span>) != <span class="number">1</span> &amp; substr(dat2$construction_ym, <span class="number">1</span>, <span class="number">1</span>) != <span class="number">0</span> &amp; !is.na(construction_ym), month.construction := as.integer(substr(construction_ym, <span class="number">3</span>, <span class="number">3</span>))]</span><br><span class="line"></span><br><span class="line">dat2[nchar(construction_ym)==<span class="number">6</span> &amp; (substr(dat2$construction_ym, <span class="number">1</span>, <span class="number">1</span>) == <span class="number">1</span> | substr(dat2$construction_ym, <span class="number">1</span>, <span class="number">1</span>) == <span class="number">0</span>) &amp; !is.na(construction_ym), year.construction := as.integer(substr(construction_ym, <span class="number">1</span>, <span class="number">3</span>))]</span><br><span class="line">dat2[nchar(construction_ym)==<span class="number">6</span> &amp; (substr(dat2$construction_ym, <span class="number">1</span>, <span class="number">1</span>) == <span class="number">1</span> | substr(dat2$construction_ym, <span class="number">1</span>, <span class="number">1</span>) == <span class="number">0</span>) &amp; !is.na(construction_ym), month.construction := as.integer(substr(construction_ym, <span class="number">4</span>, <span class="number">5</span>))]</span><br><span class="line">dat2[nchar(construction_ym)==<span class="number">6</span> &amp; substr(dat2$construction_ym, <span class="number">1</span>, <span class="number">1</span>) != <span class="number">1</span> &amp; substr(dat2$construction_ym, <span class="number">1</span>, <span class="number">1</span>) != <span class="number">0</span> &amp; !is.na(construction_ym), year.construction := as.integer(substr(construction_ym, <span class="number">1</span>, <span class="number">2</span>))]</span><br><span class="line">dat2[nchar(construction_ym)==<span class="number">6</span> &amp; substr(dat2$construction_ym, <span class="number">1</span>, <span class="number">1</span>) != <span class="number">1</span> &amp; substr(dat2$construction_ym, <span class="number">1</span>, <span class="number">1</span>) != <span class="number">0</span> &amp; !is.na(construction_ym), month.construction := as.integer(substr(construction_ym, <span class="number">3</span>, <span class="number">4</span>))]</span><br><span class="line"></span><br><span class="line">dat2[nchar(construction_ym)==<span class="number">7</span> &amp; (substr(dat2$construction_ym, <span class="number">1</span>, <span class="number">1</span>) == <span class="number">1</span> | substr(dat2$construction_ym, <span class="number">1</span>, <span class="number">1</span>) == <span class="number">0</span>) &amp; !is.na(construction_ym), year.construction := as.integer(substr(construction_ym, <span class="number">1</span>, <span class="number">3</span>))]</span><br><span class="line">dat2[nchar(construction_ym)==<span class="number">7</span> &amp; (substr(dat2$construction_ym, <span class="number">1</span>, <span class="number">1</span>) == <span class="number">1</span> | substr(dat2$construction_ym, <span class="number">1</span>, <span class="number">1</span>) == <span class="number">0</span>) &amp; !is.na(construction_ym), month.construction := as.integer(substr(construction_ym, <span class="number">4</span>, <span class="number">5</span>))]</span><br><span class="line">dat2[nchar(construction_ym)==<span class="number">7</span> &amp; substr(dat2$construction_ym, <span class="number">1</span>, <span class="number">1</span>) != <span class="number">1</span> &amp; substr(dat2$construction_ym, <span class="number">1</span>, <span class="number">1</span>) != <span class="number">0</span> &amp; !is.na(construction_ym), year.construction := as.integer(substr(construction_ym, <span class="number">1</span>, <span class="number">2</span>))]</span><br><span class="line">dat2[nchar(construction_ym)==<span class="number">7</span> &amp; substr(dat2$construction_ym, <span class="number">1</span>, <span class="number">1</span>) != <span class="number">1</span> &amp; substr(dat2$construction_ym, <span class="number">1</span>, <span class="number">1</span>) != <span class="number">0</span> &amp; !is.na(construction_ym), month.construction := as.integer(substr(construction_ym, <span class="number">4</span>, <span class="number">5</span>))]</span><br><span class="line"></span><br><span class="line">set(dat2, i = which(dat2$year.construction &gt;= <span class="number">104</span>), j = <span class="string">&quot;year.construction&quot;</span>, value = <span class="literal">NA</span>)</span><br><span class="line">set(dat2, i = which(dat2$month.construction &gt;= <span class="number">13</span>), j = <span class="string">&quot;month.construction&quot;</span>, value = <span class="literal">NA</span>)</span><br><span class="line">set(dat2, i = which(dat2$month.construction == <span class="number">0</span>), j = <span class="string">&quot;month.construction&quot;</span>, value = <span class="literal">NA</span>)</span><br><span class="line">set(dat2, i = which(is.na(dat2$month.construction)), j = <span class="string">&quot;month.construction&quot;</span>, value = <span class="number">6</span>)</span><br><span class="line"></span><br><span class="line">dat2 = mutate(dat2, trading = year.trading *<span class="number">12</span> + month.trading)</span><br><span class="line">dat2 = mutate(dat2, construction = year.construction *<span class="number">12</span> + month.construction)</span><br><span class="line">dat2 = mutate(dat2, age_house = trading - construction)</span><br><span class="line"></span><br><span class="line"><span class="comment">### output</span></span><br><span class="line">dat3 = as.data.frame(select(dat2, c(<span class="number">23</span>,<span class="number">29</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">39</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">40</span>,<span class="number">16</span>:<span class="number">21</span>,<span class="number">25</span>,<span class="number">32</span>:<span class="number">35</span>)))</span><br><span class="line">dat4 = dat3[setdiff(<span class="number">1</span>:nrow(dat3), which(is.na(dat3), arr.ind = <span class="literal">TRUE</span>)[,<span class="number">1</span>]),]</span><br><span class="line">names(dat4) = c(<span class="string">&quot;Y&quot;</span>, paste0(<span class="string">&quot;V&quot;</span>, <span class="number">1</span>:(ncol(dat4)-<span class="number">1</span>)))</span><br><span class="line">dat4$V1 = as.factor(dat4$V1)</span><br><span class="line">dat4$V3 = as.factor(dat4$V3)</span><br><span class="line">dat4$V5 = as.numeric(dat4$V5)</span><br><span class="line">dat4$V6 = as.factor(dat4$V6)</span><br><span class="line">dat4$V12 = as.factor(dat4$V12)</span><br><span class="line">dat4$V13 = as.factor(dat4$V13)</span><br><span class="line">dat4$V18 = as.factor(dat4$V18)</span><br><span class="line">dat4 = dat4[dat4$Y!=<span class="number">0</span>,]</span><br><span class="line">dat4 = dat4[setdiff(<span class="number">1</span>:nrow(dat4), which(is.na(dat4), arr.ind = <span class="literal">TRUE</span>)[,<span class="number">1</span>]),]</span><br><span class="line"></span><br><span class="line"><span class="comment">### modeling</span></span><br><span class="line">lm.fit &lt;- lm(log(Y+<span class="number">0.1</span>)~.,data=dat4)</span><br><span class="line">summary(lm.fit)</span><br><span class="line"></span><br><span class="line">dat4.sub&lt;-dat4[-which(rownames(dat4)%<span class="keyword">in</span>%c(<span class="number">323747</span>, <span class="number">80936</span>, <span class="number">222834</span>)),]</span><br><span class="line">lm.fit &lt;- lm(log(Y+<span class="number">0.1</span>)~.,data=dat4.sub)</span><br><span class="line">summary(lm.fit)</span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(MASS)</span><br><span class="line">lm.AIC &lt;- stepAIC(lm.fit)</span><br><span class="line"></span><br><span class="line">fold = <span class="number">10</span></span><br><span class="line">cv_index_f = <span class="keyword">function</span>(n, fold = <span class="number">10</span>)&#123;</span><br><span class="line">  fold_n = floor(n / fold)</span><br><span class="line">  rem = n - fold_n * fold</span><br><span class="line">  size = rep(fold_n, fold)</span><br><span class="line">  <span class="keyword">if</span>(rem &gt; <span class="number">0</span>)</span><br><span class="line">    size[<span class="number">1</span>:rem] = fold_n + <span class="number">1</span></span><br><span class="line">  cv_index = unlist(sapply(<span class="number">1</span>:fold, <span class="keyword">function</span>(i) rep(i, size[i])))</span><br><span class="line">  cv_index = sample(cv_index, length(cv_index))</span><br><span class="line">  <span class="keyword">return</span>(cv_index)</span><br><span class="line">&#125;</span><br><span class="line">index = cv_index_f(nrow(dat4.sub), fold)</span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(snowfall)</span><br><span class="line">n_rep = <span class="number">10</span></span><br><span class="line">sfInit(<span class="literal">TRUE</span>, <span class="number">8</span>)</span><br><span class="line">sfExport(<span class="string">&quot;dat4.sub&quot;</span>)</span><br><span class="line">pred.error = sapply(<span class="number">1</span>:n_rep , <span class="keyword">function</span>(i)&#123;</span><br><span class="line">  index = cv_index_f(nrow(dat4.sub), fold)</span><br><span class="line">  sfExport(<span class="string">&quot;index&quot;</span>)</span><br><span class="line">  lm.CV &lt;- sfSapply(<span class="number">1</span>:fold, <span class="keyword">function</span>(v)&#123;</span><br><span class="line">    dat4.train = dat4.sub[index != v,]</span><br><span class="line">    dat4.test = dat4.sub[index == v,]</span><br><span class="line">    lm.fit.train = lm(log(Y+<span class="number">0.1</span>)~.,data = dat4.train)</span><br><span class="line">    sum((log(dat4.test$Y+<span class="number">0.1</span>) - predict(lm.fit.train, dat4.test))^<span class="number">2</span>)/nrow(dat4.test)</span><br><span class="line">    &#125;)</span><br><span class="line">  mean(lm.CV)</span><br><span class="line">&#125;)</span><br><span class="line">sfStop()</span><br><span class="line">mean(pred.error)</span><br><span class="line"><span class="comment"># 0.1912725</span></span><br><span class="line">pred.error</span><br><span class="line"><span class="comment"># [1] 0.1913776 0.1912849 0.1912692 0.1913275 0.1914682 0.1914266 0.1911751 0.1911378 0.1911330 0.1911254</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(grpreg)</span><br><span class="line">X.m &lt;- model.matrix(log(Y+<span class="number">0.1</span>)~. , data=dat4.sub)[,-<span class="number">1</span>]</span><br><span class="line">group.v &lt;- substring(colnames(X.m),<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line">group.v[<span class="number">41</span>:<span class="number">49</span>] &lt;- substring(colnames(X.m),<span class="number">1</span>,<span class="number">3</span>)[<span class="number">41</span>:<span class="number">49</span>]</span><br><span class="line">group.v &lt;- as.numeric(factor(group.v, levels=paste(<span class="string">&quot;V&quot;</span>,c(<span class="number">1</span>:<span class="number">18</span>),sep=<span class="string">&quot;&quot;</span>)))</span><br><span class="line">out.glasso &lt;- cv.grpreg(X.m, log(dat4.sub$Y+<span class="number">0.1</span>), group=group.v)</span><br><span class="line">plot(out.glasso)</span><br><span class="line">out.glasso$lambda.min</span><br><span class="line"><span class="comment"># 0.0001378642</span></span><br><span class="line">out.glasso$cve[out.glasso$min]</span><br><span class="line"><span class="comment"># 0.1911332</span></span><br><span class="line">coef(out.glasso)</span><br></pre></td></tr></table></figure>

<p>Thanks to this competition, I have an interesting data to practice the use of <code>data.table</code>. In addition, <code>data.table</code> and <code>dplyr</code> are so fast that I drop <code>data.frame</code>.</p>
<p>My environment is ubuntu 14.04, R 3.1.1 compiled by intel c++, fortran compiler with MKL. My CPU is <a href="mailto:&#51;&#x37;&#x37;&#x30;&#x4b;&#x40;&#x34;&#46;&#51;&#x47;&#72;&#122;">&#51;&#x37;&#x37;&#x30;&#x4b;&#x40;&#x34;&#46;&#51;&#x47;&#72;&#122;</a>.</p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>data.table</tag>
      </tags>
  </entry>
  <entry>
    <title>Rcpp Attributes for Sparse Matrix</title>
    <url>/posts/201407/2014-07-30-Rcpp-Attributes-for-Sparse-Matrix.html</url>
    <content><![CDATA[<p>Thanks to the R package <code>Matrix</code>, we can use the sparse matrix in R. But to use the sparse matrix in the <code>Rcpp</code>, we need create a S4 object to get sparse matrix in <code>Rcpp</code>. However, <code>RcppArmadillo</code> provides a convenient API for interfacing the armadillo class <code>SpMat</code> and R class <code>dgCMatrix</code>. I provide several methods to use the sparse matrix in R.</p>
<a id="more"></a>

<p>Code:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(Rcpp)</span><br><span class="line"><span class="keyword">library</span>(Matrix)</span><br><span class="line"><span class="keyword">library</span>(RcppArmadillo)</span><br><span class="line">sourceCpp(code = <span class="string">&#x27;</span></span><br><span class="line"><span class="string">// [[Rcpp::depends(Matrix, RcppArmadillo)]]</span></span><br><span class="line"><span class="string">#include &lt;RcppArmadillo.h&gt;</span></span><br><span class="line"><span class="string">using namespace Rcpp;</span></span><br><span class="line"><span class="string">using namespace arma;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">mat SparseDenseMatrixMulti(sp_mat m, mat n) &#123;</span></span><br><span class="line"><span class="string">    mat R = m* n;</span></span><br><span class="line"><span class="string">  return R;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">mat SparseDenseMatrixMulti2(sp_mat m, S4 n) &#123;</span></span><br><span class="line"><span class="string">  uvec dim(as&lt;uvec&gt;(n.slot(&quot;Dim&quot;)));</span></span><br><span class="line"><span class="string">  NumericVector n_elem = n.slot(&quot;x&quot;);</span></span><br><span class="line"><span class="string">  mat n_mat(n_elem.begin(), dim(0), dim(1), false);</span></span><br><span class="line"><span class="string">    mat R = m * n_mat;</span></span><br><span class="line"><span class="string">  return R;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">mat SparseDenseMatrixMulti3(sp_mat m, NumericMatrix n) &#123;</span></span><br><span class="line"><span class="string">    mat n_mat(n.begin(), n.nrow(), n.ncol(), false);</span></span><br><span class="line"><span class="string">    mat R = m* n_mat;</span></span><br><span class="line"><span class="string">  return R;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">mat SparseDenseMatrixMulti4(S4 m, S4 n) &#123;</span></span><br><span class="line"><span class="string">  uvec i(as&lt;uvec&gt;(m.slot(&quot;i&quot;))),</span></span><br><span class="line"><span class="string">       p(as&lt;uvec&gt;(m.slot(&quot;p&quot;))),</span></span><br><span class="line"><span class="string">     dim_m(as&lt;uvec&gt;(m.slot(&quot;Dim&quot;))),</span></span><br><span class="line"><span class="string">       dim_n(as&lt;uvec&gt;(n.slot(&quot;Dim&quot;)));</span></span><br><span class="line"><span class="string">  NumericVector n_elem = n.slot(&quot;x&quot;);</span></span><br><span class="line"><span class="string">  colvec m_elem = as&lt;colvec&gt;(m.slot(&quot;x&quot;));</span></span><br><span class="line"><span class="string">  sp_mat m_mat(i, p, m_elem, dim_m(0), dim_m(1));</span></span><br><span class="line"><span class="string">  mat n_mat(n_elem.begin(), dim_n(0), dim_n(1), false);</span></span><br><span class="line"><span class="string">    mat R = m_mat * n_mat;</span></span><br><span class="line"><span class="string">  return R;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">i = c(<span class="number">1</span>:<span class="number">196</span>,<span class="number">3</span>:<span class="number">800</span>, <span class="number">1005</span>:<span class="number">2107</span>, <span class="number">5009</span>:<span class="number">7011</span>, <span class="number">2001</span>:<span class="number">8000</span>)</span><br><span class="line">j = c(<span class="number">2</span>:<span class="number">200</span>, <span class="number">9</span>:<span class="number">160</span>, <span class="number">11</span>:<span class="number">9700</span>, <span class="number">9942</span>:<span class="number">10000</span>)</span><br><span class="line">x = runif(length(i))</span><br><span class="line">A = sparseMatrix(i, j, x = x)</span><br><span class="line">B_S4 = Matrix(rnorm(<span class="number">3e7</span>), <span class="number">10000</span>)</span><br><span class="line">B = as.matrix(B_S4)</span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(rbenchmark)</span><br><span class="line">benchmark(CC1 = SparseDenseMatrixMulti(A, B),</span><br><span class="line">        CC2 = SparseDenseMatrixMulti2(A, B_S4),</span><br><span class="line">        CC3 = SparseDenseMatrixMulti3(A, B),</span><br><span class="line">        CC4 = SparseDenseMatrixMulti4(A, B_S4),</span><br><span class="line">        columns=c(<span class="string">&quot;test&quot;</span>, <span class="string">&quot;replications&quot;</span>,<span class="string">&quot;elapsed&quot;</span>, <span class="string">&quot;relative&quot;</span>),</span><br><span class="line">        replications=<span class="number">20</span>, order=<span class="string">&quot;relative&quot;</span>)</span><br><span class="line"><span class="comment">#   test replications elapsed relative</span></span><br><span class="line"><span class="comment"># 4  CC4           20   5.892    1.000</span></span><br><span class="line"><span class="comment"># 3  CC3           20   5.922    1.005</span></span><br><span class="line"><span class="comment"># 2  CC2           20   5.933    1.007</span></span><br><span class="line"><span class="comment"># 1  CC1           20   6.820    1.158</span></span><br></pre></td></tr></table></figure>

<p>The above result show that if you use the interface of <code>RcppArmadillo</code> or <code>Rcpp</code>, then you need suffer from delay of memory copy.</p>
<p>My environment is ubuntu 14.04, R 3.1.1 compiled by intel c++, fortran compiler with MKL. My CPU is <a href="mailto:&#x33;&#55;&#55;&#48;&#x4b;&#x40;&#52;&#x2e;&#x33;&#71;&#72;&#x7a;">&#x33;&#55;&#55;&#48;&#x4b;&#x40;&#52;&#x2e;&#x33;&#71;&#72;&#x7a;</a>.</p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>Rcpp</tag>
        <tag>Rcpp Attributes</tag>
        <tag>Sparse Matrix</tag>
      </tags>
  </entry>
  <entry>
    <title>R data.table - sum by groups</title>
    <url>/posts/201407/2014-07-29-R-data-table-sum-by-groups.html</url>
    <content><![CDATA[<p><code>data.table</code> is a powerful tool for exploring data. However, how is it fast? Here we provides a performance test for summing by groups.</p>
<a id="more"></a>

<p>Code:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">N = <span class="number">1e4</span></span><br><span class="line">x = data.frame(Freq=runif(N,<span class="number">0</span>,<span class="number">1</span>),Category=c(<span class="string">&quot;T&quot;</span>,<span class="string">&quot;F&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(data.table)</span><br><span class="line"><span class="keyword">library</span>(plyr)</span><br><span class="line"><span class="keyword">library</span>(dplyr)</span><br><span class="line">x_dt = data.table(x)</span><br><span class="line">setkey(x_dt, Category)</span><br><span class="line">Cate_group_dt = group_by(x_dt, Category)</span><br><span class="line">Cate_group_df = group_by(x_dt, Category)</span><br><span class="line"><span class="keyword">library</span>(rbenchmark)</span><br><span class="line">benchmark(data_table = x_dt[, sum(Freq),by = Category],</span><br><span class="line">          tapply = tapply(x$Freq, x$Category, FUN=sum),</span><br><span class="line">          plyr_dt = aggregate(Freq ~ Category, data = x_dt, FUN=sum),</span><br><span class="line">          plyr_dt2 = ddply(x_dt, .(Category), colwise(sum)),</span><br><span class="line">          plyr_df = aggregate(Freq ~ Category, data = x, FUN=sum),</span><br><span class="line">          plyr_df2 = ddply(x, .(Category), colwise(sum)),</span><br><span class="line">          dplyr_dt = summarise(Cate_group_dt, sum(Freq)),</span><br><span class="line">          dplyr_df = summarise(Cate_group_df, sum(Freq)),</span><br><span class="line">          replications = <span class="number">20</span>,</span><br><span class="line">          columns=c(<span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;replications&#x27;</span>, <span class="string">&#x27;elapsed&#x27;</span>,<span class="string">&#x27;relative&#x27;</span>, <span class="string">&#x27;user.self&#x27;</span>),</span><br><span class="line">          order=<span class="string">&#x27;relative&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Result for N = 1e4:</span></span><br><span class="line"><span class="comment">#         test replications elapsed relative user.self</span></span><br><span class="line"><span class="comment"># 2     tapply          100   0.082    1.000     0.082</span></span><br><span class="line"><span class="comment"># 1 data_table          100   0.143    1.744     0.142</span></span><br><span class="line"><span class="comment"># 8   dplyr_df          100   0.186    2.268     0.186</span></span><br><span class="line"><span class="comment"># 7   dplyr_dt          100   0.188    2.293     0.187</span></span><br><span class="line"><span class="comment"># 6   plyr_df2          100   0.312    3.805     0.312</span></span><br><span class="line"><span class="comment"># 4   plyr_dt2          100   0.320    3.902     0.320</span></span><br><span class="line"><span class="comment"># 3    plyr_dt          100   2.738   33.390     2.739</span></span><br><span class="line"><span class="comment"># 5    plyr_df          100   3.887   47.402     3.888</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Result for N = 1e6:</span></span><br><span class="line"><span class="comment">#         test replications elapsed relative user.self</span></span><br><span class="line"><span class="comment"># 1 data_table           20   0.613    1.000     0.608</span></span><br><span class="line"><span class="comment"># 7   dplyr_dt           20   0.631    1.029     0.626</span></span><br><span class="line"><span class="comment"># 8   dplyr_df           20   0.636    1.038     0.630</span></span><br><span class="line"><span class="comment"># 2     tapply           20   1.179    1.923     1.168</span></span><br><span class="line"><span class="comment"># 6   plyr_df2           20   1.445    2.357     1.419</span></span><br><span class="line"><span class="comment"># 4   plyr_dt2           20   1.475    2.406     1.451</span></span><br><span class="line"><span class="comment"># 3    plyr_dt           20  66.165  107.936    66.162</span></span><br><span class="line"><span class="comment"># 5    plyr_df           20  98.394  160.512    98.416</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Result for N = 1e7:</span></span><br><span class="line"><span class="comment">#         test replications elapsed relative user.self</span></span><br><span class="line"><span class="comment"># 6   dplyr_df           20   5.939    1.000     5.823</span></span><br><span class="line"><span class="comment"># 5   dplyr_dt           20   5.954    1.003     5.840</span></span><br><span class="line"><span class="comment"># 1 data_table           20   5.980    1.007     5.847</span></span><br><span class="line"><span class="comment"># 2     tapply           20  12.080    2.034    11.649</span></span><br><span class="line"><span class="comment"># 3   plyr_dt2           20  14.759    2.485    13.813</span></span><br><span class="line"><span class="comment"># 4   plyr_df2           20  14.857    2.502    13.809</span></span><br></pre></td></tr></table></figure>

<p>In the case with small sample size, <code>tapply</code> is the most efficient tool for summing by groups. In the case with large sample size, <code>data.table</code> and <code>summarise</code> in <code>dplyr</code> are more efficient.</p>
<p>Next, we benchmark the performance of summing by two groups. Code:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">N = <span class="number">1e4</span></span><br><span class="line">set.seed(<span class="number">100</span>)</span><br><span class="line">x &lt;- data.frame(Freq=runif(N,<span class="number">0</span>,<span class="number">1</span>),Category=c(<span class="string">&quot;T&quot;</span>,<span class="string">&quot;F&quot;</span>),Category2=sample(c(<span class="string">&quot;T&quot;</span>,<span class="string">&quot;F&quot;</span>), N, replace = <span class="literal">TRUE</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(data.table)</span><br><span class="line"><span class="keyword">library</span>(plyr)</span><br><span class="line"><span class="keyword">library</span>(dplyr)</span><br><span class="line">x_dt = data.table(x)</span><br><span class="line">setkey(x_dt, Category, Category2)</span><br><span class="line">Cate_group_dt = group_by(x_dt, Category, Category2)</span><br><span class="line">Cate_group_df = group_by(x_dt, Category, Category2)</span><br><span class="line"><span class="keyword">library</span>(rbenchmark)</span><br><span class="line">benchmark(data_table = x_dt[, sum(Freq),by = key(x_dt)],</span><br><span class="line">          tapply = tapply(x$Freq, list(x$Category, x$Category2), FUN=sum),</span><br><span class="line">          plyr_dt2 = ddply(x_dt, .(Category, Category2), colwise(sum)),</span><br><span class="line">          plyr_df2 = ddply(x, .(Category, Category2), colwise(sum)),</span><br><span class="line">          dplyr_dt = summarise(Cate_group_dt, sum(Freq)),</span><br><span class="line">          dplyr_df = summarise(Cate_group_df, sum(Freq)),</span><br><span class="line">          replications = <span class="number">100</span>,</span><br><span class="line">          columns=c(<span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;replications&#x27;</span>, <span class="string">&#x27;elapsed&#x27;</span>,<span class="string">&#x27;relative&#x27;</span>, <span class="string">&#x27;user.self&#x27;</span>),</span><br><span class="line">          order=<span class="string">&#x27;relative&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Result for N = 1e4:</span></span><br><span class="line"><span class="comment">#         test replications elapsed relative user.self</span></span><br><span class="line"><span class="comment"># 2     tapply          100   0.093    1.000     0.359</span></span><br><span class="line"><span class="comment"># 1 data_table          100   0.161    1.731     0.642</span></span><br><span class="line"><span class="comment"># 5   dplyr_dt          100   0.217    2.333     0.833</span></span><br><span class="line"><span class="comment"># 6   dplyr_df          100   0.219    2.355     0.219</span></span><br><span class="line"><span class="comment"># 4   plyr_df2          100   0.487    5.237     1.870</span></span><br><span class="line"><span class="comment"># 3   plyr_dt2          100   0.498    5.355     1.914</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Result for N = 1e6:</span></span><br><span class="line"><span class="comment">#         test replications elapsed relative user.self</span></span><br><span class="line"><span class="comment"># 1 data_table           20   0.476    1.000     0.960</span></span><br><span class="line"><span class="comment"># 6   dplyr_df           20   0.491    1.032     0.491</span></span><br><span class="line"><span class="comment"># 5   dplyr_dt           20   0.502    1.055     1.137</span></span><br><span class="line"><span class="comment"># 2     tapply           20   1.416    2.975     1.417</span></span><br><span class="line"><span class="comment"># 3   plyr_dt2           20   3.285    6.901    12.437</span></span><br><span class="line"><span class="comment"># 4   plyr_df2           20   3.292    6.916    12.673</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Result for N = 1e7:</span></span><br><span class="line"><span class="comment">#         test replications elapsed relative user.self</span></span><br><span class="line"><span class="comment"># 1 data_table           20   4.472    1.000     4.427</span></span><br><span class="line"><span class="comment"># 5   dplyr_dt           20   4.520    1.011     4.454</span></span><br><span class="line"><span class="comment"># 6   dplyr_df           20   4.526    1.012     4.460</span></span><br><span class="line"><span class="comment"># 2     tapply           20  14.732    3.294    14.245</span></span><br><span class="line"><span class="comment"># 4   plyr_df2           20  31.481    7.040    48.578</span></span><br><span class="line"><span class="comment"># 3   plyr_dt2           20  31.625    7.072    48.127</span></span><br></pre></td></tr></table></figure>

<p>In the case of summing by two groups, <code>data.table</code> is much more efficient in large size. We also try a <code>Rcpp</code> in summing by groups. Code:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(Rcpp)</span><br><span class="line">sourceCpp(code = <span class="string">&#x27;</span></span><br><span class="line"><span class="string">// [[Rcpp::depends(RcppArmadillo)]]</span></span><br><span class="line"><span class="string">#include &lt;RcppArmadillo.h&gt;</span></span><br><span class="line"><span class="string">using namespace Rcpp;</span></span><br><span class="line"><span class="string">using namespace arma;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">NumericVector group_sum_f(NumericVector Xr, IntegerVector Groupr) &#123;</span></span><br><span class="line"><span class="string">  int n = Xr.size();</span></span><br><span class="line"><span class="string">  colvec X(Xr.begin(), n, false);</span></span><br><span class="line"><span class="string">  ivec Group(Groupr.begin(), n, false);</span></span><br><span class="line"><span class="string">  ivec Group_unique = unique(Group);</span></span><br><span class="line"><span class="string">  int k = Group_unique.size();</span></span><br><span class="line"><span class="string">  colvec result(k);</span></span><br><span class="line"><span class="string">  for(int i = 0; i &lt; k; i++)</span></span><br><span class="line"><span class="string">    result(i) = sum(X.elem(find(Group == Group_unique(i))));</span></span><br><span class="line"><span class="string">  return wrap(result);</span></span><br><span class="line"><span class="string">&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">N = <span class="number">1e4</span>; k = <span class="number">2</span></span><br><span class="line">x = data.frame(Freq=runif(N,<span class="number">0</span>,<span class="number">1</span>),Category=sample(LETTERS[<span class="number">1</span>:k], N, replace = <span class="literal">TRUE</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(data.table)</span><br><span class="line"><span class="keyword">library</span>(dplyr)</span><br><span class="line">x_dt = data.table(x)</span><br><span class="line">setkey(x_dt, Category)</span><br><span class="line">Cate_group_dt = group_by(x_dt, Category)</span><br><span class="line">Cate_group_df = group_by(x_dt, Category)</span><br><span class="line"><span class="keyword">library</span>(rbenchmark)</span><br><span class="line">benchmark(data_table = x_dt[, sum(Freq),by = Category],</span><br><span class="line">          tapply = tapply(x$Freq, x$Category, FUN=sum),</span><br><span class="line">          Rcpp = group_sum_f(x$Freq, x$Category),</span><br><span class="line">          dplyr_dt = summarise(Cate_group_dt, sum(Freq)),</span><br><span class="line">          dplyr_df = summarise(Cate_group_df, sum(Freq)),</span><br><span class="line">          replications = <span class="number">100</span>,</span><br><span class="line">          columns=c(<span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;replications&#x27;</span>, <span class="string">&#x27;elapsed&#x27;</span>,<span class="string">&#x27;relative&#x27;</span>, <span class="string">&#x27;user.self&#x27;</span>),</span><br><span class="line">          order=<span class="string">&#x27;relative&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Result for N = 1e4:</span></span><br><span class="line"><span class="comment">#         test replications elapsed relative user.self</span></span><br><span class="line"><span class="comment"># 3       Rcpp           20   0.005      1.0     0.005</span></span><br><span class="line"><span class="comment"># 2     tapply           20   0.016      3.2     0.016</span></span><br><span class="line"><span class="comment"># 1 data_table           20   0.027      5.4     0.027</span></span><br><span class="line"><span class="comment"># 5   dplyr_df           20   0.035      7.0     0.035</span></span><br><span class="line"><span class="comment"># 4   dplyr_dt           20   0.037      7.4     0.037</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Result for N = 1e6:</span></span><br><span class="line"><span class="comment">#         test replications elapsed relative user.self</span></span><br><span class="line"><span class="comment"># 3       Rcpp           20   0.502    1.000     0.502</span></span><br><span class="line"><span class="comment"># 1 data_table           20   0.616    1.227     0.616</span></span><br><span class="line"><span class="comment"># 5   dplyr_df           20   0.620    1.235     0.620</span></span><br><span class="line"><span class="comment"># 4   dplyr_dt           20   0.628    1.251     0.628</span></span><br><span class="line"><span class="comment"># 2     tapply           20   1.141    2.273     1.142</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Result for N = 1e7:</span></span><br><span class="line"><span class="comment"># #         test replications elapsed relative user.self</span></span><br><span class="line"><span class="comment"># 3       Rcpp           20   5.449    1.000     5.365</span></span><br><span class="line"><span class="comment"># 4   dplyr_dt           20   5.883    1.080     5.789</span></span><br><span class="line"><span class="comment"># 5   dplyr_df           20   5.916    1.086     5.821</span></span><br><span class="line"><span class="comment"># 1 data_table           20   5.967    1.095     5.841</span></span><br><span class="line"><span class="comment"># 2     tapply           20  12.030    2.208    11.603</span></span><br></pre></td></tr></table></figure>

<p>We can see that <code>data.table</code> is compatible with <code>Rcpp</code> and more convenient than <code>Rcpp</code>.</p>
<p>My environment is ubuntu 14.04, R 3.1.1 compiled by intel c++, fortran compiler with MKL. My CPU is <a href="mailto:&#x33;&#x37;&#55;&#48;&#75;&#x40;&#52;&#x2e;&#51;&#71;&#72;&#x7a;">&#x33;&#x37;&#55;&#48;&#75;&#x40;&#52;&#x2e;&#51;&#71;&#72;&#x7a;</a>.</p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>data.table</tag>
      </tags>
  </entry>
  <entry>
    <title>Search Maximum Point by Point</title>
    <url>/posts/201408/2014-08-02-Search-Maximum-Point-by-Point.html</url>
    <content><![CDATA[<p>We have an image data, it is discrete and I want to find the local maximum. I write a Rcpp function for searching maximum point by point.</p>
<a id="more"></a>

<p>I have two strategies to search, one is in circle, another one is in square. Besides, I add a radius parameter to control the search region. Figure 1 shows that there are 34 by 34 points which each point contains a value of height, it searches maximum point by point with an unit circle. Figure 2, 3 and 4 show that searching maximum in circle with radius 2, square with radius 1 and square with radius 2, respectively.</p>
<p><img src="/images/max_search_cr_1.png"><br>Figure 1: Searching in circle with radius 1<br><img src="/images/max_search_cr_2.png"><br>Figure 2: Searching in circle with radius 2<br><img src="/images/max_search_sq_1.png"><br>Figure 3: Searching in square with radius 1<br><img src="/images/max_search_sq_2.png"><br>Figure 4: Searching in square with radius 2</p>
<p>I have three versions for searching maximum point by point. First one rely on Rcpp function completely, second one use sapply and Rcpp function which searching one point and third one use parallel and R function. Code is present as following:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x.range.v = <span class="number">1</span>:<span class="number">300</span></span><br><span class="line">y.range.v = <span class="number">1</span>:<span class="number">300</span></span><br><span class="line">data.m = expand.grid(x.range.v, y.range.v)</span><br><span class="line">data.m[,<span class="number">3</span>] = rnorm(nrow(data.m))</span><br><span class="line"></span><br><span class="line"><span class="comment"># square search</span></span><br><span class="line">sq_search_f = <span class="keyword">function</span>(i, data.m, loc.v, obj, mar)&#123;</span><br><span class="line">  x = data.m[i,loc.v[<span class="number">1</span>]]; y = data.m[i,loc.v[<span class="number">2</span>]]</span><br><span class="line">  near_int = data.m[abs(data.m[,loc.v[<span class="number">1</span>]] - x) &lt;= mar &amp; abs(data.m[,loc.v[<span class="number">2</span>]] - y) &lt;= mar,obj]</span><br><span class="line">  <span class="keyword">if</span>( length(near_int) &gt;= <span class="number">1</span>)&#123;</span><br><span class="line">     all(near_int &lt;= data.m[i,obj])</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">     <span class="literal">FALSE</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(Rcpp)</span><br><span class="line">sourceCpp(code = <span class="string">&#x27;</span></span><br><span class="line"><span class="string">// [[Rcpp::depends(RcppArmadillo)]]</span></span><br><span class="line"><span class="string">#include &lt;RcppArmadillo.h&gt;</span></span><br><span class="line"><span class="string">using namespace Rcpp;</span></span><br><span class="line"><span class="string">using namespace arma;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">uword sq_search_f_cpp_i_f(int i, NumericVector int_mr, NumericVector Xr, NumericVector Yr, double mar) &#123;</span></span><br><span class="line"><span class="string">  int n = Xr.size();</span></span><br><span class="line"><span class="string">  colvec X(Xr.begin(), n, false),</span></span><br><span class="line"><span class="string">         Y(Yr.begin(), n, false),</span></span><br><span class="line"><span class="string">     int_m(int_mr.begin(), n, false);</span></span><br><span class="line"><span class="string">  double x_loc = X( (uword) i), y_loc = Y( (uword) i);</span></span><br><span class="line"><span class="string">  colvec temp_y = Y(find(abs(X - x_loc) &lt;= mar)),</span></span><br><span class="line"><span class="string">         temp_int = int_m(find(abs(X - x_loc) &lt;= mar)),</span></span><br><span class="line"><span class="string">         int_near = temp_int(find(abs(temp_y - y_loc) &lt;= mar));</span></span><br><span class="line"><span class="string">  uword value = (uword) all(int_near &lt;= int_m((uword) i));</span></span><br><span class="line"><span class="string">  return value;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">IntegerVector sq_search_cpp_f(NumericVector int_mr, NumericVector Xr, NumericVector Yr, double mar) &#123;</span></span><br><span class="line"><span class="string">  int n = Xr.size();</span></span><br><span class="line"><span class="string">  ucolvec location_v(n);</span></span><br><span class="line"><span class="string">  for(int i = 0; i &lt; n; i++)</span></span><br><span class="line"><span class="string">    location_v(i) = sq_search_f_cpp_i_f(i, int_mr, Xr, Yr, mar);</span></span><br><span class="line"><span class="string">  return wrap(location_v);</span></span><br><span class="line"><span class="string">&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">mar = <span class="number">1</span></span><br><span class="line"><span class="keyword">library</span>(snowfall)</span><br><span class="line">start.time = Sys.time()</span><br><span class="line">loc1 = sq_search_cpp_f(data.m[,<span class="number">3</span>], data.m[,<span class="number">1</span>], data.m[,<span class="number">2</span>], mar)</span><br><span class="line">Sys.time() - start.time</span><br><span class="line"><span class="comment"># Time difference of 20.32596 secs</span></span><br><span class="line"></span><br><span class="line">start.time = Sys.time()</span><br><span class="line">loc2 = sapply(<span class="number">1</span>:nrow(data.m), <span class="keyword">function</span>(i) sq_search_f_cpp_i_f(i-<span class="number">1</span>, data.m[,<span class="number">3</span>], data.m[,<span class="number">1</span>], data.m[,<span class="number">2</span>], mar))</span><br><span class="line">Sys.time() - start.time</span><br><span class="line"><span class="comment"># Time difference of 1.229692 mins</span></span><br><span class="line"></span><br><span class="line">sfInit(parallel = <span class="literal">TRUE</span>, cpus = <span class="number">8</span>)</span><br><span class="line">sfExport(<span class="string">&quot;data.m&quot;</span>, <span class="string">&quot;sq_search_f&quot;</span>, <span class="string">&quot;mar&quot;</span>)</span><br><span class="line">start.time = Sys.time()</span><br><span class="line">loc3 = sfSapply(<span class="number">1</span>:nrow(data.m), <span class="keyword">function</span>(i) sq_search_f(i, data.m, c(<span class="number">1</span>,<span class="number">2</span>), <span class="number">3</span>, mar))</span><br><span class="line">Sys.time() - start.time</span><br><span class="line">sfStop()</span><br><span class="line"><span class="comment"># Time difference of 1.530629 mins</span></span><br><span class="line"></span><br><span class="line">all.equal(as.vector(loc1), loc2)</span><br><span class="line"><span class="comment"># TRUE</span></span><br><span class="line">all.equal(as.vector(loc1), as.numeric(loc3))</span><br><span class="line"><span class="comment"># TRUE</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># circle search</span></span><br><span class="line">cr_search_f = <span class="keyword">function</span>(i, data.m, loc.v, obj, mar)&#123;</span><br><span class="line">  x = data.m[i,loc.v[<span class="number">1</span>]]; y = data.m[i,loc.v[<span class="number">2</span>]]</span><br><span class="line">  near_int = data.m[(data.m[,loc.v[<span class="number">1</span>]] - x)^<span class="number">2</span>+ (data.m[,loc.v[<span class="number">2</span>]] - y)^<span class="number">2</span> &lt;= mar,obj]</span><br><span class="line">  <span class="keyword">if</span>( length(near_int) &gt;= <span class="number">1</span>)&#123;</span><br><span class="line">     all(near_int &lt;= data.m[i,obj])</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">     <span class="literal">FALSE</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(Rcpp)</span><br><span class="line">sourceCpp(code = <span class="string">&#x27;</span></span><br><span class="line"><span class="string">// [[Rcpp::depends(RcppArmadillo)]]</span></span><br><span class="line"><span class="string">#include &lt;RcppArmadillo.h&gt;</span></span><br><span class="line"><span class="string">using namespace Rcpp;</span></span><br><span class="line"><span class="string">using namespace arma;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">uword cr_search_f_cpp_i_f(int i, NumericVector int_mr, NumericVector Xr, NumericVector Yr, double mar) &#123;</span></span><br><span class="line"><span class="string">  int max_threads_mkl = mkl_get_max_threads();</span></span><br><span class="line"><span class="string">  mkl_set_num_threads(max_threads_mkl);</span></span><br><span class="line"><span class="string">  int n = Xr.size();</span></span><br><span class="line"><span class="string">  colvec X(Xr.begin(), n, false),</span></span><br><span class="line"><span class="string">         Y(Yr.begin(), n, false),</span></span><br><span class="line"><span class="string">     int_m(int_mr.begin(), n, false);</span></span><br><span class="line"><span class="string">  double x_loc = X( (uword) i), y_loc = Y( (uword) i);</span></span><br><span class="line"><span class="string">  colvec int_near = int_m(find(square(X - x_loc) + square(Y - y_loc) &lt;= mar));</span></span><br><span class="line"><span class="string">  uword value = (uword) all(int_near &lt;= int_m((uword) i));</span></span><br><span class="line"><span class="string">  return value;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">IntegerVector cr_search_cpp_f(NumericVector int_mr, NumericVector Xr, NumericVector Yr, double mar) &#123;</span></span><br><span class="line"><span class="string">  int n = Xr.size();</span></span><br><span class="line"><span class="string">  ucolvec location_v(n);</span></span><br><span class="line"><span class="string">  for(int i = 0; i &lt; n; i++)</span></span><br><span class="line"><span class="string">    location_v(i) = cr_search_f_cpp_i_f(i, int_mr, Xr, Yr, mar);</span></span><br><span class="line"><span class="string">  return wrap(location_v);</span></span><br><span class="line"><span class="string">&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">mar = <span class="number">1</span></span><br><span class="line"><span class="keyword">library</span>(snowfall)</span><br><span class="line">start.time = Sys.time()</span><br><span class="line">loc1 = cr_search_cpp_f(data.m[,<span class="number">3</span>], data.m[,<span class="number">1</span>], data.m[,<span class="number">2</span>], mar)</span><br><span class="line">Sys.time() - start.time</span><br><span class="line"><span class="comment"># Time difference of 19.21388 secs</span></span><br><span class="line"></span><br><span class="line">start.time = Sys.time()</span><br><span class="line">loc2 = sapply(<span class="number">1</span>:nrow(data.m), <span class="keyword">function</span>(i) cr_search_f_cpp_i_f(i-<span class="number">1</span>, data.m[,<span class="number">3</span>], data.m[,<span class="number">1</span>], data.m[,<span class="number">2</span>], mar))</span><br><span class="line">Sys.time() - start.time</span><br><span class="line"><span class="comment"># Time difference of 47.72535 secs</span></span><br><span class="line"></span><br><span class="line">sfInit(parallel = <span class="literal">TRUE</span>, cpus = <span class="number">8</span>)</span><br><span class="line">sfExport(<span class="string">&quot;data.m&quot;</span>, <span class="string">&quot;cr_search_f&quot;</span>, <span class="string">&quot;mar&quot;</span>)</span><br><span class="line">start.time = Sys.time()</span><br><span class="line">loc3 = sfSapply(<span class="number">1</span>:nrow(data.m), <span class="keyword">function</span>(i) cr_search_f(i, data.m, c(<span class="number">1</span>,<span class="number">2</span>), <span class="number">3</span>, mar))</span><br><span class="line">Sys.time() - start.time</span><br><span class="line">sfStop()</span><br><span class="line"><span class="comment"># Time difference of 1.055895 mins</span></span><br><span class="line"></span><br><span class="line">all.equal(as.vector(loc1), loc2)</span><br><span class="line"><span class="comment"># TRUE</span></span><br><span class="line">all.equal(as.vector(loc1), as.numeric(loc3))</span><br><span class="line"><span class="comment"># TRUE</span></span><br></pre></td></tr></table></figure>

<p>The above result shows that sapply is not fast enough, write Rcpp function if you can! The speed of paralleled R function (8 threads) is close to Rcpp function with sapply (one threads), the for loop in R is so slow.</p>
<p>My environment is ubuntu 14.04, R 3.1.1 compiled by Intel c++, fortran compiler with MKL. My CPU is <a href="mailto:&#x33;&#55;&#55;&#48;&#75;&#64;&#52;&#46;&#51;&#71;&#72;&#x7a;">&#x33;&#55;&#55;&#48;&#75;&#64;&#52;&#46;&#51;&#71;&#72;&#x7a;</a>.</p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>Rcpp</tag>
        <tag>RcppArmadillo</tag>
      </tags>
  </entry>
  <entry>
    <title>R with GPU performance of gputools</title>
    <url>/posts/201408/2014-08-03-R-with-GPU-performance-of-gputools.html</url>
    <content><![CDATA[<p>I can’t wait to test the performance of R with GPU. I test the performance of gputools and OpenCL.</p>
<a id="more"></a>

<p>The test code is showed in following:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(Rcpp)</span><br><span class="line">sourceCpp(code = <span class="string">&#x27;</span></span><br><span class="line"><span class="string">// [[Rcpp::depends(RcppArmadillo)]]</span></span><br><span class="line"><span class="string">#define ARMA_USE_BLAS</span></span><br><span class="line"><span class="string">#define ARMA_USE_ARPACK</span></span><br><span class="line"><span class="string">#define ARMA_USE_MKL_ALLOC</span></span><br><span class="line"><span class="string">#include &lt;RcppArmadillo.h&gt;</span></span><br><span class="line"><span class="string">using namespace Rcpp;</span></span><br><span class="line"><span class="string">using namespace arma;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">List fastLm_RcppArma_cpp_f(NumericVector yr, S4 Xr) &#123;</span></span><br><span class="line"><span class="string">  uvec dim(as&lt;uvec&gt;(Xr.slot(&quot;Dim&quot;)));</span></span><br><span class="line"><span class="string">  NumericVector Xr_elem = Xr.slot(&quot;x&quot;);</span></span><br><span class="line"><span class="string">  mat X(Xr_elem.begin(), dim(0), dim(1), false);</span></span><br><span class="line"><span class="string">  colvec y(yr.begin(), yr.size(), false);</span></span><br><span class="line"><span class="string">  colvec coef = solve(X, y);</span></span><br><span class="line"><span class="string">  colvec resid = y - X*coef;</span></span><br><span class="line"><span class="string">  double sig2 = as_scalar(resid.t()*resid/(dim(0) - dim(1)));</span></span><br><span class="line"><span class="string">  colvec stderrest = sqrt(sig2 * diagvec( inv(X.t()*X)));</span></span><br><span class="line"><span class="string">  return List::create(Named(&quot;coefficients&quot;) = coef,</span></span><br><span class="line"><span class="string">              Named(&quot;stderr&quot;) = stderrest);</span></span><br><span class="line"><span class="string">&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">sourceCpp(code = <span class="string">&#x27;</span></span><br><span class="line"><span class="string">// [[Rcpp::depends(RcppEigen)]]</span></span><br><span class="line"><span class="string">#define EIGEN_USE_MKL_ALL</span></span><br><span class="line"><span class="string">#include &lt;RcppEigen.h&gt;</span></span><br><span class="line"><span class="string">using namespace Rcpp;</span></span><br><span class="line"><span class="string">using Eigen::Map;</span></span><br><span class="line"><span class="string">using Eigen::MatrixXd;</span></span><br><span class="line"><span class="string">using Eigen::VectorXd;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">List fastLm_RcppEigen_cpp_f(NumericVector yr, NumericMatrix Xr) &#123;</span></span><br><span class="line"><span class="string">  const Map&lt;MatrixXd&gt; X(as&lt;Map&lt;MatrixXd&gt; &gt;(Xr));</span></span><br><span class="line"><span class="string">  const Map&lt;VectorXd&gt; y(as&lt;Map&lt;VectorXd&gt; &gt;(yr));</span></span><br><span class="line"><span class="string">  int n = Xr.nrow(), k = Xr.ncol();</span></span><br><span class="line"><span class="string">  VectorXd coef = (X.transpose() * X).llt().solve(X.transpose() * y.col(0));</span></span><br><span class="line"><span class="string">  VectorXd resid = y - X*coef;</span></span><br><span class="line"><span class="string">  double sig2 = resid.squaredNorm() / (n - k);</span></span><br><span class="line"><span class="string">  VectorXd stderrest = (sig2 * ((X.transpose() * X).inverse()).diagonal()).array().sqrt();</span></span><br><span class="line"><span class="string">  return List::create(Named(&quot;coefficients&quot;) = coef,</span></span><br><span class="line"><span class="string">            Named(&quot;stderr&quot;) = stderrest);</span></span><br><span class="line"><span class="string">&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(Matrix)</span><br><span class="line"><span class="keyword">library</span>(MatrixModels)</span><br><span class="line"></span><br><span class="line">fastLm_RcppArma = <span class="keyword">function</span>(formula, data)&#123;</span><br><span class="line">  inputs = model.Matrix(formula, data, sparse = <span class="literal">FALSE</span>)</span><br><span class="line">  output = data[,as.character(formula[[<span class="number">2</span>]]), with = <span class="literal">FALSE</span>][[<span class="number">1</span>]]</span><br><span class="line">  <span class="keyword">return</span>(fastLm_RcppArma_cpp_f(output, inputs))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fastLm_RcppEigen = <span class="keyword">function</span>(formula, data)&#123;</span><br><span class="line">  inputs = model.matrix(formula, data)</span><br><span class="line">  output = data[,as.character(formula[[<span class="number">2</span>]]), with = <span class="literal">FALSE</span>][[<span class="number">1</span>]]</span><br><span class="line">  <span class="keyword">return</span>(fastLm_RcppEigen_cpp_f(output, inputs))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(data.table)</span><br><span class="line"><span class="keyword">library</span>(dplyr)</span><br><span class="line">N = <span class="number">25000</span></span><br><span class="line">p = <span class="number">1200</span></span><br><span class="line">X = as.matrix(Matrix(rnorm(N*p), ncol = p))</span><br><span class="line">Beta = (<span class="number">10</span>**(sample(seq(-<span class="number">5</span>, <span class="number">1</span>, length = N+p), p)))</span><br><span class="line">y = X %*% Beta + rnorm(N)</span><br><span class="line">dat = data.table(X)</span><br><span class="line">set(dat, j = <span class="string">&quot;y&quot;</span>, value = y)</span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(gputools)</span><br><span class="line"><span class="keyword">library</span>(rbenchmark)</span><br><span class="line">benchmark(result_RcppArma = fastLm_RcppArma(y ~ ., data = dat),</span><br><span class="line">        result_RcppEigen = fastLm_RcppEigen(y ~ ., data = dat),</span><br><span class="line">        result_gpuLM = gpuLm(y ~ ., data = dat),</span><br><span class="line">        result_Rlm = lm(y~., data = dat),</span><br><span class="line">        columns=c(<span class="string">&quot;test&quot;</span>, <span class="string">&quot;replications&quot;</span>,<span class="string">&quot;elapsed&quot;</span>, <span class="string">&quot;relative&quot;</span>),</span><br><span class="line">        replications=<span class="number">10</span>, order=<span class="string">&quot;relative&quot;</span>)</span><br><span class="line"><span class="comment">#               test replications elapsed relative</span></span><br><span class="line"><span class="comment"># 3     result_gpuLM           10  35.137    1.000</span></span><br><span class="line"><span class="comment"># 2 result_RcppEigen           10  37.511    1.068</span></span><br><span class="line"><span class="comment"># 1  result_RcppArma           10  40.170    1.143</span></span><br><span class="line"><span class="comment"># 4       result_Rlm           10 146.959    4.182</span></span><br><span class="line"></span><br><span class="line">sourceCpp(code = <span class="string">&#x27;</span></span><br><span class="line"><span class="string">// [[Rcpp::depends(RcppArmadillo)]]</span></span><br><span class="line"><span class="string">#define ARMA_USE_BLAS</span></span><br><span class="line"><span class="string">#define ARMA_USE_ARPACK</span></span><br><span class="line"><span class="string">#define ARMA_USE_MKL_ALLOC</span></span><br><span class="line"><span class="string">#include &lt;RcppArmadillo.h&gt;</span></span><br><span class="line"><span class="string">using namespace Rcpp;</span></span><br><span class="line"><span class="string">using namespace arma;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">NumericMatrix RcppMatMult_Arma(NumericMatrix Xr, NumericMatrix Yr) &#123;</span></span><br><span class="line"><span class="string">  int m = Xr.nrow(), n = Xr.ncol(), k = Yr.ncol();</span></span><br><span class="line"><span class="string">  if(n != Yr.ncol()) exit(1);</span></span><br><span class="line"><span class="string">  mat X(Xr.begin(), m, n, false);</span></span><br><span class="line"><span class="string">  mat Y(Xr.begin(), n, k, false);</span></span><br><span class="line"><span class="string">  return wrap(X*Y);</span></span><br><span class="line"><span class="string">&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">sourceCpp(code = <span class="string">&#x27;</span></span><br><span class="line"><span class="string">// [[Rcpp::depends(RcppEigen)]]</span></span><br><span class="line"><span class="string">#define EIGEN_USE_MKL_ALL</span></span><br><span class="line"><span class="string">#include &lt;RcppEigen.h&gt;</span></span><br><span class="line"><span class="string">using namespace Rcpp;</span></span><br><span class="line"><span class="string">using Eigen::Map;</span></span><br><span class="line"><span class="string">using Eigen::MatrixXd;</span></span><br><span class="line"><span class="string">using Eigen::VectorXd;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">List RcppMatMult_Eigen(NumericMatrix Xr, NumericMatrix Yr) &#123;</span></span><br><span class="line"><span class="string">  const Map&lt;MatrixXd&gt; X(as&lt;Map&lt;MatrixXd&gt; &gt;(Xr));</span></span><br><span class="line"><span class="string">  const Map&lt;MatrixXd&gt; Y(as&lt;Map&lt;MatrixXd&gt; &gt;(Yr));</span></span><br><span class="line"><span class="string">  return wrap(X*Y);</span></span><br><span class="line"><span class="string">&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">m = <span class="number">10000</span></span><br><span class="line">n = <span class="number">5000</span></span><br><span class="line">k = <span class="number">10000</span></span><br><span class="line">matA = matrix(runif(m*n), m)</span><br><span class="line">matB = matrix(runif(n*k), n)</span><br><span class="line">s = proc.time()</span><br><span class="line">a = matA %*% matB</span><br><span class="line">proc.time() - s</span><br><span class="line"><span class="comment">#   user  system elapsed</span></span><br><span class="line"><span class="comment"># 57.513   0.330  15.525</span></span><br><span class="line">s = proc.time()</span><br><span class="line">a = cpuMatMult(matA, matB) <span class="comment"># same as matA %*% matB</span></span><br><span class="line">proc.time() - s</span><br><span class="line"><span class="comment">#   user  system elapsed</span></span><br><span class="line"><span class="comment"># 56.287   0.252  14.573</span></span><br><span class="line">s = proc.time()</span><br><span class="line">a = gpuMatMult(matA, matB)</span><br><span class="line">proc.time() - s</span><br><span class="line"><span class="comment">#   user  system elapsed</span></span><br><span class="line"><span class="comment">#  6.587   2.381   8.958</span></span><br><span class="line">s = proc.time()</span><br><span class="line">a = RcppMatMult_Arma(matA, matB)</span><br><span class="line">proc.time() - s</span><br><span class="line"><span class="comment"># same BLAS, so the result is the same.</span></span><br><span class="line"><span class="comment">#   user  system elapsed</span></span><br><span class="line"><span class="comment"># 56.763   0.308  14.876</span></span><br><span class="line">s = proc.time()</span><br><span class="line">a = RcppMatMult_Eigen(matA, matB)</span><br><span class="line">proc.time() - s</span><br><span class="line"><span class="comment"># same BLAS, so the result is the same.</span></span><br><span class="line"><span class="comment">#    user  system elapsed</span></span><br><span class="line"><span class="comment"># 123.486   1.766  88.519</span></span><br></pre></td></tr></table></figure>

<p>R with GPU is 2 times faster than R with CPU!! My environment is ubuntu 14.04. My CPU is <a href="mailto:&#x33;&#55;&#55;&#x30;&#75;&#64;&#x34;&#46;&#51;&#71;&#72;&#122;">&#x33;&#55;&#55;&#x30;&#75;&#64;&#x34;&#46;&#51;&#71;&#72;&#122;</a> and GPU is GTX 670. If you have some questions, you can reference following urls:</p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>GPU</tag>
        <tag>ubuntu</tag>
        <tag>cuda</tag>
      </tags>
  </entry>
  <entry>
    <title>R with GPU</title>
    <url>/posts/201408/2014-08-03-R-with-GPU.html</url>
    <content><![CDATA[<p>The GPU computing is very popular since its capability of parallel computing. The environment of ubuntu is adequate to try GPU computing and its setting is easier than in window. I introduce the installation of CUDA, nVidia driver and R packages of GPU.</p>
<a id="more"></a>

<p>First, we go over the installation of CUDA 6.0.</p>
<ol>
<li><p>Download the CUDA 6.0 installer: <a href="https://developer.nvidia.com/cuda-downloads">CUDA Download</a>. In my case, I download the RUN file of Ubuntu 13.04.</p>
</li>
<li><p>Remove the old drive of nVidia:</p>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get purge nvidia</span><br><span class="line">sudo apt-get autoremove nvidia-current</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>Install compatible GCC compiler. If the version of GCC compiler is not below 4.7.3, please install GCC 4.7.3. You can do that in this way:</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:ubuntu-toolchain-r/<span class="built_in">test</span></span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install gcc-4.7 g++-4.7</span><br><span class="line">sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 50</span><br><span class="line">sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.7 10</span><br><span class="line">sudo update-alternatives --config gcc</span><br></pre></td></tr></table></figure>

<p>Choose gcc-4.7 for installing CUDA.</p>
<ol start="3">
<li>Install CUDA 6.0: Press <code>alt+ctrl+F1</code> login tty1 and input following commands:</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo stop lightdm</span><br><span class="line">sudo bash cuda_6.0.37_linux_64.run -driver -toolkit -silent</span><br></pre></td></tr></table></figure>

<p>At begin, I do not install the driver, then it cause I can’t implement the compiled program.</p>
<ol start="4">
<li>Add some environment variables: Use your text editor to edit <code>.bashrc</code> (In my case, it is <code>subl ~/.bashrc</code>.) and add following lines into the files: (Notice whether your installation dictionary is the same as mine.)</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=/usr/<span class="built_in">local</span>/cuda-6.0/bin:<span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=<span class="variable">$LD_LIBRARY_PATH</span>:/usr/<span class="built_in">local</span>/cuda-6.0/lib:/usr/<span class="built_in">local</span>/cuda-6.0/lib64</span><br><span class="line"><span class="built_in">export</span> CUDA_INC_PATH=/usr/<span class="built_in">local</span>/cuda-6.0/include</span><br><span class="line"><span class="built_in">export</span> CUDA_LIB_PATH=/usr/<span class="built_in">local</span>/cuda-6.0/lib64</span><br><span class="line"><span class="built_in">export</span> CUDA_BIN=/usr/<span class="built_in">local</span>/cuda-6.0/bin</span><br><span class="line"><span class="built_in">export</span> CUDA_HOME=/usr/<span class="built_in">local</span>/cuda-6.0</span><br><span class="line"><span class="built_in">export</span> R_INC_PATH=/usr/<span class="built_in">local</span>/lib/R/include</span><br></pre></td></tr></table></figure>

<p>Then you can use CUDA and start to install R package <code>gputools</code>. Besides, if you want <code>opencl</code>, then you need to install <code>opencl-headers</code> (use apt-get) and you can install R package <code>OpenCL</code>. However, I did not install R package <code>WideLM</code> successfully. (Caused by unknown option <code>Wl</code>)</p>
<p>The R package <code>rpud</code> is updated, but it did not update in CRAN. You need go to <a href="http://www.r-tutor.com/content/download">its website</a> to download. Follow its installation note, you can install it successfully. Next time I will try to install the R package <code>HiPLARM</code>.</p>
<p>My environment is ubuntu 14.04. My CPU is <a href="mailto:&#51;&#55;&#55;&#x30;&#75;&#x40;&#52;&#x2e;&#x33;&#71;&#x48;&#122;">&#51;&#55;&#55;&#x30;&#75;&#x40;&#52;&#x2e;&#x33;&#71;&#x48;&#122;</a> and GPU is GTX 670. If you have some questions, you can reference following urls:</p>
<ol>
<li><a href="ttp://thirdwing.github.io/2013/10/06/r-and-gpu/">R and GPUh</a></li>
<li><a href="http://www.r-tutor.com/gpu-computing/cuda-installation/cuda6.0-ubuntu">Installing CUDA Toolkit 6.0 in Ubuntu 12.04 Linux</a></li>
<li><a href="http://askubuntu.com/questions/113291/how-do-i-install-gcc-4-7">How do I install gcc 4.7?</a></li>
<li><a href="http://linuxonmac.wordpress.com/2011/05/24/r-gputools/">R gputools</a></li>
<li><a href="http://www.r-tutor.com/gpu-computing/rpud-installation">rpud</a></li>
</ol>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>GPU</tag>
        <tag>ubuntu</tag>
        <tag>cuda</tag>
      </tags>
  </entry>
  <entry>
    <title>R with GPU performance of HiPLARM</title>
    <url>/posts/201408/2014-08-03-R-with-GPU-performance-of-HiPLARM.html</url>
    <content><![CDATA[<p>This post is to benchmark the performance of HiPLARM and to introduce how to install HiPLARM.</p>
<a id="more"></a>

<p>The performance and test code are showed in following:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(Matrix)</span><br><span class="line">p = <span class="number">6000</span></span><br><span class="line">X = Matrix(rnorm(p**<span class="number">2</span>), p)</span><br><span class="line">Y = Matrix(rnorm(p**<span class="number">2</span>), p)</span><br><span class="line">s = proc.time(); Z = X %*% Y; proc.time() - s</span><br><span class="line"><span class="comment">#   user  system elapsed</span></span><br><span class="line"><span class="comment"># 20.646   0.137   5.193</span></span><br><span class="line">s = proc.time(); Z = solve(X, Y); proc.time() - s</span><br><span class="line"><span class="comment">#   user  system elapsed</span></span><br><span class="line"><span class="comment"># 40.418   0.342  10.741</span></span><br><span class="line">s = proc.time(); Z = crossprod(X, Y); proc.time() - s</span><br><span class="line"><span class="comment">#   user  system elapsed</span></span><br><span class="line"><span class="comment"># 22.706   0.128   5.986</span></span><br><span class="line">s = proc.time(); Z = chol(X %*% t(X)); proc.time() - s</span><br><span class="line"><span class="comment">#   user  system elapsed</span></span><br><span class="line"><span class="comment"># 25.774   0.242   6.934</span></span><br><span class="line">s = proc.time(); Z = solve(t(X) %*% X, X %*% Y); proc.time() - s</span><br><span class="line"><span class="comment">#   user  system elapsed</span></span><br><span class="line"><span class="comment"># 86.842   0.755  23.521</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(HiPLARM)</span><br><span class="line">p = <span class="number">6000</span></span><br><span class="line">X = Matrix(rnorm(p**<span class="number">2</span>), p)</span><br><span class="line">Y = Matrix(rnorm(p**<span class="number">2</span>), p)</span><br><span class="line">s = proc.time(); Z = X %*% Y; proc.time() - s</span><br><span class="line"><span class="comment">#  user  system elapsed</span></span><br><span class="line"><span class="comment"># 2.826   1.031   3.858</span></span><br><span class="line">s = proc.time(); Z = solve(X, Y); proc.time() - s</span><br><span class="line"><span class="comment">#  user  system elapsed</span></span><br><span class="line"><span class="comment"># 4.295   1.343   5.642</span></span><br><span class="line">s = proc.time(); Z = crossprod(X, Y); proc.time() - s</span><br><span class="line"><span class="comment">#  user  system elapsed</span></span><br><span class="line"><span class="comment"># 2.899   1.029   3.931</span></span><br><span class="line">s = proc.time(); Z = chol(X %*% t(X)); proc.time() - s</span><br><span class="line"><span class="comment">#  user  system elapsed</span></span><br><span class="line"><span class="comment"># 4.165   1.333   5.504</span></span><br><span class="line">s = proc.time(); Z = solve(t(X) %*% X, X %*% Y); proc.time() - s</span><br><span class="line"><span class="comment">#   user  system elapsed</span></span><br><span class="line"><span class="comment"># 10.440   3.377  13.825</span></span><br></pre></td></tr></table></figure>

<p>HiPLARM is 1.6 times faster than the R without HiPLARM. I think that it will be much faster if the size of matrix is bigger. Since the memory of my gpu is 2GB, I can’t test bigger size matrix. The tests for smaller size matrix are almost the same because the data movement between host (CPU) and device (GPU). PS: I have ran the <code>benchmark script</code>(found in <a href="http://r.research.att.com/benchmarks/">Simon Urbanek’s</a>), but it is so slow that I do not put it on this post.</p>
<p>I simply introduce how to install <code>HiPLARM</code>. Since my R is compiled by icc and MKL, so I have some trouble in installing it. You can download the auto-installer in <a href="http://www.hiplar.org/download.html">here</a>. I ran the auto-installer with ALTAS (I can’t compile OpenBLAS and I don’t know why.) and it stopped at installing the R package caused by the environment variable. I solve this problem by add following line in the file <code>.bashrc</code>:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=<span class="variable">$LD_LIBRARY_PATH</span>:/home/clarence/Downloads/LALibs/lib</span><br></pre></td></tr></table></figure>

<p>where <code>/home/clarence/Downloads/LALibs/lib</code> is the installation directory of magma, plasma and hwloc. After installation, you should add <code>export R_PLASMA_NUM_THREADS=4</code> into <code>.bashrc</code>. Then you can use it!!</p>
<p>I have tried to compile plasma and magma with icc and MKL, the install script is present in following:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line"></span><br><span class="line">mkdir LALibs</span><br><span class="line">export BLDDIR&#x3D;&#x2F;home&#x2F;clarence&#x2F;Downloads&#x2F;LALibs</span><br><span class="line">cd $BLDDIR</span><br><span class="line">mkdir lib</span><br><span class="line">mkdir include</span><br><span class="line">LIBDIR&#x3D;$BLDDIR&#x2F;lib</span><br><span class="line">INCDIR&#x3D;$BLDDIR&#x2F;include</span><br><span class="line">NUM_PHYS_CPU&#x3D;&#96;cat &#x2F;proc&#x2F;cpuinfo | grep &#39;physical id&#39; | sort | uniq | wc -l&#96;</span><br><span class="line">NUM_CORES&#x3D;&#96;cat &#x2F;proc&#x2F;cpuinfo | grep &#39;cpu cores&#39; | uniq | sed &#39;s&#x2F;[a-z]&#x2F;&#x2F;g&#39; | sed &#39;s&#x2F;:&#x2F;&#x2F;g&#39;&#96;</span><br><span class="line">let TOTAL_CORES&#x3D;$[NUM_PHYS_CPU * NUM_CORES]</span><br><span class="line"></span><br><span class="line">## start install hwloc</span><br><span class="line">wget http:&#x2F;&#x2F;www.open-mpi.org&#x2F;software&#x2F;hwloc&#x2F;v1.9&#x2F;downloads&#x2F;hwloc-1.9.tar.gz</span><br><span class="line">tar -xf hwloc-1.9.tar.gz</span><br><span class="line">cd hwloc-1.9</span><br><span class="line">.&#x2F;configure --prefix&#x3D;&quot;$BLDDIR&quot;</span><br><span class="line">make -j $NUM_CORES</span><br><span class="line">make install</span><br><span class="line">export PKG_CONFIG_PATH&#x3D;$PKG_CONFIG_PATH:$LIBDIR&#x2F;pkgconfig</span><br><span class="line">export LD_LIBRARY_PATH&#x3D;$LD_LIBRARY_PATH:$LIBDIR</span><br><span class="line">cd $BLDDIR</span><br><span class="line"></span><br><span class="line">## start install PLASMA</span><br><span class="line">export OMP_NUM_THREADS&#x3D;1</span><br><span class="line">export MKL_NUM_THREADS&#x3D;1</span><br><span class="line">wget http:&#x2F;&#x2F;icl.cs.utk.edu&#x2F;projectsfiles&#x2F;plasma&#x2F;pubs&#x2F;plasma-installer_2.6.0.tar.gz</span><br><span class="line">tar -xf plasma-installer_2.6.0.tar.gz</span><br><span class="line">cd plasma-installer_2.6.0</span><br><span class="line">.&#x2F;setup.py --prefix&#x3D;&quot;$BLDDIR&quot; --cc&#x3D;icc --fc&#x3D;ifort      \</span><br><span class="line">           --blaslib&#x3D;&quot;-L&#x2F;opt&#x2F;intel&#x2F;mkl&#x2F;lib&#x2F;lib64 -lmkl_intel_lp64 -lmkl_sequential -lmkl_core&quot; \</span><br><span class="line">           --cflags&#x3D;&quot;-O3 -fPIC -I$BLDDIR&#x2F;include&quot; \</span><br><span class="line">           --fflags&#x3D;&quot;-O3 -fPIC&quot; --noopt&#x3D;&quot;-fPIC&quot; \</span><br><span class="line">           --ldflags_c&#x3D;&quot;-I$BLDDIR&#x2F;include&quot;\</span><br><span class="line">           --notesting --downlapc</span><br><span class="line"></span><br><span class="line"># compile shared libraries</span><br><span class="line">cd $LIBDIR</span><br><span class="line">icc -shared -o libplasma.so -Wl,-whole-archive libplasma.a -Wl,-no-whole-archive -L. -lhwloc -llapacke</span><br><span class="line">icc -shared -o libcoreblas.so -Wl,-whole-archive libcoreblas.a -Wl,-no-whole-archive -L. -llapacke</span><br><span class="line">icc -shared -o libquark.so -Wl,-whole-archive libquark.a -Wl,-no-whole-archive</span><br><span class="line">icc -shared -o libcoreblasqw.so -Wl,-whole-archive libcoreblasqw.a -Wl,-no-whole-archive -L. -llapacke</span><br><span class="line">export PKG_CONFIG_PATH&#x3D;$PKG_CONFIG_PATH:$LIBDIR&#x2F;pkgconfig</span><br><span class="line">export PLASMA_NUM_THREADS&#x3D;$TOTAL_CORES</span><br><span class="line">export R_PLASMA_NUM_THREADS&#x3D;$TOTAL_CORES</span><br><span class="line">cd $BLDDIR</span><br><span class="line"></span><br><span class="line">## start install MGMGA</span><br><span class="line">export CUDADIR&#x3D;&#x2F;usr&#x2F;local&#x2F;cuda-6.0</span><br><span class="line">export CUDALIB&#x3D;$CUDADIR&#x2F;lib64</span><br><span class="line">wget http:&#x2F;&#x2F;icl.cs.utk.edu&#x2F;projectsfiles&#x2F;magma&#x2F;downloads&#x2F;magma-1.4.1.tar.gz</span><br><span class="line">tar -xf magma-1.4.1.tar.gz</span><br><span class="line">cd magma-1.4.1</span><br><span class="line"></span><br><span class="line">echo &quot;#include&lt;cuda.h&gt;</span><br><span class="line">#include&lt;cuda_runtime_api.h&gt;</span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">int main() &#123;</span><br><span class="line"></span><br><span class="line">  int deviceCount &#x3D; 0;</span><br><span class="line">  cudaError_t error_id &#x3D; cudaGetDeviceCount(&amp;deviceCount);</span><br><span class="line"></span><br><span class="line">  int dev, driverVersion &#x3D; 0, runtimeVersion &#x3D; 0;</span><br><span class="line">  struct cudaDeviceProp deviceProp;</span><br><span class="line">  int prev &#x3D; 0;</span><br><span class="line"></span><br><span class="line">  for (dev &#x3D; 0; dev &lt; deviceCount; dev++) &#123;</span><br><span class="line">    cudaGetDeviceProperties(&amp;deviceProp, dev);</span><br><span class="line">    if(deviceProp.major &gt; prev)</span><br><span class="line">      prev &#x3D; deviceProp.major;</span><br><span class="line">    &#125;</span><br><span class="line">    if(prev &gt;&#x3D; 2 &amp;&amp; prev &lt; 3)</span><br><span class="line">      printf(\&quot;GPU_TARGET &#x3D; Fermi\&quot;);</span><br><span class="line">    else if(prev &gt;&#x3D; 3)</span><br><span class="line">      printf(\&quot;GPU_TARGET &#x3D; Kepler\&quot;);</span><br><span class="line">    else</span><br><span class="line">      printf(\&quot;GPU_TARGET &#x3D; Tesla\&quot;);</span><br><span class="line"></span><br><span class="line">      return 0;</span><br><span class="line">&#125;</span><br><span class="line">&quot; &gt; getDevice.c</span><br><span class="line">export LD_LIBRARY_PATH&#x3D;$LD_LIBRARY_PATH:$CUDALIB</span><br><span class="line">gcc getDevice.c -I$CUDADIR&#x2F;include -o getDevice -L$CUDALIB -lcudart</span><br><span class="line">.&#x2F;getDevice &gt; make.inc</span><br><span class="line"></span><br><span class="line">echo &quot;</span><br><span class="line">CC        &#x3D; gcc</span><br><span class="line">NVCC      &#x3D; nvcc</span><br><span class="line">FORT      &#x3D; gfortran</span><br><span class="line"></span><br><span class="line">ARCH      &#x3D; ar</span><br><span class="line">ARCHFLAGS &#x3D; cr</span><br><span class="line">RANLIB    &#x3D; ranlib</span><br><span class="line"></span><br><span class="line">OPTS      &#x3D; -fPIC -O3 -DADD_ -Wall -fno-strict-aliasing -fopenmp -DMAGMA_WITH_MKL -DMAGMA_SETAFFINITY</span><br><span class="line">F77OPTS   &#x3D; -fPIC -O3 -DADD_ -Wall</span><br><span class="line">FOPTS     &#x3D; -fPIC -O3 -DADD_ -Wall -x f95-cpp-input</span><br><span class="line">NVOPTS    &#x3D;       -O3 -DADD_ -Xcompiler -fno-strict-aliasing,-fPIC</span><br><span class="line">LDOPTS    &#x3D; -fPIC -fopenmp</span><br><span class="line"></span><br><span class="line">LIB       &#x3D; -lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core -lpthread -lcublas -lcudart -lstdc++ -lm -liomp5 -lgfortran</span><br><span class="line"></span><br><span class="line">-include make.check-mkl</span><br><span class="line">-include make.check-cuda</span><br><span class="line"></span><br><span class="line">LIBDIR    &#x3D; -L$LIBDIR -L$MKLROOT&#x2F;lib&#x2F;intel64 -L$CUDADIR&#x2F;lib64</span><br><span class="line">INC       &#x3D; -I$CUDADIR&#x2F;include -I$MKLROOT&#x2F;include</span><br><span class="line">&quot; &gt;&gt; make.inc</span><br><span class="line">make -j $NUM_CORES shared</span><br><span class="line"></span><br><span class="line">cd lib</span><br><span class="line">cp *.so $LIBDIR</span><br><span class="line">cd ..&#x2F;</span><br><span class="line">cp include&#x2F;*.h $BLDDIR&#x2F;include&#x2F;</span><br><span class="line">cd $BLDDIR</span><br><span class="line"></span><br><span class="line">## install HiPLARM</span><br><span class="line">wget http:&#x2F;&#x2F;www.hiplar.org&#x2F;downloads&#x2F;HiPLARM_0.1.1.tar.gz</span><br><span class="line">R CMD INSTALL --configure-args&#x3D;&quot;--with-lapack&#x3D;-L$MKLROOT&#x2F;lib&#x2F;intel64 --with-plasma-lib&#x3D;&#x2F;home&#x2F;clarence&#x2F;Downloads&#x2F;LALibs --with-cuda-home&#x3D;&#x2F;usr&#x2F;local&#x2F;cuda-6.0 --with-magma-lib&#x3D;&#x2F;home&#x2F;clarence&#x2F;Downloads&#x2F;LALibs&quot; HiPLARM_0.1.1.tar.gz</span><br></pre></td></tr></table></figure>

<p>I have two troubles in compiling magma. First one is failure on compiling magma with icc and success with switching the compiler to gcc. Another trouble is the function <code>lapack_const</code> which is defined in both plasma and magma, so I can’t compile and I use the suggestion on <a href="http://icl.cs.utk.edu/magma/forum/viewtopic.php?f=2&t=961">MAGMA forum</a> to disable the magma-with-plasma routines. To disable the magma-with-plasma routines, you need to comment the line <code>PLASMA = ...</code> in the file <code>Makefile.internal</code> like this:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Use Plasma to compile zgetfl and ztstrf</span></span><br><span class="line"><span class="comment"># PLASMA = $(shell pkg-config --libs plasma 2&gt; /dev/null )</span></span><br></pre></td></tr></table></figure>

<p>My environment is ubuntu 14.04. My CPU is <a href="mailto:&#51;&#55;&#x37;&#48;&#x4b;&#64;&#x34;&#46;&#51;&#71;&#x48;&#x7a;">&#51;&#55;&#x37;&#48;&#x4b;&#64;&#x34;&#46;&#51;&#71;&#x48;&#x7a;</a> and GPU is GTX 670. If you have some questions, you can reference following urls:</p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>GPU</tag>
        <tag>ubuntu</tag>
        <tag>cuda</tag>
        <tag>HiPLARM</tag>
      </tags>
  </entry>
  <entry>
    <title>Tables combining</title>
    <url>/posts/201408/2014-08-20-tables-combining.html</url>
    <content><![CDATA[<p>A benchmark for combine the two data.frames in R.</p>
<a id="more"></a>

<p>There are two tables:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(data.table)</span><br><span class="line"><span class="keyword">library</span>(plyr)</span><br><span class="line"><span class="keyword">library</span>(dplyr)</span><br><span class="line"><span class="keyword">library</span>(magrittr)</span><br><span class="line"><span class="keyword">library</span>(reshape2)</span><br><span class="line">ref_m = data.table(</span><br><span class="line">  <span class="string">&quot;gene_a&quot;</span> = c(<span class="string">&quot;A&quot;</span>, <span class="string">&quot;B&quot;</span>, <span class="string">&quot;C&quot;</span>),</span><br><span class="line">  <span class="string">&quot;Chromosome&quot;</span> = c(<span class="string">&quot;1&quot;</span>, <span class="string">&quot;X&quot;</span>, <span class="string">&quot;2&quot;</span>),</span><br><span class="line">  <span class="string">&quot;gene_start&quot;</span> = c(<span class="number">25000</span>, <span class="number">1000</span>, <span class="number">0</span>),</span><br><span class="line">  <span class="string">&quot;gene_end&quot;</span> = c(<span class="number">50000</span>, <span class="number">2000</span>, <span class="number">800</span>)</span><br><span class="line">) %&gt;% tbl_dt(<span class="literal">FALSE</span>)</span><br><span class="line">ref_m</span><br><span class="line"><span class="comment">#   gene_a Chromosome gene_start gene_end</span></span><br><span class="line"><span class="comment"># 1      A          1      25000    50000</span></span><br><span class="line"><span class="comment"># 2      B          X       1000     2000</span></span><br><span class="line"><span class="comment"># 3      C          2          0      800</span></span><br><span class="line"></span><br><span class="line">dat = data.table(</span><br><span class="line">  <span class="string">&quot;Probe_b&quot;</span> = c(<span class="string">&quot;a1&quot;</span>, <span class="string">&quot;a2&quot;</span>, <span class="string">&quot;a3&quot;</span>, <span class="string">&quot;a4&quot;</span>, <span class="string">&quot;a5&quot;</span>),</span><br><span class="line">  <span class="string">&quot;Chromosome&quot;</span> = c(<span class="string">&quot;2&quot;</span>, <span class="string">&quot;4&quot;</span>, <span class="string">&quot;1&quot;</span>, <span class="string">&quot;X&quot;</span>, <span class="string">&quot;1&quot;</span>),</span><br><span class="line">  <span class="string">&quot;Chr_s&quot;</span> = as.integer(c(<span class="number">175</span>, <span class="number">600</span>, <span class="number">23575</span>, <span class="number">1010</span>, <span class="number">30000</span>)),</span><br><span class="line">  <span class="string">&quot;Chr_e&quot;</span> = as.integer(c(<span class="number">200</span>, <span class="number">625</span>, <span class="number">23600</span>, <span class="number">1035</span>, <span class="number">30025</span>)),</span><br><span class="line">  stringsAsFactors = <span class="literal">FALSE</span></span><br><span class="line">) %&gt;% tbl_dt(<span class="literal">FALSE</span>)</span><br><span class="line">dat</span><br><span class="line"><span class="comment">#   Probe_b  Chromosome Chr_s Chr_e</span></span><br><span class="line"><span class="comment"># 1      a1           2   175   200</span></span><br><span class="line"><span class="comment"># 2      a2           4   600   625</span></span><br><span class="line"><span class="comment"># 3      a3           1 23575 23600</span></span><br><span class="line"><span class="comment"># 4      a4           X  1010  1035</span></span><br><span class="line"><span class="comment"># 5      a5           1 30000 30025</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># we want combine these two tables like following by referring the Chromosome and checking that the range of Chr_s and Chr_e is fallen into range of gene_start and gene_end .</span></span><br><span class="line"><span class="comment">#   gene_a  match</span></span><br><span class="line"><span class="comment"># 1      A  a5</span></span><br><span class="line"><span class="comment"># 2      B  a4</span></span><br><span class="line"><span class="comment"># 3      C  a1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## first method</span></span><br><span class="line">combine_f = <span class="keyword">function</span>(dat, ref_m)&#123;</span><br><span class="line">  check_f = <span class="keyword">function</span>(v, ref_m)&#123;</span><br><span class="line">    loc &lt;- match(v$Chromosome, ref_m$Chromosome, nomatch = <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">if</span>(length(loc) != <span class="number">0</span> &amp;&amp; loc &gt; <span class="number">0</span>)  <span class="comment"># 避免loc出現integer(0)的情況</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span>(v$Chr_s &gt;= ref_m[loc,]$gene_s &amp;&amp; v$Chr_e &lt;= ref_m[loc,]$gene_e)</span><br><span class="line">        <span class="keyword">return</span>(as.character(ref_m[loc,]$gene_a))</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span>(<span class="literal">NA</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="keyword">return</span>(<span class="literal">NA</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  result = rep(<span class="literal">NA</span>, nrow(dat))</span><br><span class="line">  aaply(<span class="number">1</span>:nrow(dat), <span class="number">1</span>, <span class="keyword">function</span>(v) check_f(dat[v,], ref_m)) %&gt;%</span><br><span class="line">    &#123;tapply(as.character(dat$Probe_b), ., c)&#125;</span><br><span class="line">&#125;</span><br><span class="line">combine_f(dat, ref_m)</span><br><span class="line"><span class="comment">#    A    B    C</span></span><br><span class="line"><span class="comment"># &quot;a5&quot; &quot;a4&quot; &quot;a1&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## second method</span></span><br><span class="line">combine_f2 = <span class="keyword">function</span>(dat, ref_m)&#123;</span><br><span class="line">  loc_ref_v = match(dat$Chromosome, ref_m$Chromosome)</span><br><span class="line">  loc_dat_v = loc_ref_v &gt; <span class="number">0</span></span><br><span class="line">  loc_dat_v = loc_dat_v[!is.na(loc_dat_v)]</span><br><span class="line">  loc_ref_v = loc_ref_v[loc_dat_v]</span><br><span class="line">  loc = dat$Chr_s[loc_dat_v] &gt;= ref_m$gene_start[loc_ref_v] &amp;</span><br><span class="line">        dat$Chr_e[loc_dat_v] &lt;= ref_m$gene_end[loc_ref_v]</span><br><span class="line">  tapply(dat$Probe_b[loc_dat_v][loc], ref_m$gene_a[loc_ref_v[loc]], c)</span><br><span class="line">&#125;</span><br><span class="line">combine_f2(dat, ref_m)</span><br><span class="line"><span class="comment">#    A    B    C</span></span><br><span class="line"><span class="comment"># &quot;a5&quot; &quot;a4&quot; &quot;a1&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## third method</span></span><br><span class="line">combine_f3 = <span class="keyword">function</span>(dat, ref_m)&#123;</span><br><span class="line">  merge(dat, ref_m, by=<span class="string">&quot;Chromosome&quot;</span>) %&gt;%</span><br><span class="line">    filter((Chr_s &gt; gene_start) &amp; (Chr_e &lt; gene_end)) %&gt;%</span><br><span class="line">    select(one_of(c(<span class="string">&quot;gene_a&quot;</span>, <span class="string">&quot;Probe_b&quot;</span>))) %&gt;%</span><br><span class="line">    dlply(.(gene_a), <span class="keyword">function</span>(x) x$Probe_b)</span><br><span class="line">&#125;</span><br><span class="line">combine_f3(dat, ref_m)</span><br><span class="line"></span><br><span class="line"><span class="comment">## test the performance</span></span><br><span class="line">N = <span class="number">5000</span>; k = <span class="number">20</span></span><br><span class="line">ref_m = data.table(</span><br><span class="line">  gene_a = LETTERS[<span class="number">1</span>:k],</span><br><span class="line">  Chromosome = sample(c(as.character(<span class="number">1</span>:<span class="number">25</span>), <span class="string">&quot;X&quot;</span>), k),</span><br><span class="line">  gene_start = sample(seq(<span class="number">0</span>, <span class="number">50000</span>, <span class="number">200</span>), k)) %&gt;%</span><br><span class="line">  mutate(gene_end = gene_start+sample(seq(<span class="number">600</span>, <span class="number">15000</span>, <span class="number">200</span>), k)) %&gt;%</span><br><span class="line">  tbl_dt(<span class="literal">FALSE</span>)</span><br><span class="line">dat = data.table(</span><br><span class="line">  Probe_b = paste0(<span class="string">&quot;a&quot;</span>, <span class="number">1</span>:N),</span><br><span class="line">  Chromosome = sample(c(as.character(<span class="number">1</span>:<span class="number">25</span>), <span class="string">&quot;X&quot;</span>), N, replace=<span class="literal">TRUE</span>),</span><br><span class="line">  Chr_s = as.integer(sample(seq(<span class="number">0</span>, <span class="number">50000</span>, <span class="number">5</span>), N, replace=<span class="literal">TRUE</span>))) %&gt;%</span><br><span class="line">  mutate(Chr_e = Chr_s + sample(seq(<span class="number">1000</span>, <span class="number">10000</span>, <span class="number">100</span>), N,</span><br><span class="line">    replace=<span class="literal">TRUE</span>)) %&gt;% tbl_dt(<span class="literal">FALSE</span>)</span><br><span class="line"></span><br><span class="line">all.equal( combine_f(dat, ref_m),  combine_f2(dat, ref_m))</span><br><span class="line"><span class="comment"># TRUE</span></span><br><span class="line">all.equal( combine_f2(dat, ref_m),  combine_f3(dat, ref_m), check.attributes =<span class="literal">FALSE</span>)</span><br><span class="line"><span class="comment"># TRUE</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(rbenchmark)</span><br><span class="line">benchmark(combine_f(dat, ref_m), combine_f2(dat, ref_m),</span><br><span class="line">  combine_f3(dat, ref_m), replications = <span class="number">20</span>,</span><br><span class="line">  columns = c(<span class="string">&quot;test&quot;</span>, <span class="string">&quot;replications&quot;</span>, <span class="string">&quot;elapsed&quot;</span>, <span class="string">&quot;relative&quot;</span>),</span><br><span class="line">  order = <span class="string">&quot;relative&quot;</span>)</span><br><span class="line"><span class="comment">#                     test replications elapsed relative</span></span><br><span class="line"><span class="comment"># 2 combine_f2(dat, ref_m)           20    0.11    1.000</span></span><br><span class="line"><span class="comment"># 3 combine_f3(dat, ref_m)           20    0.38    3.455</span></span><br><span class="line"><span class="comment"># 1  combine_f(dat, ref_m)           20  406.35 3694.091</span></span><br></pre></td></tr></table></figure>

<p>The second method has the best performance, but it is a hard coding. Therefore, I recommend the third method.</p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>data.table</tag>
        <tag>dplyr</tag>
        <tag>reshape2</tag>
        <tag>magrittr</tag>
      </tags>
  </entry>
  <entry>
    <title>Grouping in a fixed time interval</title>
    <url>/posts/201408/2014-09-02-grouping-in-a-fixed-time-interval.html</url>
    <content><![CDATA[<p>There is a data give the Time and ID to find the Session. The value of variable session is given by the <code>Time</code> variable. The session of first time in ID is 1, session is 2 if the different time between its time and the first time of session time is longer than 1 hour, and otherwise session is 1 until next time is out of range of 1 hour.</p>
<a id="more"></a>

<p>For example, the data looks like:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">ID                Time Session</span><br><span class="line"><span class="number">1</span>  <span class="number">2014</span>-<span class="number">08</span>-<span class="number">28</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>       <span class="number">1</span></span><br><span class="line"><span class="number">1</span>  <span class="number">2014</span>-<span class="number">08</span>-<span class="number">28</span> <span class="number">00</span>:<span class="number">23</span>:<span class="number">33</span>       <span class="number">1</span></span><br><span class="line"><span class="number">1</span>  <span class="number">2014</span>-<span class="number">08</span>-<span class="number">28</span> <span class="number">00</span>:<span class="number">59</span>:<span class="number">59</span>       <span class="number">1</span></span><br><span class="line"><span class="number">1</span>  <span class="number">2014</span>-<span class="number">08</span>-<span class="number">28</span> <span class="number">01</span>:<span class="number">02</span>:<span class="number">17</span>       <span class="number">2</span></span><br><span class="line"><span class="number">1</span>  <span class="number">2014</span>-<span class="number">08</span>-<span class="number">28</span> <span class="number">02</span>:<span class="number">30</span>:<span class="number">22</span>       <span class="number">3</span></span><br><span class="line"><span class="number">1</span>  <span class="number">2014</span>-<span class="number">08</span>-<span class="number">28</span> <span class="number">03</span>:<span class="number">29</span>:<span class="number">59</span>       <span class="number">3</span></span><br><span class="line"><span class="number">2</span>  <span class="number">2014</span>-<span class="number">08</span>-<span class="number">28</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">01</span>       <span class="number">1</span></span><br><span class="line"><span class="number">2</span>  <span class="number">2014</span>-<span class="number">08</span>-<span class="number">28</span> <span class="number">03</span>:<span class="number">25</span>:<span class="number">49</span>       <span class="number">2</span></span><br><span class="line"><span class="number">2</span>  <span class="number">2014</span>-<span class="number">08</span>-<span class="number">28</span> <span class="number">03</span>:<span class="number">49</span>:<span class="number">13</span>       <span class="number">2</span></span><br><span class="line"><span class="number">2</span>  <span class="number">2014</span>-<span class="number">08</span>-<span class="number">28</span> <span class="number">04</span>:<span class="number">29</span>:<span class="number">15</span>       <span class="number">3</span></span><br></pre></td></tr></table></figure>

<p>We generate ID and time to test the performance.</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(data.table)</span><br><span class="line"><span class="keyword">library</span>(dplyr)</span><br><span class="line"><span class="keyword">library</span>(magrittr)</span><br><span class="line"><span class="keyword">library</span>(reshape2)</span><br><span class="line">set.seed(<span class="number">100</span>)</span><br><span class="line">n = <span class="number">2100</span></span><br><span class="line">start_time = strptime(<span class="string">&quot;2014-08-01 00:00:00&quot;</span>, <span class="string">&quot;%Y-%m-%d %H:%M:%S&quot;</span>)</span><br><span class="line">dat = data.table(ID = rep(<span class="number">1</span>:n, ceiling(runif(n) * <span class="number">10</span>) + <span class="number">1</span>)) %&gt;%</span><br><span class="line">  mutate(tmp_v = <span class="number">1</span>) %&gt;% group_by(ID) %&gt;%</span><br><span class="line">  mutate(Time = as.POSIXct(sort(start_time +</span><br><span class="line">    round(<span class="number">86400</span> * runif(length(tmp_v)))))) %&gt;%</span><br><span class="line">  select(one_of(c(<span class="string">&quot;ID&quot;</span>, <span class="string">&quot;Time&quot;</span>))) %&gt;% tbl_dt(<span class="literal">FALSE</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># first method</span></span><br><span class="line">split_session_f = <span class="keyword">function</span>(dat)&#123;</span><br><span class="line">Session &lt;- rep(<span class="number">0</span>, nrow(dat))</span><br><span class="line">  id = dat$ID[<span class="number">1</span>]</span><br><span class="line">  session.start = dat$Time[<span class="number">1</span>]</span><br><span class="line">  Session[<span class="number">1</span>] = <span class="number">1</span></span><br><span class="line">  <span class="keyword">for</span> (row <span class="keyword">in</span> <span class="number">2</span>:nrow(dat)) &#123;</span><br><span class="line">    <span class="keyword">if</span> (id != dat$ID[row]) &#123;</span><br><span class="line">      session.start = dat$Time[row]</span><br><span class="line">      Session[row] = <span class="number">1</span></span><br><span class="line">      id = dat$ID[row]</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (as.numeric(dat$Time[row]-session.start, unit=<span class="string">&#x27;hours&#x27;</span>) &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">        Session[row] = Session[row-<span class="number">1</span>] + <span class="number">1</span></span><br><span class="line">        session.start = dat$Time[row]</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        Session[row] = Session[row-<span class="number">1</span>]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  Session</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># second method</span></span><br><span class="line">split_session_sub_f = <span class="keyword">function</span>(time)&#123;</span><br><span class="line">  output = rep(<span class="number">0</span>, length(time))</span><br><span class="line">  start_time_index = <span class="number">1</span>; session_num = <span class="number">1</span></span><br><span class="line">  <span class="keyword">repeat</span></span><br><span class="line">  &#123;</span><br><span class="line">    loc = difftime(time, time[start_time_index], unit=<span class="string">&#x27;hours&#x27;</span>) &lt; <span class="number">1</span> &amp; output == <span class="number">0</span></span><br><span class="line">    output[loc] = session_num</span><br><span class="line">    session_num = session_num + <span class="number">1</span></span><br><span class="line">    start_time_index = start_time_index + sum(loc)</span><br><span class="line">    <span class="keyword">if</span>(start_time_index &gt; length(time))</span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">  &#125;</span><br><span class="line">  output</span><br><span class="line">&#125;</span><br><span class="line">split_session_f2 = <span class="keyword">function</span>(dat)&#123;</span><br><span class="line">  tapply(dat$Time, dat$ID, split_session_sub_f) %&gt;%</span><br><span class="line">    unlist() %&gt;% set_names(<span class="literal">NULL</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># third method</span></span><br><span class="line">split_session_f3 = <span class="keyword">function</span>(dat)&#123;</span><br><span class="line">  dat %&gt;% group_by(ID) %&gt;%</span><br><span class="line">    mutate(Session = split_session_sub_f(Time)) %&gt;%</span><br><span class="line">    use_series(<span class="string">&quot;Session&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">all.equal(split_session_f(dat), split_session_f2(dat))</span><br><span class="line"><span class="comment"># TRUE</span></span><br><span class="line">all.equal(split_session_f2(dat), split_session_f3(dat))</span><br><span class="line"><span class="comment"># TRUE</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## test the performance</span></span><br><span class="line"><span class="keyword">library</span>(rbenchmark)</span><br><span class="line">benchmark(split_session_f(dat), split_session_f2(dat),</span><br><span class="line">  split_session_f3(dat), replications = <span class="number">20</span>,</span><br><span class="line">  columns = c(<span class="string">&quot;test&quot;</span>, <span class="string">&quot;replications&quot;</span>, <span class="string">&quot;elapsed&quot;</span>, <span class="string">&quot;relative&quot;</span>),</span><br><span class="line">  order = <span class="string">&quot;relative&quot;</span>)</span><br><span class="line"><span class="comment">#                    test replications elapsed relative</span></span><br><span class="line"><span class="comment"># 3 split_session_f3(dat)           20   43.43    1.000</span></span><br><span class="line"><span class="comment"># 2 split_session_f2(dat)           20   44.99    1.036</span></span><br><span class="line"><span class="comment"># 1  split_session_f(dat)           20  121.34    2.794</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>data.table</tag>
        <tag>dplyr</tag>
        <tag>reshape2</tag>
        <tag>magrittr</tag>
      </tags>
  </entry>
  <entry>
    <title>Finding unique rows of a matrix in mex</title>
    <url>/posts/201501/2015-01-14-unique-rows-of-matrix-in-mex.html</url>
    <content><![CDATA[<p>This code is to find the unique rows of a matrix. It is based on the quick sort algorithm. Thanks to this, I can use MatLab to implement faster sorting of rows.</p>
<p>I compiled this code with Microsoft Visual Studio 2015 and Intel Parallel Studio XE 2017 and linking to armadillo library.</p>
<a id="more"></a>

<p>I put files in my github (<a href="https://github.com/ChingChuan-Chen/fast-unqiue-rows">Link</a>).</p>
<p>My version of MatLab is 2016a. The test script:</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">A = [<span class="number">9</span> <span class="number">2</span> <span class="number">9</span> <span class="number">5</span>; <span class="number">9</span> <span class="number">2</span> <span class="number">9</span> <span class="number">0</span>; <span class="number">9</span> <span class="number">2</span> <span class="number">9</span> <span class="number">5</span>; <span class="number">9</span> <span class="number">2</span> <span class="number">9</span> <span class="number">0</span>; <span class="number">9</span> <span class="number">2</span> <span class="number">9</span> <span class="number">5</span>];</span><br><span class="line">unique_rows(A)</span><br><span class="line"><span class="comment">%      9     2     9     0</span></span><br><span class="line"><span class="comment">%      9     2     9     5</span></span><br><span class="line"></span><br><span class="line">unique(A, <span class="string">&#x27;rows&#x27;</span>)</span><br><span class="line"><span class="comment">%      9     2     9     0</span></span><br><span class="line"><span class="comment">%      9     2     9     5</span></span><br></pre></td></tr></table></figure>

<p>The compile script:</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">MKLROOT = <span class="string">&#x27;C:\Program Files (x86)\IntelSWTools\compilers_and_libraries_2017.1.143\windows\mkl&#x27;</span>;</span><br><span class="line">ICLLIB = <span class="string">&#x27;C:\Program Files (x86)\IntelSWTools\compilers_and_libraries_2017.1.143\windows\compiler\lib\intel64_win&#x27;</span>;</span><br><span class="line">OPTIMFLAGS = <span class="string">&#x27;OPTIMFLAGS= /O3 /DNDEBUG /QxHost /Qparallel /Qopenmp /Qprec-div- /Qipo /Qinline-calloc&#x27;</span>;</span><br><span class="line">LINKER = <span class="string">&#x27;LINKER=xilink&#x27;</span>;</span><br><span class="line">mex(<span class="string">&#x27;-f&#x27;</span>, <span class="string">&#x27;intel_cpp_17_vs2015.xml&#x27;</span>, <span class="string">&#x27;-v&#x27;</span>, <span class="string">&#x27;-largeArrayDims&#x27;</span>, <span class="string">&#x27;-IC:\armadillo-7.800.2\include&#x27;</span>, ...</span><br><span class="line">    [<span class="string">&#x27;-I&#x27;</span>, MKLROOT, <span class="string">&#x27;\include&#x27;</span>], [<span class="string">&#x27;-L&#x27;</span>, MKLROOT, <span class="string">&#x27;\lib\intel64&#x27;</span>], [<span class="string">&#x27;-L&#x27;</span>, ICLLIB], ...</span><br><span class="line">    <span class="string">&#x27;test_mkl_blas.cpp&#x27;</span>, OPTIMFLAGS, LINKER, <span class="string">&#x27;-lmkl_intel_lp64&#x27;</span>, <span class="string">&#x27;-lmkl_intel_thread&#x27;</span>, ...</span><br><span class="line">    <span class="string">&#x27;-lmkl_core&#x27;</span>, <span class="string">&#x27;-llibiomp5md&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>My mex setup file (intel_cpp_17_vs2015.xml):</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">config</span></span></span><br><span class="line"><span class="tag">    <span class="attr">Name</span>=<span class="string">&quot;Intel C++ Composer XE 2017 with Microsoft Visual Studio 2015&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">ShortName</span>=<span class="string">&quot;IntelCPP15MSVCPP140&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">Manufacturer</span>=<span class="string">&quot;Intel&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">Version</span>=<span class="string">&quot;17.0&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">Language</span>=<span class="string">&quot;C++&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">Priority</span>=<span class="string">&quot;A&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">Location</span>=<span class="string">&quot;$CPPROOT&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Details</span></span></span><br><span class="line"><span class="tag">        <span class="attr">CompilerExecutable</span>=<span class="string">&quot;$COMPILER&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">CompilerDefines</span>=<span class="string">&quot;$COMPDEFINES&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">CompilerFlags</span>=<span class="string">&quot;$COMPFLAGS&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">OptimizationFlags</span>=<span class="string">&quot;$OPTIMFLAGS&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">DebugFlags</span>=<span class="string">&quot;$DEBUGFLAGS&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">IncludeFlags</span>=<span class="string">&quot;$INCLUDE&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">LinkerExecutable</span>=<span class="string">&quot;$LINKER&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">LinkerFlags</span>=<span class="string">&quot;$LINKFLAGS&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">LinkerLibraries</span>=<span class="string">&quot;$LINKLIBS&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">LinkerDebugFlags</span>=<span class="string">&quot;$LINKDEBUGFLAGS&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">LinkerOptimizationFlags</span>=<span class="string">&quot;$LINKOPTIMFLAGS&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">CommandLineShell</span>=<span class="string">&quot;$CPPROOT\bin\iclvars.bat &quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">CommandLineShellArg</span>=<span class="string">&quot;intel64 vs2015&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">CompilerDefineFormatter</span>=<span class="string">&quot;/D%s&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">LinkerLibrarySwitchFormatter</span>=<span class="string">&quot;lib%s.lib;%s.lib&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">LinkerPathFormatter</span>=<span class="string">&quot;/LIBPATH:%s&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">LibrarySearchPath</span>=<span class="string">&quot;$$LIB;$$LIBPATH;$$PATH;$$INCLUDE;$MATLABROOT\extern\lib\$ARCH\microsoft&quot;</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Switch guide: http://msdn.microsoft.com/en-us/library/fwkeyyhe(v=vs.71).aspx --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">vars</span></span></span><br><span class="line"><span class="tag">          <span class="attr">CMDLINE100</span>=<span class="string">&quot;$COMPILER /c $COMPFLAGS $OPTIM $COMPDEFINES $INCLUDE $SRC /Fo$OBJ&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">CMDLINE200</span>=<span class="string">&quot;$LINKER $LINKFLAGS $LINKTYPE $LINKOPTIM $LINKEXPORT $OBJS $LINKLIBS /out:$EXE&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">CMDLINE250</span>=<span class="string">&quot;mt -outputresource:$EXE;2 -manifest $MANIFEST&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">CMDLINE300</span>=<span class="string">&quot;del $EXP $LIB $MANIFEST $ILK&quot;</span></span></span><br><span class="line"><span class="tag"> </span></span><br><span class="line"><span class="tag">          <span class="attr">COMPILER</span>=<span class="string">&quot;icl&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">COMPFLAGS</span>=<span class="string">&quot;/Zp8 /GR /W3 /EHs /nologo /MD&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">COMPDEFINES</span>=<span class="string">&quot;/D_CRT_SECURE_NO_DEPRECATE /D_SCL_SECURE_NO_DEPRECATE /D_SECURE_SCL=0 $MATLABMEX&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">MATLABMEX</span>=<span class="string">&quot; /DMATLAB_MEX_FILE&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">OPTIMFLAGS</span>=<span class="string">&quot;/O2 /DNDEBUG&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">INCLUDE</span>=<span class="string">&quot;-I<span class="symbol">&amp;quot;</span>$MATLABROOT\extern\include<span class="symbol">&amp;quot;</span> -I<span class="symbol">&amp;quot;</span>$MATLABROOT\simulink\include<span class="symbol">&amp;quot;</span>&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">DEBUGFLAGS</span>=<span class="string">&quot;/Z7&quot;</span></span></span><br><span class="line"><span class="tag"> </span></span><br><span class="line"><span class="tag">          <span class="attr">LINKER</span>=<span class="string">&quot;link&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">LINKFLAGS</span>=<span class="string">&quot;/nologo /manifest &quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">LINKTYPE</span>=<span class="string">&quot;/DLL&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">LINKEXPORT</span>=<span class="string">&quot;/EXPORT:mexFunction&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">LINKLIBS</span>=<span class="string">&quot;/LIBPATH:<span class="symbol">&amp;quot;</span>$MATLABROOT\extern\lib\$ARCH\microsoft<span class="symbol">&amp;quot;</span> libmx.lib libmex.lib libmat.lib kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">LINKDEBUGFLAGS</span>=<span class="string">&quot;/debug /PDB:<span class="symbol">&amp;quot;</span>$TEMPNAME$LDEXT.pdb<span class="symbol">&amp;quot;</span>&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">LINKOPTIMFLAGS</span>=<span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="tag"> </span></span><br><span class="line"><span class="tag">          <span class="attr">OBJEXT</span>=<span class="string">&quot;.obj&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">LDEXT</span>=<span class="string">&quot;.mexw64&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">SETENV</span>=<span class="string">&quot;set COMPILER=$COMPILER</span></span></span><br><span class="line"><span class="tag"><span class="string">                set COMPFLAGS=/c $COMPFLAGS $COMPDEFINES $MATLABMEX</span></span></span><br><span class="line"><span class="tag"><span class="string">                set OPTIMFLAGS=$OPTIMFLAGS</span></span></span><br><span class="line"><span class="tag"><span class="string">                set DEBUGFLAGS=$DEBUGFLAGS</span></span></span><br><span class="line"><span class="tag"><span class="string">                set LINKER=$LINKER</span></span></span><br><span class="line"><span class="tag"><span class="string">                set LINKFLAGS=$LINKFLAGS /export:%ENTRYPOINT% $LINKTYPE $LINKLIBS $LINKEXPORT</span></span></span><br><span class="line"><span class="tag"><span class="string">                set LINKDEBUGFLAGS=/debug /PDB:<span class="symbol">&amp;quot;</span>%OUTDIR%%MEX_NAME%$LDEXT.pdb<span class="symbol">&amp;quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="string">                set NAME_OUTPUT=/out:<span class="symbol">&amp;quot;</span>%OUTDIR%%MEX_NAME%%MEX_EXT%<span class="symbol">&amp;quot;</span>&quot;</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">client</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">engine</span></span></span><br><span class="line"><span class="tag">          <span class="attr">LINKLIBS</span>=<span class="string">&quot;$LINKLIBS libeng.lib&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">LINKEXPORT</span>=<span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">LDEXT</span>=<span class="string">&quot;.exe&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">LINKTYPE</span>=<span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">MATLABMEX</span>=<span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">client</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">locationFinder</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- CPPROOT=C:\Program Files (x86)\IntelSWTools\compilers_and_libraries\windows\ --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">CPPROOT</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">and</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">envVarExists</span> <span class="attr">name</span>=<span class="string">&quot;ICPP_COMPILER17&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">fileExists</span> <span class="attr">name</span>=<span class="string">&quot;$$\Bin\intel64\icl.exe&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dirExists</span> <span class="attr">name</span>=<span class="string">&quot;$$\..\..&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">and</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">CPPROOT</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- VCROOT=C:\Program Files (x86)\Microsoft Visual Studio 14.0\ --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">VCROOT</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">and</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">or</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">hklmExists</span> <span class="attr">path</span>=<span class="string">&quot;SOFTWARE\Microsoft\VisualStudio\SxS\VC7&quot;</span> <span class="attr">name</span>=<span class="string">&quot;14.0&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">hkcuExists</span> <span class="attr">path</span>=<span class="string">&quot;SOFTWARE\Microsoft\VisualStudio\SxS\VC7&quot;</span> <span class="attr">name</span>=<span class="string">&quot;14.0&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">hklmExists</span> <span class="attr">path</span>=<span class="string">&quot;SOFTWARE\Wow6432Node\Microsoft\VisualStudio\SxS\VC7&quot;</span> <span class="attr">name</span>=<span class="string">&quot;14.0&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">hkcuExists</span> <span class="attr">path</span>=<span class="string">&quot;SOFTWARE\Wow6432Node\Microsoft\VisualStudio\SxS\VC7&quot;</span> <span class="attr">name</span>=<span class="string">&quot;14.0&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">or</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">fileExists</span> <span class="attr">name</span>=<span class="string">&quot;$$\bin\amd64\cl.exe&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dirExists</span> <span class="attr">name</span>=<span class="string">&quot;$$\..\..&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">and</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">VCROOT</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- SDKROOT=C:\Program Files (x86)\Windows Kits\8.1\ --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">SDKROOT</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">or</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">hklmExists</span> <span class="attr">path</span>=<span class="string">&quot;SOFTWARE\Microsoft\Microsoft SDKs\Windows\v8.1&quot;</span> <span class="attr">name</span>=<span class="string">&quot;InstallationFolder&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">hkcuExists</span> <span class="attr">path</span>=<span class="string">&quot;SOFTWARE\Microsoft\Microsoft SDKs\Windows\v8.1&quot;</span> <span class="attr">name</span>=<span class="string">&quot;InstallationFolder&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">hklmExists</span> <span class="attr">path</span>=<span class="string">&quot;SOFTWARE\Wow6432Node\Microsoft\Microsoft SDKs\Windows\v8.1&quot;</span> <span class="attr">name</span>=<span class="string">&quot;InstallationFolder&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">hkcuExists</span> <span class="attr">path</span>=<span class="string">&quot;SOFTWARE\Wow6432Node\Microsoft\Microsoft SDKs\Windows\v8.1&quot;</span> <span class="attr">name</span>=<span class="string">&quot;InstallationFolder&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">or</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">SDKROOT</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- KITSROOT=C:\Program Files (x86)\Windows Kits\10 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">KITSROOT</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">or</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">hklmExists</span> <span class="attr">path</span>=<span class="string">&quot;SOFTWARE\Microsoft\Windows Kits\Installed Roots&quot;</span> <span class="attr">name</span>=<span class="string">&quot;KitsRoot10&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">hkcuExists</span> <span class="attr">path</span>=<span class="string">&quot;SOFTWARE\Microsoft\Windows Kits\Installed Roots&quot;</span> <span class="attr">name</span>=<span class="string">&quot;KitsRoot10&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">hklmExists</span> <span class="attr">path</span>=<span class="string">&quot;SOFTWARE\Wow6432Node\Microsoft\Windows Kits\Installed Roots&quot;</span> <span class="attr">name</span>=<span class="string">&quot;KitsRoot10&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">hkcuExists</span> <span class="attr">path</span>=<span class="string">&quot;SOFTWARE\Wow6432Node\Microsoft\Windows Kits\Installed Roots&quot;</span> <span class="attr">name</span>=<span class="string">&quot;KitsRoot10&quot;</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">or</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">KITSROOT</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">locationFinder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">env</span></span></span><br><span class="line"><span class="tag">        <span class="attr">PATH</span>=<span class="string">&quot;$CPPROOT\bin\intel64;$VCROOT\bin\amd64;$VCROOT\vcpackages;$VCROOT\..\Common7\IDE;$VCROOT\..\Common7\Tools;$SDKROOT\bin\x64;&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">INCLUDE</span>=<span class="string">&quot;$CPPROOT\compiler\include;$VCROOT\include;$VCROOT\ATLMFC\INCLUDE;$KITSROOT\include\10.0.10240.0\ucrt;$SDKROOT\Include\shared;$SDKROOT\Include\um;$SDKROOT\Include\winrt;$MATLABROOT\extern\include;&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">LIB</span>=<span class="string">&quot;$CPPROOT\compiler\lib\intel64;$VCROOT\lib\amd64;$VCROOT\ATLMFC\Lib\amd64;$KITSROOT\Lib\10.0.10240.0\ucrt\x64;$SDKROOT\Lib\winv6.3\um\x64;$MATLABROOT\lib\win64;&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">LIBPATH</span>=<span class="string">&quot;$CPPROOT\compiler\lib\intel64;$VCROOT\lib\amd64;$VCROOT\atlmfc\lib\amd64;$SDKROOT\Lib\winv6.3\um\x64;$MATLABROOT\extern\lib\win64;&quot;</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">config</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// import header files</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;omp.h&gt;</span></span></span><br><span class="line"><span class="comment">// use armadillo</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ARMA_USE_MKL_ALLOC</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;armadillo&gt;</span></span></span><br><span class="line"><span class="comment">// include matlab mex header files</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;mex.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;matrix.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> arma;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">armaSetPr</span><span class="params">(mxArray *matlabMatrix, <span class="keyword">const</span> Mat&lt;<span class="keyword">double</span>&gt;&amp; armaMatrix)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> *dst_pointer = mxGetPr(matlabMatrix);</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">double</span> *src_pointer = armaMatrix.memptr();</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">memcpy</span>(dst_pointer, src_pointer, <span class="keyword">sizeof</span>(<span class="keyword">double</span>)*armaMatrix.n_elem);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">compare_vec</span><span class="params">(<span class="keyword">const</span> rowvec&amp; mat_row, <span class="keyword">const</span> rowvec&amp; pivot_row)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> v = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (uword i = <span class="number">0</span>; i &lt; mat_row.n_elem; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (mat_row(i) &lt; pivot_row(i))</span><br><span class="line">      v = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (mat_row(i) &gt; pivot_row(i))</span><br><span class="line">      v = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span> (v != <span class="number">0</span>)</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> v;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sortrows_f</span><span class="params">(mat&amp; M, <span class="keyword">const</span> <span class="keyword">int</span> left, <span class="keyword">const</span> <span class="keyword">int</span> right)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (left &lt; right)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">int</span> i = left, j = right;</span><br><span class="line">    uword mid_loc = (uword) (left+right)/<span class="number">2</span>, pivot_loc = mid_loc;</span><br><span class="line">    <span class="keyword">if</span> (right - left &gt; <span class="number">5</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      uvec sortIndex = stable_sort_index(M.col(<span class="number">0</span>).subvec(mid_loc<span class="number">-2</span>, mid_loc+<span class="number">2</span>));</span><br><span class="line">      pivot_loc = as_scalar(find(sortIndex == <span class="number">2</span>)) + mid_loc - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    rowvec pivot_row = M.row(pivot_loc);</span><br><span class="line">    <span class="keyword">while</span> (i &lt;= j)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">while</span> (compare_vec(M.row( (uword) i), pivot_row) == <span class="number">1</span>)</span><br><span class="line">        i++;</span><br><span class="line">      <span class="keyword">while</span> (compare_vec(M.row( (uword) j), pivot_row) == <span class="number">-1</span>)</span><br><span class="line">        j--;</span><br><span class="line">      <span class="keyword">if</span> (i &lt;= j)</span><br><span class="line">      &#123;</span><br><span class="line">        M.swap_rows((uword) i, (uword) j);</span><br><span class="line">        i++;</span><br><span class="line">        j--;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (j &gt; <span class="number">0</span>)</span><br><span class="line">      sortrows_f(M, left, j);</span><br><span class="line">    <span class="keyword">if</span> (i &lt; (<span class="keyword">int</span>) M.n_rows - <span class="number">1</span>)</span><br><span class="line">      sortrows_f(M, i, right);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mexFunction</span><span class="params">(<span class="keyword">int</span> nlhs, mxArray *plhs[], <span class="keyword">int</span> nrhs, <span class="keyword">const</span> mxArray *prhs[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    arma_rng::set_seed_random();</span><br><span class="line">    <span class="keyword">int</span> max_threads_mkl = mkl_get_max_threads();</span><br><span class="line">    mkl_set_num_threads(max_threads_mkl);</span><br><span class="line"></span><br><span class="line">    mat x = Mat&lt;<span class="keyword">double</span>&gt;(mxGetPr(prhs[<span class="number">0</span>]), (uword) mxGetM(prhs[<span class="number">0</span>]), (uword) mxGetN(prhs[<span class="number">0</span>]), <span class="literal">false</span>, <span class="literal">true</span>);</span><br><span class="line">    sortrows_f(x, <span class="number">0</span>, x.n_rows - <span class="number">1</span>);</span><br><span class="line">    </span><br><span class="line">    uvec unique_v = join_cols(ones&lt;uvec&gt;(<span class="number">1</span>), any(x.rows(<span class="number">0</span>, x.n_rows<span class="number">-2</span>) != x.rows(<span class="number">1</span>, x.n_rows<span class="number">-1</span>), <span class="number">1</span>));</span><br><span class="line">    mat output = x.rows(find(unique_v));</span><br><span class="line">    plhs[<span class="number">0</span>] = mxCreateDoubleMatrix(output.n_rows, output.n_cols, mxREAL);</span><br><span class="line">    armaSetPr(plhs[<span class="number">0</span>], output);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>MatLab</category>
      </categories>
      <tags>
        <tag>Intel C++</tag>
        <tag>MatLab</tag>
        <tag>mex</tag>
        <tag>unique row</tag>
      </tags>
  </entry>
  <entry>
    <title>Implementation for summing a list of matrices</title>
    <url>/posts/201501/2015-01-18-Implementation-for-summing-a-list-of-matrices.html</url>
    <content><![CDATA[<p>Usually, we have to sum a list of matrices, I introduce several ways to do that.</p>
<a id="more"></a>

<p>In my test, <code>Reduce</code> is the most easy and fast to do this, but it need a lot of memory. A function written in <code>Rcpp</code> is the fastest way to do. But there is a requirement that you have learned C++. Besides above two methods, the naive method by using <code>for</code> is not so slow, it is also a good option.</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Aware that this setting require your memory to be large than 6GB. Otherwise, your computer will be out of memory and maybe shut down. If this happens or not enough memory, please change the `mat_size` or `length_list`.</span></span><br><span class="line"></span><br><span class="line">length_list = <span class="number">30</span></span><br><span class="line">mat_size = c(<span class="number">3000</span>, <span class="number">3000</span>)</span><br><span class="line"></span><br><span class="line">mat = matrix(rnorm(prod(mat_size)), mat_size[<span class="number">1</span>], mat_size[<span class="number">2</span>])</span><br><span class="line">mat.list = lapply(<span class="number">1</span>:length_list, <span class="keyword">function</span>(i) mat)</span><br><span class="line"></span><br><span class="line">res1 = <span class="keyword">function</span>()&#123;</span><br><span class="line">  mat_sum = matrix(rep(<span class="number">0</span>, prod(mat_size)), mat_size[<span class="number">1</span>], mat_size[<span class="number">2</span>])</span><br><span class="line">  <span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span>:length_list)&#123;</span><br><span class="line">    mat_sum = mat_sum + mat.list[[i]]</span><br><span class="line">  &#125;</span><br><span class="line">  mat_sum</span><br><span class="line">&#125;</span><br><span class="line">res2 = <span class="keyword">function</span>() Reduce(<span class="string">&#x27;+&#x27;</span>, mat.list)</span><br><span class="line">res3 = <span class="keyword">function</span>() matrix(rowSums(matrix(unlist(mat.list), nrow=prod(mat_size))), nrow=mat_size[<span class="number">1</span>])</span><br><span class="line">res4 = <span class="keyword">function</span>() matrix(colSums(do.call(rbind, lapply(mat.list, as.vector))), nrow=mat_size[<span class="number">1</span>])</span><br><span class="line">res5 = <span class="keyword">function</span>() matrix(rowSums(do.call(cbind, lapply(mat.list, as.vector))), nrow=mat_size[<span class="number">1</span>])</span><br><span class="line"><span class="keyword">library</span>(Rcpp)</span><br><span class="line"><span class="keyword">library</span>(RcppArmadillo)</span><br><span class="line"><span class="keyword">library</span>(inline)</span><br><span class="line">sourceCpp(code = <span class="string">&#x27;</span></span><br><span class="line"><span class="string">// [[Rcpp::depends(RcppArmadillo)]]</span></span><br><span class="line"><span class="string">#include &lt;RcppArmadillo.h&gt;</span></span><br><span class="line"><span class="string">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="string">using namespace Rcpp;</span></span><br><span class="line"><span class="string">using namespace arma;</span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">mat list_mat_sum_f(List data_list)&#123;</span></span><br><span class="line"><span class="string">  int n = data_list.size();</span></span><br><span class="line"><span class="string">  SEXP mat1 = data_list[0];</span></span><br><span class="line"><span class="string">  NumericMatrix mat1_rmat(mat1);</span></span><br><span class="line"><span class="string">  mat result_mat(mat1_rmat.begin(), mat1_rmat.nrow(), mat1_rmat.ncol());</span></span><br><span class="line"><span class="string">  for(int i = 1; i &lt; n; i++)</span></span><br><span class="line"><span class="string">  &#123;</span></span><br><span class="line"><span class="string">    SEXP tmp_m = data_list[i];</span></span><br><span class="line"><span class="string">    NumericMatrix data_m(tmp_m);</span></span><br><span class="line"><span class="string">  mat working_m(data_m.begin(), data_m.nrow(), data_m.ncol(), false);</span></span><br><span class="line"><span class="string">    result_mat += working_m;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  return result_mat;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span>)</span><br><span class="line">res6 = <span class="keyword">function</span>() list_mat_sum_f(mat.list)</span><br><span class="line"></span><br><span class="line"><span class="comment"># cmpfun</span></span><br><span class="line"><span class="keyword">library</span>(compiler)</span><br><span class="line">res1_cmp = cmpfun(res1)</span><br><span class="line">res2_cmp = cmpfun(res2)</span><br><span class="line">res3_cmp = cmpfun(res3)</span><br><span class="line">res4_cmp = cmpfun(res4)</span><br><span class="line">res5_cmp = cmpfun(res5)</span><br><span class="line"></span><br><span class="line">all.equal(tmp &lt;- res1(), res2())</span><br><span class="line"><span class="comment"># TRUE</span></span><br><span class="line">all.equal(tmp, res3())</span><br><span class="line"><span class="comment"># TRUE</span></span><br><span class="line">all.equal(tmp, res4())</span><br><span class="line"><span class="comment"># TRUE</span></span><br><span class="line">all.equal(tmp, res5())</span><br><span class="line"><span class="comment"># TRUE</span></span><br><span class="line">all.equal(tmp, res6())</span><br><span class="line"><span class="comment"># TRUE</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(rbenchmark)</span><br><span class="line">benchmark(res1(), res2(), res3(), res4(), res5(), res6(), res1_cmp(), res2_cmp(),</span><br><span class="line">  res3_cmp(), res4_cmp(), res5_cmp(), replications = <span class="number">20</span>,  order=<span class="string">&#x27;relative&#x27;</span>,</span><br><span class="line">  columns=c(<span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;replications&#x27;</span>, <span class="string">&#x27;elapsed&#x27;</span>,<span class="string">&#x27;relative&#x27;</span>, <span class="string">&#x27;user.self&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#          test replications elapsed relative user.self</span></span><br><span class="line"><span class="comment"># 6      res6()           20    6.49    1.000      6.13</span></span><br><span class="line"><span class="comment"># 2      res2()           20   15.58    2.401      8.45</span></span><br><span class="line"><span class="comment"># 8  res2_cmp()           20   16.19    2.495      8.61</span></span><br><span class="line"><span class="comment"># 1      res1()           20   18.44    2.841     10.61</span></span><br><span class="line"><span class="comment"># 7  res1_cmp()           20   19.33    2.978     11.15</span></span><br><span class="line"><span class="comment"># 5      res5()           20   56.60    8.721     40.24</span></span><br><span class="line"><span class="comment"># 11 res5_cmp()           20   56.79    8.750     40.36</span></span><br><span class="line"><span class="comment"># 4      res4()           20   70.48   10.860     54.63</span></span><br><span class="line"><span class="comment"># 10 res4_cmp()           20   70.53   10.867     55.17</span></span><br><span class="line"><span class="comment"># 3      res3()           20   92.87   14.310     76.21</span></span><br><span class="line"><span class="comment"># 9  res3_cmp()           20   93.74   14.444     77.19</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># length_list = 60</span></span><br><span class="line"><span class="comment"># mat_size = c(3000, 3000)</span></span><br><span class="line"><span class="comment"># benchmark(res2(), res6(), replications = 20, columns=c(&#x27;test&#x27;, &#x27;replications&#x27;, &#x27;elapsed&#x27;,&#x27;relative&#x27;, &#x27;user.self&#x27;),  order=&#x27;relative&#x27;)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#     test replications elapsed relative user.self</span></span><br><span class="line"><span class="comment"># 2 res6()           20   12.02    1.000     11.73</span></span><br><span class="line"><span class="comment"># 1 res2()           20   31.66    2.634     16.44</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>Rcpp</tag>
        <tag>RcppArmadillo</tag>
        <tag>Reduce</tag>
        <tag>do.call</tag>
      </tags>
  </entry>
  <entry>
    <title>Faster R in windows</title>
    <url>/posts/201502/2015-02-12-Faster-R-in-windows.html</url>
    <content><![CDATA[<p>R的BLAS庫效率不彰，在linux上可以透過更換成openBLAS來加速，或是compiled with intel MKL，在windows上compile R是一個痛苦的過程。</p>
<p>因此，有人提供這方面的資源，最有名的就是Revolution，Revolution是compiled with intel MKL，但是要錢。但是天無絕人之路，總是有其他辦法的。</p>
<a id="more"></a>

<ol>
<li>用Revolution R Open，你可以在<a href="http://www.revolutionanalytics.com/revolution-r-open">官方網站</a>下載到。</li>
</ol>
<p>1-2.</p>
<p>如果討厭RRO的猴子圖案，可以把RRO/bin/x64中的<code>libiomp5md.dll</code>, <code>RBlas.dll</code>, <code>Rlapack.dll</code>這三個檔案複製到R/bin/x64取代原本的檔案。</p>
<ol start="2">
<li><p>更換BLAS庫，網路上有人提供GotoBLAS2編譯的RBlas.dll，<a href="http://prs.ism.ac.jp/~nakama/SurviveGotoBLAS2/binary/windows/x64/">連結在此</a>，win32的部分，可以參考<a href="http://cran.r-project.org/bin/windows/contrib/ATLAS/">CRAN</a>，下載相對應CPU的<code>RBlas.dll</code>然後替換掉R/bin/x64 (or i386)的<code>RBlas.dll</code>即可享受快速的BLAS帶來的效能。</p>
</li>
<li><p>至於OpenBLAS的部分則參考<a href="http://www.douban.com/note/296114898/?start=0&post=ok#last">此連結</a>，這個方法比較複雜一點。</p>
</li>
</ol>
<p>總結：個人測試這三個BLAS都差不多快，不會差太多，自己選擇喜歡的使用即可。但是有人回報用第三個方案常常會導致R崩潰，可能是因為沒有經過R的編譯之緣故。</p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>BLAS</tag>
        <tag>Revolution R Open</tag>
      </tags>
  </entry>
  <entry>
    <title>利用windows batch快速複製excel檔案(逐月)，並在excel依檔名變更日期</title>
    <url>/posts/201502/2015-02-20-excel-and-winbash.html</url>
    <content><![CDATA[<p>寫了一個windows batch 去複製檔案<del>~</del></p>
<p>緣由：<br>這個單位每天都要用excel做日報表<br>一般作法是複製改裡面的日期，一次做大概半年用<br>這種事情相當耗時…</p>
<a id="more"></a>

<p>改進方式：</p>
<ol>
<li>EXCEL可以根據呼叫該檔檔名，根據該檔檔名去變動日期<br>EX: 1040216日報表.xls 裡面日期會顯示 104年02月16日<br>EXCEL指令：</li>
</ol>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">=CONCATENATE( LEFT(MID(CELL(&quot;filename&quot;), SEARCH(&quot;[&quot;,CELL(&quot;filename&quot;))+<span class="number">1</span>,</span><br><span class="line">   SEARCH(&quot;]&quot;,CELL(&quot;filename&quot;)) - SEARCH(&quot;[&quot;,CELL(&quot;filename&quot;))-<span class="number">1</span>), <span class="number">3</span>), &quot;年&quot;,</span><br><span class="line">  RIGHT(LEFT(MID(CELL(&quot;filename&quot;), SEARCH(&quot;[&quot;,CELL(&quot;filename&quot;)) + <span class="number">1</span>,</span><br><span class="line">  SEARCH(&quot;]&quot;,CELL(&quot;filename&quot;))-SEARCH(&quot;[&quot;,CELL(&quot;filename&quot;))-<span class="number">1</span>), <span class="number">5</span>),<span class="number">2</span>), &quot;月&quot;,</span><br><span class="line">  RIGHT(LEFT(MID(CELL(&quot;filename&quot;),SEARCH(&quot;[&quot;,CELL(&quot;filename&quot;)) + <span class="number">1</span>,</span><br><span class="line">    SEARCH(&quot;]&quot;,CELL(&quot;filename&quot;))-SEARCH(&quot;[&quot;,CELL(&quot;filename&quot;))-<span class="number">1</span>), <span class="number">7</span>),<span class="number">2</span>), &quot;日&quot;)</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>BAT檔案做COPY，自動根據月份做判斷複製相對應的份數，並且改成適當的檔名<br>母檔：YYYMMDD*<strong>.xls<br>複製成 1040201**<em>.xls 到 1040228</em></strong>.xls</li>
</ol>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">Echo</span> Off</span><br><span class="line"><span class="built_in">set</span> &quot;year=<span class="number">1990</span>&quot;</span><br><span class="line"><span class="built_in">set</span> &quot;month=<span class="number">01</span>&quot;</span><br><span class="line"><span class="keyword">if</span> <span class="variable">%month%</span> == <span class="number">01</span> <span class="keyword">goto</span> d31</span><br><span class="line"><span class="keyword">if</span> <span class="variable">%month%</span> == <span class="number">02</span> <span class="keyword">goto</span> d28</span><br><span class="line"><span class="keyword">if</span> <span class="variable">%month%</span> == <span class="number">03</span> <span class="keyword">goto</span> d31</span><br><span class="line"><span class="keyword">if</span> <span class="variable">%month%</span> == <span class="number">04</span> <span class="keyword">goto</span> d30</span><br><span class="line"><span class="keyword">if</span> <span class="variable">%month%</span> == <span class="number">05</span> <span class="keyword">goto</span> d31</span><br><span class="line"><span class="keyword">if</span> <span class="variable">%month%</span> == <span class="number">06</span> <span class="keyword">goto</span> d30</span><br><span class="line"><span class="keyword">if</span> <span class="variable">%month%</span> == <span class="number">07</span> <span class="keyword">goto</span> d31</span><br><span class="line"><span class="keyword">if</span> <span class="variable">%month%</span> == <span class="number">08</span> <span class="keyword">goto</span> d31</span><br><span class="line"><span class="keyword">if</span> <span class="variable">%month%</span> == <span class="number">09</span> <span class="keyword">goto</span> d30</span><br><span class="line"><span class="keyword">if</span> <span class="variable">%month%</span> == <span class="number">10</span> <span class="keyword">goto</span> d31</span><br><span class="line"><span class="keyword">if</span> <span class="variable">%month%</span> == <span class="number">11</span> <span class="keyword">goto</span> d30</span><br><span class="line"><span class="keyword">if</span> <span class="variable">%month%</span> == <span class="number">12</span> <span class="keyword">goto</span> d31</span><br><span class="line"></span><br><span class="line">:d31</span><br><span class="line"><span class="keyword">for</span> /d <span class="variable">%%i</span> <span class="keyword">IN</span> (<span class="number">0</span> <span class="number">1</span> <span class="number">2</span>) <span class="keyword">DO</span> (</span><br><span class="line">        <span class="keyword">for</span> <span class="variable">%%j</span> <span class="keyword">IN</span> (<span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span>) <span class="keyword">DO</span> (</span><br><span class="line">        <span class="built_in">copy</span> &quot;YYYYMMDD測試檔案.xls&quot; &quot;<span class="variable">%year%</span><span class="variable">%month%</span><span class="variable">%%i</span><span class="variable">%%j</span>測試檔案.xls&quot;</span><br><span class="line">        )</span><br><span class="line">)</span><br><span class="line"><span class="built_in">del</span> &quot;<span class="variable">%year%</span><span class="variable">%month%</span><span class="number">00</span>測試檔案.xls&quot;</span><br><span class="line"><span class="built_in">copy</span> &quot;YYYYMMDD測試檔案.xls&quot; &quot;<span class="variable">%year%</span><span class="variable">%month%</span><span class="number">30</span>測試檔案.xls&quot;</span><br><span class="line"><span class="built_in">copy</span> &quot;YYYYMMDD測試檔案.xls&quot; &quot;<span class="variable">%year%</span><span class="variable">%month%</span><span class="number">31</span>測試檔案.xls&quot;</span><br><span class="line"></span><br><span class="line">:d30</span><br><span class="line"><span class="keyword">for</span> /d <span class="variable">%%i</span> <span class="keyword">IN</span> (<span class="number">0</span> <span class="number">1</span> <span class="number">2</span>) <span class="keyword">DO</span> (</span><br><span class="line">        <span class="keyword">for</span> <span class="variable">%%j</span> <span class="keyword">IN</span> (<span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span>) <span class="keyword">DO</span> (</span><br><span class="line">        <span class="built_in">copy</span> &quot;YYYYMMDD測試檔案.xls&quot; &quot;<span class="variable">%year%</span><span class="variable">%month%</span><span class="variable">%%i</span><span class="variable">%%j</span>測試檔案.xls&quot;</span><br><span class="line">        )</span><br><span class="line">)</span><br><span class="line"><span class="built_in">del</span> &quot;<span class="variable">%year%</span><span class="variable">%month%</span><span class="number">00</span>測試檔案.xls&quot;</span><br><span class="line"><span class="built_in">copy</span> &quot;YYYYMMDD測試檔案.xls&quot; &quot;<span class="variable">%year%</span><span class="variable">%month%</span><span class="number">30</span>測試檔案.xls&quot;</span><br><span class="line"></span><br><span class="line">:d28</span><br><span class="line"><span class="keyword">for</span> /d <span class="variable">%%i</span> <span class="keyword">IN</span> (<span class="number">0</span> <span class="number">1</span> <span class="number">2</span>) <span class="keyword">DO</span> (</span><br><span class="line">        <span class="keyword">for</span> <span class="variable">%%j</span> <span class="keyword">IN</span> (<span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span>) <span class="keyword">DO</span> (</span><br><span class="line">        <span class="built_in">copy</span> &quot;YYYYMMDD測試檔案.xls&quot; &quot;<span class="variable">%year%</span><span class="variable">%month%</span><span class="variable">%%i</span><span class="variable">%%j</span>測試檔案.xls&quot;</span><br><span class="line">        )</span><br><span class="line">)</span><br><span class="line"><span class="built_in">del</span> &quot;<span class="variable">%year%</span><span class="variable">%month%</span><span class="number">00</span>測試檔案.xls&quot;</span><br><span class="line"><span class="built_in">del</span> &quot;<span class="variable">%year%</span><span class="variable">%month%</span><span class="number">29</span>測試檔案.xls&quot;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>windows bat</category>
      </categories>
      <tags>
        <tag>windows bat</tag>
        <tag>excel</tag>
        <tag>copy</tag>
      </tags>
  </entry>
  <entry>
    <title>Parsing html page with javascript</title>
    <url>/posts/201502/2015-02-15-pasrsing-html-with-javascript.html</url>
    <content><![CDATA[<p>Here is a demonstration to grab lottery number by using RSelenium. Since RCurl cannot parse the table produced by javascript, we need to construct a server to interpret javascript and grab the information we need. The tool of building server is RSelenium. It is simple to generate the html page by javascript, then we can access the table we want.</p>
<a id="more"></a>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(RCurl)</span><br><span class="line"><span class="keyword">library</span>(XML)</span><br><span class="line"><span class="keyword">library</span>(RSelenium)</span><br><span class="line"><span class="comment"># RSelenium::checkForServer()</span></span><br><span class="line"><span class="keyword">library</span>(data.table)</span><br><span class="line"><span class="keyword">library</span>(dplyr)</span><br><span class="line"><span class="keyword">library</span>(magrittr)</span><br><span class="line"></span><br><span class="line"><span class="comment">## Access Data</span></span><br><span class="line">readLotteryHistory = <span class="keyword">function</span>(year)&#123;</span><br><span class="line">        lottery_url = paste0(<span class="string">&quot;http://www.cpzhan.com/lotto649/all-results?year=&quot;</span>, year)</span><br><span class="line">        remDr$navigate(lottery_url)</span><br><span class="line">        webElem &lt;- remDr$findElement(using = <span class="string">&#x27;class name&#x27;</span>, value = <span class="string">&quot;mytable&quot;</span>)</span><br><span class="line">        tblSource = webElem$getElementAttribute(<span class="string">&quot;outerHTML&quot;</span>)[[<span class="number">1</span>]]</span><br><span class="line">        tables = readHTMLTable(tblSource)</span><br><span class="line">        tables</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">year_today = year(Sys.Date())</span><br><span class="line">RSelenium::startServer()</span><br><span class="line">remDr = RSelenium::remoteDriver()</span><br><span class="line">remDr$open()</span><br><span class="line">lottery = <span class="number">2004</span>:year_today %&gt;% sapply(<span class="keyword">function</span>(year) readLotteryHistory(year)) %&gt;% rbindlist(.)</span><br><span class="line">remDr$close()</span><br><span class="line">remDr$closeServer()</span><br><span class="line">names_lottery = c(<span class="string">&quot;year&quot;</span>, <span class="string">&quot;number&quot;</span>, <span class="string">&quot;date&quot;</span>, <span class="string">&quot;ball_1&quot;</span>, <span class="string">&quot;ball_2&quot;</span>, <span class="string">&quot;ball_3&quot;</span>, <span class="string">&quot;ball_4&quot;</span>, <span class="string">&quot;ball_5&quot;</span>, <span class="string">&quot;ball_6&quot;</span>, <span class="string">&quot;ball_s&quot;</span>)</span><br><span class="line">date_name = c(<span class="string">&quot;year&quot;</span>, <span class="string">&quot;month&quot;</span>, <span class="string">&quot;day&quot;</span>)</span><br><span class="line">lottery = lottery %&gt;% setnames(old = names_lottery) %&gt;% .$date %&gt;%</span><br><span class="line">                    as.POSIXct(.) %&gt;% sapply(<span class="keyword">function</span>(x) c(year(x), month(x), mday(x))) %&gt;%</span><br><span class="line">                    t() %&gt;% data.table() %&gt;% setnames(old = date_name) %&gt;% cbind(lottery) %&gt;%</span><br><span class="line">                    select(c(<span class="number">1</span>:<span class="number">3</span>, <span class="number">7</span>:<span class="number">13</span>)) %&gt;% mutate(number = <span class="number">1</span>:nrow(lottery)) %&gt;%</span><br><span class="line">                    setcolorder(c(names_lottery[<span class="number">2</span>], date_name, names_lottery[<span class="number">4</span>:<span class="number">10</span>]))</span><br><span class="line">lottery_HT = lottery[, lapply(.SD, as.numeric)] <span class="comment"># history table</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#       number year month day ball_1 ball_2 ball_3 ball_4 ball_5 ball_6 ball_s</span></span><br><span class="line"><span class="comment">#    1:      1 2004     1   5     24      4     39     43     29      5     13</span></span><br><span class="line"><span class="comment">#    2:      2 2004     1   8     21     36     18     23      7     14     26</span></span><br><span class="line"><span class="comment">#    3:      3 2004     1  12     25     16     29     11     16     33     33</span></span><br><span class="line"><span class="comment">#    4:      4 2004     1  15     21     19      9     25      9     20      4</span></span><br><span class="line"><span class="comment">#    5:      5 2004     1  19     23      7      5     20     29     13     35</span></span><br><span class="line"><span class="comment">#   ---</span></span><br><span class="line"><span class="comment"># 1163:   1163 2015     1  30     26      6     15     47     20     34     18</span></span><br><span class="line"><span class="comment"># 1164:   1164 2015     2   3     21      5      7      9     40      7     45</span></span><br><span class="line"><span class="comment"># 1165:   1165 2015     2   6      3     31     49     20     36     27     40</span></span><br><span class="line"><span class="comment"># 1166:   1166 2015     2  10     19      6     33     17      6     26     46</span></span><br><span class="line"><span class="comment"># 1167:   1167 2015     2  13     15      1     19     43      6     26     29</span></span><br></pre></td></tr></table></figure>

<p>The encoding in windows is trouble, I have spent 2 hour on it, but it is still unsolved. Therefore, if you want to parse the html involving non-UTF8 characters, just aware it.</p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>crawler</tag>
        <tag>RSelenium</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>Taking average every k periods</title>
    <url>/posts/201503/2015-03-04-Taking-average-%20every-k-periods.html</url>
    <content><![CDATA[<p>We have a repeated-measuring data. We want to take average every 3 periods. Here is code to do it.</p>
<a id="more"></a>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(plyr)</span><br><span class="line"><span class="keyword">library</span>(dplyr)</span><br><span class="line"><span class="keyword">library</span>(data.table)</span><br><span class="line"><span class="keyword">library</span>(magrittr)</span><br><span class="line"><span class="comment"># data generation</span></span><br><span class="line">n = <span class="number">200</span></span><br><span class="line">dat = data.table(id = <span class="number">1</span>:n, len = sample(<span class="number">2</span>:<span class="number">15</span>, n, replace = <span class="literal">TRUE</span>)) %&gt;%</span><br><span class="line">    mdply(<span class="keyword">function</span>(id, len) data.table(id = rep(id, len),</span><br><span class="line">    values = rnorm(len)))</span><br><span class="line">dat = select(dat, c(id, values))</span><br><span class="line"><span class="comment"># mean</span></span><br><span class="line">k = <span class="number">3</span></span><br><span class="line">start_time = Sys.time()</span><br><span class="line">result = dat %&gt;% group_by(id) %&gt;%</span><br><span class="line">  mutate(newgroup = rep(<span class="number">1</span>:ceiling(length(values)/k),</span><br><span class="line">    each = k, length = length(values))) %&gt;%</span><br><span class="line">  group_by(id, newgroup) %&gt;% summarise(mean(values))</span><br><span class="line">Sys.time() - start_time</span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(dplyr)</span><br><span class="line"><span class="keyword">library</span>(data.table)</span><br><span class="line"><span class="keyword">library</span>(magrittr)</span><br><span class="line"><span class="comment"># data generation</span></span><br><span class="line"></span><br><span class="line">dat_gen_f = <span class="keyword">function</span>(N_patient, max_obs_time, n_vars)&#123;</span><br><span class="line">  dat = sample(max_obs_time, N_patient, replace = <span class="literal">TRUE</span>) %&gt;% &#123;</span><br><span class="line">    cbind(rep(<span class="number">1</span>:N_patient, times=.), sapply(., seq, from = <span class="number">1</span>) %&gt;% unlist())</span><br><span class="line">    &#125; %&gt;% cbind(matrix(rnorm(nrow(.)*n_vars),, n_vars)) %&gt;% data.table()</span><br><span class="line">  setnames(dat, c(<span class="string">&quot;id&quot;</span>, <span class="string">&quot;obs_times&quot;</span>, paste0(<span class="string">&quot;V&quot;</span>, <span class="number">1</span>:n_vars)))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mean_dat_f = <span class="keyword">function</span>(dat, k)&#123;</span><br><span class="line">  result = dat %&gt;% group_by(id) %&gt;%</span><br><span class="line">    mutate(newgroup = rep(<span class="number">1</span>:ceiling(length(obs_times)/k), each = k,</span><br><span class="line">    length=length(obs_times)),</span><br><span class="line">    n_combine = (length(obs_times) %/% k) %&gt;% &#123;c(rep(k, . * k),</span><br><span class="line">    rep(length(obs_times) - . * k, length(obs_times) - . * k))&#125;) %&gt;%</span><br><span class="line">    ungroup() %&gt;% mutate(times_combine = paste((newgroup-<span class="number">1</span>)*<span class="number">3</span>+<span class="number">1</span>,</span><br><span class="line">    (newgroup-<span class="number">1</span>)*<span class="number">3</span> + n_combine, sep=<span class="string">&quot;-&quot;</span>))</span><br><span class="line">  result = result %&gt;% select(match(c(names(dat)[names(dat)!=<span class="string">&quot;obs_times&quot;</span>],</span><br><span class="line">    <span class="string">&quot;times_combine&quot;</span>), names(result))) %&gt;% extract(, lapply(.SD, mean),</span><br><span class="line">    by = <span class="string">&quot;id,times_combine&quot;</span>)</span><br><span class="line">  result</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">start_time = Sys.time()</span><br><span class="line">dat = dat_gen_f(<span class="number">30000</span>, <span class="number">20</span>, <span class="number">15</span>)</span><br><span class="line">Sys.time() - start_time</span><br><span class="line"><span class="comment"># Time difference of 1.503086 secs</span></span><br><span class="line">start_time = Sys.time()</span><br><span class="line">result = mean_dat_f(dat, <span class="number">3</span>)</span><br><span class="line">Sys.time() - start_time</span><br><span class="line"><span class="comment"># Time difference of 4.236243 secs</span></span><br><span class="line"></span><br><span class="line">start_time = Sys.time()</span><br><span class="line">dat = dat_gen_f(<span class="number">13820</span>, <span class="number">15</span>, <span class="number">1</span>)</span><br><span class="line">Sys.time() - start_time</span><br><span class="line"><span class="comment"># Time difference of 0.4750271 secs</span></span><br><span class="line">start_time = Sys.time()</span><br><span class="line">result = mean_dat_f(dat, <span class="number">3</span>)</span><br><span class="line">Sys.time() - start_time</span><br><span class="line"><span class="comment"># Time difference of 1.848106 secs</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>data.table</tag>
        <tag>dplyr</tag>
        <tag>magrittr</tag>
        <tag>plyr</tag>
      </tags>
  </entry>
  <entry>
    <title>Computing the transition matrix for multi-state individual</title>
    <url>/posts/201503/2015-03-14-Computing-the-transition-matrix-for-multi-state-id.html</url>
    <content><![CDATA[<p>We have a repeated-measuring data. We want to take average every 3 periods. Here is code to do it.</p>
<a id="more"></a>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">## A simple way to compute transition matrix if every individual does not have multiple state.</span></span><br><span class="line"><span class="keyword">library</span>(data.table)</span><br><span class="line"><span class="keyword">library</span>(dplyr)</span><br><span class="line"><span class="keyword">library</span>(magrittr)</span><br><span class="line"></span><br><span class="line"><span class="comment"># data generation</span></span><br><span class="line">N_patient = <span class="number">1000</span></span><br><span class="line"></span><br><span class="line">dat = sample(<span class="number">48</span>, N_patient, replace = <span class="literal">TRUE</span>) %&gt;% &#123;</span><br><span class="line">    cbind(rep(<span class="number">1</span>:N_patient, times=.), sapply(., seq, from = <span class="number">1</span>) %&gt;% unlist())</span><br><span class="line">    &#125; %&gt;% cbind(sample(<span class="number">6</span>, nrow(.), replace = <span class="literal">TRUE</span>)) %&gt;%</span><br><span class="line">    data.table() %&gt;% setnames(c(<span class="string">&quot;id&quot;</span>, <span class="string">&quot;obs_time&quot;</span>, <span class="string">&quot;dose&quot;</span>))</span><br><span class="line"></span><br><span class="line">dat_transform = dat$dose %&gt;%</span><br><span class="line">  spMatrix(length(.), <span class="number">6</span>, <span class="number">1</span>:length(.), ., rep(<span class="number">1</span>,length(.))) %&gt;%</span><br><span class="line">  as.matrix() %&gt;% data.table() %&gt;% setnames(paste0(<span class="string">&quot;dose_&quot;</span>, <span class="number">1</span>:<span class="number">6</span>)) %&gt;%</span><br><span class="line">  cbind(select(dat, <span class="number">1</span>:<span class="number">2</span>), .)</span><br><span class="line"></span><br><span class="line"><span class="comment">## inverse transformation of dat_transform</span></span><br><span class="line"><span class="comment"># dat = dat_transform %&gt;%</span></span><br><span class="line"><span class="comment">#   mutate(dose = dose_1 + dose_2 * 2 + dose_3 * 3 + dose_4 * 4 +</span></span><br><span class="line"><span class="comment">#     dose_5 * 5 + dose_6 * 6) %&gt;% select(c(1,2, 9))</span></span><br><span class="line"></span><br><span class="line">st = proc.time()</span><br><span class="line">dat_count = dat %&gt;% group_by(id) %&gt;%</span><br><span class="line">  mutate(previous_dose = c(<span class="number">0</span>, dose[-length(dose)])) %&gt;%</span><br><span class="line">  filter(obs_time &gt; <span class="number">1</span>) %&gt;%</span><br><span class="line">  group_by(obs_time, dose, previous_dose) %&gt;%</span><br><span class="line">  summarise(count = n())</span><br><span class="line"></span><br><span class="line">transitMatrix = dat_count %&gt;% group_by(obs_time, previous_dose) %&gt;%</span><br><span class="line">  mutate(transitP = count / sum(count)) %&gt;% ungroup() %&gt;%</span><br><span class="line">  split(.$obs_time) %&gt;%</span><br><span class="line">    lapply(<span class="keyword">function</span>(x) spMatrix(<span class="number">6</span>, <span class="number">6</span>, x$previous_dose, x$dose,</span><br><span class="line">      x$transitP))</span><br><span class="line">proc.time() - st</span><br><span class="line"><span class="comment">#   user  system elapsed</span></span><br><span class="line"><span class="comment">#   0.72    0.05    0.78</span></span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">## A method to compute transition matrix if every individual does have multiple state.</span></span><br><span class="line"><span class="keyword">library</span>(data.table)</span><br><span class="line"><span class="keyword">library</span>(dplyr)</span><br><span class="line"><span class="keyword">library</span>(magrittr)</span><br><span class="line"><span class="comment"># data generation</span></span><br><span class="line">N_patient = <span class="number">3000</span></span><br><span class="line">dat = sample(<span class="number">48</span>, N_patient, replace = <span class="literal">TRUE</span>) %&gt;% &#123;</span><br><span class="line">    cbind(rep(<span class="number">1</span>:N_patient, times=.), unlist(sapply(., seq, from = <span class="number">1</span>)))</span><br><span class="line">    &#125; %&gt;% cbind(replicate(<span class="number">6</span>, sample(<span class="number">0</span>:<span class="number">1</span>, nrow(.), <span class="literal">TRUE</span>))) %&gt;%</span><br><span class="line">    tbl_dt() %&gt;% setnames(c(<span class="string">&quot;id&quot;</span>, <span class="string">&quot;duration&quot;</span>, paste0(<span class="string">&quot;M_&quot;</span>, <span class="number">1</span>:<span class="number">6</span>))) %&gt;%</span><br><span class="line">    arrange(id, duration)</span><br><span class="line"></span><br><span class="line">st = proc.time()</span><br><span class="line">transitMatrix_eachTime = dat %&gt;% split(.$id) %&gt;% lapply(<span class="keyword">function</span>(dd)&#123;</span><br><span class="line">    out = lapply(<span class="number">1</span>:<span class="number">47</span>, <span class="keyword">function</span>(x) matrix(<span class="number">0</span>, <span class="number">6</span>, <span class="number">6</span>))</span><br><span class="line">    <span class="keyword">if</span> (nrow(dd) &gt; <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      tmp = dd %&gt;% select(<span class="number">3</span>:<span class="number">8</span>) %&gt;% as.matrix()</span><br><span class="line">      <span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">2</span>:nrow(dd))</span><br><span class="line">      &#123;</span><br><span class="line">        transitMatrix = matrix(<span class="number">0</span>, <span class="number">6</span>, <span class="number">6</span>);</span><br><span class="line">        <span class="keyword">if</span> (sum(tmp[i-<span class="number">1</span>,]) &gt; <span class="number">0</span>)</span><br><span class="line">          transitMatrix[tmp[i-<span class="number">1</span>,]==<span class="number">1</span>,] =</span><br><span class="line">            t(replicate(sum(tmp[i-<span class="number">1</span>,]), tmp[i,]))</span><br><span class="line">        out[[i-<span class="number">1</span>]] = transitMatrix</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    out</span><br><span class="line">  &#125;) %&gt;%</span><br><span class="line">  Reduce(<span class="keyword">function</span>(x, y) lapply(<span class="number">1</span>:length(x),</span><br><span class="line">    <span class="keyword">function</span>(v) x[[v]]+y[[v]]), .) %&gt;%</span><br><span class="line">  lapply(<span class="keyword">function</span>(x) x / ifelse(rowSums(x)&gt; <span class="number">0</span>, rowSums(x), <span class="number">1</span>))</span><br><span class="line">proc.time() - st</span><br><span class="line"><span class="comment">#   user  system elapsed</span></span><br><span class="line"><span class="comment">#  32.10    0.19   33.26</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(Rcpp)</span><br><span class="line"><span class="keyword">library</span>(RcppArmadillo)</span><br><span class="line">sourceCpp(code = <span class="string">&#x27;</span></span><br><span class="line"><span class="string">// [[Rcpp::depends(RcppArmadillo)]]</span></span><br><span class="line"><span class="string">#include &lt;RcppArmadillo.h&gt;</span></span><br><span class="line"><span class="string">using namespace Rcpp;</span></span><br><span class="line"><span class="string">using namespace arma;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">List transitMatrix_f(umat M, uword maxDuration)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  uword maxDuration_id = M.n_rows;</span></span><br><span class="line"><span class="string">  List transitMatrixList(maxDuration-1);</span></span><br><span class="line"><span class="string">  umat transitMatrix(M.n_cols, M.n_cols);</span></span><br><span class="line"><span class="string">  urowvec previous_M(M.n_cols);</span></span><br><span class="line"><span class="string">  for (uword i = 1; i &lt; maxDuration; i++)</span></span><br><span class="line"><span class="string">  &#123;</span></span><br><span class="line"><span class="string">    transitMatrix.zeros();</span></span><br><span class="line"><span class="string">    if ( i &lt; maxDuration_id)</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">      previous_M = M.row(i-1);</span></span><br><span class="line"><span class="string">      if (any(previous_M==1))</span></span><br><span class="line"><span class="string">        transitMatrix.rows(find(previous_M==1)) = repmat(M.row(i), sum(previous_M), 1);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    transitMatrixList[i-1] = wrap(transitMatrix);</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  return transitMatrixList;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span>)</span><br><span class="line"><span class="keyword">library</span>(RcppEigen)</span><br><span class="line">sourceCpp(code = <span class="string">&#x27;</span></span><br><span class="line"><span class="string">// [[Rcpp::depends(RcppEigen)]]</span></span><br><span class="line"><span class="string">#include &lt;RcppEigen.h&gt;</span></span><br><span class="line"><span class="string">using namespace Rcpp;</span></span><br><span class="line"><span class="string">using Eigen::Map;</span></span><br><span class="line"><span class="string">using Eigen::MatrixXd;</span></span><br><span class="line"><span class="string">using Eigen::VectorXd;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">void list_sum_f(List Xr, List Yr) &#123;</span></span><br><span class="line"><span class="string">  for(int i = 0; i &lt; Xr.size(); i++)</span></span><br><span class="line"><span class="string">    Yr[i] = as&lt; Map&lt;MatrixXd&gt; &gt;(Xr[i]) + as&lt; Map&lt;MatrixXd&gt; &gt;(Yr[i]);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">List listAddition(List Xr) &#123;</span></span><br><span class="line"><span class="string">  int n = Xr.size();</span></span><br><span class="line"><span class="string">  List list_sum = Xr[0];</span></span><br><span class="line"><span class="string">  for(int j = 1; j &lt; n; j++)</span></span><br><span class="line"><span class="string">    list_sum_f(Xr[j], list_sum);</span></span><br><span class="line"><span class="string">  return list_sum;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">st = proc.time()</span><br><span class="line">maxDuration = max(dat$duration)</span><br><span class="line">transitMatrix_eachTime2 = dat %&gt;% split(.$id) %&gt;% lapply(<span class="keyword">function</span>(x)&#123;</span><br><span class="line">    transitMatrix_f(x %&gt;% select(-id, -duration) %&gt;% as.matrix(),</span><br><span class="line">      maxDuration)</span><br><span class="line">  &#125;) %&gt;% listAddition() %&gt;%</span><br><span class="line">  lapply(<span class="keyword">function</span>(x) x / ifelse(rowSums(x)&gt; <span class="number">0</span>, rowSums(x), <span class="number">1</span>))</span><br><span class="line">proc.time() - st</span><br><span class="line"><span class="comment">#   user  system elapsed</span></span><br><span class="line"><span class="comment">#  14.68    0.20   15.27</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(reshape2)</span><br><span class="line"><span class="keyword">library</span>(Matrix)</span><br><span class="line">st = proc.time()</span><br><span class="line">dat_previous = dat %&gt;% group_by(id) %&gt;%</span><br><span class="line">  mutate_(.dots = paste0(<span class="string">&quot;c(0, M_&quot;</span>, <span class="number">1</span>:<span class="number">6</span>, <span class="string">&quot;[-length(M_1)])&quot;</span>)) %&gt;%</span><br><span class="line">  setnames(old = tail(names(.), <span class="number">6</span>), new = paste0(<span class="string">&quot;M_&quot;</span>, <span class="number">1</span>:<span class="number">6</span>, <span class="string">&quot;p&quot;</span>))</span><br><span class="line"></span><br><span class="line">dat_transform_1 = dat_previous %&gt;%</span><br><span class="line">  melt(id = c(<span class="string">&quot;id&quot;</span>, <span class="string">&quot;duration&quot;</span>), measure = paste0(<span class="string">&quot;M_&quot;</span>, <span class="number">1</span>:<span class="number">6</span>)) %&gt;%</span><br><span class="line">  filter(value == <span class="number">1</span>, duration &gt; <span class="number">1</span>) %&gt;% select(-value) %&gt;%</span><br><span class="line">  transform(variable = as.numeric(substr(variable, <span class="number">3</span>, <span class="number">3</span>))) %&gt;%</span><br><span class="line">  setnames(<span class="string">&quot;variable&quot;</span>, <span class="string">&quot;M&quot;</span>) %&gt;% setkey(id, duration)</span><br><span class="line"></span><br><span class="line">dat_transform_2 = dat_previous %&gt;%</span><br><span class="line">  melt(id = c(<span class="string">&quot;id&quot;</span>,<span class="string">&quot;duration&quot;</span>), measure = paste0(<span class="string">&quot;M_&quot;</span>, <span class="number">1</span>:<span class="number">6</span>, <span class="string">&quot;p&quot;</span>)) %&gt;%</span><br><span class="line">  filter(value == <span class="number">1</span>) %&gt;% select(-value) %&gt;%</span><br><span class="line">  mutate(variable = as.numeric(substr(variable, <span class="number">3</span>, <span class="number">3</span>))) %&gt;%</span><br><span class="line">  setnames(<span class="string">&quot;variable&quot;</span>, <span class="string">&quot;M_p&quot;</span>) %&gt;% setkey(id, duration)</span><br><span class="line"></span><br><span class="line">dat_combined = dat_transform_1[dat_transform_2, allow.cartesian=<span class="literal">TRUE</span>] %&gt;% filter(!is.na(M), !is.na(M_p))</span><br><span class="line"></span><br><span class="line">transitMatrix_eachTime3 = dat_combined %&gt;% group_by(duration, M, M_p) %&gt;%</span><br><span class="line">  summarise(count = n()) %&gt;% group_by(duration, M_p) %&gt;%</span><br><span class="line">  mutate(transitProb = count / sum(count)) %&gt;% ungroup() %&gt;%</span><br><span class="line">  split(.$duration) %&gt;%</span><br><span class="line">  lapply(<span class="keyword">function</span>(x) spMatrix(<span class="number">6</span>, <span class="number">6</span>, x$M_p, x$M, x$transitProb))</span><br><span class="line">proc.time() - st</span><br><span class="line"><span class="comment">#   user  system elapsed</span></span><br><span class="line"><span class="comment">#   2.15    0.31    2.62</span></span><br><span class="line"></span><br><span class="line">st = proc.time()</span><br><span class="line">dat_transform = dat %&gt;%</span><br><span class="line">  melt(id = c(<span class="string">&quot;id&quot;</span>, <span class="string">&quot;duration&quot;</span>), measure = paste0(<span class="string">&quot;M_&quot;</span>, <span class="number">1</span>:<span class="number">6</span>)) %&gt;%</span><br><span class="line">  filter(value == <span class="number">1</span>) %&gt;% select(-value) %&gt;%</span><br><span class="line">  transform(variable = as.numeric(substr(variable, <span class="number">3</span>, <span class="number">3</span>))) %&gt;%</span><br><span class="line">  setnames(<span class="string">&quot;variable&quot;</span>, <span class="string">&quot;M&quot;</span>) %&gt;% setkey(id, duration)</span><br><span class="line"></span><br><span class="line">dat_combined = dat_transform %&gt;% filter(duration &gt; <span class="number">1</span>) %&gt;%</span><br><span class="line">  inner_join(dat_transform %&gt;% transform(duration = duration + <span class="number">1</span>),</span><br><span class="line">  by = c(<span class="string">&quot;id&quot;</span>, <span class="string">&quot;duration&quot;</span>))</span><br><span class="line"></span><br><span class="line">transitMatrix_eachTime5 = dat_combined %&gt;%</span><br><span class="line">  group_by(duration, M.x, M.y) %&gt;% summarise(count = n()) %&gt;%</span><br><span class="line">  group_by(duration, M.y) %&gt;%</span><br><span class="line">  mutate(transitProb = count / sum(count)) %&gt;% ungroup() %&gt;%</span><br><span class="line">  split(.$duration) %&gt;%</span><br><span class="line">  lapply(<span class="keyword">function</span>(x) spMatrix(<span class="number">6</span>, <span class="number">6</span>, x$M.y, x$M.x, x$transitProb))</span><br><span class="line">proc.time() - st</span><br><span class="line"><span class="comment">#   user  system elapsed</span></span><br><span class="line"><span class="comment">#   1.25    0.19    1.45</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(tidyr)</span><br><span class="line">st = proc.time()</span><br><span class="line">dat_transform = dat %&gt;% gather(M, value, M_1:M_6) %&gt;%</span><br><span class="line">  filter(value == <span class="number">1</span>) %&gt;% select(-value) %&gt;%</span><br><span class="line">  transform(M = as.numeric(substr(M, <span class="number">3</span>, <span class="number">3</span>)))</span><br><span class="line"></span><br><span class="line">dat_combined = dat_transform %&gt;% filter(duration &gt; <span class="number">1</span>) %&gt;%</span><br><span class="line">  inner_join(dat_transform %&gt;% transform(duration = duration + <span class="number">1</span>),</span><br><span class="line">  by = c(<span class="string">&quot;id&quot;</span>, <span class="string">&quot;duration&quot;</span>))</span><br><span class="line"></span><br><span class="line">transitMatrix_eachTime5 = dat_combined %&gt;%</span><br><span class="line">  group_by(duration, M.x, M.y) %&gt;% summarise(count = n()) %&gt;%</span><br><span class="line">  group_by(duration, M.y) %&gt;%</span><br><span class="line">  mutate(transitProb = count / sum(count)) %&gt;% ungroup() %&gt;%</span><br><span class="line">  split(.$duration) %&gt;%</span><br><span class="line">  lapply(<span class="keyword">function</span>(x) spMatrix(<span class="number">6</span>, <span class="number">6</span>, x$M.y, x$M.x, x$transitProb))</span><br><span class="line">proc.time() - st</span><br><span class="line"><span class="comment">#   user  system elapsed</span></span><br><span class="line"><span class="comment">#   1.28    0.12    1.40</span></span><br><span class="line"></span><br><span class="line">all.equal(transitMatrix_eachTime, transitMatrix_eachTime2)</span><br><span class="line"><span class="comment"># TRUE</span></span><br><span class="line">all.equal(transitMatrix_eachTime, transitMatrix_eachTime3 %&gt;%</span><br><span class="line">  lapply(as.matrix) %&gt;% set_names(<span class="literal">NULL</span>))</span><br><span class="line"><span class="comment"># TRUE</span></span><br><span class="line">all.equal(transitMatrix_eachTime, transitMatrix_eachTime4 %&gt;%</span><br><span class="line">  lapply(as.matrix) %&gt;% set_names(<span class="literal">NULL</span>))</span><br><span class="line"><span class="comment"># TRUE</span></span><br><span class="line">all.equal(transitMatrix_eachTime, transitMatrix_eachTime5 %&gt;%</span><br><span class="line">  lapply(as.matrix) %&gt;% set_names(<span class="literal">NULL</span>))</span><br><span class="line"><span class="comment"># TRUE</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &gt; transitMatrix_eachTime[[1]] # the transition matrix at period 2</span></span><br><span class="line"><span class="comment">#           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]</span></span><br><span class="line"><span class="comment"># [1,] 0.1579643 0.1652346 0.1625909 0.1711831 0.1784534 0.1645737</span></span><br><span class="line"><span class="comment"># [2,] 0.1698612 0.1692003 0.1639128 0.1625909 0.1771315 0.1573034</span></span><br><span class="line"><span class="comment"># [3,] 0.1635638 0.1775266 0.1569149 0.1675532 0.1682181 0.1662234</span></span><br><span class="line"><span class="comment"># [4,] 0.1661085 0.1654387 0.1634293 0.1654387 0.1694575 0.1701273</span></span><br><span class="line"><span class="comment"># [5,] 0.1722746 0.1648721 0.1561238 0.1641992 0.1709287 0.1716016</span></span><br><span class="line"><span class="comment"># [6,] 0.1675862 0.1620690 0.1648276 0.1655172 0.1765517 0.1634483</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>data.table</tag>
        <tag>dplyr</tag>
        <tag>magrittr</tag>
      </tags>
  </entry>
  <entry>
    <title>Hotkeys in sublime text</title>
    <url>/posts/201502/2015-02-28-hotkeys-in-sublime-text.html</url>
    <content><![CDATA[<p>一些sublime text 3好用的快捷鍵。</p>
<a id="more"></a>

<p>CTRL + D: 選擇當前的字串(兩個空白字元(包含\n, \t等)之間)<br>CTRL + L: 選擇當前行<br>CTRL+ SHIFT + SPACE: 選當前的scope(在兩個括號之間)<br>CTRL + ALT + UP / DOWN: 做多行編輯 (筆電要先關掉旋轉的快捷鍵)<br>CTRL + PAGE UP / DOWN: 切換同一個layout的文件<br>ALT+ SHIFT + 2: 切換成雙欄 (1是單欄，3則是3欄，最多4欄，89是2,3欄)<br>CTRL + number: 切換不同的layout<br>CTRL + SHIFT + D: 可以複製同一行</p>
]]></content>
      <categories>
        <category>Sublime Text</category>
      </categories>
      <tags>
        <tag>Sublime Text</tag>
      </tags>
  </entry>
  <entry>
    <title>Splitting characters in Rcpp</title>
    <url>/posts/201503/2015-03-18-splitting-characters-in-R.html</url>
    <content><![CDATA[<p>We usually need to process the raw data by ourself, the character type of data is the most common type of raw data. I demonstrate a example to simply split the characters.</p>
<a id="more"></a>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(data.table)</span><br><span class="line"><span class="keyword">library</span>(magrittr)</span><br><span class="line"><span class="keyword">library</span>(Rcpp)</span><br><span class="line"><span class="keyword">library</span>(inline)</span><br><span class="line">sourceCpp(code = <span class="string">&#x27;</span></span><br><span class="line"><span class="string">#include &lt;Rcpp.h&gt;</span></span><br><span class="line"><span class="string">using namespace Rcpp;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">CharacterMatrix dat_split_f( std::vector&lt; std::string &gt; strings,</span></span><br><span class="line"><span class="string">NumericVector loc) &#123;</span></span><br><span class="line"><span class="string">  int loc_len = loc.size(), num_strings = strings.size();</span></span><br><span class="line"><span class="string">  CharacterMatrix output(num_strings, loc_len);</span></span><br><span class="line"><span class="string">  for( int j=0; j &lt; num_strings; j++ )</span></span><br><span class="line"><span class="string">  &#123;</span></span><br><span class="line"><span class="string">    for (int i=0; i &lt; loc_len-1; i++)</span></span><br><span class="line"><span class="string">      output(j, i) = strings[j].substr(loc[i], loc[i+1] - loc[i]);</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  return output;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># size is 400000</span></span><br><span class="line">dat = fread(paste0(rep(<span class="string">&quot;001female2019920404\n002male  3019920505\n003male  4019920606\n004female5019920707\n&quot;</span>, <span class="number">100000</span>), collapse=<span class="string">&quot;&quot;</span>),</span><br><span class="line">  sep=<span class="string">&quot;\n&quot;</span>, sep2=<span class="string">&quot;&quot;</span>, header=<span class="literal">FALSE</span>)</span><br><span class="line"></span><br><span class="line">tt = proc.time()</span><br><span class="line">dat_split = dat_split_f(dat[[<span class="number">1</span>]], c(<span class="number">0</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">19</span>)) %&gt;% data.table()</span><br><span class="line">dat_split[, <span class="string">&#x27;:=&#x27;</span>(V1 = as.numeric(V1), V3 = as.numeric(V3))]</span><br><span class="line">proc.time() - tt</span><br><span class="line"><span class="comment">#   user  system elapsed</span></span><br><span class="line"><span class="comment">#   0.97    0.06    1.03</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># size is 4000000</span></span><br><span class="line">dat = fread(paste0(rep(<span class="string">&quot;001female2019920404\n002male  3019920505\n003male  4019920606\n004female5019920707\n&quot;</span>, <span class="number">1000000</span>), collapse=<span class="string">&quot;&quot;</span>),</span><br><span class="line">  sep=<span class="string">&quot;\n&quot;</span>, sep2=<span class="string">&quot;&quot;</span>, header=<span class="literal">FALSE</span>)</span><br><span class="line"></span><br><span class="line">tt = proc.time()</span><br><span class="line">dat_split = dat_split_f(dat[[<span class="number">1</span>]], c(<span class="number">0</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">19</span>)) %&gt;% data.table()</span><br><span class="line">dat_split[, <span class="string">&#x27;:=&#x27;</span>(V1 = as.numeric(V1), V3 = as.numeric(V3))]</span><br><span class="line">proc.time() - tt</span><br><span class="line"><span class="comment">#   user  system elapsed</span></span><br><span class="line"><span class="comment">#   7.73    0.21    7.98</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## by using regular expression</span></span><br><span class="line">dat = fread(paste0(rep(<span class="string">&quot;001female2019920404\n002male  3019920505\n003male</span></span><br><span class="line"><span class="string">4019920606\n004female5019920707\n&quot;</span>, <span class="number">100000</span>), collapse=<span class="string">&quot;&quot;</span>),sep=<span class="string">&quot;\n&quot;</span>,</span><br><span class="line">sep2=<span class="string">&quot;&quot;</span>,header=<span class="literal">FALSE</span>)</span><br><span class="line"></span><br><span class="line">tt = proc.time()</span><br><span class="line">dat_regex = dat %&gt;% select(V1) %&gt;% extract2(<span class="number">1</span>) %&gt;%</span><br><span class="line">  regexec(<span class="string">&quot;([0-9]&#123;3&#125;)(female|male\\s&#123;2&#125;)([0-9]&#123;2&#125;)([0-9]&#123;8&#125;)&quot;</span>, text = .)</span><br><span class="line">dat_split = dat %&gt;% select(V1) %&gt;% extract2(<span class="number">1</span>) %&gt;%</span><br><span class="line">  regmatches(dat_regex) %&gt;% do.call(rbind, .) %&gt;% data.table() %&gt;%</span><br><span class="line">  select(<span class="number">2</span>:ncol(.)) %&gt;% setnames(c(<span class="string">&quot;id&quot;</span>, <span class="string">&quot;gender&quot;</span>, <span class="string">&quot;age&quot;</span>, <span class="string">&quot;birthday&quot;</span>))</span><br><span class="line">proc.time() - tt</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>Rcpp</tag>
        <tag>split</tag>
        <tag>regex</tag>
      </tags>
  </entry>
  <entry>
    <title>Processing string in R (Rcpp and rJava)</title>
    <url>/posts/201503/2015-03-20-processing-string-in-R.html</url>
    <content><![CDATA[<p>There is a example for processing string in R.</p>
<p>Before we use rJava, we need a class file first. The <code>regex_java.java</code> is shown in below and compilation can be done with command <code>javac regex_java.java</code>.</p>
<a id="more"></a>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.regex.Matcher;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Pattern;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">regex_java</span> </span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> String[] string_split_1d(String[] string_array, <span class="keyword">int</span>[] loc) &#123;</span><br><span class="line">    String[] out = <span class="keyword">new</span> String[string_array.length*(loc.length - <span class="number">1</span>)];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; loc.length - <span class="number">1</span>; j++)</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; string_array.length; i++)</span><br><span class="line">        out[i+j*string_array.length] = string_array[i].subSequence(loc[j], loc[j+<span class="number">1</span>]).toString();</span><br><span class="line">    <span class="keyword">return</span> out;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> String[][] string_split(String[] string_array, <span class="keyword">int</span>[] loc) &#123;</span><br><span class="line">    String[][] out = <span class="keyword">new</span> String[string_array.length][loc.length - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; string_array.length; i++)</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; loc.length - <span class="number">1</span>; j++)</span><br><span class="line">        out[i][j] = string_array[i].subSequence(loc[j], loc[j+<span class="number">1</span>]).toString();</span><br><span class="line">    <span class="keyword">return</span> out;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> String[] regex_java(String[] string_array, String patternStr, <span class="keyword">int</span> pattern_reconize) &#123;</span><br><span class="line">    String[] out = <span class="keyword">new</span> String[string_array.length*pattern_reconize];</span><br><span class="line">    Pattern pattern = Pattern.compile(patternStr);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; string_array.length; j++)</span><br><span class="line">    &#123;</span><br><span class="line">      Matcher matcher = pattern.matcher(string_array[j]);</span><br><span class="line">      <span class="keyword">boolean</span> matchFound = matcher.find();</span><br><span class="line">      <span class="keyword">while</span>(matchFound)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= matcher.groupCount(); i++)</span><br><span class="line">          out[j*pattern_reconize+i-<span class="number">1</span>] = matcher.group(i);</span><br><span class="line">        <span class="keyword">if</span>(matcher.end() + <span class="number">1</span> &lt;= string_array[j].length())</span><br><span class="line">          matchFound = matcher.find(matcher.end());</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> out;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Next, we demonstrate the performance between R, Rcpp and rJava. However, Rcpp cannot process string in regular expression because the standard of C++ does not support regular expression before C++14. Note that g++ have <code>regexp.h</code> to support regular expression in linux.</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(data.table)</span><br><span class="line"><span class="keyword">library</span>(plyr)</span><br><span class="line"><span class="keyword">library</span>(dplyr)</span><br><span class="line"><span class="keyword">library</span>(magrittr)</span><br><span class="line">dat = fread(paste0(rep(<span class="string">&quot;001female2019920404\n002male  3019920505\n003male  4019920606\n004female5019920707\n&quot;</span>, <span class="number">100000</span>), collapse=<span class="string">&quot;&quot;</span>), sep=<span class="string">&quot;\n&quot;</span>, sep2=<span class="string">&quot;&quot;</span>,header=<span class="literal">FALSE</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## using R</span></span><br><span class="line">tt = proc.time()</span><br><span class="line">dat_regex = dat %&gt;% select(V1) %&gt;% extract2(<span class="number">1</span>) %&gt;%</span><br><span class="line">  regexec(<span class="string">&quot;([0-9]&#123;3&#125;)(female|male\\s&#123;2&#125;)([0-9]&#123;2&#125;)([0-9]&#123;8&#125;)&quot;</span>, text = .)</span><br><span class="line">dat_split2 = dat %&gt;% select(V1) %&gt;% extract2(<span class="number">1</span>) %&gt;%</span><br><span class="line">  regmatches(dat_regex) %&gt;% do.call(rbind, .) %&gt;% data.table() %&gt;%</span><br><span class="line">  select(<span class="number">2</span>:ncol(.)) %&gt;% setnames(c(<span class="string">&quot;id&quot;</span>, <span class="string">&quot;gender&quot;</span>, <span class="string">&quot;age&quot;</span>, <span class="string">&quot;birthday&quot;</span>))</span><br><span class="line">proc.time() - tt</span><br><span class="line"><span class="comment">#   user  system elapsed</span></span><br><span class="line"><span class="comment">#  10.19    0.14   10.96</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## using Rcpp</span></span><br><span class="line"><span class="keyword">library</span>(Rcpp)</span><br><span class="line"><span class="keyword">library</span>(inline)</span><br><span class="line">sourceCpp(code = <span class="string">&#x27;</span></span><br><span class="line"><span class="string">#include &lt;Rcpp.h&gt;</span></span><br><span class="line"><span class="string">using namespace Rcpp;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">CharacterMatrix dat_split_f( std::vector&lt; std::string &gt; strings,</span></span><br><span class="line"><span class="string">NumericVector loc) &#123;</span></span><br><span class="line"><span class="string">  int loc_len = loc.size(), num_strings = strings.size();</span></span><br><span class="line"><span class="string">  CharacterMatrix output(num_strings, loc_len);</span></span><br><span class="line"><span class="string">  for( int j=0; j &lt; num_strings; j++ )</span></span><br><span class="line"><span class="string">  &#123;</span></span><br><span class="line"><span class="string">    for (int i=0; i &lt; loc_len-1; i++)</span></span><br><span class="line"><span class="string">      output(j, i) = strings[j].substr(loc[i], loc[i+1] - loc[i]);</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  return output;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">tt = proc.time()</span><br><span class="line">dat_split = dat_split_f(dat[[<span class="number">1</span>]], c(<span class="number">0</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">19</span>)) %&gt;% data.table() %&gt;%</span><br><span class="line">  select(<span class="number">1</span>:<span class="number">4</span>) %&gt;% setnames(c(<span class="string">&quot;id&quot;</span>, <span class="string">&quot;gender&quot;</span>, <span class="string">&quot;age&quot;</span>, <span class="string">&quot;birthday&quot;</span>))</span><br><span class="line">proc.time() - tt</span><br><span class="line"><span class="comment">#   user  system elapsed</span></span><br><span class="line"><span class="comment">#   1.12    0.08    1.20</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## using rJava</span></span><br><span class="line"><span class="keyword">library</span>(rJava)</span><br><span class="line">.jinit()</span><br><span class="line">.jaddClassPath( <span class="string">&quot;D:\\Program\\R\\some_code\\regex_java&quot;</span>)</span><br><span class="line">regex_java = .jnew(<span class="string">&quot;regex_java&quot;</span>)</span><br><span class="line"></span><br><span class="line">tt = proc.time()</span><br><span class="line">output = dat %&gt;% select(V1) %&gt;% extract2(<span class="number">1</span>) %&gt;%</span><br><span class="line">  .jcall(regex_java, <span class="string">&quot;[S&quot;</span>, <span class="string">&quot;string_split_1d&quot;</span>,  .,</span><br><span class="line">    as.integer(c(<span class="number">0</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">19</span>))) %&gt;% matrix(ncol=<span class="number">4</span>) %&gt;% data.table() %&gt;%</span><br><span class="line">  setnames(c(<span class="string">&quot;id&quot;</span>, <span class="string">&quot;gender&quot;</span>, <span class="string">&quot;age&quot;</span>, <span class="string">&quot;birthday&quot;</span>))</span><br><span class="line">proc.time() - tt</span><br><span class="line"><span class="comment">#   user  system elapsed</span></span><br><span class="line"><span class="comment">#   3.24    0.04    2.55</span></span><br><span class="line"></span><br><span class="line">tt = proc.time()</span><br><span class="line">output2 = dat %&gt;% select(V1) %&gt;% extract2(<span class="number">1</span>) %&gt;%</span><br><span class="line">  .jcall(regex_java, <span class="string">&quot;[[Ljava/lang/String;&quot;</span>, <span class="string">&quot;string_split&quot;</span>,  .,</span><br><span class="line">    as.integer(c(<span class="number">0</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">19</span>)), simplify = <span class="literal">TRUE</span>) %&gt;% data.table() %&gt;%</span><br><span class="line">  setnames(c(<span class="string">&quot;id&quot;</span>, <span class="string">&quot;gender&quot;</span>, <span class="string">&quot;age&quot;</span>, <span class="string">&quot;birthday&quot;</span>))</span><br><span class="line">proc.time() - tt</span><br><span class="line"><span class="comment">#   user  system elapsed</span></span><br><span class="line"><span class="comment">#   3.46    0.05    2.92</span></span><br><span class="line"></span><br><span class="line">tt = proc.time()</span><br><span class="line">pattern = <span class="string">&quot;(\\d&#123;3&#125;)(female|male\\s&#123;2&#125;)(\\d&#123;2&#125;)(\\d&#123;8&#125;)&quot;</span></span><br><span class="line">size_recognize = <span class="string">&quot;(\\((?&gt;[^()]+|(?R))*\\))&quot;</span> %&gt;% gregexpr(pattern, perl = <span class="literal">TRUE</span>) %&gt;%</span><br><span class="line">  extract2(<span class="number">1</span>) %&gt;% length() %&gt;% as.integer()</span><br><span class="line">output3 = dat %&gt;% select(V1) %&gt;% extract2(<span class="number">1</span>) %&gt;%</span><br><span class="line">  .jcall(regex_java, <span class="string">&quot;[S&quot;</span>, <span class="string">&quot;regex_java&quot;</span>,  ., pattern, size_recognize) %&gt;%</span><br><span class="line">    matrix(ncol = <span class="number">4</span>, byrow=<span class="literal">TRUE</span>) %&gt;%</span><br><span class="line">    data.table() %&gt;% setnames(c(<span class="string">&quot;id&quot;</span>, <span class="string">&quot;gender&quot;</span>, <span class="string">&quot;age&quot;</span>, <span class="string">&quot;birthday&quot;</span>))</span><br><span class="line">proc.time() - tt</span><br><span class="line"><span class="comment">#   user  system elapsed</span></span><br><span class="line"><span class="comment">#   4.66    0.13    3.38</span></span><br><span class="line"></span><br><span class="line">all.equal(output, output2)    <span class="comment"># TRUE</span></span><br><span class="line">all.equal(output, dat_split)  <span class="comment"># TRUE</span></span><br><span class="line">all.equal(output, dat_split2) <span class="comment"># TRUE</span></span><br><span class="line">all.equal(output, output3) <span class="comment"># TRUE</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>Rcpp</tag>
        <tag>split</tag>
        <tag>regex</tag>
        <tag>rJava</tag>
      </tags>
  </entry>
  <entry>
    <title>Drawing planes in R</title>
    <url>/posts/201503/2015-03-27-drawing-planes-in-R.html</url>
    <content><![CDATA[<p>A simple log for drawing 2 planes in 3D plot.</p>
<a id="more"></a>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(dplyr)</span><br><span class="line"><span class="keyword">library</span>(data.table)</span><br><span class="line"><span class="keyword">library</span>(magrittr)</span><br><span class="line"><span class="keyword">library</span>(tidyr)</span><br><span class="line"><span class="keyword">library</span>(lattice)</span><br><span class="line">xygrid = expand.grid(x = -<span class="number">30</span>:<span class="number">30</span>, y = -<span class="number">30</span>:<span class="number">30</span>)</span><br><span class="line">dat = xygrid %&gt;% mutate(z1 = x+<span class="number">3</span>*y, z2 = <span class="number">0</span>)</span><br><span class="line">dat_piled = dat %&gt;% gather(group, z_value, z1:z2) %&gt;% tbl_dt(<span class="literal">FALSE</span>)</span><br><span class="line">cols = c(<span class="string">&quot;cyan&quot;</span>, <span class="string">&quot;yellow&quot;</span>)</span><br><span class="line"></span><br><span class="line">panel.custom = <span class="keyword">function</span>(x, y, z, xlim, ylim, zlim, xlim.scaled,</span><br><span class="line">  ylim.scaled, zlim.scaled, <span class="keyword">...</span>) &#123;</span><br><span class="line">  panel.3dwire(x = x, y = y, z = z, xlim = xlim, ylim = ylim,</span><br><span class="line">    zlim = zlim,xlim.scaled = xlim.scaled,ylim.scaled = ylim.scaled,</span><br><span class="line">    zlim.scaled = zlim.scaled, col = <span class="string">&quot;transparent&quot;</span>, <span class="keyword">...</span>)</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">wireframe(z_value ~ x + y, dat_piled, groups=group,</span><br><span class="line">  par.settings = simpleTheme(col = cols),</span><br><span class="line">  auto.key = list(columns = <span class="number">2</span>, text = paste(<span class="string">&quot;z&quot;</span>, <span class="number">1</span>:<span class="number">2</span>),</span><br><span class="line">    rectangles = <span class="literal">TRUE</span>, points = <span class="literal">FALSE</span>),</span><br><span class="line">  panel.3d.wireframe = panel.custom )</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>3D plot</tag>
      </tags>
  </entry>
  <entry>
    <title>Regular expression in R</title>
    <url>/posts/201503/2015-03-26-regular-expression-in-R.html</url>
    <content><![CDATA[<p>Several examples of regular expression in R.</p>
<a id="more"></a>

<p>Regular expression is a powerful tool to process strings. First example, we have strings <code>&#39;q123er&#39;, &#39;a2334bc&#39;, &#39;b78gg&#39;</code> and we want to let it be <code>&#39;qer123qer&#39;, &#39;abc2334abc&#39;, &#39;bgg78bgg&#39;</code>.</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">a = c(<span class="string">&#x27;q123er&#x27;</span>, <span class="string">&#x27;a2334bc&#x27;</span>, <span class="string">&#x27;b78gg&#x27;</span>)</span><br><span class="line">a_out = gsub(<span class="string">&#x27;([a-z])(\\d*)([a-z]&#123;2&#125;)&#x27;</span>, <span class="string">&#x27;\\1\\3\\2\\1\\3&#x27;</span>, a)</span><br><span class="line">all.equal(c(<span class="string">&#x27;qer123qer&#x27;</span>, <span class="string">&#x27;abc2334abc&#x27;</span>, <span class="string">&#x27;bgg78bgg&#x27;</span>), a_out)</span><br><span class="line"><span class="comment"># TRUE</span></span><br></pre></td></tr></table></figure>

<p>Second example is that we want add some string in front of the some characters. We want to search parenthesis in string, but parenthesis need escape or it cannot be found.</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">b = c(<span class="string">&#x27;p(478)cer&#x27;</span>, <span class="string">&#x27;ba(2334)bdc&#x27;</span>, <span class="string">&#x27;ber(728)gigi&#x27;</span>)</span><br><span class="line">b2 = gsub(<span class="string">&quot;(\\(|\\))&quot;</span>, <span class="string">&quot;\\\\\\1&quot;</span>, b)</span><br><span class="line">b_out = gsub(<span class="string">&quot;(\\(|\\))&quot;</span>, <span class="string">&quot;&quot;</span>, b)</span><br><span class="line">b_out</span><br><span class="line"><span class="comment"># [1] &quot;p478cer&quot;    &quot;ba2334bdc&quot;  &quot;ber728gigi&quot;</span></span><br></pre></td></tr></table></figure>

<p>Third example is that we take the information from strings.</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">d = c(<span class="string">&#x27;p478cer&#x27;</span>, <span class="string">&#x27;ba2334bdc&#x27;</span>, <span class="string">&#x27;ber728gigi&#x27;</span>)</span><br><span class="line">d_pattern = regexec(<span class="string">&#x27;[a-z]*(\\d*)[a-z]*&#x27;</span>, d)</span><br><span class="line">d_out = sapply(regmatches(d, d_pattern), <span class="keyword">function</span>(x) x[<span class="number">2</span>])</span><br><span class="line">d_out</span><br><span class="line"><span class="comment"># [1] &quot;478&quot;  &quot;2334&quot; &quot;728&quot;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>regex</tag>
      </tags>
  </entry>
  <entry>
    <title>The length of runs of equal values in a vector</title>
    <url>/posts/201503/2015-03-28-the-length-of-runs-of-equal-values-in-a-vector.html</url>
    <content><![CDATA[<p>We usually encounter the problem for counting the length of equal values repeatedly. <code>rle</code> is the build-in command in R to solve this problem which is consist of <code>diff</code> and <code>which</code>. But it is not so fast, I write another version of <code>rle</code> in Rcpp.</p>
<a id="more"></a>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(Rcpp)</span><br><span class="line"><span class="keyword">library</span>(RcppArmadillo)</span><br><span class="line">sourceCpp(code = <span class="string">&#x27;</span></span><br><span class="line"><span class="string">// [[Rcpp::depends(RcppArmadillo)]]</span></span><br><span class="line"><span class="string">#include &lt;RcppArmadillo.h&gt;</span></span><br><span class="line"><span class="string">using namespace Rcpp;</span></span><br><span class="line"><span class="string">using namespace arma;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">template &lt;int RTYPE&gt;</span></span><br><span class="line"><span class="string">List rle_template(const Vector&lt;RTYPE&gt;&amp; x) &#123;</span></span><br><span class="line"><span class="string"> IntegerVector tmp = seq_len(x.size()-1);</span></span><br><span class="line"><span class="string"> LogicalVector loc = head(x, x.size()-1) != tail(x, x.size()-1);</span></span><br><span class="line"><span class="string"> IntegerVector y = tmp[loc | is_na(loc)];</span></span><br><span class="line"><span class="string"> y.push_back(x.size());</span></span><br><span class="line"><span class="string"> Col&lt;int&gt; y2(y.begin(), y.size());</span></span><br><span class="line"><span class="string"> y2.insert_rows(0, zeros&lt; Col&lt;int&gt; &gt;(1));</span></span><br><span class="line"><span class="string"> IntegerVector y3 = wrap(y2);</span></span><br><span class="line"><span class="string"> return List::create(Named(&quot;lengths&quot;) = diff(y3),</span></span><br><span class="line"><span class="string">   Named(&quot;values&quot;) = x[y-1]);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">List rle_cpp(SEXP x)&#123;</span></span><br><span class="line"><span class="string"> switch( TYPEOF(x) ) &#123;</span></span><br><span class="line"><span class="string"> case INTSXP: return rle_template&lt;INTSXP&gt;(x);</span></span><br><span class="line"><span class="string"> case REALSXP: return rle_template&lt;REALSXP&gt;(x);</span></span><br><span class="line"><span class="string"> case STRSXP: return rle_template&lt;STRSXP&gt;(x);</span></span><br><span class="line"><span class="string"> &#125;</span></span><br><span class="line"><span class="string"> return R_NilValue;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">x &lt;- rev(rep(<span class="number">6</span>:<span class="number">10</span>, <span class="number">1</span>:<span class="number">5</span>))</span><br><span class="line">all.equal(rle(x), rle_cpp(x), check.attributes = <span class="literal">FALSE</span>)</span><br><span class="line"><span class="comment"># TRUE</span></span><br><span class="line"></span><br><span class="line">N = <span class="number">100000</span></span><br><span class="line">testVector = rep(sample(<span class="number">1</span>:<span class="number">150</span>, round(N/<span class="number">10</span>), <span class="literal">TRUE</span>),</span><br><span class="line">  sample(<span class="number">1</span>:<span class="number">25</span>, round(N/<span class="number">10</span>), <span class="literal">TRUE</span>))</span><br><span class="line">all.equal(rle(testVector), rle_cpp(testVector),</span><br><span class="line">  check.attributes = <span class="literal">FALSE</span>)</span><br><span class="line"><span class="comment"># TRUE</span></span><br><span class="line"><span class="keyword">library</span>(rbenchmark)</span><br><span class="line">benchmark(rle(testVector), rle_cpp(testVector),</span><br><span class="line">  columns = c(<span class="string">&quot;test&quot;</span>, <span class="string">&quot;replications&quot;</span>,<span class="string">&quot;elapsed&quot;</span>,</span><br><span class="line">  <span class="string">&quot;relative&quot;</span>), replications=<span class="number">100</span>, order=<span class="string">&quot;relative&quot;</span>)</span><br><span class="line"><span class="comment">#         test replications elapsed relative</span></span><br><span class="line"><span class="comment"># 2 rle_cpp(x)          100    0.34    1.000</span></span><br><span class="line"><span class="comment"># 1     rle(x)          100    2.53    7.441</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>Rcpp</tag>
        <tag>RcppArmadillo</tag>
        <tag>Running Length</tag>
      </tags>
  </entry>
  <entry>
    <title>Combinations of protein in Rcpp</title>
    <url>/posts/201503/2015-03-30-combinations-of-protein-in-Rcpp.html</url>
    <content><![CDATA[<p>There is a sequence of protein like <code>A B1/B2 C1/C2 K/D E F1/F2</code>, <code>K</code> does not connect to next point, so it is cut at K. Therefore, the combinations of protein is in the following:</p>
<a id="more"></a>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">A B1 C1 K</span><br><span class="line">A B2 C1 K</span><br><span class="line">A B1 C2 K</span><br><span class="line">A B2 C2 K</span><br><span class="line"></span><br><span class="line">A B1 C1 D E F1</span><br><span class="line">A B2 C1 D E F1</span><br><span class="line">A B1 C2 D E F1</span><br><span class="line">A B2 C2 D E F1</span><br><span class="line">A B1 C1 D E F2</span><br><span class="line">A B2 C1 D E F2</span><br><span class="line">A B1 C2 D E F2</span><br><span class="line">A B2 C2 D E F2</span><br></pre></td></tr></table></figure>

<p>The code to generate sequence of protein and list the all combinations is below.</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(Rcpp)</span><br><span class="line"><span class="keyword">library</span>(RcppArmadillo)</span><br><span class="line">sourceCpp(code = <span class="string">&#x27;</span></span><br><span class="line"><span class="string">// [[Rcpp::depends(RcppArmadillo)]]</span></span><br><span class="line"><span class="string">#define ARMA_64BIT_WORD</span></span><br><span class="line"><span class="string">#include &lt;RcppArmadillo.h&gt;</span></span><br><span class="line"><span class="string">using namespace Rcpp;</span></span><br><span class="line"><span class="string">using namespace arma;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">List combns_f2(IntegerVector comnbs_for_each_loc, IntegerVector exist_k,</span></span><br><span class="line"><span class="string"> List names_eliminate_k)&#123;</span></span><br><span class="line"><span class="string"> Col&lt;int&gt; X(comnbs_for_each_loc.begin(), comnbs_for_each_loc.size());</span></span><br><span class="line"><span class="string"> Col&lt;int&gt; Y(exist_k.begin(), exist_k.size(), false);</span></span><br><span class="line"><span class="string"> uvec loc_Y = find(Y &gt;= 1);</span></span><br><span class="line"><span class="string"> X(loc_Y) -= 1;</span></span><br><span class="line"><span class="string"> loc_Y.insert_rows(loc_Y.n_elem, X.n_elem*ones&lt;uvec&gt;(1)-1);</span></span><br><span class="line"><span class="string"> List result_list(loc_Y.n_elem);</span></span><br><span class="line"><span class="string"> CharacterVector char_k = CharacterVector::create(&quot;K&quot;);</span></span><br><span class="line"><span class="string"> for (int i = 0; i &lt; loc_Y.n_elem; i++)</span></span><br><span class="line"><span class="string"> &#123;</span></span><br><span class="line"><span class="string">   uword size_mat = 1;</span></span><br><span class="line"><span class="string">   for (int k = 0; k &lt;= loc_Y(i); k++)</span></span><br><span class="line"><span class="string">     size_mat *= (uword) X(k);</span></span><br><span class="line"><span class="string">   CharacterMatrix tmp_result(size_mat, loc_Y(i)+1);</span></span><br><span class="line"><span class="string">   for (int j = 0; j &lt; (int) loc_Y(i)+1; j++)</span></span><br><span class="line"><span class="string">   &#123;</span></span><br><span class="line"><span class="string">     if ( i &lt; loc_Y.n_elem-1 &amp;&amp; j == (int) loc_Y(i))</span></span><br><span class="line"><span class="string">       tmp_result(_, j) = rep(char_k, size_mat);</span></span><br><span class="line"><span class="string">     else</span></span><br><span class="line"><span class="string">       tmp_result(_, j) = rep(as&lt;CharacterVector&gt;(names_eliminate_k[j]),</span></span><br><span class="line"><span class="string">         size_mat / X(j));</span></span><br><span class="line"><span class="string">   &#125;</span></span><br><span class="line"><span class="string">   result_list[i] = tmp_result;</span></span><br><span class="line"><span class="string"> &#125;</span></span><br><span class="line"><span class="string"> return result_list;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">List combns_f(IntegerVector comnbs_for_each_loc, IntegerVector exist_k)&#123;</span></span><br><span class="line"><span class="string"> Col&lt;int&gt; X(comnbs_for_each_loc.begin(), comnbs_for_each_loc.size());</span></span><br><span class="line"><span class="string"> Col&lt;int&gt; Y(exist_k.begin(), exist_k.size(), false);</span></span><br><span class="line"><span class="string"> uvec loc_Y = find(Y &gt;= 1);</span></span><br><span class="line"><span class="string"> X(loc_Y) -= 1;</span></span><br><span class="line"><span class="string"> loc_Y.insert_rows(loc_Y.n_elem, X.n_elem*ones&lt;uvec&gt;(1)-1);</span></span><br><span class="line"><span class="string"> List result_list(loc_Y.n_elem);</span></span><br><span class="line"><span class="string"> for (int i = 0; i &lt; loc_Y.n_elem; i++)</span></span><br><span class="line"><span class="string"> &#123;</span></span><br><span class="line"><span class="string">   uword size_mat = 1;</span></span><br><span class="line"><span class="string">   for (int k = 0; k &lt;= loc_Y(i); k++)</span></span><br><span class="line"><span class="string">     size_mat *= (uword) X(k);</span></span><br><span class="line"><span class="string">   Mat&lt;int&gt; tmp_result(size_mat, loc_Y(i)+1);</span></span><br><span class="line"><span class="string">   for (int j = 0; j &lt; (int) loc_Y(i)+1; j++)</span></span><br><span class="line"><span class="string">   &#123;</span></span><br><span class="line"><span class="string">     if ( i &lt; loc_Y.n_elem-1 &amp;&amp; j == (int) loc_Y(i))</span></span><br><span class="line"><span class="string">       tmp_result.col(j) = repmat( Y(loc_Y(i)) *</span></span><br><span class="line"><span class="string">         ones&lt;Col&lt;int&gt; &gt;(1), size_mat, 1);</span></span><br><span class="line"><span class="string">     else</span></span><br><span class="line"><span class="string">       tmp_result.col(j) = repmat(</span></span><br><span class="line"><span class="string">         linspace&lt;Col&lt;int&gt; &gt;(1, X(j), X(j)), size_mat / X(j), 1);</span></span><br><span class="line"><span class="string">   &#125;</span></span><br><span class="line"><span class="string">   result_list[i] = wrap(tmp_result);</span></span><br><span class="line"><span class="string"> &#125;</span></span><br><span class="line"><span class="string"> return result_list;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># x_test = list(&quot;A&quot;, c(&quot;B1&quot;, &quot;B2&quot;), c(&quot;C1&quot;, &quot;C2&quot;), c(&quot;K&quot;, &quot;D&quot;), &quot;E&quot;,</span></span><br><span class="line"><span class="comment">#   c(&quot;F1&quot;, &quot;F2&quot;))</span></span><br><span class="line">set.seed(<span class="number">77</span>)</span><br><span class="line">x = lapply(setdiff(LETTERS[<span class="number">1</span>:<span class="number">14</span>], <span class="string">&quot;K&quot;</span>), <span class="keyword">function</span>(a) paste0(a, <span class="number">1</span>:sample(<span class="number">1</span>:<span class="number">5</span>, <span class="number">1</span>)))</span><br><span class="line">x = lapply(x, <span class="keyword">function</span>(y) <span class="keyword">if</span>(runif(<span class="number">1</span>) &lt; <span class="number">0.4</span>)&#123;c(y, <span class="string">&quot;K&quot;</span>)&#125; <span class="keyword">else</span>&#123;y&#125;)</span><br><span class="line"></span><br><span class="line">t1 = proc.time()</span><br><span class="line">size_x = sapply(x, length)</span><br><span class="line">exist_k = as.integer(sapply(x, <span class="keyword">function</span>(x) which(x==<span class="string">&quot;K&quot;</span>)))</span><br><span class="line">exist_k[which(is.na(exist_k))] = <span class="number">0</span></span><br><span class="line">result = combns_f(size_x, exist_k)</span><br><span class="line">result_transform = vector(<span class="string">&#x27;list&#x27;</span>, length(result))</span><br><span class="line">tmp_x = x</span><br><span class="line"><span class="keyword">for</span> (j <span class="keyword">in</span> <span class="number">1</span>:length(result))</span><br><span class="line">&#123;</span><br><span class="line">  result_transform[[j]] = sapply(<span class="number">1</span>:ncol(result[[j]]),</span><br><span class="line">    <span class="keyword">function</span>(i) tmp_x[[i]][result[[j]][,i]])</span><br><span class="line">  <span class="keyword">if</span> (j &lt; length(result))</span><br><span class="line">    tmp_x[[which(exist_k&gt;=<span class="number">1</span>)[j]]] =</span><br><span class="line">      setdiff(tmp_x[[which(exist_k&gt;=<span class="number">1</span>)[j]]], <span class="string">&quot;K&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">proc.time() - t1</span><br><span class="line"><span class="comment">#    user  system elapsed</span></span><br><span class="line"><span class="comment">#    9.31    1.74   11.90</span></span><br><span class="line">object.size(result) <span class="comment"># 704257576 bytes</span></span><br><span class="line">object.size(result_transform) <span class="comment"># 1408520016 bytes</span></span><br><span class="line"></span><br><span class="line">t2 = proc.time()</span><br><span class="line">size_x = sapply(x, length)</span><br><span class="line">exist_k = as.integer(sapply(x, <span class="keyword">function</span>(x) which(x==<span class="string">&quot;K&quot;</span>)))</span><br><span class="line">exist_k[which(is.na(exist_k))] = <span class="number">0</span></span><br><span class="line">result2 = combns_f2(size_x, exist_k, lapply(x, setdiff, y = <span class="string">&quot;K&quot;</span>))</span><br><span class="line">proc.time() - t2</span><br><span class="line"><span class="comment">#    user  system elapsed</span></span><br><span class="line"><span class="comment">#    1.86    0.15    2.03</span></span><br><span class="line">object.size(result2) <span class="comment"># 1408520016 bytes</span></span><br><span class="line">all.equal(result_transform, result2)</span><br><span class="line"><span class="comment"># TRUE</span></span><br></pre></td></tr></table></figure>

<p>This code alert me that I should go to the destination directly, not windingly. It saves a lot of time.</p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>Rcpp</tag>
        <tag>RcppArmadillo</tag>
      </tags>
  </entry>
  <entry>
    <title>Build Hadoop environment in mint 17</title>
    <url>/posts/201504/2015-04-06-build-hadoop-environment-in-mint-17.html</url>
    <content><![CDATA[<p>Hadoop is one of the most popular tool to deal with the big data. I construct the environment of Hadoop in mint 17. Mint 17 is based on the ubuntu 14.04. The following steps also works in ubuntu 14.04.</p>
<a id="more"></a>

<ol>
<li>install java jdk 8</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install python-software-properties</span><br><span class="line">sudo add-apt-repository ppa:webupd8team/java</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install oracle-java8-installer</span><br><span class="line">javac -version <span class="comment"># check the version of java</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># remove openjdk java</span></span><br><span class="line">sudo apt-get purge openjdk-\*</span><br><span class="line"><span class="comment"># java version vs hadoop version</span></span><br><span class="line"><span class="comment"># refer: http://wiki.apache.org/hadoop/HadoopJavaVersions</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>install ssh</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install ssh rsync openssh-server</span><br><span class="line">ssh-keygen -t rsa -P <span class="string">&quot;&quot;</span> <span class="comment"># generate SSH key</span></span><br><span class="line"><span class="comment"># Enable SSH Key</span></span><br><span class="line">cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</span><br><span class="line"><span class="comment"># test whether it works, it should not need password if it works</span></span><br><span class="line">ssh localhost</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>download hadoop</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget http://apache.stu.edu.tw/hadoop/common/stable2/hadoop-2.7.2.tar.gz</span><br><span class="line">tar zxvf hadoop-2.7.2.tar.gz</span><br><span class="line">sudo mv hadoop-2.7.2 /usr/<span class="built_in">local</span>/hadoop</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span></span><br><span class="line">sudo chown -R celest hadoop</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>setting environment for java and hadoop</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo subl /etc/bash.bashrc</span><br><span class="line"><span class="comment"># add following 9 lines into file</span></span><br><span class="line"><span class="comment"># export JAVA_HOME=/usr/lib/jvm/java-8-oracle/</span></span><br><span class="line"><span class="comment"># export HADOOP_PID_DIR=/usr/local/hadoop/pids/</span></span><br><span class="line"><span class="comment"># export HADOOP_INSTALL=/usr/local/hadoop</span></span><br><span class="line"><span class="comment"># export PATH=$PATH:$HADOOP_INSTALL/bin</span></span><br><span class="line"><span class="comment"># export PATH=$PATH:$HADOOP_INSTALL/sbin</span></span><br><span class="line"><span class="comment"># export HADOOP_MAPRED_HOME=$HADOOP_INSTALL</span></span><br><span class="line"><span class="comment"># export HADOOP_COMMON_HOME=$HADOOP_INSTALL</span></span><br><span class="line"><span class="comment"># export HADOOP_HDFS_HOME=$HADOOP_INSTALL</span></span><br><span class="line"><span class="comment"># export YARN_HOME=$HADOOP_INSTALL</span></span><br><span class="line"><span class="built_in">source</span> /etc/bash.bashrc</span><br><span class="line"><span class="comment"># in ubuntu, is &gt;&gt; etc/bash.bashrc</span></span><br></pre></td></tr></table></figure>

<p>4-1. network environment (for multi-node hadoop)<br>If you use the VMware, you need to add another host-only network card. You can install hadoop successfully and clone it to be slaves. In following, <code>master</code> stands for the primary node and <code>slaveXX</code> for the other nodes.</p>
<p>a. setting the network</p>
<p>using <code>ifconfig</code> to check whether the network card is adding.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo subl /etc/network/interfaces</span><br></pre></td></tr></table></figure>

<p>the content of file looks like this:<br>(there must be eth1. Put a address for it on the machines master and slaves.)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># The loopback network interface for master</span></span><br><span class="line">auto lo</span><br><span class="line">iface lo inet loopback</span><br><span class="line"></span><br><span class="line"><span class="comment"># The primary network interface</span></span><br><span class="line">auto eth0</span><br><span class="line">iface eth0 inet dhcp</span><br><span class="line"></span><br><span class="line"><span class="comment"># Host-Only</span></span><br><span class="line">auto eth1</span><br><span class="line">  iface eth1:0 inet static</span><br><span class="line">  address 192.168.29.130 <span class="comment"># (192.168.29.131 for slave01)</span></span><br><span class="line">  netmask 255.255.0.0</span><br></pre></td></tr></table></figure>

<p>restart network by command <code>sudo /etc/init.d/networking restart</code><br>and check the network again by <code>ifconfig</code>.</p>
<ol start="5">
<li>setup for hadoop</li>
</ol>
<p>a. disabling IPv6 by editing <code>/etc/sysctl.conf</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">subl /etc/sysctl.conf</span><br></pre></td></tr></table></figure>

<p>paste the following into <code>/etc/sysctl.conf</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">net.ipv6.conf.all.disable_ipv6 = 1</span><br><span class="line">net.ipv6.conf.default.disable_ipv6 = 1</span><br><span class="line">net.ipv6.conf.lo.disable_ipv6 = 1</span><br></pre></td></tr></table></figure>

<p>checking whether ipv6 is disable: <code>cat /proc/sys/net/ipv6/conf/all/disable_ipv6</code>. (retuen <code>1</code>)</p>
<p>b. editing following files:</p>
<p>create the folders for putting data.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/hadoop</span><br><span class="line">sudo mkdir -p /usr/<span class="built_in">local</span>/hadoop/tmp</span><br><span class="line">sudo chown celest /usr/<span class="built_in">local</span>/hadoop/tmp</span><br><span class="line">subl /usr/<span class="built_in">local</span>/hadoop/etc/hadoop/hadoop-env.sh</span><br><span class="line">subl /usr/<span class="built_in">local</span>/hadoop/etc/hadoop/core-site.xml</span><br><span class="line">cp etc/hadoop/mapred-site.xml.template etc/hadoop/mapred-site.xml</span><br><span class="line">subl /usr/<span class="built_in">local</span>/hadoop/etc/hadoop/mapred-site.xml</span><br><span class="line">subl /usr/<span class="built_in">local</span>/hadoop/etc/hadoop/hdfs-site.xml</span><br><span class="line">subl /usr/<span class="built_in">local</span>/hadoop/etc/hadoop/yarn-site.xml</span><br></pre></td></tr></table></figure>

<p>i. /usr/local/hadoop/etc/hadoop/hadoop-env.sh</p>
<p>ii. /usr/local/hadoop/etc/hadoop/core-site.xml</p>
<p>iii. /usr/local/hadoop/etc/hadoop/mapred-site.xml</p>
<p>iv. /usr/local/hadoop/etc/hadoop/hdfs-site.xml</p>
<p>v. /usr/local/hadoop/etc/hadoop/slaves # only need for multi-node hadoop</p>
<p>a. hadoop-env.sh<br>replace the line <code>JAVA_HOME=&#123;JAVA_HOME&#125;</code> with your java root, in my case, it is<br><code>export JAVA_HOME=/usr/lib/jvm/java-8-oracle</code>.</p>
<p>b. core-site.xml<br>put the following content to the file.</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.tmp.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>/usr/local/hadoop/tmp<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">description</span>&gt;</span></span><br><span class="line">    A base for other temporary directories.</span><br><span class="line">  <span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.default.name<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://localhost:9000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- &lt;value&gt;hdfs://master:9000&lt;/value&gt; for the multi-node case --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">description</span>&gt;</span></span><br><span class="line">    The name of the default file system.  A URI whose</span><br><span class="line">    scheme and authority determine the FileSystem implementation.  The</span><br><span class="line">    uri&#x27;s scheme determines the config property (fs.SCHEME.impl) naming</span><br><span class="line">    the FileSystem implementation class.  The uri&#x27;s authority is used to</span><br><span class="line">    determine the host, port, etc. for a filesystem.</span><br><span class="line">  <span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>c. mapred-site.xml<br>There is no file <code>mapred-site.xml</code>, we get by copy the <code>mapred-site.xml.template</code>. This command would be helpful: <code>cp etc/hadoop/mapred-site.xml.template etc/hadoop/mapred-site.xml &amp;&amp; subl etc/hadoop/mapred-site.xml</code>. We set the specification of job tracker like this:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.framework.name<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>yarn<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>d. hdfs-site.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.replication<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>3<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">description</span>&gt;</span></span><br><span class="line">    Default block replication. The actual number of replications can be specified when the file is created.   The default is used if replication is not specified in create time.</span><br><span class="line">  <span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.datanode.data.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>/usr/local/hadoop/tmp/data<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.name.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>/usr/local/hadoop/tmp/name<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>e. yarn-site.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;property&gt;</span></span><br><span class="line"><span class="comment">     &lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt;</span></span><br><span class="line"><span class="comment">     &lt;value&gt;master&lt;/value&gt;</span></span><br><span class="line"><span class="comment">&lt;/property&gt; --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- for multi-node --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.aux-services<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">value</span>&gt;</span>mapreduce_shuffle<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.aux-services.mapreduce.shuffle.class<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">value</span>&gt;</span>org.apache.hadoop.mapred.ShuffleHandler<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>f. slaves (for multi-node.)</p>
<p>put names of your machines in the <code>hadoop/etc/hadoop/slaves</code>. Command: <code>subl etc/hadoop/slaves</code>. The file looks like:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">master</span><br><span class="line">slave01</span><br></pre></td></tr></table></figure>

<ol start="6">
<li>Starting hadoop</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># import environment variable</span></span><br><span class="line"><span class="comment"># ubuntu: source ~/.bashrc</span></span><br><span class="line"><span class="built_in">source</span> /etc/bash.bashrc</span><br><span class="line"><span class="comment"># format hadoop space</span></span><br><span class="line">hdfs namenode -format</span><br><span class="line"><span class="comment"># start the hadoop</span></span><br><span class="line">start-dfs.sh &amp;&amp; start-yarn.sh</span><br><span class="line"><span class="comment"># or start-all.sh</span></span><br></pre></td></tr></table></figure>

<p>The output looks like this: (standalone)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">localhost: starting namenode, logging to /usr/<span class="built_in">local</span>/hadoop/logs/hadoop-master-namenode-master-virtual-machine.out</span><br><span class="line">localhost: starting datanode, logging to /usr/<span class="built_in">local</span>/hadoop/logs/hadoop-master-datanode-master-virtual-machine.out</span><br><span class="line">Starting secondary namenodes [0.0.0.0]</span><br><span class="line">0.0.0.0: starting secondarynamenode, logging to /usr/<span class="built_in">local</span>/hadoop/logs/hadoop-master-secondarynamenode-master-virtual-machine.out</span><br><span class="line">starting yarn daemons</span><br><span class="line">starting resourcemanager, logging to /usr/<span class="built_in">local</span>/hadoop/logs/yarn-master-resourcemanager-master-virtual-machine.out</span><br><span class="line">localhost: starting nodemanager, logging to /usr/<span class="built_in">local</span>/hadoop/logs/yarn-master-nodemanager-master-virtual-machine.out</span><br></pre></td></tr></table></figure>

<p>The output looks like this: (standalone)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">master: starting namenode, logging to /usr/<span class="built_in">local</span>/hadoop/logs/hadoop-master-namenode-master.out</span><br><span class="line">slave01: starting datanode, logging to /usr/<span class="built_in">local</span>/hadoop/logs/hadoop-master-datanode-slave01.out</span><br><span class="line">Starting secondary namenodes [0.0.0.0]</span><br><span class="line">0.0.0.0: starting secondarynamenode, logging to /usr/<span class="built_in">local</span>/hadoop/logs/hadoop-master-secondarynamenode-master.out</span><br><span class="line">starting yarn daemons</span><br><span class="line">starting resourcemanager, logging to /usr/<span class="built_in">local</span>/hadoop/logs/yarn-master-resourcemanager-master.out</span><br><span class="line">slave01: starting nodemanager, logging to /usr/<span class="built_in">local</span>/hadoop/logs/yarn-master-nodemanager-slave01.out</span><br></pre></td></tr></table></figure>

<p>check whether the server starts by connecting the local server.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># for standalone</span></span><br><span class="line">firefox http:\\localhost:50070</span><br><span class="line">firefox http:\\localhost:50090</span><br><span class="line"><span class="comment"># for multi-node hadoop</span></span><br><span class="line">hdfs dfsadmin -report</span><br></pre></td></tr></table></figure>

<p>Run a example in the folder</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hadoop jar /usr/<span class="built_in">local</span>/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.2.jar pi 10 100</span><br></pre></td></tr></table></figure>

<p>The last two line will show the following informations:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Job Finished <span class="keyword">in</span> 167.153 seconds</span><br><span class="line">Estimated value of Pi is 3.14800000000000000000</span><br></pre></td></tr></table></figure>

<p>Run second example</p>
<ol start="8">
<li>run wordaccout</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/Downloads &amp;&amp; mkdir testData &amp;&amp; <span class="built_in">cd</span> testData</span><br><span class="line"><span class="comment"># download data for test</span></span><br><span class="line">wget http://www.gutenberg.org/ebooks/5000.txt.utf-8</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"><span class="comment"># upload to the hadoop server</span></span><br><span class="line">hdfs dfs -copyFromLocal testData/ /user/celest/</span><br><span class="line"><span class="comment"># check that the file is in the hadoop server</span></span><br><span class="line">hdfs dfs -ls /user/celest/testData/</span><br><span class="line"><span class="comment"># run wordcount on hadoop</span></span><br><span class="line">hadoop jar /usr/<span class="built_in">local</span>/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.2.jar wordcount /user/celest/testData /user/celest/testData-output</span><br><span class="line"><span class="comment"># check the whether it successes</span></span><br><span class="line">hdfs dfs -ls /user/celest/testData-output/</span><br><span class="line"><span class="comment"># view the result</span></span><br><span class="line">hdfs dfs -cat /user/celest/testData-output/part-r-00000</span><br><span class="line"></span><br><span class="line"><span class="comment"># clean the test file (optional)</span></span><br><span class="line">hdfs dfs -rm -r /user/celest/testData</span><br><span class="line">hdfs dfs -rm -r /user/celest/testData-output</span><br></pre></td></tr></table></figure>

<ol start="8">
<li>Stopping hadoop<br><code>stop-all.sh</code> or <code>stop-dfs.sh &amp;&amp; stop-yarn.sh</code></li>
</ol>
<ol start="9">
<li>compiling hadoop library by yourself (optional)</li>
</ol>
<p>To avoid the warning <code>WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable</code>, you can build the 64 bit hadoop lib by yourself.</p>
<p>Here is the bash script to compile:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># install the necessary packages</span></span><br><span class="line">sudo apt-get -y install build-essential protobuf-compiler autoconf automake libtool cmake zlib1g-dev pkg-config libssl-dev git subversion</span><br><span class="line"><span class="built_in">cd</span> ~/Downloads</span><br><span class="line">wget https://protobuf.googlecode.com/files/protobuf-2.5.0.tar.gz</span><br><span class="line">tar zxvf protobuf-2.5.0.tar.gz</span><br><span class="line"><span class="built_in">cd</span> protobuf-2.5.0</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br><span class="line"><span class="comment"># get ant</span></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line">wget http://apache.stu.edu.tw/ant/binaries/apache-ant-1.9.4-bin.tar.gz</span><br><span class="line">tar zxvf apache-ant-1.9.4-bin.tar.gz</span><br><span class="line">sudo mv apache-ant-1.9.4 /usr/<span class="built_in">local</span>/ant</span><br><span class="line">sudo chown -R celest /usr/<span class="built_in">local</span>/ant</span><br><span class="line"><span class="comment"># get maven</span></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line">wget http://apache.stu.edu.tw/maven/maven-3/3.3.1/binaries/apache-maven-3.3.1-bin.tar.gz</span><br><span class="line">tar zxvf apache-maven-3.3.1-bin.tar.gz</span><br><span class="line">sudo mv apache-maven-3.3.1 /usr/<span class="built_in">local</span>/maven</span><br><span class="line">sudo chown -R celest /usr/<span class="built_in">local</span>/maven</span><br><span class="line">sudo subl /etc/bash.bashrc</span><br><span class="line"><span class="comment"># add following 5 lines into file</span></span><br><span class="line"><span class="comment"># export MAVEN_HOME=/usr/local/maven</span></span><br><span class="line"><span class="comment"># export PATH=$PATH:$MAVEN_HOME/bin</span></span><br><span class="line"><span class="comment"># export ANT_HOME=/usr/local/ant</span></span><br><span class="line"><span class="comment"># export PATH=$PATH:$ANT_HOME/bin</span></span><br><span class="line"><span class="comment"># export MAVEN_OPTS=&quot;-Xms256m -Xmx512m&quot;</span></span><br><span class="line"><span class="built_in">source</span> /etc/bash.bashrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># get the source code of hadoop</span></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line">wget http://apache.stu.edu.tw/hadoop/common/stable2/hadoop-2.7.2-src.tar.gz</span><br><span class="line">tar zxvf hadoop-2.7.2-src.tar.gz</span><br><span class="line"><span class="built_in">cd</span> hadoop-2.7.2-src</span><br><span class="line">mvn clean package -Pdist -Dtar -Dmaven.javadoc.skip=<span class="literal">true</span> -DskipTests -fail-at-end -Pnative</span><br><span class="line">sudo cp -r hadoop-2.7.2-src/hadoop-dist/target/hadoop-2.7.2 /usr/<span class="built_in">local</span>/hadoop</span><br><span class="line">sudo mv /usr/<span class="built_in">local</span>/hadoop-2.7.2 /usr/<span class="built_in">local</span>/hadoop</span><br><span class="line">sudo chown -R celest hadoop</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>BigData</category>
      </categories>
      <tags>
        <tag>Mint</tag>
        <tag>BigData</tag>
        <tag>Hadoop</tag>
      </tags>
  </entry>
  <entry>
    <title>Installation of HBase and Hive in mint 17</title>
    <url>/posts/201504/2015-04-06-installation-of-hbase-and-hive-in-mint-17.html</url>
    <content><![CDATA[<p>The second post for series of building hadoop environment in mint 17. HBase support the storage of big table in HDFS. Hive support Hadoop to query data with sql commands.</p>
<a id="more"></a>

<p>Based on hadoop, we install the hbase.</p>
<ol>
<li>Get hbase</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget http://apache.stu.edu.tw/hbase/stable/hbase-1.0.0-bin.tar.gz</span><br><span class="line">tar zxvf hbase-1.0.0-bin.tar.gz</span><br><span class="line">sudo mv hbase-1.0.0 /usr/<span class="built_in">local</span>/hbase</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/hbase</span><br></pre></td></tr></table></figure>

<p>Put the following into the file by command: <code>subl conf/hbase-env.sh</code>.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/lib/jvm/java-8-oracle</span><br><span class="line"><span class="built_in">export</span> HBASE_HOME=/usr/<span class="built_in">local</span>/hbase</span><br><span class="line"><span class="built_in">export</span> HADOOP_INSTALL=/usr/<span class="built_in">local</span>/hadoop</span><br><span class="line"><span class="built_in">export</span> HBASE_CLASSPATH=/usr/<span class="built_in">local</span>/hbase/conf</span><br><span class="line"><span class="built_in">export</span> HBASE_MANAGES_ZK=<span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>Set up the hbase by command: <code>subl conf/hbase-site.xml</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;hbase.rootdir&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;hdfs://localhost:54310/hbase&lt;/value&gt;</span><br><span class="line">    &lt;!-- &lt;value&gt;hdfs://master:9000/hbase&lt;/value&gt; <span class="keyword">for</span> the multi-node <span class="keyword">case</span> --&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;hbase.cluster.distributed&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;<span class="literal">true</span>&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">     &lt;name&gt;dfs.replication&lt;/name&gt;</span><br><span class="line">     &lt;value&gt;3&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;hbase.zookeeper.quorum&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;localhost&lt;/value&gt;</span><br><span class="line">    &lt;!-- &lt;value&gt;master&lt;/value&gt; <span class="keyword">for</span> the multi-node <span class="keyword">case</span> --&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">      &lt;name&gt;hbase.zookeeper.property.clientPort&lt;/name&gt;</span><br><span class="line">      &lt;value&gt;2181&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;hbase.zookeeper.property.dataDir&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;/usr/<span class="built_in">local</span>/hadoop/tmp/data&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>

<p>Copy the setting of hdfs into hbase folder by command:<br><code>cp /usr/local/hadoop/etc/hadoop/hdfs-site.xml /usr/local/hbase/conf</code></p>
<ol start="2">
<li>start hbase</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo subl /etc/bash.bashrc</span><br><span class="line"><span class="comment"># add following 2 lines into file</span></span><br><span class="line"><span class="comment"># export HBASE_INSTALL=/usr/local/hbase</span></span><br><span class="line"><span class="comment"># export PATH=$PATH:$HBASE_INSTALL/bin</span></span><br><span class="line"><span class="built_in">source</span> /etc/bash.bashrc</span><br><span class="line"><span class="comment"># in ubuntu, is &gt;&gt; etc/bash.bashrc</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">start-dfs.sh &amp;&amp; start-yarn.sh <span class="comment"># or start-all.sh</span></span><br><span class="line">start-hbase.sh</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>test hbase<br>type <code>hbase shell</code> in the terminal, then it will show:</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">HBase Shell; enter <span class="string">&#x27;help&lt;RETURN&gt;&#x27;</span> <span class="keyword">for</span> list of supported commands.</span><br><span class="line">Type <span class="string">&quot;exit&lt;RETURN&gt;&quot;</span> to leave the HBase Shell</span><br><span class="line">Version 1.0.0, r6c98bff7b719efdb16f71606f3b7d8229445eb81, Sat Feb 14 19:49:22 PST 2015</span><br><span class="line"></span><br><span class="line">hbase(main):001:0&gt;</span><br></pre></td></tr></table></figure>

<p>type <code>list</code> and it return</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">TABLE</span><br><span class="line">0 row(s) <span class="keyword">in</span> 4.4510 seconds</span><br></pre></td></tr></table></figure>

<p>The other tests remain in the rhbase. Stop the server:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">stop-hbase.sh</span><br><span class="line">stop-dfs.sh &amp;&amp; stop-yarn.sh <span class="comment"># or stop-all.sh</span></span><br></pre></td></tr></table></figure>

<h2 id="hive-installation"><a href="#hive-installation" class="headerlink" title="hive installation"></a>hive installation</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget http://apache.stu.edu.tw/hive/stable/apache-hive-1.1.0-bin.tar.gz</span><br><span class="line">tar zxvf apache-hive-1.1.0-bin.tar.gz</span><br><span class="line">sudo mv apache-hive-1.1.0-bin /usr/<span class="built_in">local</span>/hive</span><br><span class="line">sudo subl /etc/bash.bashrc</span><br><span class="line"><span class="comment"># add following 7 lines to file</span></span><br><span class="line"><span class="comment"># export HIVE_HOME=&quot;/usr/local/hive&quot;</span></span><br><span class="line"><span class="comment"># export PATH=$PATH:$HIVE_HOME/bin</span></span><br><span class="line"><span class="comment"># export HADOOP_USER_CLASSPATH_FIRST=true</span></span><br><span class="line"><span class="built_in">source</span> /etc/bash.bashrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># install mysql</span></span><br><span class="line">sudo apt-get install mysql-server</span><br><span class="line"><span class="comment"># it need to set up a password to access mysql server</span></span><br><span class="line">mysql -u root -p <span class="comment"># enter the password you just set</span></span><br><span class="line"><span class="comment"># create user</span></span><br><span class="line">mysql &gt; create user <span class="string">&#x27;celest&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified by <span class="string">&#x27;celest&#x27;</span>;</span><br><span class="line">mysql &gt; grant all privileges on *.* to <span class="string">&#x27;celest&#x27;</span>@<span class="string">&#x27;%&#x27;</span> with grant option;</span><br><span class="line">mysql &gt; flush privileges;</span><br><span class="line">mysql &gt; <span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/hive</span><br><span class="line">cp conf/hive-env.sh.template conf/hive-env.sh</span><br><span class="line">subl conf/hive-env.sh</span><br><span class="line"><span class="comment"># add this line to file</span></span><br><span class="line"><span class="comment"># export HADOOP_HOME=/usr/local/hadoop</span></span><br><span class="line">cp conf/hive-default.xml.template conf/hive-site.xml</span><br><span class="line">subl hive-site.xml</span><br><span class="line"><span class="comment"># modify file like below</span></span><br><span class="line"><span class="comment"># &lt;property&gt;</span></span><br><span class="line"><span class="comment">#   &lt;name&gt;hive.metastore.warehouse.dir&lt;/name&gt;</span></span><br><span class="line"><span class="comment">#   &lt;value&gt;/user/celest/warehouse&lt;/value&gt;</span></span><br><span class="line"><span class="comment">#   &lt;description&gt;location of default database for the warehouse &lt;/ description&gt;</span></span><br><span class="line"><span class="comment"># &lt;/property&gt;</span></span><br><span class="line"><span class="comment"># &lt;property&gt;</span></span><br><span class="line"><span class="comment">#   &lt;name&gt;javax.jdo.option.ConnectionURL&lt;/name&gt;</span></span><br><span class="line"><span class="comment">#   &lt;value&gt;jdbc:mysql://localhost:3306/hive?createDatabaseIfNotExist=true&lt;/value&gt;</span></span><br><span class="line"><span class="comment"># &lt;/property&gt;</span></span><br><span class="line"><span class="comment"># &lt;property&gt;</span></span><br><span class="line"><span class="comment">#   &lt;name&gt;javax.jdo.option.ConnectionDriverName&lt;/name&gt;</span></span><br><span class="line"><span class="comment">#   &lt;value&gt;com.mysql.jdbc.Driver&lt;/value&gt;</span></span><br><span class="line"><span class="comment"># &lt;/property&gt;</span></span><br><span class="line"><span class="comment"># &lt;property&gt;</span></span><br><span class="line"><span class="comment">#   &lt;name&gt;javax.jdo.option.ConnectionUserName&lt;/name&gt;</span></span><br><span class="line"><span class="comment">#   &lt;value&gt;celest&lt;/value&gt;</span></span><br><span class="line"><span class="comment"># &lt;/property&gt;</span></span><br><span class="line"><span class="comment"># &lt;property&gt;</span></span><br><span class="line"><span class="comment">#   &lt;name&gt;javax.jdo.option.ConnectionPassword&lt;/name&gt;</span></span><br><span class="line"><span class="comment">#   &lt;value&gt;celest&lt;/value&gt;</span></span><br><span class="line"><span class="comment"># &lt;/property&gt;</span></span><br><span class="line"><span class="comment"># &lt;property&gt;</span></span><br><span class="line"><span class="comment">#   &lt;name&gt;hive.querylog.location&lt;/name&gt;</span></span><br><span class="line"><span class="comment">#   &lt;value&gt;/usr/local/hive/log&lt;/value&gt;</span></span><br><span class="line"><span class="comment">#   &lt;description&gt;</span></span><br><span class="line"><span class="comment">#     Location of Hive run time structured log file</span></span><br><span class="line"><span class="comment">#   &lt;/description&gt;</span></span><br><span class="line"><span class="comment"># &lt;/property&gt;</span></span><br><span class="line"><span class="comment"># &lt;property&gt;</span></span><br><span class="line"><span class="comment">#   &lt;name&gt;hive.server2.logging.operation.log.location&lt;/name&gt;</span></span><br><span class="line"><span class="comment">#   &lt;value&gt;/usr/local/hive/log/operation_logs&lt;/#alue&gt;</span></span><br><span class="line"><span class="comment">#   &lt;description&gt;Top level directory where operation logs are stored if logging functionality is enabled&lt;/description&gt;</span></span><br><span class="line"><span class="comment"># &lt;/property&gt;</span></span><br><span class="line"><span class="comment"># &lt;property&gt;</span></span><br><span class="line"><span class="comment">#   &lt;name&gt;hive.exec.local.scratchdir&lt;/name&gt;</span></span><br><span class="line"><span class="comment">#   &lt;value&gt;/usr/local/hive/tmpdir/tmp&lt;/value&gt;</span></span><br><span class="line"><span class="comment">#   &lt;description&gt;Local scratch space for Hive jobs&lt;/description&gt;</span></span><br><span class="line"><span class="comment"># &lt;/property&gt;</span></span><br><span class="line"><span class="comment"># &lt;property&gt;</span></span><br><span class="line"><span class="comment">#   &lt;name&gt;hive.downloaded.resources.dir&lt;/name&gt;</span></span><br><span class="line"><span class="comment">#   &lt;value&gt;/usr/local/hive/tmpdir/tmp_resources&lt;/value&gt;</span></span><br><span class="line"><span class="comment">#   &lt;description&gt;Temporary local directory for added resources in the remote file system.&lt;/description&gt;</span></span><br><span class="line"><span class="comment"># &lt;/property&gt;</span></span><br><span class="line"><span class="built_in">cd</span> ~/Downloads</span><br><span class="line">wget http://ftp.kaist.ac.kr/mysql/Downloads/Connector-J/mysql-connector-java-5.1.35.tar.gz</span><br><span class="line">tar zxvf mysql-connector-java-5.1.35.tar.gz</span><br><span class="line">cp -R mysql-connector-java-5.1.35//home/celest/Downloads/mysql-connector-java-5.1.35/mysql-connector-java-5.1.35-bin.jar /usr/<span class="built_in">local</span>/hive/lib/</span><br><span class="line"></span><br><span class="line"><span class="comment">## test hive</span></span><br><span class="line">mkdir /usr/<span class="built_in">local</span>/hive/tmpdir</span><br><span class="line">mkdir /usr/<span class="built_in">local</span>/hive/tmpdir/logs</span><br><span class="line">mkdir /usr/<span class="built_in">local</span>/hive/tmpdir/operation_logs</span><br><span class="line">mkdir /usr/<span class="built_in">local</span>/hive/tmpdir/tmp</span><br><span class="line">mkdir /usr/<span class="built_in">local</span>/hive/tmpdir/tmp_resources</span><br><span class="line">hdfs dfs -mkdir /user/celest/warehouse</span><br><span class="line">hive</span><br><span class="line">hive &gt; show tables;</span><br><span class="line">hive &gt; <span class="built_in">exit</span>;</span><br><span class="line"></span><br><span class="line">mysql -u celest -p</span><br><span class="line">mysql &gt; show databases;</span><br><span class="line">mysql &gt; use hive</span><br><span class="line">mysql &gt; show tables;</span><br><span class="line">mysql &gt; <span class="built_in">exit</span></span><br><span class="line"><span class="comment"># There shows that the hive had connected to mysql server.</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>BigData</category>
      </categories>
      <tags>
        <tag>Mint</tag>
        <tag>BigData</tag>
        <tag>Hadoop</tag>
        <tag>HBase</tag>
        <tag>Hive</tag>
      </tags>
  </entry>
  <entry>
    <title>Installations of spyder2 and spyder3</title>
    <url>/posts/201504/2015-04-09-installation-of-spyder2-and-spyder3.html</url>
    <content><![CDATA[<p>A simple log for installation of spyder2 and spyder3.</p>
<a id="more"></a>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install python-qt4 python-sphinx python-numpy python-scipy python-matplotlib</span><br><span class="line"><span class="comment"># recommended modules</span></span><br><span class="line">sudo easy_install ipython rope pyflakes pylint pep8 psutil</span><br><span class="line">sudo easy_install spyder</span><br><span class="line"><span class="comment"># python 3</span></span><br><span class="line">sudo apt-get install python3-pyqt4 python3-sphinx python3-numpy python3-scipy python3-matplotlib</span><br><span class="line">sudo easy_install3 ipython rope pylint pep8 pyflakes psutil</span><br><span class="line">sudo easy_install3 spyder</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># python 2.7</span></span><br><span class="line">spyder</span><br><span class="line"><span class="comment"># python 3</span></span><br><span class="line">spyder3</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Spyder</tag>
      </tags>
  </entry>
  <entry>
    <title>Installations of rhdfs, rmr2, plyrmr and rhbase</title>
    <url>/posts/201504/2015-04-08-installations-of-rhdfs-rmr2-plyrmr-and-hbase.html</url>
    <content><![CDATA[<p>Rsudio provides a series of packages for the connection between R and hadoop. rhdfs provides the manipulation of HDFS in hadoop in R. rmr2 and plyrmr let user do mapreduce job in R. rhbase allow user to access data in hbase.</p>
<a id="more"></a>

<p>Before using packages in R, we implement wordcount by using hadoop streaming. First, export the hadoop home in the terminal by command <code>export HADOOP_HOME=/usr/local/hadoop/</code>. New two R files named mapper.R and reducer.R, respectively.</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env Rscript</span></span><br><span class="line"><span class="comment">## mapper.R</span></span><br><span class="line">trimWhiteSpace &lt;- <span class="keyword">function</span>(line) gsub(<span class="string">&quot;(^ +)|( +$)&quot;</span>, <span class="string">&quot;&quot;</span>, line)</span><br><span class="line">splitIntoWords &lt;- <span class="keyword">function</span>(line) unlist(strsplit(line, <span class="string">&quot;[[:space:]]+&quot;</span>))</span><br><span class="line">con &lt;- file(<span class="string">&quot;stdin&quot;</span>, open = <span class="string">&quot;r&quot;</span>)</span><br><span class="line"><span class="keyword">while</span> (length(line &lt;- readLines(con, n = <span class="number">1</span>, warn = <span class="literal">FALSE</span>)) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    line &lt;- trimWhiteSpace(line)</span><br><span class="line">    words &lt;- splitIntoWords(line)</span><br><span class="line">    <span class="comment">## **** can be done as cat(paste(words, &quot;\t1\n&quot;, sep=&quot;&quot;), sep=&quot;&quot;)</span></span><br><span class="line">    <span class="keyword">for</span> (w <span class="keyword">in</span> words)</span><br><span class="line">        cat(w, <span class="string">&quot;\t1\n&quot;</span>, sep=<span class="string">&quot;&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">close(con)</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env Rscript</span></span><br><span class="line"><span class="comment"># reducer.R</span></span><br><span class="line">trimWhiteSpace &lt;- <span class="keyword">function</span>(line) gsub(<span class="string">&quot;(^ +)|( +$)&quot;</span>, <span class="string">&quot;&quot;</span>, line)</span><br><span class="line">splitLine &lt;- <span class="keyword">function</span>(line) &#123;</span><br><span class="line">    val &lt;- unlist(strsplit(line, <span class="string">&quot;\t&quot;</span>))</span><br><span class="line">    list(word = val[<span class="number">1</span>], count = as.integer(val[<span class="number">2</span>]))</span><br><span class="line">&#125;</span><br><span class="line">env &lt;- new.env(hash = <span class="literal">TRUE</span>)</span><br><span class="line">con &lt;- file(<span class="string">&quot;stdin&quot;</span>, open = <span class="string">&quot;r&quot;</span>)</span><br><span class="line"><span class="keyword">while</span> (length(line &lt;- readLines(con, n = <span class="number">1</span>, warn = <span class="literal">FALSE</span>)) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    line &lt;- trimWhiteSpace(line)</span><br><span class="line">    split &lt;- splitLine(line)</span><br><span class="line">    word &lt;- split$word</span><br><span class="line">    count &lt;- split$count</span><br><span class="line">    <span class="keyword">if</span> (exists(word, envir = env, inherits = <span class="literal">FALSE</span>)) &#123;</span><br><span class="line">        oldcount &lt;- get(word, envir = env)</span><br><span class="line">        assign(word, oldcount + count, envir = env)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> assign(word, count, envir = env)</span><br><span class="line">&#125;</span><br><span class="line">close(con)</span><br><span class="line"><span class="keyword">for</span> (w <span class="keyword">in</span> ls(env, all = <span class="literal">TRUE</span>))</span><br><span class="line">    cat(w, <span class="string">&quot;\t&quot;</span>, get(w, envir = env), <span class="string">&quot;\n&quot;</span>, sep = <span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>Using the example in previous article for hadoop and run hadoop streaming in the terminal:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/Downloads &amp;&amp; mkdir testData &amp;&amp; <span class="built_in">cd</span> testData</span><br><span class="line">wget http://www.gutenberg.org/ebooks/5000.txt.utf-8</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line">hdfs dfs -copyFromLocal testData/ /user/celest/</span><br><span class="line">hadoop jar /usr/<span class="built_in">local</span>/hadoop/share/hadoop/tools/lib/hadoop-streaming-2.6.0.jar \</span><br><span class="line">-files mapper.R,reducer.R,/opt/intel/composer_xe_2013_sp1.3.174/compiler/lib/intel64/libiomp5.so \</span><br><span class="line">-mapper <span class="string">&quot;mapper.R -m&quot;</span> -reducer <span class="string">&quot;reducer.R -r&quot;</span> \</span><br><span class="line">-input /user/celest/testData/* -output /user/celest/testData2-output</span><br><span class="line">hdfs dfs -cat /user/celest/testData2-output/part-00000</span><br></pre></td></tr></table></figure>

<p>We can obtain the same result for wordcount. Next, we are going to install the following packages:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rhdfs</span><br><span class="line">rmr</span><br><span class="line">ravro</span><br><span class="line">plyrmr</span><br><span class="line">rhbase</span><br></pre></td></tr></table></figure>

<p>Note that ravro is the data parser for avro in R.</p>
<p>Some dependencies need to be installed in system:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install libcurl4-openssl-dev git</span><br><span class="line">R CMD javareconf <span class="comment"># setting the environment for R</span></span><br><span class="line"><span class="comment"># for rhbase</span></span><br><span class="line">sudo apt-get install libboost-dev libboost-test-dev libboost-program-options-dev libboost-system-dev libboost-filesystem-dev libevent-dev automake libtool flex bison pkg-config g++ libssl-dev</span><br><span class="line"><span class="comment"># optional package to install</span></span><br><span class="line">sudo apt-get install php5-dev php5-cli phpunit libbit-vector-perl libclass-accessor-class-perl python-all python-all-dev python-all-dbg libglib2.0-dev ruby-full ruby-dev ruby-rspec rake</span><br><span class="line">sudo gem install daemons gem_plugin mongrel</span><br><span class="line">wget http://apache.stu.edu.tw//ant/binaries/apache-ant-1.9.4-bin.tar.gz</span><br><span class="line">tar -zxvf apache-ant-1.9.4-bin.tar.gz</span><br><span class="line"><span class="built_in">cd</span> apache-ant-1.9.4-bin</span><br><span class="line">sudo mv apache-ant-1.9.4-bin /usr/<span class="built_in">local</span>/ant</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span></span><br><span class="line">sudo chown -R celest ant</span><br><span class="line"><span class="comment"># install mongrel may occur error, to see http://stackoverflow.com/questions/13851741/install-mongrel-in-ruby-1-9-3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># install thrift (for rhbase)</span></span><br><span class="line"><span class="built_in">cd</span> ~/Downloads</span><br><span class="line">wget http://apache.stu.edu.tw/thrift/0.9.2/thrift-0.9.2.tar.gz</span><br><span class="line">tar -zxvf thrift-0.9.2.tar.gz</span><br><span class="line"><span class="built_in">cd</span> thrift-0.9.2</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br><span class="line">sudo cp /usr/<span class="built_in">local</span>/lib/libthrift-0.9.2.so /usr/lib/</span><br><span class="line">sudo /sbin/ldconfig /usr/lib/libthrift-0.9.2.so</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo subl /etc/bash.bashrc</span><br><span class="line"><span class="comment"># add following 7 lines into file</span></span><br><span class="line"><span class="comment"># # for rhbase</span></span><br><span class="line"><span class="comment"># export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/lib/pkgconfig/</span></span><br><span class="line"><span class="comment"># # for rhdfs and rmr2</span></span><br><span class="line"><span class="comment"># export HADOOP_CMD=/usr/local/hadoop/bin/hadoop</span></span><br><span class="line"><span class="comment"># # for rmr2</span></span><br><span class="line"><span class="comment"># export HADOOP_STREAMING=/usr/local/hadoop/share/hadoop/tools/lib/hadoop-streaming-2.6.0.jar</span></span><br><span class="line">subl /usr/<span class="built_in">local</span>/hadoop/etc/hadoop/hadoop-env.sh</span><br><span class="line"><span class="comment"># # for compiled R by mkl</span></span><br><span class="line"><span class="comment"># source /opt/intel/composer_xe_2013_sp1.3.174/mkl/bin/mklvars.sh intel64</span></span><br><span class="line"><span class="comment"># source /opt/intel/composer_xe_2015.1.133/mkl/bin/mklvars.sh intel64</span></span><br><span class="line"><span class="comment"># # for compiled R by icc</span></span><br><span class="line"><span class="comment"># source /opt/intel/composer_xe_2013_sp1.3.174/bin/compilervars.sh intel64</span></span><br><span class="line"><span class="comment"># source /opt/intel/composer_xe_2015.1.133/bin/compilervars.sh intel64</span></span><br><span class="line"><span class="comment"># # for hive</span></span><br><span class="line"><span class="comment"># export R_HOME=/usr/lib/R</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> /etc/bash.bashrc</span><br><span class="line"><span class="comment"># in ubuntu, is &gt;&gt; etc/bash.bashrc</span></span><br><span class="line">start-dfs.sh</span><br><span class="line">start-yarn.sh</span><br><span class="line">hive --service hiveserver</span><br></pre></td></tr></table></figure>

<p>Install the dependent R packages:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">install.packages(c(<span class="string">&quot;rJava&quot;</span>, <span class="string">&quot;Rcpp&quot;</span>, <span class="string">&quot;rjson&quot;</span>, <span class="string">&quot;RJSONIO&quot;</span>, <span class="string">&quot;bit64&quot;</span>, <span class="string">&quot;reshape2&quot;</span>, <span class="string">&quot;data.table&quot;</span>, <span class="string">&quot;plyr&quot;</span>, <span class="string">&quot;dplyr&quot;</span>, <span class="string">&quot;digest&quot;</span>, <span class="string">&quot;functional&quot;</span>, <span class="string">&quot;stringr&quot;</span>, <span class="string">&quot;caTools&quot;</span>, <span class="string">&quot;lazyeval&quot;</span>, <span class="string">&quot;Hmisc&quot;</span>, <span class="string">&quot;testthat&quot;</span>, <span class="string">&quot;devtools&quot;</span>, <span class="string">&quot;iterators&quot;</span>, <span class="string">&quot;itertools&quot;</span>, <span class="string">&quot;pryr&quot;</span>))</span><br><span class="line"><span class="keyword">library</span>(devtools)</span><br><span class="line">install_github(<span class="string">&quot;RevolutionAnalytics/quickcheck@3.2.0&quot;</span>, subdir = <span class="string">&quot;pkg&quot;</span>)</span><br><span class="line">install_github(<span class="string">&quot;RevolutionAnalytics/memoise&quot;</span>)</span><br><span class="line">install_github(<span class="string">&quot;RevolutionAnalytics/rhdfs&quot;</span>, subdir = <span class="string">&quot;pkg&quot;</span>)</span><br><span class="line">install_github(<span class="string">&quot;RevolutionAnalytics/ravro&quot;</span>, subdir = <span class="string">&quot;pkg/ravro&quot;</span>)</span><br><span class="line">install_github(<span class="string">&quot;RevolutionAnalytics/rmr2&quot;</span>, subdir = <span class="string">&quot;pkg&quot;</span>)</span><br><span class="line">install_github(<span class="string">&quot;RevolutionAnalytics/plyrmr&quot;</span>, subdir = <span class="string">&quot;pkg&quot;</span>)</span><br><span class="line">install_github(<span class="string">&quot;RevolutionAnalytics/rhbase&quot;</span>, subdir = <span class="string">&quot;pkg&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>When I install rhbase, I encounter a problem. The command <code>pkg-config --cflags thrift</code> does not return <code>-I/usr/local/include</code> instead the correct path <code>-I/usr/local/include/thrift</code>. So I copy all files in <code>/usr/local/include/thrift</code> into <code>-I/usr/local/include</code> by <code>cp -R /usr/local/include/thrift/* /usr/local/include/</code>.</p>
<p>When I use the function <code>hdfs.init()</code> in package <code>rhdfs</code>, it come to a error massage:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">sh: /usr/lib/hadoop/bin/: is a directory</span><br><span class="line">Error <span class="keyword">in</span> .jnew(<span class="string">&quot;org/apache/hadoop/conf/Configuration&quot;</span>) :</span><br><span class="line">   java.lang.ClassNotFoundException</span><br><span class="line">In addition: Warning message:</span><br><span class="line">running command <span class="string">&#x27;/usr/lib/hadoop/bin/ classpath&#x27;</span> had status <span class="number">126</span></span><br></pre></td></tr></table></figure>

<p>The reason why cause this problem is wrong setting of HADOOP_CMD, fix it and get work.</p>
<p>install rhbase, I encounter a problem. The command <code>pkg-config --cflags thrift</code> does not return <code>-I/usr/local/include</code> instead the correct path <code>-I/usr/local/include/thrift</code>. So I copy all files in <code>/usr/local/include/thrift</code> into <code>-I/usr/local/include</code> by <code>cp -R /usr/local/include/thrift/* /usr/local/include/</code>.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/Downloads</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/RevolutionAnalytics/rmr2.git</span><br><span class="line">mv rmr2/pkg pkg</span><br><span class="line">rm -r rmr2</span><br><span class="line">mv pkg rmr2</span><br><span class="line">subl rmr2/R/streaming.R</span><br><span class="line">R CMD INSTALL rmr2</span><br></pre></td></tr></table></figure>

<p>The lines shown in following:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">paste.options(</span><br><span class="line">  files =</span><br><span class="line">    paste(</span><br><span class="line">      collapse = <span class="string">&quot;,&quot;</span>,</span><br><span class="line">        c(image.files, map.file, reduce.file, combine.file)))</span><br></pre></td></tr></table></figure>

<p>can be modified to following:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">## for intel parallel studio 2013</span></span><br><span class="line">paste.options(</span><br><span class="line">  files =</span><br><span class="line">    paste(</span><br><span class="line">      collapse = <span class="string">&quot;,&quot;</span>,</span><br><span class="line">        c(image.files, map.file, reduce.file, combine.file,</span><br><span class="line">                <span class="string">&quot;/opt/intel/composer_xe_2015.1.133/compiler/lib/intel64/libiomp5.so&quot;</span>,</span><br><span class="line">                <span class="string">&quot;/usr/lib/jvm/java-8-oracle/jre/lib/amd64/server/libjvm.so&quot;</span>))),</span><br><span class="line"></span><br><span class="line"><span class="comment">## for intel parallel studio 2015</span></span><br><span class="line">paste.options(</span><br><span class="line">  files =</span><br><span class="line">    paste(</span><br><span class="line">      collapse = <span class="string">&quot;,&quot;</span>,</span><br><span class="line">        c(image.files, map.file, reduce.file, combine.file,</span><br><span class="line">                <span class="string">&quot;/opt/intel/composer_xe_2015.1.133/compiler/lib/intel64/libiomp5.so&quot;</span>,</span><br><span class="line">                <span class="string">&quot;/opt/intel/composer_xe_2015.1.133/compiler/lib/intel64/libifport.so.5&quot;</span>,</span><br><span class="line">                <span class="string">&quot;/opt/intel/composer_xe_2015.1.133/compiler/lib/intel64/libifcoremt.so.5&quot;</span>,</span><br><span class="line">                <span class="string">&quot;/opt/intel/composer_xe_2015.1.133/compiler/lib/intel64/libimf.so&quot;</span>,</span><br><span class="line">                <span class="string">&quot;/opt/intel/composer_xe_2015.1.133/compiler/lib/intel64/libsvml.so&quot;</span>,</span><br><span class="line">                <span class="string">&quot;/opt/intel/composer_xe_2015.1.133/compiler/lib/intel64/libirc.so&quot;</span>,</span><br><span class="line">                <span class="string">&quot;/opt/intel/composer_xe_2015.1.133/compiler/lib/intel64/libirng.so&quot;</span>,</span><br><span class="line">                <span class="string">&quot;/opt/intel/composer_xe_2015.1.133/compiler/lib/intel64/libintlc.so.5&quot;</span>,</span><br><span class="line">                <span class="string">&quot;/usr/lib/jvm/java-8-oracle/jre/lib/amd64/server/libjvm.so&quot;</span>))),</span><br></pre></td></tr></table></figure>

<p>Test rhadoop series packages:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># test rhdfs</span></span><br><span class="line"><span class="keyword">library</span>(rhdfs)</span><br><span class="line"><span class="keyword">library</span>(data.table)</span><br><span class="line"><span class="keyword">library</span>(dplyr)</span><br><span class="line"><span class="keyword">library</span>(magrittr)</span><br><span class="line">N = <span class="number">300</span></span><br><span class="line">mydata = replicate(<span class="number">3</span>, rnorm(N)) %&gt;% tbl_dt() %&gt;%</span><br><span class="line">  setnames(paste0(<span class="string">&quot;x&quot;</span>, <span class="number">1</span>:<span class="number">3</span>)) %&gt;% mutate(y = x1+<span class="number">2</span>*x2+<span class="number">3</span>*x3+rnorm(N,<span class="number">0</span>,<span class="number">5</span>))</span><br><span class="line">model = lm(y ~., mydata)</span><br><span class="line">hdfs.init()</span><br><span class="line">modelfilename = <span class="string">&quot;mymodel&quot;</span></span><br><span class="line">modelfile = hdfs.file(modelfilename, <span class="string">&quot;w&quot;</span>)</span><br><span class="line">hdfs.write(model, modelfile)</span><br><span class="line">hdfs.close(modelfile)</span><br><span class="line">model</span><br><span class="line"><span class="comment"># Call:</span></span><br><span class="line"><span class="comment"># lm(formula = y ~ ., data = mydata)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Coefficients:</span></span><br><span class="line"><span class="comment"># (Intercept)           x1           x2           x3</span></span><br><span class="line"><span class="comment">#      0.1105       1.9879       2.6298       3.0040</span></span><br><span class="line"></span><br><span class="line">modelfile = hdfs.file(modelfilename, <span class="string">&quot;r&quot;</span>)</span><br><span class="line">m = hdfs.read(modelfile)</span><br><span class="line">model2 = unserialize(m)</span><br><span class="line">hdfs.close(modelfile)</span><br><span class="line">model2</span><br><span class="line"><span class="comment"># Call:</span></span><br><span class="line"><span class="comment"># lm(formula = y ~ ., data = mydata)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Coefficients:</span></span><br><span class="line"><span class="comment"># (Intercept)           x1           x2           x3</span></span><br><span class="line"><span class="comment">#      0.1105       1.9879       2.6298       3.0040</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">N = <span class="number">3000</span></span><br><span class="line">mydata = replicate(<span class="number">3</span>, rnorm(N)) %&gt;% tbl_dt() %&gt;%</span><br><span class="line">  setnames(paste0(<span class="string">&quot;x&quot;</span>, <span class="number">1</span>:<span class="number">3</span>)) %&gt;% mutate(y = x1+<span class="number">2</span>*x2+<span class="number">3</span>*x3+rnorm(N,<span class="number">0</span>,<span class="number">5</span>))</span><br><span class="line">model = lm(y ~., mydata)</span><br><span class="line">modelfilename = <span class="string">&quot;my_smart_unique_name&quot;</span></span><br><span class="line">modelfile = hdfs.file(modelfilename, <span class="string">&quot;w&quot;</span>)</span><br><span class="line">hdfs.write(model, modelfile)</span><br><span class="line">hdfs.close(modelfile)</span><br><span class="line">model</span><br><span class="line"></span><br><span class="line"><span class="comment"># Call:</span></span><br><span class="line"><span class="comment"># lm(formula = y ~ ., data = mydata)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Coefficients:</span></span><br><span class="line"><span class="comment"># (Intercept)           x1           x2           x3</span></span><br><span class="line"><span class="comment">#      0.2506       1.2038       1.9056       3.0477</span></span><br><span class="line"></span><br><span class="line">modelfile = hdfs.file(modelfilename, <span class="string">&quot;r&quot;</span>)</span><br><span class="line">m = hdfs.read(modelfile)itertools</span><br><span class="line">model2 = unserialize(m)</span><br><span class="line"><span class="comment"># error in reading data</span></span><br><span class="line">hdfs.close(modelfile)</span><br><span class="line"></span><br><span class="line">length(serialize(model,<span class="literal">NULL</span>))</span><br><span class="line"><span class="comment"># [1] 131535</span></span><br><span class="line">length(m)</span><br><span class="line"><span class="comment"># [1] 65536</span></span><br><span class="line"><span class="comment"># it return the wrong size!</span></span><br><span class="line"></span><br><span class="line">modelfile = hdfs.file(modelfilename, <span class="string">&quot;r&quot;</span>)</span><br><span class="line">fileSize = hdfs.file.info(paste0(<span class="string">&quot;/user/celest/&quot;</span>, modelfilename))$size</span><br><span class="line">m = <span class="literal">NULL</span></span><br><span class="line">i = <span class="number">1</span></span><br><span class="line"><span class="keyword">repeat</span></span><br><span class="line">&#123;</span><br><span class="line">  break_out = <span class="number">65536</span>*i &gt; fileSize</span><br><span class="line">  size = ifelse(break_out, <span class="number">65536</span>, fileSize - <span class="number">65536</span>*(i-<span class="number">1</span>))</span><br><span class="line">  tmp = hdfs.read(modelfile, size, <span class="number">65536</span>*(i-<span class="number">1</span>))</span><br><span class="line">  m = c(m, tmp)</span><br><span class="line">  i = i + <span class="number">1</span></span><br><span class="line">  <span class="keyword">if</span> (break_out)</span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">model2 = unserialize(m)</span><br><span class="line">hdfs.close(modelfile)</span><br><span class="line">length(m)</span><br><span class="line"><span class="comment"># [1] 131535</span></span><br><span class="line">model2</span><br><span class="line"><span class="comment"># to delete this data by using following command</span></span><br><span class="line"><span class="comment"># hdfs.rm(&quot;/user/celest/my_smart_unique_name&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Call:</span></span><br><span class="line"><span class="comment"># lm(formula = y ~ ., data = mydata)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Coefficients:</span></span><br><span class="line"><span class="comment"># (Intercept)           x1           x2           x3</span></span><br><span class="line"><span class="comment">#      0.2506       1.2038       1.9056       3.0477</span></span><br></pre></td></tr></table></figure>

<p>Back to terminal, you can use hdfs to find what R write. (There is some functions in R doing the same way.)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hdfs dfs -ls <span class="comment"># hdfs.ls(&quot;/user/celest&quot;) in R</span></span><br><span class="line"><span class="comment">## Found 1 items</span></span><br><span class="line"><span class="comment">## -rw-r--r--   3 celest supergroup     131535 2015-04-06 13:50 my_smart_unique_name</span></span><br><span class="line"><span class="comment"># remove the file</span></span><br><span class="line">hdfs dfs -rm -r my_smart_unique_name <span class="comment"># hdfs.rm(&quot;/user/celest/my_smart_unique_name&quot;) in R</span></span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Sys.setenv(&quot;HADOOP_CMD&quot;=&quot;/usr/local/hadoop/bin/hadoop&quot;)</span></span><br><span class="line"><span class="comment"># test the rmr2 plyrmr</span></span><br><span class="line"><span class="keyword">library</span>(data.table)</span><br><span class="line"><span class="keyword">library</span>(dplyr)</span><br><span class="line"><span class="keyword">library</span>(magrittr)</span><br><span class="line"><span class="keyword">library</span>(rmr2)</span><br><span class="line"><span class="keyword">library</span>(plyrmr)</span><br><span class="line"><span class="keyword">library</span>(rhdfs)</span><br><span class="line"><span class="comment"># a simple case</span></span><br><span class="line">ints = to.dfs(<span class="number">1</span>:<span class="number">100</span>)</span><br><span class="line">calc = mapreduce(input = ints, map = <span class="keyword">function</span>(k, v) cbind(v, v=<span class="number">2</span>*v))</span><br><span class="line">output = from.dfs(calc)</span><br><span class="line">output</span><br><span class="line">ints2 = to.dfs(matrix(rnorm(<span class="number">25</span>), <span class="number">5</span>))</span><br><span class="line">calc2 = mapreduce(input = ints2, map = <span class="keyword">function</span>(k, v) v %*% v)</span><br><span class="line">output2 = from.dfs(calc2)</span><br><span class="line">output2</span><br><span class="line"><span class="comment"># $key</span></span><br><span class="line"><span class="comment"># NULL</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># $val</span></span><br><span class="line"><span class="comment">#          v</span></span><br><span class="line"><span class="comment">#   [1,]   1   2</span></span><br><span class="line"><span class="comment">#   [2,]   2   4</span></span><br><span class="line"><span class="comment">#   [3,]   3   6</span></span><br><span class="line"><span class="comment">#   [4,]   4   8</span></span><br><span class="line"><span class="comment">#   [5,]   5  10</span></span><br><span class="line"><span class="comment">#   [6,]   6  12</span></span><br><span class="line"><span class="comment">#   [7,]   7  14</span></span><br><span class="line"><span class="comment">#   [8,]   8  16</span></span><br><span class="line"><span class="comment">#   ............</span></span><br><span class="line"></span><br><span class="line">N = <span class="number">15</span></span><br><span class="line">dat = replicate(<span class="number">3</span>, rnorm(N)) %&gt;% tbl_dt() %&gt;%</span><br><span class="line">  setnames(paste0(<span class="string">&quot;x&quot;</span>, <span class="number">1</span>:<span class="number">3</span>)) %&gt;% mutate(y = x1+<span class="number">2</span>*x2+<span class="number">3</span>*x3+rnorm(N,<span class="number">0</span>,<span class="number">5</span>)) %&gt;%</span><br><span class="line">  as.data.frame()</span><br><span class="line">hdfs.init()</span><br><span class="line">mydata = to.dfs(dat)</span><br><span class="line">as.data.frame(input(mydata), x1_x2 = x1*x2)</span><br><span class="line">bind.cols(input(mydata), x1_x2 = x1*x2)</span><br><span class="line">output(bind.cols(input(mydata),x1_x2 = x1*x2), <span class="string">&quot;/tmp/mydata2&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># test the rhbase</span></span><br><span class="line">hbase thrift start</span><br><span class="line">R</span><br><span class="line">R &gt; <span class="keyword">library</span>(rhbase)</span><br><span class="line">R &gt; hb.list.tables() <span class="comment"># list()</span></span><br><span class="line">R &gt; q(<span class="string">&quot;no&quot;</span>)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>BigData</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>Mint</tag>
        <tag>BigData</tag>
        <tag>Hadoop</tag>
        <tag>HBase</tag>
        <tag>Hive</tag>
        <tag>rhdfs</tag>
        <tag>rmr2</tag>
        <tag>plyrmr</tag>
        <tag>rhbase</tag>
      </tags>
  </entry>
  <entry>
    <title>Hadoop and python</title>
    <url>/posts/201504/2015-04-10-hadoop-and-python.html</url>
    <content><![CDATA[<p>A simple log for doing a job of mapreduce in python.</p>
<p>We implement wordcount by using hadoop streaming. New two python script files named mapper.py and reducer.py, respectively.</p>
<a id="more"></a>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">## mapper.py</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">    line = line.strip()</span><br><span class="line">    words = line.split()</span><br><span class="line">    <span class="keyword">for</span> word <span class="keyword">in</span> words:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&#x27;%s\t%s&#x27;</span> % (word, <span class="number">1</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">## reducer.py</span></span><br><span class="line"><span class="keyword">from</span> operator <span class="keyword">import</span> itemgetter</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">current_word = <span class="literal">None</span></span><br><span class="line">current_count = <span class="number">0</span></span><br><span class="line">word = <span class="literal">None</span></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">    line = line.strip()</span><br><span class="line">    word, count = line.split(<span class="string">&#x27;\t&#x27;</span>, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        count = int(count)</span><br><span class="line">    <span class="keyword">except</span> ValueError:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> current_word == word:</span><br><span class="line">        current_count += count</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> current_word:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">&#x27;%s\t%s&#x27;</span> % (current_word, current_count)</span><br><span class="line">        current_count = count</span><br><span class="line">        current_word = word</span><br><span class="line"><span class="keyword">if</span> current_word == word:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">&#x27;%s\t%s&#x27;</span> % (current_word, current_count)</span><br></pre></td></tr></table></figure>

<p>Using the example in previous article for hadoop and run hadoop streaming in the terminal:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/Downloads &amp;&amp; mkdir testData &amp;&amp; <span class="built_in">cd</span> testData</span><br><span class="line">wget http://www.gutenberg.org/ebooks/5000.txt.utf-8</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line">hdfs dfs -copyFromLocal testData/ /user/celest/</span><br><span class="line">hdfs dfs -ls /user/celest/testData/</span><br><span class="line"></span><br><span class="line">hadoop jar /usr/<span class="built_in">local</span>/hadoop/share/hadoop/tools/lib/hadoop-streaming-2.6.0.jar \</span><br><span class="line">-files mapper.py,reducer.py  -mapper <span class="string">&quot;mapper.py -m&quot;</span> \</span><br><span class="line">-reducer <span class="string">&quot;reducer.py -r&quot;</span>  -input /user/celest/testData/* \</span><br><span class="line">-output /user/celest/testData-output</span><br><span class="line"></span><br><span class="line">hdfs dfs -cat /user/celest/testData-output/part-00000</span><br></pre></td></tr></table></figure>

<p>We can obtain the same result for wordcount.</p>
]]></content>
      <categories>
        <category>BigData</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BigData</tag>
        <tag>MapReduce</tag>
      </tags>
  </entry>
  <entry>
    <title>Using Rcpp function in doSNOW and snowfall</title>
    <url>/posts/201504/2015-04-14-Using-Rcpp-function-in-doSNOW-and-snowfall.html</url>
    <content><![CDATA[<p>I had been searching how to use Rcpp function in snowfall or doSNOW for a long time, but there is still not a solution. I recently come up an idea to implement. Since the error is printed when exporting the Rcpp function to nodes, I compile Rcpp function in nodes. Surprisingly, I success.</p>
<a id="more"></a>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(data.table)</span><br><span class="line"><span class="keyword">library</span>(plyr)</span><br><span class="line"><span class="keyword">library</span>(dplyr)</span><br><span class="line"><span class="keyword">library</span>(magrittr)</span><br><span class="line"><span class="keyword">library</span>(foreach)</span><br><span class="line"><span class="keyword">library</span>(doSNOW)</span><br><span class="line"><span class="keyword">library</span>(snowfall)</span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(Rcpp)</span><br><span class="line"><span class="keyword">library</span>(RcppArmadillo)</span><br><span class="line">RcppCode = <span class="string">&#x27;</span></span><br><span class="line"><span class="string">// [[Rcpp::depends(RcppArmadillo)]]</span></span><br><span class="line"><span class="string">#include &lt;RcppArmadillo.h&gt;</span></span><br><span class="line"><span class="string">using namespace Rcpp;</span></span><br><span class="line"><span class="string">using namespace arma;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">List fastRidgeLM_Arma(NumericVector yr, NumericMatrix Xr, double lambda) &#123;</span></span><br><span class="line"><span class="string">  int n = Xr.nrow(), k = Xr.ncol();</span></span><br><span class="line"><span class="string">  mat X(Xr.begin(), n, k, false);</span></span><br><span class="line"><span class="string">  mat X2 = join_rows(ones&lt;mat&gt;(n, 1), X);</span></span><br><span class="line"><span class="string">  colvec y(yr.begin(), n, false);</span></span><br><span class="line"><span class="string">  colvec coef = solve(join_cols(X2, lambda*eye&lt;mat&gt;(k,k+1)),</span></span><br><span class="line"><span class="string">    join_cols(y, zeros&lt;colvec&gt;(k)));</span></span><br><span class="line"><span class="string">  colvec resid = y - X2*coef;</span></span><br><span class="line"><span class="string">  double sig2 = sum(square(resid)) / (n-k);</span></span><br><span class="line"><span class="string">  colvec stderrest = sqrt(sig2 * diagvec(inv((trans(X2) * X2))));</span></span><br><span class="line"><span class="string">  return List::create(Named(&quot;coefficients&quot;) = coef,</span></span><br><span class="line"><span class="string">                      Named(&quot;stderr&quot;) = stderrest);</span></span><br><span class="line"><span class="string">&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">sourceCpp(code = RcppCode)</span><br><span class="line"></span><br><span class="line">n = <span class="number">10000</span></span><br><span class="line">p = <span class="number">1000</span></span><br><span class="line">X = matrix(rnorm(n*p), n)</span><br><span class="line">tmp_B = matrix(<span class="number">0</span>, p, p)</span><br><span class="line">tmp_B[sample(<span class="number">1</span>:p, <span class="number">2</span>*p, replace = <span class="literal">TRUE</span>), sample(<span class="number">1</span>:p, <span class="number">2</span>*p, replace = <span class="literal">TRUE</span>)] = runif(<span class="number">2</span>*p)*<span class="number">2</span>-<span class="number">1</span></span><br><span class="line">diag(tmp_B) = <span class="number">1</span></span><br><span class="line">X = X %*% tmp_B</span><br><span class="line">Y = X %*% sample(seq(-<span class="number">5</span>, <span class="number">5</span>, length=p*<span class="number">3</span>), p) + rnorm(n, <span class="number">0</span>, <span class="number">10</span>)</span><br><span class="line">X.N = scale(X)</span><br><span class="line">Y.N = scale(Y)</span><br><span class="line">lambda = seq(<span class="number">0</span>, <span class="number">1</span>, length = <span class="number">51</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Example by selecting regularizer in the ridge regression</span></span><br><span class="line">cv_index_f = <span class="keyword">function</span>(n, fold = <span class="number">10</span>)&#123;</span><br><span class="line">  fold_n = floor(n / fold)</span><br><span class="line">  rem = n - fold_n * fold</span><br><span class="line">  size = rep(fold_n, fold)</span><br><span class="line">  <span class="keyword">if</span>(rem &gt; <span class="number">0</span>)</span><br><span class="line">    size[<span class="number">1</span>:rem] = fold_n + <span class="number">1</span></span><br><span class="line">  cv_index = <span class="number">1</span>:fold %&gt;% sapply(<span class="keyword">function</span>(i) rep(i, size[i])) %&gt;%</span><br><span class="line">    sample(length(.))</span><br><span class="line">  <span class="keyword">return</span>(cv_index)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sfInit(<span class="literal">TRUE</span>, <span class="number">2</span>)</span><br><span class="line">sfExport(<span class="string">&quot;Y.N&quot;</span>, <span class="string">&quot;X.N&quot;</span>, <span class="string">&quot;lambda&quot;</span>, <span class="string">&quot;RcppCode&quot;</span>)</span><br><span class="line">sfLibrary(<span class="string">&quot;Rcpp&quot;</span>, character.only=<span class="literal">TRUE</span>)</span><br><span class="line">sfLibrary(<span class="string">&quot;RcppArmadillo&quot;</span>, character.only=<span class="literal">TRUE</span>)</span><br><span class="line">sfClusterEval(sourceCpp(code = RcppCode))</span><br><span class="line"></span><br><span class="line">cl = makeCluster(<span class="number">2</span>, type = <span class="string">&quot;SOCK&quot;</span>)</span><br><span class="line">registerDoSNOW(cl)</span><br><span class="line">clusterExport(cl, c(<span class="string">&quot;Y.N&quot;</span>, <span class="string">&quot;X.N&quot;</span>, <span class="string">&quot;lambda&quot;</span>, <span class="string">&quot;RcppCode&quot;</span>))</span><br><span class="line">clusterEvalQ(cl, <span class="keyword">library</span>(Rcpp))</span><br><span class="line">clusterEvalQ(cl, <span class="keyword">library</span>(RcppArmadillo))</span><br><span class="line">clusterEvalQ(cl, sourceCpp(code = RcppCode))</span><br><span class="line"></span><br><span class="line">CV_f = <span class="keyword">function</span>(X, Y, lambda, n_fold, parallel, parPackage = <span class="string">&quot;foreach&quot;</span>)&#123;</span><br><span class="line">  cvIndex = cv_index_f(nrow(X), n_fold)</span><br><span class="line">  <span class="keyword">if</span> ((parPackage == <span class="string">&quot;foreach&quot;</span> &amp;&amp; parallel) || !parallel)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (parallel)</span><br><span class="line">      clusterExport(cl, <span class="string">&quot;cvIndex&quot;</span>, environment())</span><br><span class="line">    CVScores = aaply(<span class="number">1</span>:n_fold, <span class="number">1</span>, <span class="keyword">function</span>(i)&#123;</span><br><span class="line">      aaply(lambda, <span class="number">1</span>, <span class="keyword">function</span>(l)&#123;</span><br><span class="line">        tmp = fastRidgeLM_Arma(Y.N[cvIndex != i], X.N[cvIndex != i,], l)</span><br><span class="line">        mean((Y.N[cvIndex == i] - cbind(<span class="number">1</span>, X.N[cvIndex == i,]) %*%</span><br><span class="line">          tmp$coefficients)^<span class="number">2</span>)</span><br><span class="line">      &#125;, .parallel = parallel)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">if</span> (parallel)</span><br><span class="line">      clusterEvalQ(cl, rm(cvIndex))</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(parPackage == <span class="string">&quot;snowfall&quot;</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (parallel)</span><br><span class="line">      sfExport(<span class="string">&quot;cvIndex&quot;</span>)</span><br><span class="line">    CVScores = aaply(<span class="number">1</span>:n_fold, <span class="number">1</span>, <span class="keyword">function</span>(i)&#123;</span><br><span class="line">      sfSapply(lambda, <span class="keyword">function</span>(l)&#123;</span><br><span class="line">        tmp = fastRidgeLM_Arma(Y.N[cvIndex != i], X.N[cvIndex != i,], l)</span><br><span class="line">        mean((Y.N[cvIndex == i] - cbind(<span class="number">1</span>, X.N[cvIndex == i,]) %*%</span><br><span class="line">          tmp$coefficients)^<span class="number">2</span>)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">if</span> (parallel)</span><br><span class="line">      sfRemove(<span class="string">&quot;cvIndex&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  aaply(CVScores, <span class="number">2</span>, mean)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">library</span>(rbenchmark)</span><br><span class="line">benchmark(</span><br><span class="line">  CV_f(X, Y, lambda, <span class="number">10</span>, <span class="literal">FALSE</span>)            ,</span><br><span class="line">  CV_f(X, Y, lambda, <span class="number">10</span>, <span class="literal">TRUE</span>, <span class="string">&quot;foreach&quot;</span>)  ,</span><br><span class="line">  CV_f(X, Y, lambda, <span class="number">10</span>, <span class="literal">TRUE</span>, <span class="string">&quot;snowfall&quot;</span>) ,</span><br><span class="line">  columns = c(<span class="string">&quot;test&quot;</span>, <span class="string">&quot;replications&quot;</span>, <span class="string">&quot;user.self&quot;</span>, <span class="string">&quot;elapsed&quot;</span>),</span><br><span class="line">  replications = <span class="number">10</span>, order = <span class="string">&quot;relative&quot;</span>)</span><br><span class="line">stopCluster(cl)</span><br><span class="line">sfStop()</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>Rcpp</tag>
        <tag>parallel</tag>
        <tag>snowfall</tag>
        <tag>foreach</tag>
      </tags>
  </entry>
  <entry>
    <title>Implementation for summing a list of matrices -- part 2</title>
    <url>/posts/201504/2015-04-19-Implementation-for-summing-a-list-of-matrices-part-2.html</url>
    <content><![CDATA[<p>I have showed several implementations for summing a list of matrices in the previous post. I introduce a function to be applied in <code>do.call</code> and test performance.</p>
<a id="more"></a>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">N = <span class="number">10</span></span><br><span class="line">input = lapply(<span class="number">1</span>:N**<span class="number">2</span>, <span class="keyword">function</span>(x) matrix(rnorm(N**<span class="number">2</span>), N))</span><br><span class="line">a = do.call(<span class="keyword">function</span>(<span class="keyword">...</span>)&#123;</span><br><span class="line">  arglist = list(<span class="keyword">...</span>)</span><br><span class="line">  <span class="comment">#browser()</span></span><br><span class="line">  out = arglist[[<span class="number">1</span>]]</span><br><span class="line">  <span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">2</span>:length(arglist ))</span><br><span class="line">    out = out + arglist[[i]]</span><br><span class="line">  <span class="keyword">return</span>(out)</span><br><span class="line">&#125;, input)</span><br><span class="line">b = Reduce(<span class="string">&#x27;+&#x27;</span>, input)</span><br><span class="line">for_sum = <span class="keyword">function</span>(input)&#123;</span><br><span class="line">  out = input[[<span class="number">1</span>]]</span><br><span class="line">  <span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">2</span>:length(input))</span><br><span class="line">    out = out + input[[i]]</span><br><span class="line">  <span class="keyword">return</span>(out)</span><br><span class="line">&#125;</span><br><span class="line">d = for_sum(input)</span><br><span class="line">all.equal(a, b)</span><br><span class="line">all.equal(a, d)</span><br><span class="line"></span><br><span class="line">N = <span class="number">200</span></span><br><span class="line">K = <span class="number">100</span></span><br><span class="line"><span class="keyword">library</span>(microbenchmark)</span><br><span class="line">microbenchmark(a = do.call(<span class="keyword">function</span>(<span class="keyword">...</span>)&#123;</span><br><span class="line">  arglist = list(<span class="keyword">...</span>)</span><br><span class="line">  out = arglist[[<span class="number">1</span>]]</span><br><span class="line">  <span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">2</span>:length(arglist ))</span><br><span class="line">    out = out + arglist[[i]]</span><br><span class="line">  <span class="keyword">return</span>(out)</span><br><span class="line">  &#125;, lapply(<span class="number">1</span>:K, <span class="keyword">function</span>(x) matrix(rnorm(N**<span class="number">2</span>), N))),</span><br><span class="line">  b = Reduce(<span class="string">&#x27;+&#x27;</span>, lapply(<span class="number">1</span>:K, <span class="keyword">function</span>(x) matrix(rnorm(N**<span class="number">2</span>), N))),</span><br><span class="line">  d = for_sum(lapply(<span class="number">1</span>:K, <span class="keyword">function</span>(x) matrix(rnorm(N**<span class="number">2</span>), N))),</span><br><span class="line">  times = <span class="number">20L</span></span><br><span class="line">)</span><br><span class="line"><span class="comment"># Unit: milliseconds</span></span><br><span class="line"><span class="comment">#  expr      min       lq     mean   median       uq      max neval</span></span><br><span class="line"><span class="comment">#     a 392.7532 409.6669 431.2166 424.3133 443.7561 498.5549    20</span></span><br><span class="line"><span class="comment">#     b 399.3968 414.4893 446.8753 432.2366 444.0107 685.5244    20</span></span><br><span class="line"><span class="comment">#     d 379.0724 400.0660 411.3291 408.3251 427.2988 443.7041    20</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>Reduce</tag>
        <tag>do.call</tag>
      </tags>
  </entry>
  <entry>
    <title>bsxfun in R -- matrix-vector arithmetic operation</title>
    <url>/posts/201504/2015-04-19-bsxfun-in-R.html</url>
    <content><![CDATA[<p>The matrix-vector arithmetic operation in R is difficult to do before. We need for-loop or <code>replicate</code> to compute. Now, we have <code>sweep</code> to do. There are several examples to demonstrate.</p>
<a id="more"></a>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">M = <span class="number">3</span></span><br><span class="line">N = <span class="number">5</span></span><br><span class="line">(mat = replicate(N, <span class="number">1</span>:M))</span><br><span class="line"><span class="comment">#      [,1] [,2] [,3] [,4] [,5]</span></span><br><span class="line"><span class="comment"># [1,]    1    1    1    1    1</span></span><br><span class="line"><span class="comment"># [2,]    2    2    2    2    2</span></span><br><span class="line"><span class="comment"># [3,]    3    3    3    3    3</span></span><br><span class="line">(vec = <span class="number">1</span>:N)</span><br><span class="line"><span class="comment"># [1] 1 2 3 4 5</span></span><br><span class="line">(sweep(mat, MARGIN=<span class="number">2</span>, vec,`+`))</span><br><span class="line"><span class="comment">#      [,1] [,2] [,3] [,4] [,5]</span></span><br><span class="line"><span class="comment"># [1,]    2    3    4    5    6</span></span><br><span class="line"><span class="comment"># [2,]    3    4    5    6    7</span></span><br><span class="line"><span class="comment"># [3,]    4    5    6    7    8</span></span><br><span class="line">(sweep(mat, MARGIN=<span class="number">2</span>, vec,`*`))</span><br><span class="line"><span class="comment">#      [,1] [,2] [,3] [,4] [,5]</span></span><br><span class="line"><span class="comment"># [1,]    1    2    3    4    5</span></span><br><span class="line"><span class="comment"># [2,]    2    4    6    8   10</span></span><br><span class="line"><span class="comment"># [3,]    3    6    9   12   15</span></span><br><span class="line">(sweep(mat, MARGIN=<span class="number">2</span>, vec,`/`))</span><br><span class="line"><span class="comment">#      [,1] [,2]      [,3] [,4] [,5]</span></span><br><span class="line"><span class="comment"># [1,]    1  0.5 0.3333333 0.25  0.2</span></span><br><span class="line"><span class="comment"># [2,]    2  1.0 0.6666667 0.50  0.4</span></span><br><span class="line"><span class="comment"># [3,]    3  1.5 1.0000000 0.75  0.6</span></span><br><span class="line">(sweep(mat, MARGIN=<span class="number">2</span>, vec,`-`))</span><br><span class="line"><span class="comment">#      [,1] [,2] [,3] [,4] [,5]</span></span><br><span class="line"><span class="comment"># [1,]    0   -1   -2   -3   -4</span></span><br><span class="line"><span class="comment"># [2,]    1    0   -1   -2   -3</span></span><br><span class="line"><span class="comment"># [3,]    2    1    0   -1   -2</span></span><br><span class="line">(sweep(mat, MARGIN=<span class="number">2</span>, vec, pmax))</span><br><span class="line"><span class="comment">#      [,1] [,2] [,3] [,4] [,5]</span></span><br><span class="line"><span class="comment"># [1,]    1    2    3    4    5</span></span><br><span class="line"><span class="comment"># [2,]    2    2    3    4    5</span></span><br><span class="line"><span class="comment"># [3,]    3    3    3    4    5</span></span><br><span class="line">(sweep(mat, MARGIN=<span class="number">2</span>, vec, pmin))</span><br><span class="line"><span class="comment">#      [,1] [,2] [,3] [,4] [,5]</span></span><br><span class="line"><span class="comment"># [1,]    1    1    1    1    1</span></span><br><span class="line"><span class="comment"># [2,]    1    2    2    2    2</span></span><br><span class="line"><span class="comment"># [3,]    1    2    3    3    3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## usage in scaling</span></span><br><span class="line">N = <span class="number">10</span>; p = <span class="number">3</span></span><br><span class="line">dat = matrix(rnorm(N*p), N)</span><br><span class="line"></span><br><span class="line">dat_standardized = sweep(sweep(dat, <span class="number">2</span>, colMeans(dat)), <span class="number">2</span>,</span><br><span class="line">  apply(dat, <span class="number">2</span>, sd), <span class="string">&#x27;/&#x27;</span>)</span><br><span class="line"></span><br><span class="line">dat_normalized = sweep(sweep(dat, <span class="number">2</span>, apply(dat, <span class="number">2</span>, min)), <span class="number">2</span>,</span><br><span class="line">  apply(dat, <span class="number">2</span>, <span class="keyword">function</span>(x) diff(range(x))), <span class="string">&#x27;/&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## usage in computing kernel matrix</span></span><br><span class="line">kernelMatrix_f = <span class="keyword">function</span>(X, center, sigma)&#123;</span><br><span class="line">  exp(sweep(sweep(X %*% t(center), <span class="number">1</span>,</span><br><span class="line">    rowSums(X**<span class="number">2</span>)/<span class="number">2</span>), <span class="number">2</span>, rowSums(center**<span class="number">2</span>)/<span class="number">2</span>) / (sigma**<span class="number">2</span>))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">## compare with Rcpp and kernlab</span></span><br><span class="line"><span class="keyword">library</span>(kernlab)</span><br><span class="line"><span class="keyword">library</span>(Rcpp)</span><br><span class="line"><span class="keyword">library</span>(RcppArmadillo)</span><br><span class="line">sourceCpp(code = <span class="string">&#x27;</span></span><br><span class="line"><span class="string">// [[Rcpp::depends(RcppArmadillo)]]</span></span><br><span class="line"><span class="string">#include &lt;RcppArmadillo.h&gt;</span></span><br><span class="line"><span class="string">using namespace Rcpp;</span></span><br><span class="line"><span class="string">using namespace arma;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">NumericMatrix kernelMatrix_cpp(NumericMatrix Xr, NumericMatrix Centerr, double sigma) &#123;</span></span><br><span class="line"><span class="string"> uword n = Xr.nrow(), b = Centerr.nrow(), row_index, col_index;</span></span><br><span class="line"><span class="string"> mat X(Xr.begin(), n, Xr.ncol(), false),</span></span><br><span class="line"><span class="string">     Center(Centerr.begin(), b, Centerr.ncol(), false),</span></span><br><span class="line"><span class="string">     KerX(X*Center.t());</span></span><br><span class="line"><span class="string"> colvec X_sq = sum(square(X), 1) / 2;</span></span><br><span class="line"><span class="string"> rowvec Center_sq = (sum(square(Center), 1)).t() / 2;</span></span><br><span class="line"><span class="string"> KerX.each_row() -= Center_sq;</span></span><br><span class="line"><span class="string"> KerX.each_col() -= X_sq;</span></span><br><span class="line"><span class="string"> KerX *= 1 / (sigma * sigma);</span></span><br><span class="line"><span class="string"> KerX = exp(KerX);</span></span><br><span class="line"><span class="string"> return wrap(KerX);</span></span><br><span class="line"><span class="string">&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">N = <span class="number">8000</span></span><br><span class="line">p = <span class="number">500</span></span><br><span class="line">b = <span class="number">1000</span></span><br><span class="line">X = matrix(rnorm(N*p), ncol = p)</span><br><span class="line">center = X[sample(<span class="number">1</span>:N, b),]</span><br><span class="line">sigma = <span class="number">3</span></span><br><span class="line"></span><br><span class="line">all.equal(kernelMatrix(rbfdot(sigma=<span class="number">1</span>/(<span class="number">2</span>*sigma^<span class="number">2</span>)), X, center)@.Data,</span><br><span class="line">  kernelMatrix_cpp(X, center, sigma))</span><br><span class="line"><span class="comment"># TRUE</span></span><br><span class="line">all.equal(kernelMatrix(rbfdot(sigma=<span class="number">1</span>/(<span class="number">2</span>*sigma^<span class="number">2</span>)), X, center)@.Data,</span><br><span class="line">  kernelMatrix_f(X, center, sigma))</span><br><span class="line"><span class="comment"># TRUE</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(microbenchmark)</span><br><span class="line">microbenchmark(Rfun = kernelMatrix_f(X, center, sigma),</span><br><span class="line">  kernlab = kernelMatrix(rbfdot(sigma=<span class="number">1</span>/(<span class="number">2</span>*sigma^<span class="number">2</span>)), X, center),</span><br><span class="line">  Rcpp = kernelMatrix_cpp(X, center, sigma),</span><br><span class="line">  times = <span class="number">20L</span></span><br><span class="line">)</span><br><span class="line"><span class="comment"># Unit: milliseconds</span></span><br><span class="line"><span class="comment">#     expr      min       lq      mean    median        uq       max neval</span></span><br><span class="line"><span class="comment">#     Rfun 872.8854 981.1995 1036.2209 1074.0526 1098.9185 1132.9356    20</span></span><br><span class="line"><span class="comment">#  kernlab 773.7489 841.9028 1059.3098  862.7476  883.3874 2979.2541    20</span></span><br><span class="line"><span class="comment">#     Rcpp 490.2462 501.2993  520.1283  522.5060  532.5426  571.0949    20</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>bsxfun</tag>
        <tag>sweep</tag>
      </tags>
  </entry>
  <entry>
    <title>How to use xelatex in sublime text</title>
    <url>/posts/201504/2015-04-27-how-to-use-xelatex-in-sublime-text.html</url>
    <content><![CDATA[<p>To setup LatexTools in sublime text.</p>
<a id="more"></a>

<p>You should install package control before installation of LaTexTools. Please go to the official website of package control and copy the commend of installation. Then open console in sublime text via <code>ctrl+`</code> and paste the commend copied from website. Now, you can start to install LatexTools in sublime text. Call install commend via <code>ctrl+shift+p</code> and key in <code>install package</code>. Enter <code>LaTexTools</code> to install.</p>
<p>To use LaTexTools, you should have MikTex and SumatraPDF in windows OS or texlive and latexmk in linux. If you use windows, you should guarantee that path consist the path to <code>xetex.exe</code> and <code>SumatraPDF.exe</code>. Next, configure the settings of LaTexTools found in <code>Preferences -&gt; Package Settings -&gt; LaTexTools</code> and migrate settings (Select <code>Reconfigure LaTexTools and migrate settings</code>) first. Finally, select <code>Settings-User</code> and set the builder_settings as following.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;builder_settings&quot;</span> : &#123;</span><br><span class="line">  <span class="string">&quot;program&quot;</span>: <span class="string">&quot;xelatex&quot;</span>,</span><br><span class="line">  // General settings:</span><br><span class="line">  // See README or third-party documentation</span><br><span class="line"></span><br><span class="line">  // (built-ins): <span class="literal">true</span> shows the <span class="built_in">log</span> of each <span class="built_in">command</span> <span class="keyword">in</span> the output panel</span><br><span class="line">  <span class="string">&quot;display_log&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="string">&quot;command&quot;</span>: [<span class="string">&quot;texify&quot;</span>, <span class="string">&quot;-b&quot;</span>, <span class="string">&quot;-p&quot;</span>, <span class="string">&quot;--engine=xetex&quot;</span>, <span class="string">&quot;--tex-option=\&quot;--synctex=1\&quot;&quot;</span>],</span><br><span class="line"></span><br><span class="line">  // Platform-specific settings:</span><br><span class="line">  <span class="string">&quot;osx&quot;</span> : &#123;</span><br><span class="line">    // See README or third-party documentation</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="string">&quot;windows&quot;</span> : &#123;</span><br><span class="line">    // See README or third-party documentation</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="string">&quot;linux&quot;</span> : &#123;</span><br><span class="line">    // See README or third-party documentation</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>Sublime Text</category>
      </categories>
      <tags>
        <tag>Sublime Text</tag>
        <tag>xelatex</tag>
      </tags>
  </entry>
  <entry>
    <title>Shiny App for Ising Model</title>
    <url>/posts/201504/2015-04-20-shiny-app-for-ising-model.html</url>
    <content><![CDATA[<p>Here is a demonstration for ising model with an interative interface created by R package <code>shiny</code>.</p>
<a id="more"></a>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(lattice)</span><br><span class="line"><span class="keyword">library</span>(shiny)</span><br><span class="line">app = shinyApp(</span><br><span class="line">  ui = shinyUI(pageWithSidebar(</span><br><span class="line">    headerPanel(<span class="string">&#x27;Ising Model&#x27;</span>),</span><br><span class="line">    sidebarPanel(</span><br><span class="line">      sliderInput(<span class="string">&#x27;girdSize&#x27;</span>, <span class="string">&#x27;Gird Size&#x27;</span>, <span class="number">2</span>, <span class="number">200</span>, <span class="number">30</span>),</span><br><span class="line">      selectInput(<span class="string">&#x27;updateAlgorithm&#x27;</span>, <span class="string">&#x27;Algorithm&#x27;</span>, </span><br><span class="line">        c(<span class="string">&quot;Metropolis-Hasting Algorithm&quot;</span>, <span class="string">&quot;Gibbs sampling&quot;</span>), </span><br><span class="line">        <span class="string">&quot;Metropolis-Hasting Algorithm&quot;</span>),</span><br><span class="line">      numericInput(<span class="string">&#x27;iteration&#x27;</span>, <span class="string">&#x27;Iteration&#x27;</span>, <span class="number">50000</span>, <span class="number">1</span>, <span class="number">4000000</span>),</span><br><span class="line">      numericInput(<span class="string">&#x27;updateFreq&#x27;</span>, <span class="string">&#x27;Draw Model Every N Iteration&#x27;</span>, <span class="number">1000</span>, <span class="number">1</span>, <span class="number">10000</span>),</span><br><span class="line">      sliderInput(<span class="string">&#x27;temperature&#x27;</span>, <span class="string">&#x27;Reciprocal of Temperature&#x27;</span>, -<span class="number">5</span>, <span class="number">5</span>, <span class="number">2</span>, step = <span class="number">0.1</span>),</span><br><span class="line">      actionButton(<span class="string">&#x27;reset&#x27;</span>, <span class="string">&#x27;Reset&#x27;</span>), </span><br><span class="line">      actionButton(<span class="string">&#x27;stop&#x27;</span>, <span class="string">&#x27;Stop&#x27;</span>),</span><br><span class="line">      actionButton(<span class="string">&#x27;start&#x27;</span>, <span class="string">&#x27;Start&#x27;</span>)</span><br><span class="line">    ),</span><br><span class="line">    mainPanel(</span><br><span class="line">      h3(textOutput(<span class="string">&quot;currentIteration&quot;</span>)),</span><br><span class="line">      plotOutput(<span class="string">&#x27;IsingPlot&#x27;</span>, width = <span class="string">&quot;600px&quot;</span>, height = <span class="string">&quot;600px&quot;</span>)</span><br><span class="line">    )</span><br><span class="line">  )),</span><br><span class="line">  server = <span class="keyword">function</span>(input, output, session) &#123;</span><br><span class="line">    vals = reactiveValues()</span><br><span class="line">    range_f = <span class="keyword">function</span>(X, loc) c(X[loc[<span class="number">1</span>], c(loc[<span class="number">2</span>]-<span class="number">1</span>, loc[<span class="number">2</span>]+<span class="number">1</span>)], X[c(loc[<span class="number">1</span>]-<span class="number">1</span>, loc[<span class="number">1</span>]+<span class="number">1</span>), loc[<span class="number">2</span>]])</span><br><span class="line">    resetIsingMatrix = observe(&#123;</span><br><span class="line">      input$reset</span><br><span class="line">      runProcess$suspend()</span><br><span class="line">      isolate(&#123;</span><br><span class="line">        vals$IsingMatrix = replicate(input$girdSize+<span class="number">2</span>, rbinom(input$girdSize+<span class="number">2</span>, <span class="number">1</span>, <span class="number">.5</span>))</span><br><span class="line">        vals$IsingMatrix[c(<span class="number">1</span>, input$girdSize+<span class="number">2</span>),] = vals$IsingMatrix[c(input$girdSize+<span class="number">1</span>, <span class="number">2</span>),]</span><br><span class="line">        vals$IsingMatrix[,c(<span class="number">1</span>, input$girdSize+<span class="number">2</span>)] = vals$IsingMatrix[,c(input$girdSize+<span class="number">1</span>, <span class="number">2</span>)]</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;, priority=<span class="number">30</span>)</span><br><span class="line">    </span><br><span class="line">    setup_to_run = observe(&#123;</span><br><span class="line">      input$start</span><br><span class="line">      isolate(&#123;</span><br><span class="line">        <span class="keyword">if</span> (is.null(vals$IsingMatrix))</span><br><span class="line">        &#123;</span><br><span class="line">          vals$IsingMatrix = replicate(input$girdSize+<span class="number">2</span>, rbinom(input$girdSize+<span class="number">2</span>, <span class="number">1</span>, <span class="number">.5</span>))</span><br><span class="line">          vals$IsingMatrix[c(<span class="number">1</span>, input$girdSize+<span class="number">2</span>),] = vals$IsingMatrix[c(input$girdSize+<span class="number">1</span>, <span class="number">2</span>),]</span><br><span class="line">          vals$IsingMatrix[,c(<span class="number">1</span>, input$girdSize+<span class="number">2</span>)] = vals$IsingMatrix[,c(input$girdSize+<span class="number">1</span>, <span class="number">2</span>)]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (input$updateAlgorithm == <span class="string">&quot;Metropolis-Hasting Algorithm&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">          vals$algo_f = <span class="keyword">function</span>(mat, temperature)&#123;</span><br><span class="line">            N = nrow(mat) - <span class="number">2</span></span><br><span class="line">            loc = floor(N*runif(<span class="number">2</span>)) + <span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> (runif(<span class="number">1</span>) &lt; exp(<span class="number">2</span>*(<span class="number">2</span>-sum(range_f(mat, loc) == mat[loc[<span class="number">1</span>], loc[<span class="number">2</span>]]))*temperature))</span><br><span class="line">              mat[loc[<span class="number">1</span>],loc[<span class="number">2</span>]] = <span class="number">1</span> - mat[loc[<span class="number">1</span>],loc[<span class="number">2</span>]]</span><br><span class="line">            mat[c(<span class="number">1</span>, N+<span class="number">2</span>),] = mat[c(N+<span class="number">1</span>, <span class="number">2</span>),]</span><br><span class="line">            mat[,c(<span class="number">1</span>, N+<span class="number">2</span>)] = mat[,c(N+<span class="number">1</span>, <span class="number">2</span>)]</span><br><span class="line">            mat</span><br><span class="line">          &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">          vals$algo_f = <span class="keyword">function</span>(mat, temperature)&#123;</span><br><span class="line">            N = nrow(mat) - <span class="number">2</span></span><br><span class="line">            loc = floor(N*runif(<span class="number">2</span>)) + <span class="number">2</span></span><br><span class="line">            S = <span class="number">2</span>-sum(range_f(mat, loc) == mat[loc[<span class="number">1</span>], loc[<span class="number">2</span>]])</span><br><span class="line">            <span class="keyword">if</span> (runif(<span class="number">1</span>) &lt; <span class="number">1</span>/(exp(-S*temperature)**<span class="number">2</span>+<span class="number">1</span>))</span><br><span class="line">              mat[loc[<span class="number">1</span>],loc[<span class="number">2</span>]] = <span class="number">1</span> - mat[loc[<span class="number">1</span>],loc[<span class="number">2</span>]]</span><br><span class="line">            mat[c(<span class="number">1</span>, N+<span class="number">2</span>),] = mat[c(N+<span class="number">1</span>, <span class="number">2</span>),]</span><br><span class="line">            mat[,c(<span class="number">1</span>, N+<span class="number">2</span>)] = mat[,c(N+<span class="number">1</span>, <span class="number">2</span>)]</span><br><span class="line">            mat</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        vals$iteration = input$iteration</span><br><span class="line">        vals$updateFreq = input$updateFreq</span><br><span class="line">        vals$temperature = input$temperature</span><br><span class="line">        vals$iter = <span class="number">0</span></span><br><span class="line">      &#125;)</span><br><span class="line">      runProcess$resume()</span><br><span class="line">    &#125;, priority=<span class="number">20</span>)</span><br><span class="line">    </span><br><span class="line">    runProcess = observe(&#123;</span><br><span class="line">      <span class="keyword">if</span> (input$start == <span class="number">0</span>) <span class="keyword">return</span>()</span><br><span class="line">      isolate(&#123;</span><br><span class="line">        result = vals$IsingMatrix</span><br><span class="line">        i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> (i &lt; vals$updateFreq)</span><br><span class="line">        &#123;</span><br><span class="line">          result = vals$algo_f(result, vals$temperature)</span><br><span class="line">          i = i + <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        vals$IsingMatrix = result</span><br><span class="line">        vals$iter = vals$iter + vals$updateFreq</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="keyword">if</span> (isolate(vals$iter) &lt; isolate(vals$iteration))</span><br><span class="line">        invalidateLater(<span class="number">500</span>, session)</span><br><span class="line">    &#125;, priority=<span class="number">10</span>)</span><br><span class="line">    </span><br><span class="line">    output$currentIteration = renderText(&#123;</span><br><span class="line">      paste0(<span class="string">&quot;Current iteration: &quot;</span>, vals$iter)</span><br><span class="line">    &#125;)</span><br><span class="line">    </span><br><span class="line">    stopProcess = observe(&#123;</span><br><span class="line">      input$<span class="keyword">stop</span></span><br><span class="line">      runProcess$suspend()</span><br><span class="line">    &#125;)</span><br><span class="line">    </span><br><span class="line">    output$IsingPlot = renderPlot(&#123;</span><br><span class="line">      levelplot(vals$IsingMatrix[<span class="number">2</span>:(input$girdSize+<span class="number">1</span>), <span class="number">2</span>:(input$girdSize+<span class="number">1</span>)], </span><br><span class="line">        col.regions = c(<span class="string">&quot;red&quot;</span>, <span class="string">&quot;green&quot;</span>), </span><br><span class="line">        colorkey  = <span class="literal">FALSE</span>, xlab = <span class="string">&quot;&quot;</span>, ylab = <span class="string">&quot;&quot;</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    </span><br><span class="line">    session$onSessionEnded(<span class="keyword">function</span>() &#123;</span><br><span class="line">      runProcess$suspend()</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line">runApp(app)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>shiny</tag>
      </tags>
  </entry>
  <entry>
    <title>introduction to data.table</title>
    <url>/posts/201507/2015-07-02-data-table.html</url>
    <content><![CDATA[<p>這是我自己在PTT PO的文，詳細介紹data.table，以下是正文~~</p>
<p>data.table包含的東西很多</p>
<p>但是很多東西都可以被plyr, dplyr的function取代</p>
<p>所以data.table很多function，我都不太熟</p>
<p>這裡簡單介紹一下data.table</p>
<a id="more"></a>

<p>如果你想要了解更多，請自行去看manual</p>
<p>要了解data.table，我們可以先從package的description來看</p>
<p>  “Fast aggregation of large data (e.g. 100GB in RAM), fast ordered joins,<br>fast add/modify/delete of columns by group using no copies at all, list<br>columns and a fast file reader (fread). Offers a natural and flexible syntax,<br>for faster development.”</p>
<p>簡單翻譯一下，大資料(例如，記憶體中大小為100GB的資料)的在不創建複本下，根據</p>
<p>類別(group)變數進行快速整合、排列、合併、增加/修改/刪除行資料等動作。…</p>
<p>重點就在不創建複本，因為R修改data.frame時，會先複製一次再修改，</p>
<p>然後傳回複本，因此，會浪費不少記憶體，而且很容易拖累速度，因此，</p>
<p>data.table提供這方面更有效率的操作。</p>
<p>(這方面的速度比較可以參考#1LeXNCKV (R_Language) [分享] 資料數據處理修改)</p>
<ol>
<li>data.table</li>
</ol>
<p>這個函數基本上data.frame使用差不多，而且data.frame的參數都可以放進</p>
<p>像是很常用到的stringsAsFactors，只是data.table預設是FALSE，</p>
<p>這點跟data.frame不同，使用上需要注意，範例如下：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">  t = data.table(a = LETTERS[<span class="number">1</span>:<span class="number">3</span>])</span><br><span class="line">  str(t)</span><br><span class="line"><span class="comment"># Classes ‘data.table’ and &#x27;data.frame&#x27;:  3 obs. of  1 variable:</span></span><br><span class="line"><span class="comment">#  $ a: chr  &quot;A&quot; &quot;B&quot; &quot;C&quot;</span></span><br><span class="line"><span class="comment">#  - attr(*, &quot;.internal.selfref&quot;)=&lt;externalptr&gt;</span></span><br><span class="line">  t2 = data.frame(a = LETTERS[<span class="number">1</span>:<span class="number">3</span>])</span><br><span class="line">  str(t2)</span><br><span class="line"><span class="comment"># &#x27;data.frame&#x27;:   3 obs. of  1 variable:</span></span><br><span class="line"><span class="comment">#  $ a: Factor w/ 3 levels &quot;A&quot;,&quot;B&quot;,&quot;C&quot;: 1 2 3</span></span><br></pre></td></tr></table></figure>

<p>第二個差異是data.table不包含rownames，</p>
<p>在轉換data.frame到data.table時，要注意這點</p>
<p>下一章會提到把rowname轉成column的函數</p>
<p>附註一條：data.table都包含data.frame的class</p>
<pre><code>      可以用在data.frame的方法都可以在data.table上實現</code></pre>
<p>但是data.table還多了一個引數 “key”，我對它的解讀是一種索引的概念</p>
<p>而透過索引的動作都會被加速。</p>
<p>key可以是一個變數，也可以是多個變數，這點看個人使用。</p>
<p>再來，就是data.table的’[‘，這部分跟data.frame不太一樣</p>
<p>所以需要特別說明，但是這部分，我自己也不是很熟悉，我只能大概講過</p>
<p>a. 我們很常在data.frame做取多行的動作，在data.table是不可行的，舉例：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">  vars = data.frame(X = rnorm(<span class="number">3</span>), Y = rnorm(<span class="number">3</span>), Z = rnorm(<span class="number">3</span>))</span><br><span class="line">  vars[,<span class="number">1</span>:<span class="number">2</span>]</span><br><span class="line"><span class="comment">#            X         Y</span></span><br><span class="line"><span class="comment"># 1 -0.5677575 2.1831285</span></span><br><span class="line"><span class="comment"># 2 -0.7161529 0.3714633</span></span><br><span class="line"><span class="comment"># 3  1.2665120 0.7837508</span></span><br><span class="line"></span><br><span class="line">  vars_dt = data.table(vars)</span><br><span class="line">  vars_dt[,<span class="number">1</span>:<span class="number">2</span>]</span><br><span class="line"><span class="comment"># [1] 1 2</span></span><br></pre></td></tr></table></figure>

<p>但是你想這麼做，怎麼辦？ 加上with=FALSE就好了，或是用list包住column name</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">  vars_dt[,<span class="number">1</span>:<span class="number">2</span>,with=<span class="literal">FALSE</span>]</span><br><span class="line"><span class="comment">#             X         Y</span></span><br><span class="line"><span class="comment"># 1: -0.5677575 2.1831285</span></span><br><span class="line"><span class="comment"># 2: -0.7161529 0.3714633</span></span><br><span class="line"><span class="comment"># 3:  1.2665120 0.7837508</span></span><br><span class="line"></span><br><span class="line">  vars_dt[j=list(X, Y)]</span><br><span class="line"><span class="comment">#             X         Y</span></span><br><span class="line"><span class="comment"># 1: -0.5677575 2.1831285</span></span><br><span class="line"><span class="comment"># 2: -0.7161529 0.3714633</span></span><br><span class="line"><span class="comment"># 3:  1.2665120 0.7837508</span></span><br></pre></td></tr></table></figure>

<p>剩下像是by, .SD, .SDcols等自行?data.table查看吧</p>
<p>data.table的部分就先說明到這，接下來，講一些相關的function</p>
<p>b. setkey: 改變key的值, setnames: 改變column name，但是一樣不製造複本</p>
<p>c. copy: 製造data.table的複本</p>
<p>d. setDF: 在不製作複本下，把data.table的class改為data.frame</p>
<p>舉例：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">  DT = data.table(X = rnorm(<span class="number">3</span>), Y = rnorm(<span class="number">3</span>))</span><br><span class="line">  str(DT)</span><br><span class="line"><span class="comment"># Classes ‘data.table’ and &#x27;data.frame&#x27;:  3 obs. of  2 variables:</span></span><br><span class="line"><span class="comment">#  $ X: num  -1.3738 0.167 -0.0578</span></span><br><span class="line"><span class="comment">#  $ Y: num  0.487 1.728 0.646</span></span><br><span class="line"><span class="comment">#  - attr(*, &quot;.internal.selfref&quot;)=&lt;externalptr&gt;</span></span><br><span class="line"></span><br><span class="line">  setDF(DT)</span><br><span class="line">  str(DT)</span><br><span class="line"><span class="comment"># &#x27;data.frame&#x27;:   3 obs. of  2 variables:</span></span><br><span class="line"><span class="comment">#  $ X: num  -1.3738 0.167 -0.0578</span></span><br><span class="line"><span class="comment">#  $ Y: num  0.487 1.728 0.646</span></span><br><span class="line"></span><br><span class="line">  DT = data.table(X = rnorm(<span class="number">3</span>), Y = rnorm(<span class="number">3</span>))</span><br><span class="line">  tracemem(DT)</span><br><span class="line"><span class="comment"># [1] &quot;&lt;0000000006A1BE28&gt;&quot;</span></span><br><span class="line">  setDF(DT)  <span class="comment">#  沒有複製的動作</span></span><br><span class="line"></span><br><span class="line">  DF = data.frame(DT)</span><br><span class="line">  retracemem(DF, retracemem(DT))</span><br><span class="line"><span class="comment"># tracemem[&lt;0000000006A1BE28&gt; -&gt; 0x00000000061ec928]:</span></span><br><span class="line">  <span class="comment">## 記憶體位置就發生改變了，就複製了DT一次</span></span><br></pre></td></tr></table></figure>

<p>這部分可能不太懂，不過沒關係，記住一點，要轉成data.frame用setDF就好</p>
<p>e. setDT: setDF的反向</p>
<p>f. duplicated, unique</p>
<p>duplicated提供一個跟data.table列數相等長度的邏輯值向量，</p>
<p>TRUE代表前面有一樣的列，FALSE代表沒有</p>
<p>unique則是留下沒有重複的列，舉例來說：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">  set.seed(<span class="number">100</span>)</span><br><span class="line">  DT = data.table(A = rbinom(<span class="number">5</span>, <span class="number">1</span>, <span class="number">0.5</span>), B = rbinom(<span class="number">5</span>, <span class="number">1</span>, <span class="number">0.5</span>))</span><br><span class="line"><span class="comment">#    A B</span></span><br><span class="line"><span class="comment"># 1: 0 0</span></span><br><span class="line"><span class="comment"># 2: 0 1</span></span><br><span class="line"><span class="comment"># 3: 1 0</span></span><br><span class="line"><span class="comment"># 4: 0 1</span></span><br><span class="line"><span class="comment"># 5: 0 0</span></span><br><span class="line"></span><br><span class="line">  duplicated(DT)</span><br><span class="line"><span class="comment"># [1] FALSE FALSE FALSE  TRUE  TRUE</span></span><br><span class="line"></span><br><span class="line">  unique(DT)</span><br><span class="line"><span class="comment">#    A B</span></span><br><span class="line"><span class="comment"># 1: 0 0</span></span><br><span class="line"><span class="comment"># 2: 0 1</span></span><br><span class="line"><span class="comment"># 3: 1 0</span></span><br><span class="line"></span><br><span class="line">  DT[!duplicated(DT)]</span><br><span class="line"><span class="comment">#    A B</span></span><br><span class="line"><span class="comment"># 1: 0 0</span></span><br><span class="line"><span class="comment"># 2: 0 1</span></span><br><span class="line"><span class="comment"># 3: 1 0</span></span><br></pre></td></tr></table></figure>

<p>不過unique還有更多功能，它可以選擇變數做unique，舉例來說：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">  unique(DT, by = <span class="string">&quot;A&quot;</span>)</span><br><span class="line"><span class="comment">#    A B</span></span><br><span class="line"><span class="comment"># 1: 0 0</span></span><br><span class="line"><span class="comment"># 2: 1 0</span></span><br><span class="line"></span><br><span class="line">  unique(DT, by = <span class="string">&quot;B&quot;</span>)</span><br><span class="line"><span class="comment">#    A B</span></span><br><span class="line"><span class="comment"># 1: 0 0</span></span><br><span class="line"><span class="comment"># 2: 0 1</span></span><br></pre></td></tr></table></figure>
<p>順便一提，dplyr的distinct，如果你input的class是data.table</p>
<p>它就是用unique做的</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">  <span class="keyword">library</span>(dplyr)</span><br><span class="line">  distinct(DT)</span><br><span class="line"><span class="comment">#    A B</span></span><br><span class="line"><span class="comment"># 1: 0 0</span></span><br><span class="line"><span class="comment"># 2: 0 1</span></span><br><span class="line"><span class="comment"># 3: 1 0</span></span><br></pre></td></tr></table></figure>
<p>你如果想看distinct怎麼做，可以在R上面打dplyr:::distinct_.data.table</p>
<blockquote>
<p>dplyr:::distinct_.data.table<br>function (.data, …, .dots)<br>{<br>    dist &lt;- distinct_vars(.data, …, .dots = .dots)<br>    if (length(dist$vars) == 0) {<br>        unique(dist$data)<br>    }<br>    else {<br>        unique(dist$data, by = dist$vars)<br>    }<br>}</p>
</blockquote>
<p>之後提到distinct，我們再來講distinct</p>
<p>其他相關function像是subset, setcolorder, setorder (setorderv)</p>
<p>對這三個function有興趣，再去看manual，不贅述</p>
<p>這三個對應到dplyr的filter, select, arrange，之後我們會再提到這些</p>
<p>g. transform: 改變column的屬性、值等，舉例來說：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">  DT = data.table(a = <span class="number">1</span>:<span class="number">3</span>, b = <span class="number">2</span>:<span class="number">4</span>, c = LETTERS[<span class="number">1</span>:<span class="number">3</span>])</span><br><span class="line">  DT2 = copy(DT)</span><br><span class="line">  DT[, b := b**<span class="number">2</span>]</span><br><span class="line">  DT2 %&lt;&gt;% transform(b = b**<span class="number">2</span>)</span><br><span class="line">  all.equal(DT, DT2) <span class="comment"># TRUE</span></span><br><span class="line">  DT %&lt;&gt;% transform(c = as.factor(c))</span><br><span class="line">  str(DT)</span><br><span class="line"><span class="comment"># Classes ‘data.table’ and &#x27;data.frame&#x27;:  3 obs. of  3 variables:</span></span><br><span class="line"><span class="comment">#  $ a: int  1 2 3</span></span><br><span class="line"><span class="comment">#  $ b: num  4 9 16</span></span><br><span class="line"><span class="comment">#  $ c: Factor w/ 3 levels &quot;A&quot;,&quot;B&quot;,&quot;C&quot;: 1 2 3</span></span><br><span class="line"><span class="comment">#   - attr(*, &quot;.internal.selfref&quot;)=&lt;externalptr&gt;</span></span><br></pre></td></tr></table></figure>

<p>h. set: 用來變更特定column，某些列的值，舉個簡單的例子</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">DT = data.table(a = <span class="number">1</span>:<span class="number">3</span>, b = <span class="number">2</span>:<span class="number">4</span>)</span><br><span class="line">DT2 = copy(DT)</span><br><span class="line">DT[, b := <span class="number">1</span>]</span><br><span class="line">set(DT2,, <span class="string">&quot;b&quot;</span>, value = <span class="number">1</span>)</span><br><span class="line">all.equal(DT, DT2) <span class="comment"># TRUE</span></span><br></pre></td></tr></table></figure>
<p>一般來說都用’[‘來做，但是你如果需要用到for再來完成，再用set</p>
<p>還有一個function是 J，這裡就不提了，一樣請洽manual</p>
<p>最後，還有一個operator，’:=’，它是用來擴增data.table的column，</p>
<p>同樣，也不創造複本，這樣可以更快的增加column</p>
<p>那如果刪除怎麼辦？還記得前面學過 DT[, list(‘X’, ‘Y’)]，就用這個</p>
<p>再來，我們講一些data.table中其他function</p>
<ol start="2">
<li>fread</li>
</ol>
<p>功能可以用來取代read.table, read.csv</p>
<p>它可以用多種separate去分割columns，然後讀入R</p>
<p>而且讀入速度比read.table, read.csv快很多</p>
<p>但是注意，不規則的檔案會讀入失敗</p>
<p>這裡提幾個參數：</p>
<p>a. sep: column跟column之間的分隔，如果是csv就是’,’，</p>
<p>   如果是tab separated values就是’\t’</p>
<p>b. na.strings: 視作NA的字串，它可以是一個vector</p>
<p>c. stringsAsFactors：是否要把字串轉成factor，預設是否</p>
<p>d. colClasses：各行的classes，可以自行設定</p>
<p>我愛用fread還有一個原因，第一個input可以直接放我要讀的字串，</p>
<p>但是read.table需要經過其他的方式，有點麻煩(我懶得記，其實沒記過)</p>
<p>舉例來說</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">text = <span class="string">&quot;a b</span></span><br><span class="line"><span class="string">1 2</span></span><br><span class="line"><span class="string">3 4&quot;</span></span><br><span class="line">DT = fread(text)</span><br><span class="line">setDF(DT) <span class="comment"># 轉成data.frame，前面學過，還記得嗎？</span></span><br><span class="line">DF = read.table(header = <span class="literal">TRUE</span>, text = text)           <span class="comment"># text format</span></span><br><span class="line">DF2 = read.table(textConnection(text), header = <span class="literal">TRUE</span>) <span class="comment"># file format</span></span><br><span class="line"></span><br><span class="line">all.equal(DT, DF)  <span class="comment"># TRUE</span></span><br><span class="line">all.equal(DT, DF2) <span class="comment"># TRUE</span></span><br></pre></td></tr></table></figure>

<p>fread很適合拿來讀大資料，所以有必要把table輸出成text</p>
<p>用文字方式處理時，讀入就變得很方便，可見 #1LegOjwB (R_Language)</p>
<p>還剩下 dcast.data.table, melt 跟 merge</p>
<p>它們會留到之後跟tidyr一起介紹</p>
<p>下一章重點會放在dplyr</p>
<p>補充：</p>
<p>key，我也不是很熟悉，也很少用，因此，我這裡介紹的很少</p>
<p>如果對key有興趣，可能需要自行研究</p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>data.table</tag>
        <tag>ptt</tag>
      </tags>
  </entry>
  <entry>
    <title>introduction to magrittr</title>
    <url>/posts/201507/2015-07-01-magrittr.html</url>
    <content><![CDATA[<p>這是我自己在PTT PO的文，詳細介紹magrittr，以下是正文~~</p>
<p>鑒於andrew大大的提議，現下剛好有閒就來寫一系列資料整理套件的文章</p>
<p>版上比我熟這些套件的人也不少，如果不足的部分，再麻煩幫忙補充</p>
<a id="more"></a>

<p>目前想要介紹的套件有 (後面列一些我常用的function)</p>
<ul>
<li>magrittr  : pipe operator如 ‘%&gt;%’, ‘%&lt;&gt;%’, ‘%T&gt;%’, ‘%$%’</li>
<li>data.table: class ‘data.table’, dcast.data.table, melt, fread,<pre><code>        duplicated, transform, rbindlist, merge</code></pre>
</li>
<li>reshape2  : dcast, melt (required for data.table)</li>
<li>plyr      : name_rows, colwise, mapvalues</li>
<li>dplyr     : mutate, summarise, arrange, filter, distinct, group_by, n,<pre><code>        select, rowwise, tbl_dt, mutate_each, summarise_each</code></pre>
</li>
<li>tidyr     : gather, separate, spread</li>
</ul>
<p>這篇的重點放在 magrittr，因為後面我會大量使用pipe operator來寫程式碼</p>
<p>我盡量每一個operator用簡單一點的方式說明，如果不太了解再麻煩告知</p>
<p>程式碼部分，會用block框起來</p>
<ol>
<li>‘%&gt;%’</li>
</ol>
<p>這個operator用來傳遞數值，避免過多的nest造成閱讀上的困難</p>
<p>像是</p>
<p>a_list = list(1:6, 3:5, 4:7)</p>
<p>lapply(a_list, function(x) setdiff(sort(unique(unlist(a_list))), x))</p>
<p>第二行拆解閱讀是很困難的，但是寫成</p>
<p>a_list %&gt;% unlist %&gt;% unique %&gt;% sort %&gt;% {<br>   lapply(a_list, setdiff, x = .)<br>}</p>
<p>閱讀上會容易很多</p>
<p>舉一個簡單的例子，來說明 ‘%&gt;%’的用法</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">a = <span class="number">1</span></span><br><span class="line">f = <span class="keyword">function</span>(a) a + <span class="number">1</span></span><br><span class="line">f(a)</span><br><span class="line">a %&gt;% f</span><br><span class="line">a %&gt;% f()</span><br><span class="line">a %&gt;% f(.)</span><br></pre></td></tr></table></figure>

<p>跑上面的程式可以發現，最後四個output都一樣</p>
<p>其實 %&gt;% 做的就是把 左邊變數 放進 右邊函數裡做執行</p>
<p>也就是說  f(a) 等同於  a %&gt;% f (或是上面其他三種)</p>
<p>另外，可能會覺得 <code>a %&gt;% f(.)</code>會很奇怪</p>
<p>在magrittr中， <code>.</code>就是用來代表%&gt;%前面的變數</p>
<p>所以 a %&gt;% f(.) 程式會把.的位置換成a，變成 f(a)</p>
<p><code>.</code> 在magrittr的應用中，會佔很大的比例</p>
<p>像是do.call, Reduce第一個input是function，第二個是list</p>
<p>我們通常傳入list，所以此時必須用 . 做位置的控制</p>
<p>再者，c, cbind, rbind會根據位置不同來決定是合併於何處</p>
<p>也是一個很重要的問題，因此，用 <code>.</code>做傳入位置的控制是必須的</p>
<p>針對這個，我給一段簡單的程式碼讓你去試試看</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">a_list = list(<span class="number">1</span>:<span class="number">5</span>, <span class="number">3</span>:<span class="number">7</span>, <span class="number">6</span>:<span class="number">10</span>)</span><br><span class="line">a_list %&gt;% do.call(rbind, .)</span><br><span class="line">a_list %&gt;% Reduce(cbind, .)</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>:<span class="number">5</span> %&gt;% rbind(<span class="number">3</span>:<span class="number">7</span>, .)</span><br><span class="line"><span class="number">1</span>:<span class="number">5</span> %&gt;% rbind(., <span class="number">3</span>:<span class="number">7</span>)</span><br><span class="line"></span><br><span class="line">f = <span class="keyword">function</span>(x, a, b) a*x^<span class="number">2</span> + b</span><br><span class="line"><span class="number">1</span>:<span class="number">5</span> %&gt;% f(., <span class="number">2</span>, <span class="number">5</span>) <span class="comment"># 同 1:5 %&gt;% f(2, 5)</span></span><br><span class="line"><span class="number">1</span>:<span class="number">5</span> %&gt;% f(<span class="number">2</span>, ., <span class="number">5</span>)</span><br><span class="line"><span class="number">1</span>:<span class="number">5</span> %&gt;% f(<span class="number">2</span>, <span class="number">5</span>, .)</span><br></pre></td></tr></table></figure>

<p>再者，%&gt;% 也可以傳入一個block (用{}括住的部分)</p>
<p>像是前面提到的</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">a_list = list(<span class="number">1</span>:<span class="number">6</span>, <span class="number">3</span>:<span class="number">5</span>, <span class="number">4</span>:<span class="number">7</span>)</span><br><span class="line">a_list %&gt;% unlist %&gt;% unique %&gt;% sort %&gt;% &#123;</span><br><span class="line">  lapply(a_list, setdiff, x = .)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>先說明怎麼閱讀 %&gt;%的部分</p>
<p>a_list %&gt;% unlist %&gt;% unique %&gt;% sort 就是</p>
<p>a_list把全部元素合併(unlist)，然後取唯一(unique)，接著排列所有元素(sort)</p>
<p>就照著%&gt;%的順序去讀就可以順利解讀</p>
<p>再來就是block的部分</p>
<p>{}括住之後，裡面的只要不是其他%&gt;%後面的 <code>.</code>都代表你前面傳入的值</p>
<p>這樣很難懂，舉個例子</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>:<span class="number">2</span> %&gt;% &#123;</span><br><span class="line">  list(</span><br><span class="line">    cbind(<span class="number">9</span>:<span class="number">10</span>, .),</span><br><span class="line">    <span class="number">3</span>:<span class="number">4</span> %&gt;% cbind(<span class="number">9</span>:<span class="number">10</span>, .)</span><br><span class="line">  )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>output長這樣</p>
<p>[[1]]<br>        .<br>[1,]  9 1<br>[2,] 10 2</p>
<p>[[2]]<br>        .<br>[1,]  9 3<br>[2,] 10 4</p>
<p>可以看到第一個可以很直覺的解讀，9:10是跟傳入的1:2做行合併</p>
<p>而第二個<code>.</code>，因為前面有了一個新的 ‘%&gt;%’</p>
<p>所以這一個<code>.</code>就被前面的 3:4取代</p>
<p>所以第二個output變成9:10跟3:4做行合併</p>
<ol start="2">
<li>‘%&lt;&gt;%’</li>
</ol>
<p>如果懂了 %&gt;%， 這個就不難了</p>
<p>先看簡單的例子 (add是magrittr提供用在 %&gt;%上的 <code>+</code> (這部分請看最後面的補充))</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">a = <span class="number">1</span></span><br><span class="line">a %&gt;% add(<span class="number">1</span>)  <span class="comment"># 同 a %&gt;% &#x27;+&#x27;(1) or a %&gt;% &#x27;+&#x27;(., 1)</span></span><br><span class="line">a <span class="comment"># 1</span></span><br><span class="line">a %&lt;&gt;% add(<span class="number">1</span>)</span><br><span class="line">a  <span class="comment"># 2</span></span><br></pre></td></tr></table></figure>

<p>這個例子可以看的出來  %&lt;&gt;% 除了傳入變數之外，也會改變傳入變數的值</p>
<p>也就是可以把 a %&lt;&gt;% add(1) 看成  a = a + 1</p>
<p>你如果有一串要做最後賦值給你傳入的變數</p>
<p>只需要在第一個傳導變數的operator做改變即可，舉例來說：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">dat = data.frame(a = <span class="number">1</span>:<span class="number">3</span>, b = <span class="number">8</span>:<span class="number">10</span>)</span><br><span class="line">dat = dat %&gt;% rbind(dat)</span><br><span class="line">dat2 = data.frame(a = <span class="number">1</span>:<span class="number">3</span>, b = <span class="number">8</span>:<span class="number">10</span>)</span><br><span class="line">dat2 %&lt;&gt;% rbind(dat2)</span><br><span class="line">all.eqaul(dat, dat2) <span class="comment"># TRUE</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>‘%T&gt;%’</li>
</ol>
<p>%T&gt;% 只傳遞變數，不回傳值，通常用來傳遞到不回傳值的function上</p>
<p>像是plot, library, install.packages, plyr的 *_ply等</p>
<p>這個operator可以幫你把前面做好的值賦予一個變數</p>
<p>並且同時做後面function的動作，舉例來說：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">dat = data.frame(a = rep(<span class="number">1</span>:<span class="number">3</span>,<span class="number">2</span>), b = rnorm(<span class="number">6</span>))</span><br><span class="line">dat2 = dat %&gt;% &#123;tapply(.$b, .$a, sum)&#125; %&gt;%</span><br><span class="line">  &#123; data.frame(a=names(.) %&gt;% as.integer, b = .)</span><br><span class="line">  &#125; %<span class="literal">T</span>&gt;% plot(.$a, .$b)</span><br></pre></td></tr></table></figure>

<p>這裡dat2就是一個新的data.frame，同時，我們也把a, b的scatter plot畫出來</p>
<p>這部分可以用dplyr的group_by以及summarise完成</p>
<p>還沒提到dplyr，所以我們先用替代方法做</p>
<p>這裡順便把第四個operator ‘%$%’一起說明</p>
<p>dat %&gt;% {tapply(.$b, .$a, sum)} 會不會覺得很冗長，也很容易忘記要放’.$’</p>
<p>但是，’%$%’提供了直接把前面變數的元素 直接以名字做操作</p>
<p>再也不需要 .$name這麼麻煩，直接用 name做你想要的操作就好</p>
<p>因此，那行就可以簡單寫成 dat %$% tapply(b, a, sum)</p>
<p>是不是就變得簡單的很多？</p>
<ol start="4">
<li>‘%$%’</li>
</ol>
<p>前面提到了，這裡就給一個例子就好</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">a = <span class="number">3</span></span><br><span class="line">b = -<span class="number">2</span></span><br><span class="line">x = rnorm(<span class="number">100</span>)</span><br><span class="line">y = a + b * x + rnorm(<span class="number">100</span>)</span><br><span class="line">fit = lm(y ~ x)</span><br><span class="line">sigma_hat = fit %$% &#123;crossprod(residuals) / df.residual&#125;</span><br></pre></td></tr></table></figure>

<p>下一章應該會介紹data.table跟reshape2，後會有期。</p>
<p>補充：</p>
<p>magrittr提供很多其他function的別名</p>
<p>像是 ‘+’, ‘*’, ‘[‘, ‘[[‘, ‘&lt;- rownames()’等等</p>
<p>有興趣請去magrittr的manual查看extract的部分</p>
<p>這個可以讓你寫pipe chain的時候更加順手</p>
<p>像是</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">vals = <span class="number">1</span>:<span class="number">3</span> %&gt;% data.frame(a = ., b = .^<span class="number">2</span>) %&gt;% set_rownames(LETTERS[<span class="number">1</span>:<span class="number">3</span>]) %&gt;%</span><br><span class="line">  lm(b ~ a, data = .) %&gt;% predict</span><br></pre></td></tr></table></figure>

<p>不然你可能會這樣寫</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">dat = <span class="number">1</span>:<span class="number">3</span> %&gt;% data.frame(a = ., b = .^<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">rownames(dat) = LETTERS[<span class="number">1</span>:<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">vals = dat %&gt;% lm(b ~ a, data = .) %&gt;% predict</span><br></pre></td></tr></table></figure>

<p>你可能只是要vals這個變數，你卻還要多創一個dat這個暫存變數，而中斷chain</p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>data.table</tag>
        <tag>magrittr</tag>
        <tag>ptt</tag>
      </tags>
  </entry>
  <entry>
    <title>RcppParallel and RRO: about Intel MKL multithread</title>
    <url>/posts/201601/2016-01-18-RcppParallel_and_RRO_about_intel_MKL_multithread.html</url>
    <content><![CDATA[<p>Revolution R Open (Now named Microsoft R Open) provides Intel MKL multi-threaded BLAS.<br>RcppParallel provides parallel tools for R via Intel TBB. (Note: On other platforms, it use TinyThread library.)<br>However, does RcppParallel conflict with Intel MKL multi-threaded BLAS?</p>
<a id="more"></a>

<p>We do a simple test on this issue. The cross-validation is simple but time-consuming which is a great method for testing the power of parallel.<br>Therefore, we use leave-one-out-cross-validation to compute the mean squared errors of regression model.<br>Leave-one-out-cross-validation is a important tool for measuring the performance of model.<br>We use Rcpp, RcppArmadillo and RcppParallel to Leave-one-out-cross-validation. You can find the code of test below.<br>Results:</p>
<table>
<thead>
<tr>
<th align="right">expr (Unit: seconds)</th>
<th align="right">min</th>
<th align="right">lq</th>
<th align="right">mean</th>
<th align="right">median</th>
<th align="right">uq</th>
<th align="right">max</th>
<th>neval</th>
</tr>
</thead>
</table>
<pre><code>     LOOCV_R(y, X)  | 44.094387  | 44.293443  | 45.217615  | 44.712347  | 45.149469  | 51.166242  |    20</code></pre>
<p>———————–:|———–:|———–:|———–:|———–:|———–:|———–:|——-<br>  fastLOOCV_noRP(y, X)  | 26.710105  | 26.811101  | 26.869819  | 26.854140  | 26.905504  | 27.094317  |    20<br>———————–:|———–:|———–:|———–:|———–:|———–:|———–:|——-<br>       fastLOOCV(y, X)  |  6.411246  |  6.494743  |  6.720013  |  6.574210  |  6.697720  |  8.210375  |    20<br>———————–:|———–:|———–:|———–:|———–:|———–:|———–:|——-<br> fastLOOCV_mkl_1(y, X)  |  6.527082  |  6.997851  |  7.099617  |  7.148261  |  7.327877  |  7.465877  |    20<br>———————–:|———–:|———–:|———–:|———–:|———–:|———–:|——-<br> fastLOOCV_mkl_2(y, X)  |  6.364546  |  6.529459  |  6.564495  |  6.557765  |  6.637208  |  6.668344  |    20</p>
<p>According to our test, the performance of RcppArmadillo is about 1.6x as fast as R.<br>For our concern, the performance of using default number of MKL threads (12) is very close to using 2 MKL threads,<br>and is better than using 1 MKL threads. From this test, we think that the performance of RcppParallel is<br>deeply affected the number of threads Intel MKL used.<br>We suggest not to change the number of threads Intel MKL used, just keep it default.</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(Rcpp)</span><br><span class="line"><span class="keyword">library</span>(RcppArmadillo)</span><br><span class="line"><span class="keyword">library</span>(RcppParallel)</span><br><span class="line"></span><br><span class="line">sourceCpp(code = <span class="string">&#x27;</span></span><br><span class="line"><span class="string">// [[Rcpp::plugins(cpp11)]]</span></span><br><span class="line"><span class="string">// [[Rcpp::depends(RcppArmadillo, RcppParallel)]]</span></span><br><span class="line"><span class="string">#include &lt;RcppArmadillo.h&gt;</span></span><br><span class="line"><span class="string">#include &lt;RcppParallel.h&gt;</span></span><br><span class="line"><span class="string">using namespace RcppParallel;</span></span><br><span class="line"><span class="string">using namespace arma;</span></span><br><span class="line"><span class="string">using namespace Rcpp;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">double fastMSE_RcppArma(vec y, mat X, vec yTest, mat XTest)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string"> vec coef = solve(join_rows(ones&lt;vec&gt;(y.n_elem), X), y);</span></span><br><span class="line"><span class="string"> return as_scalar(pow(yTest - join_rows(ones&lt;vec&gt;(yTest.n_elem), XTest)*coef, 2));</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">struct MSE_Compute: public Worker &#123;</span></span><br><span class="line"><span class="string"> mat&amp; X;</span></span><br><span class="line"><span class="string"> vec&amp; y;</span></span><br><span class="line"><span class="string"> uvec&amp; index;</span></span><br><span class="line"><span class="string"> vec&amp; mse;</span></span><br><span class="line"><span class="string"> MSE_Compute(mat&amp; X, vec&amp; y, uvec&amp; index, vec&amp; mse):</span></span><br><span class="line"><span class="string">   X(X), y(y), index(index), mse(mse) &#123;&#125;</span></span><br><span class="line"><span class="string"> void operator()(std::size_t begin, std::size_t end)</span></span><br><span class="line"><span class="string"> &#123;</span></span><br><span class="line"><span class="string">   for (uword row_index = begin; row_index &lt; end; row_index++)</span></span><br><span class="line"><span class="string">   &#123;</span></span><br><span class="line"><span class="string">     mse(row_index) = fastMSE_RcppArma(y.elem(find(index != row_index)),</span></span><br><span class="line"><span class="string">       X.rows(find(index != row_index)), y.elem(find(index == row_index)),</span></span><br><span class="line"><span class="string">       X.rows(find(index == row_index)));</span></span><br><span class="line"><span class="string">   &#125;</span></span><br><span class="line"><span class="string"> &#125;</span></span><br><span class="line"><span class="string">&#125;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">NumericVector fastLOOCV(NumericVector yr, NumericMatrix Xr)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string"> int n = Xr.nrow(), p = Xr.ncol();</span></span><br><span class="line"><span class="string"> mat X(Xr.begin(), n, p, false);</span></span><br><span class="line"><span class="string"> if (yr.size() != n)</span></span><br><span class="line"><span class="string">   Rcpp::stop(&quot;The size of y must be equal to the number of rows of X.&quot; );</span></span><br><span class="line"><span class="string"> vec y(yr.begin(), n, false),</span></span><br><span class="line"><span class="string"> mse = zeros&lt;vec&gt;(n);</span></span><br><span class="line"><span class="string"> uvec index = linspace&lt;uvec&gt;(0, y.n_elem - 1, y.n_elem);</span></span><br><span class="line"><span class="string"> MSE_Compute mseResults(X, y, index, mse);</span></span><br><span class="line"><span class="string"> parallelFor(0, n, mseResults);</span></span><br><span class="line"><span class="string"> return wrap(mse);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">NumericVector fastLOOCV_noRP(NumericVector yr, NumericMatrix Xr)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string"> int n = Xr.nrow(), p = Xr.ncol();</span></span><br><span class="line"><span class="string"> mat X(Xr.begin(), n, p, false);</span></span><br><span class="line"><span class="string"> if (yr.size() != n)</span></span><br><span class="line"><span class="string">   Rcpp::stop(&quot;The size of y must be equal to the number of rows of X.&quot; );</span></span><br><span class="line"><span class="string"> vec y(yr.begin(), n, false),</span></span><br><span class="line"><span class="string"> mse = zeros&lt;vec&gt;(n);</span></span><br><span class="line"><span class="string"> uvec index = linspace&lt;uvec&gt;(0, y.n_elem - 1, y.n_elem);</span></span><br><span class="line"><span class="string"> for (uword row_index = 0; row_index &lt; y.n_elem; row_index++)</span></span><br><span class="line"><span class="string"> &#123;</span></span><br><span class="line"><span class="string">   mse(row_index) = fastMSE_RcppArma(y.elem(find(index != row_index)),</span></span><br><span class="line"><span class="string">       X.rows(find(index != row_index)), y.elem(find(index == row_index)),</span></span><br><span class="line"><span class="string">       X.rows(find(index == row_index)));</span></span><br><span class="line"><span class="string"> &#125;</span></span><br><span class="line"><span class="string"> return wrap(mse);</span></span><br><span class="line"><span class="string">&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">start_RppParallel &lt;- <span class="keyword">function</span>(verbose=<span class="literal">FALSE</span>, numMKLthreads = <span class="number">1</span>)&#123;</span><br><span class="line">  <span class="keyword">if</span> (!identical(system.file(package=<span class="string">&quot;RevoUtilsMath&quot;</span>), <span class="string">&quot;&quot;</span>))</span><br><span class="line">  &#123;</span><br><span class="line">    RevoUtilsMath::setMKLthreads(numMKLthreads)</span><br><span class="line">    RcppParallel::setThreadOptions(parallel::detectCores(<span class="literal">FALSE</span>, <span class="literal">TRUE</span>)/numMKLthreads)</span><br><span class="line">    <span class="keyword">if</span> (verbose)</span><br><span class="line">    &#123;</span><br><span class="line">      cat(sprintf(<span class="string">&#x27;RcppParallel uses %i threads.\n&#x27;</span>, parallel::detectCores(<span class="literal">FALSE</span>, <span class="literal">FALSE</span>)))</span><br><span class="line">      cat(<span class="string">&#x27;RevoUtilsMath is installed with multi-threaded BLAS, change the number of MKL threads.\n&#x27;</span>)</span><br><span class="line">      cat(sprintf(<span class="string">&#x27;Multithreaded BLAS/LAPACK libraries detected. Using %s cores for math algorithms.\n&#x27;</span>, RevoUtilsMath::getMKLthreads()))</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">end_RppParallel &lt;- <span class="keyword">function</span>(verbose=<span class="literal">FALSE</span>)&#123;</span><br><span class="line">  <span class="keyword">if</span> (!identical(system.file(package=<span class="string">&quot;RevoUtilsMath&quot;</span>), <span class="string">&quot;&quot;</span>))</span><br><span class="line">  &#123;</span><br><span class="line">    RevoUtilsMath::setMKLthreads(parallel::detectCores(<span class="literal">FALSE</span>, <span class="literal">FALSE</span>))</span><br><span class="line">    <span class="keyword">if</span> (verbose)</span><br><span class="line">    &#123;</span><br><span class="line">      cat(<span class="string">&#x27;RevoUtilsMath is installed with multi-threaded BLAS, recover the number of MKL threads.\n&#x27;</span>)</span><br><span class="line">      cat(sprintf(<span class="string">&#x27;Multithreaded BLAS/LAPACK libraries detected. Using %s cores for math algorithms.\n&#x27;</span>, RevoUtilsMath::getMKLthreads()))</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fastLOOCV_mkl_1 &lt;- <span class="keyword">function</span>(y, X, verbose = <span class="literal">FALSE</span>)&#123;</span><br><span class="line">  start_RppParallel(verbose, <span class="number">1</span>)</span><br><span class="line">  mses &lt;- fastLOOCV(y, X)</span><br><span class="line">  end_RppParallel(verbose)</span><br><span class="line">  <span class="keyword">return</span>(mses)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fastLOOCV_mkl_2 &lt;- <span class="keyword">function</span>(y, X, verbose = <span class="literal">FALSE</span>)&#123;</span><br><span class="line">  start_RppParallel(verbose, <span class="number">2</span>)</span><br><span class="line">  mses &lt;- fastLOOCV(y, X)</span><br><span class="line">  end_RppParallel(verbose)</span><br><span class="line">  <span class="keyword">return</span>(mses)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">LOOCV_R &lt;- <span class="keyword">function</span>(y, X)&#123;</span><br><span class="line">  mses &lt;- vector(<span class="string">&#x27;numeric&#x27;</span>, length(y))</span><br><span class="line">  <span class="keyword">for</span> (i <span class="keyword">in</span> seq_along(y))</span><br><span class="line">  &#123;</span><br><span class="line">    lmCoefs &lt;- coef(lm(y[-i] ~ X[-i, ]))</span><br><span class="line">    mses[i] &lt;- mean((y[i] - c(<span class="number">1</span>, X[i, ]) %*% lmCoefs)**<span class="number">2</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span>(mses)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">set.seed(<span class="number">10</span>)</span><br><span class="line">N &lt;- <span class="number">500</span></span><br><span class="line">p &lt;- N*<span class="number">0.95</span></span><br><span class="line">X &lt;- matrix(rnorm(N*p), N)</span><br><span class="line">lm_coef &lt;- replicate(p, rnorm(<span class="number">1</span>, rnorm(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>), rgamma(<span class="number">1</span>,<span class="number">10</span>,<span class="number">2</span>)))</span><br><span class="line">addingCol = matrix(sample(p, p, <span class="literal">TRUE</span>), p/<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">addingCol = addingCol[addingCol[ ,<span class="number">1</span>] != addingCol[ ,<span class="number">2</span>], ]</span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span>:ncol(addingCol))</span><br><span class="line">  X[ , addingCol[i,<span class="number">1</span>]] = X[ , addingCol[i,<span class="number">1</span>]] + X[ , addingCol[i,<span class="number">2</span>]]</span><br><span class="line">y &lt;- <span class="number">9</span> + rowSums(sweep(X, <span class="number">2</span>, lm_coef, <span class="string">&#x27;*&#x27;</span>)) + rnorm(N, <span class="number">0</span>, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">st &lt;- proc.time()</span><br><span class="line">mses_R &lt;- LOOCV_R(y, X)</span><br><span class="line">proc.time() - st</span><br><span class="line"><span class="comment">#   user  system elapsed</span></span><br><span class="line"><span class="comment">#  39.61    0.92   43.97</span></span><br><span class="line"></span><br><span class="line">st &lt;- proc.time()</span><br><span class="line">mses_cpp1 &lt;- fastLOOCV_noRP(y, X)</span><br><span class="line">proc.time() - st</span><br><span class="line"><span class="comment">#   user  system elapsed</span></span><br><span class="line"><span class="comment">#  38.88    6.54   27.02</span></span><br><span class="line">all.equal(mses_R, as.vector(mses_cpp1)) <span class="comment"># TRUE</span></span><br><span class="line"></span><br><span class="line">st &lt;- proc.time()</span><br><span class="line">mses_cpp2 &lt;- fastLOOCV(y, X)</span><br><span class="line">proc.time() - st</span><br><span class="line"><span class="comment">#   user  system elapsed</span></span><br><span class="line"><span class="comment">#  52.77    7.91    6.52</span></span><br><span class="line">all.equal(mses_R, as.vector(mses_cpp2)) <span class="comment"># TRUE</span></span><br><span class="line"></span><br><span class="line">st &lt;- proc.time()</span><br><span class="line">mses_cpp3 &lt;- fastLOOCV_mkl_1(y, X)</span><br><span class="line">proc.time() - st</span><br><span class="line"><span class="comment">#   user  system elapsed</span></span><br><span class="line"><span class="comment">#  63.21   12.31    7.18</span></span><br><span class="line">all.equal(mses_R, as.vector(mses_cpp3)) <span class="comment"># TRUE</span></span><br><span class="line"></span><br><span class="line">st &lt;- proc.time()</span><br><span class="line">mses_cpp4 &lt;- fastLOOCV_mkl_2(y, X)</span><br><span class="line">proc.time() - st</span><br><span class="line"><span class="comment">#   user  system elapsed</span></span><br><span class="line"><span class="comment">#  53.32    7.62    6.47</span></span><br><span class="line">all.equal(mses_R, as.vector(mses_cpp4)) <span class="comment"># TRUE</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(microbenchmark)</span><br><span class="line">microbenchmark(LOOCV_R(y, X), fastLOOCV_noRP(y, X), fastLOOCV(y, X),</span><br><span class="line">               fastLOOCV_mkl_1(y, X), fastLOOCV_mkl_2(y, X), times = <span class="number">20L</span>)</span><br><span class="line"><span class="comment"># Unit: seconds</span></span><br><span class="line"><span class="comment">#                   expr       min        lq      mean    median        uq       max neval</span></span><br><span class="line"><span class="comment">#          LOOCV_R(y, X) 44.094387 44.293443 45.217615 44.712347 45.149469 51.166242    20</span></span><br><span class="line"><span class="comment">#   fastLOOCV_noRP(y, X) 26.710105 26.811101 26.869819 26.854140 26.905504 27.094317    20</span></span><br><span class="line"><span class="comment">#        fastLOOCV(y, X)  6.411246  6.494743  6.720013  6.574210  6.697720  8.210375    20</span></span><br><span class="line"><span class="comment">#  fastLOOCV_mkl_1(y, X)  6.527082  6.997851  7.099617  7.148261  7.327877  7.465877    20</span></span><br><span class="line"><span class="comment">#  fastLOOCV_mkl_2(y, X)  6.364546  6.529459  6.564495  6.557765  6.637208  6.668344    20</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The information of machine: i7-5820K@4.0GHz with 32GB ram.</span></span><br><span class="line"><span class="comment"># The information of session: RRO 3.2.3 on windows 7 64bit.</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>MKL</tag>
        <tag>BLAS</tag>
        <tag>RcppParallel</tag>
        <tag>Microsoft R Open</tag>
      </tags>
  </entry>
  <entry>
    <title>introduction to tidyr</title>
    <url>/posts/201507/2015-07-04-tidyr.html</url>
    <content><![CDATA[<p>這是我自己在PTT PO的文，詳細介紹tidyr，以下是正文~~</p>
<p>本篇是最後一篇，主要介紹tidyr，以下是要介紹的內容：</p>
<ol>
<li><p>data.table:::dcast.data.table</p>
</li>
<li><p>data.table:::melt</p>
</li>
<li><p>tidyr:::gather</p>
</li>
<li><p>tidyr:::spread</p>
</li>
<li><p>tidyr:::separate</p>
</li>
</ol>
<a id="more"></a>

<p>這一章主要講述注重在資料的呈現方式 - 橫表跟直表的呈現</p>
<p>還有一些表格整合的問題</p>
<ol>
<li>dcast.data.table</li>
</ol>
<p>dcast提供直表加總的函數</p>
<p>學過統計的話，應該是contingency table (列聯表)</p>
<p>或是熟悉EXCEL，知道樞紐分析表，它其實就是樞紐分析表</p>
<p>Y就是列聯表中的列變數，X就是行變數</p>
<p>製作列聯表也可以說它的應用之一</p>
<p>這個function，需要先<code>require(reshape2)</code></p>
<p>有人可能會問reshape2就有dcast為啥要用dcast.data.table</p>
<p>原因很簡單，因為dcast.data.table快更多！！</p>
<p>速度直接?dcast.data.table下面例子就有，直接來簡介怎麼用</p>
<p>第一個input是data.table，第二個是給一個公式</p>
<p>舉例來說，如果公式是 Y ~ X，Y的元素會展開在列，X就會在行</p>
<p>第三個input是加總函數，你如果有相同類別的X, Y</p>
<p>它會把相同類別的值用這個函數做加總，預設是length</p>
<p>先用一個簡單例子來說明</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">  set.seed(<span class="number">100</span>)</span><br><span class="line">  DT = expand.grid(LETTERS[<span class="number">1</span>:<span class="number">2</span>], LETTERS[<span class="number">3</span>:<span class="number">4</span>]) %&gt;% data.table %&gt;%</span><br><span class="line">    setnames(c(<span class="string">&quot;col1&quot;</span>,<span class="string">&quot;col2&quot;</span>)) %&gt;% <span class="string">&#x27;[&#x27;</span>(rep(<span class="number">1</span>:nrow(.), <span class="number">2</span>)) %&gt;%</span><br><span class="line">    <span class="string">&#x27;[&#x27;</span>(,values := rpois(<span class="number">8</span>,<span class="number">2</span>))</span><br><span class="line">  DT</span><br><span class="line"><span class="comment">#    col1 col2 values</span></span><br><span class="line"><span class="comment"># 1:    A    C      1</span></span><br><span class="line"><span class="comment"># 2:    B    C      1</span></span><br><span class="line"><span class="comment"># 3:    A    D      2</span></span><br><span class="line"><span class="comment"># 4:    B    D      0</span></span><br><span class="line"><span class="comment"># 5:    A    C      2</span></span><br><span class="line"><span class="comment"># 6:    B    C      2</span></span><br><span class="line"><span class="comment"># 7:    A    D      3</span></span><br><span class="line"><span class="comment"># 8:    B    D      1</span></span><br><span class="line"></span><br><span class="line">  dcast.data.table(DT, col1~col2)</span><br><span class="line"><span class="comment">#    col1 C D</span></span><br><span class="line"><span class="comment"># 1:    A 2 2</span></span><br><span class="line"><span class="comment"># 2:    B 2 2</span></span><br><span class="line"></span><br><span class="line">  dcast.data.table(DT, col1~col2, sum)</span><br><span class="line"><span class="comment">#    col1 C D</span></span><br><span class="line"><span class="comment"># 1:    A 3 5</span></span><br><span class="line"><span class="comment"># 2:    B 3 1</span></span><br></pre></td></tr></table></figure>

<p>產生資料的函數、operator，我們都講過了，往前找找看</p>
<p>我們專注到第一個dcast，dcast.data.table(DT, col1~col2)</p>
<p>可以看的出來 col1就在列，col2就在行展開，然後計算col1, col2有相同類別的length</p>
<p>第二個dcast就是把有相同的類別，把values做總和</p>
<p>但是，我們怎麼知道它加總的是values</p>
<p>它會告訴你自動找尋data.table，然後選定values做為加總的column</p>
<p>至於改法就是修改value.var這個input，舉例來說</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">  DT[, values2 := rpois(<span class="number">8</span>, <span class="number">3</span>)]</span><br><span class="line">  dcast.data.table(DT, col1~col2, sum, value.var = <span class="string">&quot;values&quot;</span>)</span><br><span class="line"><span class="comment">#    col1 C D</span></span><br><span class="line"><span class="comment"># 1:    A 3 5</span></span><br><span class="line"><span class="comment"># 2:    B 3 1</span></span><br><span class="line"></span><br><span class="line">  dcast.data.table(DT, col1~col2, sum, value.var = <span class="string">&quot;values2&quot;</span>)</span><br><span class="line"><span class="comment">#    col1 C D</span></span><br><span class="line"><span class="comment"># 1:    A 5 7</span></span><br><span class="line"><span class="comment"># 2:    B 3 9</span></span><br><span class="line"></span><br><span class="line">  DT[, col3 := rep(LETTERS[<span class="number">5</span>:<span class="number">6</span>],,,<span class="number">4</span>)]</span><br><span class="line">  dcast.data.table(DT, col1+col2~col3, sum, value.var = <span class="string">&quot;values&quot;</span>)</span><br><span class="line"><span class="comment">#    col1 col2 E F</span></span><br><span class="line"><span class="comment"># 1:    A    C 1 2</span></span><br><span class="line"><span class="comment"># 2:    A    D 2 3</span></span><br><span class="line"><span class="comment"># 3:    B    C 1 2</span></span><br><span class="line"><span class="comment"># 4:    B    D 0 1</span></span><br></pre></td></tr></table></figure>

<p>dcast.data.table說明到此</p>
<ol start="2">
<li>melt</li>
</ol>
<p>dcast做直表加總，melt做橫表轉直表</p>
<p>舉個簡單的例子</p>
<p>我們有數個病人，每個病人有數個觀察值</p>
<p>表格紀錄的樣子是</p>
<p>id  O1  O2<br>P1  12  18<br>P2  13  15<br>..  ..  ..</p>
<p>我們想要轉成直表長這樣：</p>
<p>id  O  V<br>P1 O1 12<br>P1 O1 18<br>P2 O2 13<br>P2 O2 15<br>.. .. ..</p>
<p>那麼在R code可以這樣做：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">  (DT = data.table(id = paste0(<span class="string">&quot;P&quot;</span>, <span class="number">1</span>:<span class="number">2</span>), O1 = c(<span class="number">12</span>,<span class="number">13</span>), O2 = c(<span class="number">18</span>,<span class="number">15</span>)))</span><br><span class="line"><span class="comment">#    id O1 O2</span></span><br><span class="line"><span class="comment"># 1: P1 12 18</span></span><br><span class="line"><span class="comment"># 2: P2 13 15</span></span><br><span class="line"></span><br><span class="line">  (DT_long = melt(DT, <span class="string">&quot;id&quot;</span>, variable.name = <span class="string">&quot;O&quot;</span>, value.name = <span class="string">&quot;V&quot;</span>))</span><br><span class="line"><span class="comment">#    id  O  V</span></span><br><span class="line"><span class="comment"># 1: P1 O1 12</span></span><br><span class="line"><span class="comment"># 2: P2 O1 13</span></span><br><span class="line"><span class="comment"># 3: P1 O2 18</span></span><br><span class="line"><span class="comment"># 4: P2 O2 15</span></span><br></pre></td></tr></table></figure>

<p>melt的第一個input是data.table (註一)</p>
<p>第二個input是id.vars，也就是你要展開的變數名稱</p>
<p>第三個input是measure.vars，你要展開的變數名稱</p>
<p>前面例子未指定的情況下，就是全部的column</p>
<p>前面我還有用到variable.name 跟 value.name</p>
<p>variable.name是指定集合其他columns之後的column name</p>
<p>在前例就是把 O1, O2兩個columns集合之後的變數名稱，我改成了”O”</p>
<p>value.name是你集合其他columns之後那些變數值的column</p>
<p>在前例就是把 O1, O2兩個columns集合之後的變數值，我改成了”V”</p>
<p>註一：此指data.table:::melt，跟reshape2:::melt的差異部分</p>
<pre><code>請看data.table:::melt的help</code></pre>
<p>我們再看一個複雜一點的例子</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">  DT = data.table(ID1 = paste0(<span class="string">&quot;ID1_&quot;</span>, <span class="number">1</span>:<span class="number">20</span>),</span><br><span class="line">    ID2 = sample(paste0(<span class="string">&quot;ID2_&quot;</span>, <span class="number">1</span>:<span class="number">20</span>)),</span><br><span class="line">    O1 = rnorm(<span class="number">20</span>), O2 = rnorm(<span class="number">20</span>), O3 = rnorm(<span class="number">20</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">## 以ID1跟ID2作為展開，其他column (O1 ~ O3)會疊成一個變數</span></span><br><span class="line"><span class="comment">## 還會有一個新類別去label後面的value來自哪一個變數</span></span><br><span class="line">  melt(DT, c(<span class="string">&quot;ID1&quot;</span>, <span class="string">&quot;ID2&quot;</span>), c(<span class="string">&quot;O1&quot;</span>, <span class="string">&quot;O2&quot;</span>, <span class="string">&quot;O3&quot;</span>),</span><br><span class="line">    variable.name = <span class="string">&quot;O&quot;</span>, value.name = <span class="string">&quot;V&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 以ID1作為展開，其他column (O1 ~ O3)會疊成一個變數</span></span><br><span class="line"><span class="comment">## 還會有一個新類別去label後面的value來自哪一個變數</span></span><br><span class="line">  melt(DT, <span class="string">&quot;ID1&quot;</span>, c(<span class="string">&quot;O1&quot;</span>, <span class="string">&quot;O2&quot;</span>, <span class="string">&quot;O3&quot;</span>),</span><br><span class="line">    variable.name = <span class="string">&quot;O&quot;</span>, value.name = <span class="string">&quot;V&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 以ID1作為展開，其他column (O1 ~ O2)會疊成一個變數</span></span><br><span class="line"><span class="comment">## 還會有一個新類別去label後面的value來自哪一個變數</span></span><br><span class="line">  melt(DT, <span class="string">&quot;ID1&quot;</span>, c(<span class="string">&quot;O1&quot;</span>, <span class="string">&quot;O2&quot;</span>),</span><br><span class="line">    variable.name = <span class="string">&quot;O&quot;</span>, value.name = <span class="string">&quot;V&quot;</span>)</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>gather</li>
</ol>
<p>其實就是melt，只是比較好寫</p>
<p>我們把melt的例子改成用gather寫</p>
<p>只是melt一次到位的指令用gather寫之後</p>
<p>要用select跟filter做 (但是我覺得gather比較好寫)</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">  (DT = data.table(id = paste0(<span class="string">&quot;P&quot;</span>, <span class="number">1</span>:<span class="number">2</span>), O1 = c(<span class="number">12</span>,<span class="number">13</span>), O2 = c(<span class="number">18</span>,<span class="number">15</span>)))</span><br><span class="line"><span class="comment">#    id O1 O2</span></span><br><span class="line"><span class="comment"># 1: P1 12 18</span></span><br><span class="line"><span class="comment"># 2: P2 13 15</span></span><br><span class="line"></span><br><span class="line">  (DT_long = gather(DT, O, V, -id))</span><br><span class="line"><span class="comment">#    id  O  V</span></span><br><span class="line"><span class="comment"># 1: P1 O1 12</span></span><br><span class="line"><span class="comment"># 2: P2 O1 13</span></span><br><span class="line"><span class="comment"># 3: P1 O2 18</span></span><br><span class="line"><span class="comment"># 4: P2 O2 15</span></span><br><span class="line"></span><br><span class="line">  DT = data.table(ID1 = paste0(<span class="string">&quot;ID1_&quot;</span>, <span class="number">1</span>:<span class="number">20</span>),</span><br><span class="line">    ID2 = sample(paste0(<span class="string">&quot;ID2_&quot;</span>, <span class="number">1</span>:<span class="number">20</span>)),</span><br><span class="line">    O1 = rnorm(<span class="number">20</span>), O2 = rnorm(<span class="number">20</span>), O3 = rnorm(<span class="number">20</span>))</span><br><span class="line">  gather(DT, O, V, -ID1, -ID2)</span><br><span class="line">  gather(DT, O, V, -ID1, -ID2) %&gt;% select(-ID2)</span><br><span class="line">  gather(DT, O, V, -ID1, -ID2) %&gt;% select(-ID2) %&gt;% filter(O!=<span class="string">&quot;O3&quot;</span>)</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>spread</li>
</ol>
<p>提供gather的反向操作</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">  DT = data.table(id = paste0(<span class="string">&quot;P&quot;</span>, <span class="number">1</span>:<span class="number">2</span>), O1 = c(<span class="number">12</span>,<span class="number">13</span>), O2 = c(<span class="number">18</span>,<span class="number">15</span>))</span><br><span class="line">  DT_long = gather(DT, O, V, -id)</span><br><span class="line">  DT_long %&gt;% spread(O, V)</span><br><span class="line"><span class="comment">#    id O1 O2</span></span><br><span class="line"><span class="comment"># 1: P1 12 18</span></span><br><span class="line"><span class="comment"># 2: P2 13 15</span></span><br></pre></td></tr></table></figure>

<ol start="5">
<li>separate</li>
</ol>
<p>把特定column做strsplit，並設定成新的變數</p>
<p>一個簡單的例子</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">DT = data.table(x = paste0(sample(LETTERS, <span class="number">5</span>), <span class="string">&quot;,&quot;</span>, sample(LETTERS, <span class="number">5</span>)))</span><br><span class="line">DT %&gt;% separate(x, paste0(<span class="string">&quot;V&quot;</span>, <span class="number">1</span>:<span class="number">2</span>))</span><br></pre></td></tr></table></figure>

<p>這個函數要注意的是以下的程式是會出現錯誤的</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">DT = data.table(x = paste0(sample(LETTERS, <span class="number">5</span>), sample(LETTERS, <span class="number">5</span>)))</span><br><span class="line">DT %&gt;% separate(x, paste0(<span class="string">&quot;V&quot;</span>, <span class="number">1</span>:<span class="number">2</span>))</span><br></pre></td></tr></table></figure>

<p>separate無法分開沒有間隔字元的字串</p>
<p>你要分開這個只能做適當的轉換，像是：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">DT = data.table(x = paste0(sample(LETTERS, <span class="number">5</span>), sample(LETTERS, <span class="number">5</span>)))</span><br><span class="line">DT %&lt;&gt;% mutate(x = gsub(<span class="string">&quot;([A-Z])&quot;</span>, <span class="string">&quot;\\1, &quot;</span>, x))</span><br><span class="line">DT %&gt;% separate(x, paste0(<span class="string">&quot;V&quot;</span>, <span class="number">1</span>:<span class="number">3</span>)) %&gt;% select(-V3)</span><br></pre></td></tr></table></figure>

<p>如果有人有更好的方法，麻煩告知我一下，謝謝</p>
<p>資料介紹套件就到這裡結束</p>
<p>有任何問題，歡迎在板上回文詢問，我有看到都會回覆</p>
<p>(麻煩盡量不要用私信，希望可以讓板眾一起看問題該怎麼解決)</p>
<p>有任何補充或是建議也歡迎推文或回文，感謝大家</p>
<p>我並沒有講到plyr的 a<em>ply, l</em>ply, d<em>ply, r</em>ply系列</p>
<p>其實他們跟apply, lapply, tapply, replicate相對應，只是output型式不同</p>
<p>如果未來有機會寫有關*ply系列函數時，我再好好介紹plyr</p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>data.table</tag>
        <tag>ptt</tag>
        <tag>tidyr</tag>
      </tags>
  </entry>
  <entry>
    <title>Initialization of ubuntu</title>
    <url>/posts/201604/2016-04-11-initialization_of_ubuntu.html</url>
    <content><![CDATA[<a id="more"></a>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:webupd8team/sublime-text-3</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install sublime-text-installer</span><br><span class="line">sudo add-apt-repository ppa:webupd8team/java &amp;&amp; sudo apt-get update &amp;&amp; sudo apt-get install oracle-java8-installer &amp;&amp; sudo apt-get install oracle-java8-set-default</span><br><span class="line">apt-cache search readline xorg-dev &amp;&amp; sudo apt-get install libreadline6 libreadline6-dev xorg-dev tcl8.6-dev tk8.6-dev libtiff5 libtiff5-dev libjpeg-dev libpng12-dev libcairo2-dev libglu1-mesa-dev libgsl0-dev libicu-dev R-base R-base-dev libnlopt-dev libstdc++6 build-essential libcurl4-openssl-dev libxml2-dev aptitude r-base r-base-dev libnlopt-dev libstdc++6 build-essential libcurl4-openssl-dev libxml2-dev libssl-dev</span><br><span class="line"></span><br><span class="line"><span class="comment"># installation of rstudio-server</span></span><br><span class="line">sudo apt-get install gdebi-core</span><br><span class="line">wget https://download2.rstudio.org/rstudio-server-0.99.896-amd64.deb</span><br><span class="line">sudo gdebi rstudio-server-0.99.896-amd64.deb</span><br><span class="line">sudo cp /usr/lib/rstudio-server/extras/init.d/debian/rstudio-server /etc/init.d/</span><br><span class="line">sudo apt-get install sysv-rc-conf</span><br><span class="line">sudo sysv-rc-conf rstudio-server on</span><br><span class="line"><span class="comment"># check whether rstudio-server open when boot</span></span><br><span class="line">sysv-rc-conf --list rstudio-server</span><br><span class="line"><span class="comment"># port to rstudio-server</span></span><br><span class="line">iptables -A INPUT -p tcp --dport 8787 -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="comment"># remove R</span></span><br><span class="line">rm -r /usr/<span class="built_in">local</span>/lib/R</span><br><span class="line"></span><br><span class="line"><span class="comment"># download the installation file</span></span><br><span class="line">wget https://mran.revolutionanalytics.com/install/mro/3.2.4/MRO-3.2.4-Ubuntu-15.4.x86_64.deb</span><br><span class="line">wget https://mran.revolutionanalytics.com/install/mro/3.2.4/RevoMath-3.2.4.tar.gz</span><br><span class="line"><span class="comment"># install MRO</span></span><br><span class="line">sudo dpkg -i MRO-3.2.4-Ubuntu-15.4.x86_64.deb</span><br><span class="line"><span class="comment"># unpack MKL</span></span><br><span class="line">tar -xzf RevoMath-3.2.4.tar.gz</span><br><span class="line"><span class="built_in">cd</span> RevoMath</span><br><span class="line"><span class="comment"># install MKL</span></span><br><span class="line">sudo bash ./RevoMath.sh</span><br><span class="line"></span><br><span class="line">sudo chown -R celest.celest /usr/lib64/MRO-3.2.4/R-3.2.4/lib/R</span><br><span class="line">sudo chmod -R 775 /usr/lib64/MRO-3.2.4/R-3.2.4/lib/R</span><br><span class="line"></span><br><span class="line"><span class="comment"># install texlive</span></span><br><span class="line">sudo apt-get install texinfo texlive texlive-binaries texlive-latex-base texlive-latex-extra texlive-fonts-extra</span><br><span class="line"></span><br><span class="line"><span class="comment"># for server</span></span><br><span class="line">sudo apt-get install ssh rsync openssh-server</span><br><span class="line">ssh-keygen -t rsa -P <span class="string">&quot;&quot;</span> <span class="comment"># generate SSH key</span></span><br><span class="line"><span class="comment"># Enable SSH Key</span></span><br><span class="line">cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</span><br><span class="line"></span><br><span class="line"><span class="comment"># for VM, to use unity mode</span></span><br><span class="line">sudo apt-get install gnome-shell</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>Some installations of centos</title>
    <url>/posts/201605/2016-05-11-initialization_of_centos.html</url>
    <content><![CDATA[<p>Just for records.</p>
<a id="more"></a>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># update system</span></span><br><span class="line">sudo yml update</span><br><span class="line"></span><br><span class="line"><span class="comment"># installation of sublime text</span></span><br><span class="line"><span class="built_in">cd</span> ~/Downloads</span><br><span class="line">wget https://download.sublimetext.com/sublime_text_3_build_3103_x64.tar.bz2</span><br><span class="line">sudo tar -vxjf sublime_text_3_build_3103_x64.tar.bz2 -C /opt</span><br><span class="line"><span class="comment">## make a symbolic link to the installed Sublime3</span></span><br><span class="line">sudo ln -s /opt/sublime_text_3/sublime_text /usr/bin/subl</span><br><span class="line"><span class="comment">## create Gnome desktop launcher</span></span><br><span class="line">sudo subl /usr/share/applications/subl.desktop</span><br><span class="line"><span class="comment">## add following lines into file</span></span><br><span class="line"><span class="comment"># [Desktop Entry]</span></span><br><span class="line"><span class="comment"># Name=Subl</span></span><br><span class="line"><span class="comment"># Exec=subl</span></span><br><span class="line"><span class="comment"># Terminal=false</span></span><br><span class="line"><span class="comment"># Icon=/opt/sublime_text_3/Icon/48x48/sublime-text.png</span></span><br><span class="line"><span class="comment"># Type=Application</span></span><br><span class="line"><span class="comment"># Categories=TextEditor;IDE;Development</span></span><br><span class="line"><span class="comment"># X-Ayatana-Desktop-Shortcuts=NewWindow</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># [NewWindow Shortcut Group]</span></span><br><span class="line"><span class="comment"># Name=New Window</span></span><br><span class="line"><span class="comment"># Exec=subl -n</span></span><br><span class="line"><span class="comment"># TargetEnvironment=Unity</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># installation of java 8</span></span><br><span class="line">sudo wget --no-cookies --no-check-certificate --header <span class="string">&quot;Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie&quot;</span> <span class="string">&quot;http://download.oracle.com/otn-pub/java/jdk/8u66-b17/jdk-8u66-linux-x64.rpm&quot;</span></span><br><span class="line">sudo rpm -ivh jdk-8u66-linux-x64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment">## Setup JAVA Environment Variables</span></span><br><span class="line">sudo nano ~/.bashrc</span><br><span class="line"><span class="comment">## add following lines into file</span></span><br><span class="line"><span class="comment"># JAVA_HOME=&quot;/usr/java/jdk1.8.0_66/bin/java&quot;</span></span><br><span class="line"><span class="comment"># JRE_HOME=&quot;/usr/java/jdk1.8.0_66/jre/bin/java&quot;</span></span><br><span class="line"><span class="comment"># PATH=$PATH:$HOME/bin:JAVA_HOME:JRE_HOME</span></span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># installation of required packages for building R</span></span><br><span class="line">sudo yum install libxml2-devel libxml2-static tcl tcl-devel tk tk-devel libtiff-static libtiff-devel</span><br><span class="line">libjpeg-turbo-devel libpng12-devel cairo-tools libicu-devel openssl-devel libcurl-devel freeglut</span><br><span class="line">readline-static readline-devel cyrus-sasl-devel texlive texlive-xetex</span><br><span class="line"></span><br><span class="line"><span class="comment"># install R</span></span><br><span class="line">su -c <span class="string">&#x27;rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm&#x27;</span></span><br><span class="line">sudo yum update</span><br><span class="line">sudo yum install R R-devel R-java</span><br><span class="line"></span><br><span class="line"><span class="comment">## remove R</span></span><br><span class="line">sudo rm -rf /usr/lib64/R</span><br><span class="line"></span><br><span class="line"><span class="comment"># install MRO</span></span><br><span class="line"><span class="comment">## Make sure the system repositories are up-to-date prior to installing Microsoft R Open.</span></span><br><span class="line">sudo yum clean all</span><br><span class="line"><span class="comment">## get the installers</span></span><br><span class="line">wget https://mran.microsoft.com/install/mro/3.2.4/MRO-3.2.4.el7.x86_64.rpm</span><br><span class="line">wget https://mran.microsoft.com/install/mro/3.2.4/RevoMath-3.2.4.tar.gz</span><br><span class="line"><span class="comment">## install MRO</span></span><br><span class="line">sudo yum install MRO-3.2.4.el7.x86_64.rpm</span><br><span class="line"><span class="comment">## install MKL</span></span><br><span class="line">tar -xzf RevoMath-3.2.4.tar.gz</span><br><span class="line"><span class="built_in">cd</span> RevoMath</span><br><span class="line">sudo bash ./RevoMath.sh</span><br><span class="line"><span class="comment">### Choose option 1 to install MKL and follow the onscreen prompts.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## change the right of folders makes owner can install packages in library</span></span><br><span class="line">sudo chown -R celest.celest /usr/lib64/MRO-3.2.4/R-3.2.4/lib64/R</span><br><span class="line">sudo chmod -R 775 /usr/lib64/MRO-3.2.4/R-3.2.4/lib64/R</span><br><span class="line"></span><br><span class="line"><span class="comment"># for ssh connection</span></span><br><span class="line">sudo apt-get install rsync openssh-server-sysvinit</span><br><span class="line">ssh-keygen -t rsa -P <span class="string">&quot;&quot;</span> <span class="comment"># generate SSH key</span></span><br><span class="line"><span class="comment"># Enable SSH Key</span></span><br><span class="line">cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure>

<p>The installation of rstudio server is recorded:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://download2.rstudio.org/rstudio-server-rhel-0.99.896-x86_64.rpm</span><br><span class="line">sudo yum install --nogpgcheck rstudio-server-rhel-0.99.896-x86_64.rpm</span><br><span class="line"><span class="comment">## start the rstudio-server</span></span><br><span class="line">sudo rstudio-server start</span><br><span class="line"><span class="comment">## start rstudio-server on boot</span></span><br><span class="line">sudo cp /usr/lib/rstudio-server/extras/init.d/redhat/rstudio-server /etc/init.d/</span><br><span class="line">sudo chmod 755 /etc/init.d/rstudio-server</span><br><span class="line">sudo chkconfig --add rstudio-server</span><br><span class="line"><span class="comment">## open the firewall for rstudio-server</span></span><br><span class="line">sudo firewall-cmd --zone=public --add-port=8787/tcp --permanent</span><br><span class="line">sudo firewall-cmd --reload</span><br><span class="line"></span><br><span class="line"><span class="comment">## To browse localhost:8787 for using the rstudio-server</span></span><br></pre></td></tr></table></figure>
<p>The installation of shiny server is recorded:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">## install shiny-server</span></span><br><span class="line">wget https://download3.rstudio.org/centos5.9/x86_64/shiny-server-1.4.2.786-rh5-x86_64.rpm</span><br><span class="line">sudo yum install --nogpgcheck shiny-server-1.4.2.786-rh5-x86_64.rpm</span><br><span class="line"><span class="comment">## start the shiny-server</span></span><br><span class="line">sudo systemctl start shiny-server</span><br><span class="line"><span class="comment">## start shiny-server on boot</span></span><br><span class="line">sudo cp /opt/shiny-server/config/init.d/redhat/shiny-server /etc/init.d/</span><br><span class="line">sudo chmod 755 /etc/init.d/shiny-server</span><br><span class="line">sudo chkconfig --add shiny-server</span><br><span class="line"></span><br><span class="line"><span class="comment">## open the firewall for shiny-server</span></span><br><span class="line">sudo firewall-cmd --zone=public --add-port=3838/tcp --permanent</span><br><span class="line">sudo firewall-cmd --reload</span><br><span class="line"></span><br><span class="line"><span class="comment">## the server file is in /srv/shiny-server</span></span><br><span class="line"><span class="comment">## there are some examples, you can browser localhost:3838,</span></span><br><span class="line"><span class="comment">## localhost:3838/sample-apps/hello and localhost:3838/sample-apps/rmd</span></span><br></pre></td></tr></table></figure>

<p>Also, the installation of mongoDB is recorded:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">## Configure the package management system</span></span><br><span class="line">sudo subl /etc/yum.repos.d/mongodb-org-3.2.repo</span><br><span class="line"><span class="comment">## add following lines into file</span></span><br><span class="line"><span class="comment"># [mongodb-org-3.2]</span></span><br><span class="line"><span class="comment"># name=MongoDB Repository</span></span><br><span class="line"><span class="comment"># baseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.2/x86_64/</span></span><br><span class="line"><span class="comment"># gpgcheck=1</span></span><br><span class="line"><span class="comment"># enabled=1</span></span><br><span class="line"><span class="comment"># gpgkey=https://www.mongodb.org/static/pgp/server-3.2.asc</span></span><br><span class="line"><span class="comment">## install mongoDB</span></span><br><span class="line">sudo yum install -y mongodb-org</span><br><span class="line"></span><br><span class="line"><span class="comment">## prevent updating version of mongodb</span></span><br><span class="line">sudo subl /etc/yum.conf</span><br><span class="line"><span class="comment">## add following line into file</span></span><br><span class="line"><span class="comment"># exclude=mongodb-org,mongodb-org-server,mongodb-org-shell,mongodb-org-mongos,mongodb-org-tools</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## start mongod on boot</span></span><br><span class="line">sudo chkconfig mongod on</span><br><span class="line"></span><br><span class="line"><span class="comment">## increase the soft limit of number of process for mongod</span></span><br><span class="line">sudo subl /etc/security/limits.conf</span><br><span class="line"><span class="comment">## add following line into file (third line must be added, other lines are optional.)</span></span><br><span class="line"><span class="comment"># mongod soft nofile 64000</span></span><br><span class="line"><span class="comment"># mongod hard nofile 64000</span></span><br><span class="line"><span class="comment"># mongod soft nproc 32000</span></span><br><span class="line"><span class="comment"># mongod hard nproc 32000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## to disable transparent huge pages</span></span><br><span class="line"><span class="comment"># https://docs.mongodb.com/manual/tutorial/transparent-huge-pages/</span></span><br><span class="line">sudo subl /etc/init.d/<span class="built_in">disable</span>-transparent-hugepages</span><br><span class="line"><span class="comment">## add following line into file</span></span><br><span class="line"><span class="comment"># #!/bin/sh</span></span><br><span class="line"><span class="comment"># ### BEGIN INIT INFO</span></span><br><span class="line"><span class="comment"># # Provides:          disable-transparent-hugepages</span></span><br><span class="line"><span class="comment"># # Required-Start:    $local_fs</span></span><br><span class="line"><span class="comment"># # Required-Stop:</span></span><br><span class="line"><span class="comment"># # X-Start-Before:    mongod mongodb-mms-automation-agent</span></span><br><span class="line"><span class="comment"># # Default-Start:     2 3 4 5</span></span><br><span class="line"><span class="comment"># # Default-Stop:      0 1 6</span></span><br><span class="line"><span class="comment"># # Short-Description: Disable Linux transparent huge pages</span></span><br><span class="line"><span class="comment"># # Description:       Disable Linux transparent huge pages, to improve</span></span><br><span class="line"><span class="comment"># #                    database performance.</span></span><br><span class="line"><span class="comment"># ### END INIT INFO</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># case $1 in</span></span><br><span class="line"><span class="comment">#   start)</span></span><br><span class="line"><span class="comment">#     if [ -d /sys/kernel/mm/transparent_hugepage ]; then</span></span><br><span class="line"><span class="comment">#       thp_path=/sys/kernel/mm/transparent_hugepage</span></span><br><span class="line"><span class="comment">#     elif [ -d /sys/kernel/mm/redhat_transparent_hugepage ]; then</span></span><br><span class="line"><span class="comment">#       thp_path=/sys/kernel/mm/redhat_transparent_hugepage</span></span><br><span class="line"><span class="comment">#     else</span></span><br><span class="line"><span class="comment">#       return 0</span></span><br><span class="line"><span class="comment">#     fi</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#     echo &#x27;never&#x27; &gt; $&#123;thp_path&#125;/enabled</span></span><br><span class="line"><span class="comment">#     echo &#x27;never&#x27; &gt; $&#123;thp_path&#125;/defrag</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#     unset thp_path</span></span><br><span class="line"><span class="comment">#     ;;</span></span><br><span class="line"><span class="comment"># esac</span></span><br><span class="line"><span class="comment">## make it executable</span></span><br><span class="line">sudo chmod 755 /etc/init.d/<span class="built_in">disable</span>-transparent-hugepages</span><br><span class="line"><span class="comment">## run it on boot</span></span><br><span class="line">sudo chkconfig --add <span class="built_in">disable</span>-transparent-hugepages</span><br><span class="line"></span><br><span class="line"><span class="comment">## Give a permissive policy on your /mongo/ directory that permits access to daemons (like the mongod service.).</span></span><br><span class="line"><span class="comment"># http://stackoverflow.com/questions/30182016/unable-to-start-mongodb-3-0-2-service-on-centos-7</span></span><br><span class="line"><span class="comment"># https://www.centos.org/docs/5/html/5.1/Deployment_Guide/sec-sel-enable-disable.html</span></span><br><span class="line">sudo subl /etc/sysconfig/selinux</span><br><span class="line"><span class="comment"># set SELINUX=disabled</span></span><br></pre></td></tr></table></figure>

<p>Automatically enabling your network connection at startup on CentOS 7:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># In my case, it is ifcfg-eno1. It may be different for other machine.</span></span><br><span class="line">sudo sed -i -e <span class="string">&#x27;s@^ONBOOT=no@ONBOOT=yes@&#x27;</span> /etc/sysconfig/network-scripts/ifcfg-eno1</span><br></pre></td></tr></table></figure>

<p>Installation of ftp server on CentOS 7:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum install -y vsftpd</span><br><span class="line"></span><br><span class="line"><span class="comment"># edit the environment of vsftpd</span></span><br><span class="line">sudo subl /etc/vsftpd/vsftpd.conf</span><br><span class="line"><span class="comment"># stop the anonymous logging</span></span><br><span class="line">sudo sed -i -e <span class="string">&#x27;s@^anonymous_enable=YES@anonymous_enable=NO@&#x27;</span> /etc/vsftpd/vsftpd.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># start the service and start on boot</span></span><br><span class="line">sudo service vsftpd start</span><br><span class="line">chkconfig vsftpd on</span><br><span class="line"></span><br><span class="line"><span class="comment">## open the firewall for xrdp</span></span><br><span class="line">sudo firewall-cmd --zone=public --add-port=21/tcp --permanent</span><br><span class="line">sudo firewall-cmd --reload</span><br></pre></td></tr></table></figure>

<p>Installation of xrdp on CentOS 7 / RHEL 7 (remote desktop from windows):</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo subl /etc/yum.repos.d/xrdp.repo</span><br><span class="line"><span class="comment">## add following lines into file</span></span><br><span class="line"><span class="comment"># [xrdp]</span></span><br><span class="line"><span class="comment"># name=xrdp</span></span><br><span class="line"><span class="comment"># baseurl=http://li.nux.ro/download/nux/dextop/el7/x86_64/</span></span><br><span class="line"><span class="comment"># enabled=1</span></span><br><span class="line"><span class="comment"># gpgcheck=0</span></span><br><span class="line">sudo yum install -y xrdp tigervnc-server</span><br><span class="line"></span><br><span class="line"><span class="comment">## open the firewall for xrdp</span></span><br><span class="line">sudo firewall-cmd --zone=public --add-port=3389/tcp --permanent</span><br><span class="line">sudo firewall-cmd --reload</span><br><span class="line"><span class="comment"># start service</span></span><br><span class="line">sudo systemctl start xrdp.service</span><br><span class="line"><span class="comment"># enable service on boot</span></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> xrdp.service</span><br><span class="line"></span><br><span class="line"><span class="comment">## Attention: the bpp color must be set to be 24bit. (in windows.)</span></span><br></pre></td></tr></table></figure>

<p>Mount another network disk:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mount -t cifs -o username=<span class="string">&quot;xxxxxxx&quot;</span>,password=<span class="string">&quot;yyyyyyy&quot;</span> //ip-address/folder /mnt/folder</span><br><span class="line"></span><br><span class="line"><span class="comment"># to mount on boot</span></span><br><span class="line">subl /etc/fstab</span><br><span class="line"><span class="comment">## add following lines into file</span></span><br><span class="line"><span class="comment"># //ip-address/folder /mnt/folder username=xxxxxxx,password=yyyyyyy,uid=1000,gid=1000,sec=ntlm,iocharset=utf8 0 0</span></span><br><span class="line">sudo mount -a</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>CentOS</tag>
      </tags>
  </entry>
  <entry>
    <title>Installation of MRO in ubuntu</title>
    <url>/posts/201604/2016-04-22-Installation_of_RRO_in_ubuntu.html</url>
    <content><![CDATA[<p>Revolution R Open (Now named Microsoft R Open) provides Intel MKL multi-threaded BLAS.<br>This post is to record the installation of MRO in ubuntu 16.04.</p>
<a id="more"></a>

<p>First, go to the official website of MRO to check the download link (<a href="https://mran.revolutionanalytics.com/download/">Link</a>).<br>The installation is refer to the manual at the website (<a href="https://mran.microsoft.com/documents/rro/installation/">Link</a>).</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># download the installation file</span></span><br><span class="line">wget https://mran.revolutionanalytics.com/install/mro/3.2.4/MRO-3.2.4-Ubuntu-15.4.x86_64.deb</span><br><span class="line">wget https://mran.revolutionanalytics.com/install/mro/3.2.4/RevoMath-3.2.4.tar.gz</span><br><span class="line"><span class="comment"># install MRO</span></span><br><span class="line">sudo dpkg -i MRO-3.2.4-Ubuntu-15.4.x86_64.deb</span><br><span class="line"><span class="comment"># unpack MKL</span></span><br><span class="line">tar -xzf RevoMath-3.2.4.tar.gz</span><br><span class="line"><span class="built_in">cd</span> RevoMath</span><br><span class="line"><span class="comment"># install MKL</span></span><br><span class="line">sudo bash ./RevoMath.sh</span><br><span class="line"></span><br><span class="line">sudo chown -R celest.celest /usr/lib64/MRO-3.2.4/R-3.2.4/lib/R</span><br><span class="line">sudo chmod -R 775 /usr/lib64/MRO-3.2.4/R-3.2.4/lib/R</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>MKL</tag>
        <tag>ubuntu</tag>
        <tag>BLAS</tag>
        <tag>Microsoft R Open</tag>
      </tags>
  </entry>
  <entry>
    <title>Pipe Operators in R</title>
    <url>/posts/201607/2016-07-10-pipe-operators-in-R.html</url>
    <content><![CDATA[<p>我在ptt分享過magrittr的文章(<a href="https://www.ptt.cc/bbs/R_Language/M.1437452331.A.CD1.html">連結</a>)，做為資料處理系列文章的第一篇</p>
<p>後來有一些額外的心得(<a href="https://www.ptt.cc/bbs/Statistics/M.1450534933.A.8A4.html">連結</a>)，所以又有一篇補充了一些觀念</p>
<p>一個大陸人Kun Ren(任堃)後來在2015年上傳了一個pipeR套件</p>
<a id="more"></a>

<p>宣稱比magrittr的pipe operator更好用，效能更佳，而且沒有模糊的界線(他的文章連結：<a href="https://renkun.me/blog/2014/08/08/difference-between-magrittr-and-pipeR.html">Blog Post</a>)</p>
<p>效能差異大概是快了近8倍，後面會在提及這方面</p>
<h2 id="magrittr"><a href="#magrittr" class="headerlink" title="magrittr"></a>magrittr</h2><h3 id="背景介紹"><a href="#背景介紹" class="headerlink" title="背景介紹"></a>背景介紹</h3><p>先介紹一下magrittr的來由，根據這篇<a href="http://www.r-statistics.com/2014/08/simpler-r-coding-with-pipes-the-present-and-future-of-the-magrittr-package/">blog文章</a>所提到的：</p>
<blockquote>
<p>The <code>|&gt;</code> operator in <code>F#</code> is indeed very simple: it is defined as let <code>(|&gt;) x f = f x</code>. However, the usefulness of this simplicity relies heavily on a concept that is not available in <code>R</code>: partial application. Furthermore, functions in <code>F#</code> almost always adhere to certain design principles which make the simple definition sufficient. Suppose that <code>f</code> is a function of two arguments, then in <code>F#</code> you may apply <code>f</code> to only the first argument and obtain a new function as the result — a function of the second argument alone.</p>
</blockquote>
<p><code>F#</code>的pipe operator, <code>|&gt;</code>, 讓他覺得非常的方便以及實用，因此，決定把這個東西實作到R裡面</p>
<p>(注：其實shell script也有pipe operator, <code>|</code>, 而且更廣為人知。)</p>
<p>這就是<code>R</code>為什麼會有<code>magrittr</code>這個套件的背景原由了，所以才會有了<code>%&gt;%</code>, <code>%&lt;&gt;%</code>跟<code>%T&gt;%</code>這幾個operator。</p>
<p>(注：我這裡補充一點，其實此時開發<code>ggplot2</code>, <code>plyr</code>, <code>dplyr</code>等套件的Hadley已經在<code>dplyr</code>上</p>
<p>推出了<code>%.%</code>這個operator，而且也把<code>dplyr</code>的函數全部都設計第一個放<code>data.frame</code>做為input，</p>
<p>只是<code>magrittr</code>的推出，把整個功能用到更加完善，並且還涵蓋了alias function，</p>
<p>因此，Hadley後來加入了<code>magrittr</code>的發展計畫，就未繼續開發<code>%.%</code>，</p>
<p>在Hadley後面發展的套件都可以看到他都有直接把<code>%&gt;%</code> import在他的套件中，</p>
<p>例如：很好用的爬蟲套件<code>rvest</code>、開發用來處理list的<code>purrr</code>等都可以看到<code>magrittr</code>的身影。)</p>
<h3 id="pipe-operator的基本概念"><a href="#pipe-operator的基本概念" class="headerlink" title="pipe operator的基本概念"></a>pipe operator的基本概念</h3><p>假設現在有一個函數<code>f</code>，其input為<code>a</code>，一般在寫程式的時候，</p>
<p>我們都可以透過<code>f(a)</code>獲得<code>f</code>函數在<code>a</code>這一點的值</p>
<p>而<code>%&gt;%</code>可以把LHS(注：left hand side of operator)當作RHS(注：right hand side of operator)的函數的第一個input</p>
<p>因此，透過 a %&gt;% f 或是 a %&gt;% f() 都等同於 f(a)</p>
<p>同理，如果現在還有一個函數<code>g</code>，有兩個input，<code>x</code>跟<code>y</code>，則<code>g(x,y)</code>可以寫做<code>x %&gt;% g(y)</code></p>
<p>這樣的好處是當我們有層層推疊的<code>(</code>時，就可以輕易地拆解開來並執行</p>
<p>例如：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">a_list &lt;- list(<span class="number">1</span>:<span class="number">6</span>, <span class="number">3</span>:<span class="number">5</span>, <span class="number">4</span>:<span class="number">7</span>)</span><br><span class="line">sort_uni_a &lt;- sort(unique(unlist(a_list)))</span><br></pre></td></tr></table></figure>

<p>第二行這樣連在一起非常的難讀，但是改成下面這樣，又有效能問題(暫存變數)：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">unlist_list &lt;- unlist(a_list)</span><br><span class="line">sort_uni_a &lt;- sort(unique(unlist_list))</span><br></pre></td></tr></table></figure>

<p>或是改成這樣，卻沒覺得可讀性上升多少：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">sort_uni_a &lt;- sort(unique(unlist(a_list)))</span><br></pre></td></tr></table></figure>

<p>但是用<code>%&gt;%</code>改寫就可以兼顧可讀性跟效能問題：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">sort_uni_a &lt;- a_list %&gt;% unlist %&gt;% unique %&gt;% sort</span><br></pre></td></tr></table></figure>

<p>這樣就可以很容易知道他把<code>a_list</code>先拉成一個向量(<code>unlist</code>)，然後取唯一(<code>unique</code>)</p>
<p>接著排列所有元素(<code>sort</code>)，照著<code>%&gt;%</code>的順序去讀就可以順利解讀</p>
<p>此時，<code>magrittr</code>的特性就可以被看到，他省去了暫存變數，也增加了易讀性。</p>
<h3 id="gt-介紹"><a href="#gt-介紹" class="headerlink" title="%&gt;%介紹"></a>%&gt;%介紹</h3><p>舉一個簡單的例子，來說明<code>%&gt;%</code>的用法</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">a &lt;- <span class="number">1</span></span><br><span class="line">f &lt;- <span class="keyword">function</span>(a) a + <span class="number">1</span></span><br><span class="line">f(a)</span><br><span class="line">a %&gt;% f</span><br><span class="line">a %&gt;% f()</span><br><span class="line">a %&gt;% f(.)</span><br></pre></td></tr></table></figure>

<p>跑上面的程式可以發現，最後四個output都一樣</p>
<p>其實<code>%&gt;%</code>做的就是把左邊變數放進右邊函數裡做執行</p>
<p>也就是說<code>f(a)</code>等同於<code>a %&gt;% f</code>(或是上面其他三種)</p>
<p>但是怎麼最後一個<code>a %&gt;% f(.)</code>看起來怪怪的，為啥有個<code>.</code>在那</p>
<p>其實在<code>magrittr</code>中，<code>.</code>是用來代表<code>%&gt;%</code>前面的變數</p>
<p>所以<code>a %&gt;% f(.)</code>程式會把<code>.</code>的位置換成<code>a</code>，變成<code>f(a)</code></p>
<p><code>.</code> 在<code>magrittr</code>的應用中，會佔很大的比例，也在Hadley往後的套件扮演重大的角色</p>
<p>像是<code>do.call</code>, <code>Reduce</code>第一個input是<code>function</code>，第二個是<code>list</code></p>
<p>我們通常傳入<code>list</code>，所以此時必須用<code>.</code>做輸入位置的控制</p>
<p>再者，<code>c</code>, <code>cbind</code>, <code>rbind</code>會根據位置不同來決定是合併於何處</p>
<p>也是一個很重要的問題，因此，用 <code>.</code>做傳入位置的控制是必須的</p>
<p>針對這個，我給一段簡單的程式碼來示範：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">a_list &lt;- list(<span class="number">1</span>:<span class="number">5</span>, <span class="number">3</span>:<span class="number">7</span>, <span class="number">6</span>:<span class="number">10</span>)</span><br><span class="line">a_list %&gt;% do.call(rbind, .)</span><br><span class="line">a_list %&gt;% Reduce(cbind, .)</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>:<span class="number">5</span> %&gt;% rbind(<span class="number">3</span>:<span class="number">7</span>, .)</span><br><span class="line"><span class="number">1</span>:<span class="number">5</span> %&gt;% rbind(., <span class="number">3</span>:<span class="number">7</span>)</span><br><span class="line"></span><br><span class="line">f &lt;- <span class="keyword">function</span>(x, a, b) a * x^<span class="number">2</span> + b</span><br><span class="line"><span class="number">1</span>:<span class="number">5</span> %&gt;% f(., <span class="number">2</span>, <span class="number">5</span>)  <span class="comment"># 同 1:5 %&gt;% f(2, 5)</span></span><br><span class="line"><span class="number">1</span>:<span class="number">5</span> %&gt;% f(<span class="number">2</span>, ., <span class="number">5</span>)</span><br><span class="line"><span class="number">1</span>:<span class="number">5</span> %&gt;% f(<span class="number">2</span>, <span class="number">5</span>, .)</span><br></pre></td></tr></table></figure>

<p>但是，這點被Kun Ren攻擊，這裡有一些模稜兩可的問題，後面在提。</p>
<p>先介紹一下<code>&#123;&#125;</code>在<code>%&gt;%</code>的用法，用<code>&#123;&#125;</code>括住之後，</p>
<p>裡面的只要不是其他<code>%&gt;%</code>後面的 <code>.</code>都代表你前面傳入的值</p>
<p>這樣說有點難懂，舉個例子</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>:<span class="number">2</span> %&gt;% &#123;</span><br><span class="line">    list(cbind(<span class="number">9</span>:<span class="number">10</span>, .), <span class="number">3</span>:<span class="number">4</span> %&gt;% cbind(<span class="number">9</span>:<span class="number">10</span>, .))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [[1]]</span><br><span class="line">##         .</span><br><span class="line">## [1,]  9 1</span><br><span class="line">## [2,] 10 2</span><br><span class="line">## </span><br><span class="line">## [[2]]</span><br><span class="line">##         .</span><br><span class="line">## [1,]  9 3</span><br><span class="line">## [2,] 10 4</span><br></pre></td></tr></table></figure>

<p>可以看到第一個可以很直覺的解讀，<code>9:10</code>是跟傳入的<code>1:2</code>做行合併</p>
<p>而第二個<code>.</code>，因為前面有了一個新的<code>%&gt;%</code></p>
<p>所以這一個<code>.</code>就被前面的<code>3:4</code>取代</p>
<p>所以第二個output變成<code>9:10</code>跟<code>3:4</code>做行合併</p>
<p>回到Kun Ren攻擊的點</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">f &lt;- <span class="keyword">function</span>(x, y, z = <span class="string">&quot;nothing&quot;</span>) &#123;</span><br><span class="line">    cat(<span class="string">&quot;x =&quot;</span>, x, <span class="string">&quot;\n&quot;</span>)</span><br><span class="line">    cat(<span class="string">&quot;y =&quot;</span>, y, <span class="string">&quot;\n&quot;</span>)</span><br><span class="line">    cat(<span class="string">&quot;z =&quot;</span>, z, <span class="string">&quot;\n&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>1:10 %&gt;% f(mean(.), median(.))</code>到底是</p>
<p><code>f(1:10, mean(1:10), median(1:10))</code>還是<code>f(mean(1:10),median(1:10))</code>？</p>
<p>你可能會根據上面的rule很快回答出來是<code>f(1:10, mean(1:10), median(1:10))</code></p>
<p>但是<code>a_list %&gt;% do.call(rbind, .)</code>這個呢？</p>
<p>剛剛<code>1:10 %&gt;% f(mean(.), median(.))</code>不是<code>f(1:10, mean(1:10), median(1:10))</code>這個嗎？</p>
<p>怎麼此時<code>a_list %&gt;% do.call(rbind, .)</code>又是<code>do.call(rbind, a_list)</code>？</p>
<p>還有剛剛看到的<code>1:5 %&gt;% rbind(3:7, .)</code>這個呢？</p>
<p>剛剛<code>1:5 %&gt;% rbind(3:7, .)</code>是<code>rbind(1:5, 3:7, 1:5)</code>還是<code>rbind(3:7, 1:5)</code>這個嗎？</p>
<p>這是<code>magrittr</code>為了一些函數做了特例，讓整個rule出現了一些模糊的情況</p>
<p>但是，通常也不會去寫成<code>a_list %&gt;% &#123;do.call(rbind, .)&#125;</code>這樣去避免模糊情況(<code>&#123;&#125;</code>後面說明)</p>
<p>不過這個方式不能說不好，只是<code>pipeR</code>提供了更明確的方式去避免更複雜的方式使用<code>do.call</code>跟<code>Reduce</code></p>
<h3 id="lt-gt-T-gt-跟-介紹"><a href="#lt-gt-T-gt-跟-介紹" class="headerlink" title="%&lt;&gt;%, %T&gt;%跟%$%介紹"></a>%&lt;&gt;%, %T&gt;%跟%$%介紹</h3><p>如果懂了<code>%&gt;%</code>， 這個就不難了</p>
<p>先看簡單的例子 (<code>add</code>是<code>magrittr</code>提供用在<code>%&gt;%</code>上的<code>+</code> (這部分請看最後面的補充))</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">a &lt;- <span class="number">1</span></span><br><span class="line">a %&gt;% add(<span class="number">1</span>)  <span class="comment"># 同 a %&gt;% &#x27;+&#x27;(1) or a %&gt;% &#x27;+&#x27;(., 1)</span></span><br><span class="line">a  <span class="comment"># 1</span></span><br><span class="line">a %&lt;&gt;% add(<span class="number">1</span>)</span><br><span class="line">a  <span class="comment"># 2</span></span><br></pre></td></tr></table></figure>

<p>這個例子可以看的出來<code>%&lt;&gt;%</code>除了傳入變數之外，也會改變傳入變數的值</p>
<p>也就是可以把<code>a %&lt;&gt;% add(1)</code>看成<code>a = a + 1</code></p>
<p>你如果有一串要做最後賦值給你傳入的變數</p>
<p>只需要在第一個傳導變數的operator做改變即可，舉例來說：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">dat &lt;- data.frame(a = <span class="number">1</span>:<span class="number">3</span>, b = <span class="number">8</span>:<span class="number">10</span>)</span><br><span class="line">dat &lt;- dat %&gt;% rbind(dat)</span><br><span class="line">dat2 &lt;- data.frame(a = <span class="number">1</span>:<span class="number">3</span>, b = <span class="number">8</span>:<span class="number">10</span>)</span><br><span class="line">dat2 %&lt;&gt;% rbind(dat2)</span><br><span class="line">all.eqaul(dat, dat2)  <span class="comment"># TRUE</span></span><br></pre></td></tr></table></figure>

<p>至於<code>%T&gt;%</code>，他只傳遞變數，不回傳值，通常用來傳遞到不回傳值的<code>function</code>上</p>
<p>像是<code>plot</code>, <code>library</code>, <code>install.packages</code>, <code>plyr</code>的<code>*_ply</code>等</p>
<p>這個operator可以幫你把前面做好的值賦予一個變數</p>
<p>並且同時做後面function的動作，舉例來說：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">dat &lt;- data.frame(a = rep(<span class="number">1</span>:<span class="number">3</span>, <span class="number">2</span>), b = rnorm(<span class="number">6</span>))</span><br><span class="line">dat2 &lt;- dat %&gt;% &#123;</span><br><span class="line">    tapply(.$b, .$a, sum)</span><br><span class="line">&#125; %&gt;% &#123;</span><br><span class="line">    data.frame(a = names(.) %&gt;% as.integer, b = .)</span><br><span class="line">&#125; %<span class="literal">T</span>&gt;% plot(.$a, .$b)</span><br></pre></td></tr></table></figure>

<p>這裡<code>dat2</code>就是一個新的<code>data.frame</code>，同時，我們也把<code>a, b</code>的scatter plot畫出來</p>
<p>這部分可以用<code>dplyr</code>的<code>group_by</code>以及<code>summarise</code>完成</p>
<p>還沒提到<code>dplyr</code>，所以我們先用替代方法做</p>
<p>再來是第四個operator <code>%$%</code></p>
<p>舉個例來說，雖然有了<code>%&gt;%</code>，但是<code>dat %&gt;% &#123;tapply(.$b, .$a, sum)&#125;</code>還是會覺得冗長</p>
<p>而且也容易忘記要放<code>.$</code>，此時<code>%$%</code>就提供了直接把前面變數的元素直接以名字做操作</p>
<p>再也不需要<code>.$name</code>這麼麻煩，直接用<code>name</code>做你想要的操作就好</p>
<p>所以，就可以簡單寫成<code>dat %$% tapply(b, a, sum)</code></p>
<p>是不是就變得簡單的很多？</p>
<p>再給一個例子說明<code>%$%</code>就好</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">a &lt;- <span class="number">3</span></span><br><span class="line">b &lt;- -<span class="number">2</span></span><br><span class="line">x &lt;- rnorm(<span class="number">100</span>)</span><br><span class="line">y &lt;- a + b * x + rnorm(<span class="number">100</span>)</span><br><span class="line">fit &lt;- lm(y ~ x)</span><br><span class="line">sigma_hat &lt;- fit %$% &#123;</span><br><span class="line">    crossprod(residuals)/df.residual</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="magrittr一些補充"><a href="#magrittr一些補充" class="headerlink" title="magrittr一些補充"></a>magrittr一些補充</h3><p><code>magrittr</code>提供很多其他<code>function</code>的別名</p>
<p>像是<code>+</code>, <code>*</code>, <code>[</code>, <code>[[</code>, <code>&lt;- rownames()</code>等等</p>
<p>有興趣請去<code>magrittr</code>的manual查看<code>extract</code>的部分</p>
<p>這個可以讓你寫pipe chain的時候更加順手，像是</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">vals &lt;- <span class="number">1</span>:<span class="number">3</span> %&gt;% data.frame(a = ., b = .^<span class="number">2</span>) %&gt;% set_rownames(LETTERS[<span class="number">1</span>:<span class="number">3</span>]) %&gt;% lm(b ~ a, data = .) %&gt;% predict</span><br></pre></td></tr></table></figure>

<p>不然你可能會這樣寫</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">dat &lt;- <span class="number">1</span>:<span class="number">3</span> %&gt;% data.frame(a = ., b = .^<span class="number">2</span>)</span><br><span class="line">rownames(dat) &lt;- LETTERS[<span class="number">1</span>:<span class="number">3</span>]</span><br><span class="line">vals = dat %&gt;% lm(b ~ a, data = .) %&gt;% predict</span><br></pre></td></tr></table></figure>

<p>你可能只是要<code>vals</code>這個變數，你卻還要多創一個<code>dat</code>這個暫存變數，而中斷chain</p>
<h2 id="pipeR"><a href="#pipeR" class="headerlink" title="pipeR"></a>pipeR</h2><p>這部分是未在ptt上分享過的部分，我主要根據<a href="http://renkun.me/pipeR/">pipeR Tutorial</a>的內容作介紹</p>
<p>我先說明差異，<code>pipeR</code>提供了另一個pipe operator, <code>%&gt;&gt;%</code>, 其中最重要的改進就是上面說的模糊問題</p>
<p>強制LHS一定是RHS的第一個input</p>
<p>例如：</p>
<p><code>1:5 %&gt;&gt;% rbind(3:7)</code>是<code>rbind(1:5, 3:7)</code></p>
<p><code>1:5 %&gt;&gt;% rbind(3:7, .)</code>是<code>rbind(1:5, 3:7, 1:5)</code></p>
<p><code>1:5 %&gt;&gt;% rbind(., 3:7)</code>是<code>rbind(1:5, 1:5, 3:7)</code></p>
<p>那<code>a_list %&gt;% do.call(rbind, .)</code>怎麼辦</p>
<p><code>pipeR</code>設定只要寫上第一個的parameter name之後，他就會自動傳到第二個</p>
<p>舉例來說，<code>a_list %&gt;&gt;% do.call(what = rbind)</code>，他就會看成<code>do.call(rbind, a_list)</code></p>
<p>因為第一個parameter的名字已經被用了，所以會自動傳到第二個參數去</p>
<p>或像是tutorial裡面提到的<code>lm</code>函數，打<code>mtcars %&gt;&gt;% lm(formula = mpg ~ cyl + wt)</code></p>
<p>就會等於<code>lm(formula = mpg ~ cyl + wt, mtcars)</code>，其中的<code>mtcars</code>就會自動放在第二個<code>data</code>的input</p>
<p>這樣就規則就會沒有模糊問題，而且不需要再用<code>&#123;&#125;</code>去界定位置了</p>
<h3 id="in-pipeR"><a href="#in-pipeR" class="headerlink" title="() in pipeR"></a>() in pipeR</h3><p>再來是一些新功能，<code>pipeR</code>提供了<code>()</code>去使用單行命令，做指定位置的動作</p>
<p>不需要再開block (<code>&#123;&#125;</code>)去產生新的<code>environment</code>，可以增進效率</p>
<p>例如上面的<code>a_list %&gt;&gt;% do.call(what = rbind)</code>也可以寫成</p>
<p><code>a_list %&gt;&gt;% (do.call(rbind, .))</code>或像是<code>lm</code>的例子也可以寫成</p>
<p><code>mtcars %&gt;&gt;% (lm(mpg ~ cyl + wt, .))</code>，至於要用上面的方式還是這裡的模式去寫</p>
<p>就看個人的coding習慣了，基本上，我個人是偏好前面那一種，第二種會多出太多<code>()</code></p>
<p>而且<code>()</code>在<code>pipeR</code>還會有其他功能，在讀程式時，有時候會有點搞混，不建議用<code>()</code></p>
<p><code>()</code>在<code>pipeR</code>的另一個用途就是side effect，下面就來介紹他</p>
<h3 id="side-effect-in-pipeR"><a href="#side-effect-in-pipeR" class="headerlink" title="side effect in pipeR"></a>side effect in pipeR</h3><p>那什麼是side effect?</p>
<p>如果想要在pipe的過程中，想要作指派、輸出一些資訊</p>
<p>而輸出一些資訊就跟<code>%T&gt;%</code>的功能一樣，但指派就是新東西了</p>
<p>所有side effect的指令都需要用<code>(~</code>跟<code>)</code>包起來</p>
<p>例如：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">a_list &lt;- list(<span class="number">1</span>:<span class="number">5</span>, <span class="number">3</span>:<span class="number">7</span>, <span class="number">6</span>:<span class="number">10</span>)</span><br><span class="line">sort_uni_a &lt;- a_list %&gt;&gt;% unlist %&gt;&gt;% (~cat(<span class="string">&quot;what is it? show me:\n&quot;</span>, .)) %&gt;&gt;% unique %&gt;&gt;% sort</span><br></pre></td></tr></table></figure>

<p>這樣一來就可以在pipe的過程中把途中的變數show出來</p>
<p>這樣有兩個好處，一個是不需要在額外print東西出來，可以直接pipe，另一個則是方便debug</p>
<p>接著是指派，舉個例子，你需要把a取unique排序後，去掉全資料的平均</p>
<p>以往的寫法會像是：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">a_list &lt;- list(<span class="number">1</span>:<span class="number">5</span>, <span class="number">3</span>:<span class="number">7</span>, <span class="number">6</span>:<span class="number">10</span>)</span><br><span class="line">a_list_to_vec &lt;- a_list %&gt;&gt;% unlist</span><br><span class="line">mean_list_a &lt;- mean(a_list_to_vec)</span><br><span class="line">sort_uni_demean_a &lt;- a_list_to_vec - mean_list_a</span><br></pre></td></tr></table></figure>

<p>這樣寫就需要兩個暫存變數，<code>a_list_to_vec</code>跟<code>mean_list_a</code>，而且不能一路pipe</p>
<p>那改用side effect之後，就可以寫成這樣：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">a_list &lt;- list(<span class="number">1</span>:<span class="number">5</span>, <span class="number">3</span>:<span class="number">7</span>, <span class="number">6</span>:<span class="number">10</span>)</span><br><span class="line">sort_uni_demean_a &lt;- a_list %&gt;&gt;% unlist %&gt;&gt;% (~mean_list_a &lt;- mean(.)) %&gt;&gt;% unique %&gt;&gt;% sort %&gt;&gt;% -mean_list_a</span><br></pre></td></tr></table></figure>

<p>至於<code>%&gt;%</code>跟<code>%&gt;&gt;%</code>的效能比較可以看下面這段程式(例子取自前面提及的Kun Ren部落格文章)：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(magrittr)</span><br><span class="line"><span class="keyword">library</span>(pipeR)</span><br><span class="line"><span class="keyword">library</span>(microbenchmark)</span><br><span class="line">eq_f &lt;- `==`</span><br><span class="line">microbenchmark(magrittr = &#123;</span><br><span class="line">    lapply(<span class="number">1</span>:<span class="number">10000</span>, <span class="keyword">function</span>(i) &#123;</span><br><span class="line">        sample(letters, <span class="number">6</span>, replace = <span class="literal">T</span>) %&gt;% paste(collapse = <span class="string">&quot;&quot;</span>) %&gt;% eq_f(<span class="string">&quot;rstats&quot;</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;, pipeR = &#123;</span><br><span class="line">    lapply(<span class="number">1</span>:<span class="number">10000</span>, <span class="keyword">function</span>(i) &#123;</span><br><span class="line">        sample(letters, <span class="number">6</span>, replace = <span class="literal">T</span>) %&gt;&gt;% paste(collapse = <span class="string">&quot;&quot;</span>) %&gt;&gt;% eq_f(<span class="string">&quot;rstats&quot;</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;, times = <span class="number">20L</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## Unit: milliseconds</span><br><span class="line">##      expr       min       lq      mean   median        uq       max neval</span><br><span class="line">##  magrittr 1215.1390 1253.883 1282.4720 1279.271 1304.1553 1400.9079    20</span><br><span class="line">##     pipeR  377.7212  386.284  395.8731  393.892  406.5949  418.6119    20</span><br></pre></td></tr></table></figure>

<p>可以看出效能改進相當顯著，大概快了3倍，隨著loop次數增加</p>
<p>效能改進的倍率還會再增加，這裡就留給有興趣的人自己測試了</p>
<p>而<code>pipeR</code>還有兩個函數<code>Pipe</code>跟<code>pipeline</code>，不過我就沒研究了，有興趣的人在自己看吧</p>
<p>以上是我這篇文章的分享</p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>magrittr</tag>
        <tag>Pipe Operator</tag>
        <tag>pipeR</tag>
      </tags>
  </entry>
  <entry>
    <title>Installation of centos on fake raid machine (intel RST)</title>
    <url>/posts/201605/2016-05-10-centos-fakeraid.html</url>
    <content><![CDATA[<p>I try to install Unix system on a machine with fake raid supported by intel RST in BIOS.<br>But I spent 36 hours to install ubuntu 16.04, it did not come to succeed.<br>Accidentally, I saw a massage that installation of centos on fake raid is easier than ubuntu,<br>so I try to install and succeed. The reference website is <a href="https://www.powerrc.net/intel-raid-fakeraid-centos.html">PowerRC</a>.</p>
<a id="more"></a>

<p>Simply record the steps:</p>
<ol>
<li><p>Build the raid in the BIOS. (On my X99 board, it is to set controller in RAID mode and restart.<br>Then find the Intel RST in advanced page. Follow the lead and construct a raid 5 array.)<br>And enable the CSM (compatibility supportive modules) option.</p>
</li>
<li><p>I use centos 7 disc to boot in UEFI mode. (Intel RST only support the UEFI BIOS for X99 chipset.)<br>Using the manual partition to build /boot (about 500M), /boot/efi (about 500M), swap and / and starting installation.</p>
</li>
<li><p>Reboot and use centos!</p>
</li>
</ol>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>CentOS</tag>
        <tag>raid</tag>
      </tags>
  </entry>
  <entry>
    <title>Installation of mongodb in ubuntu</title>
    <url>/posts/201604/2016-04-22-Installation_of_mongodb_in_ubuntu.html</url>
    <content><![CDATA[<p>mongodb is a noSQL database. I use it to construct the vd database.</p>
<a id="more"></a>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># install mongodb</span></span><br><span class="line">sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb http://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/3.2 multiverse&quot;</span> | sudo tee /etc/apt/sources.list.d/mongodb-org-3.2.list</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install -y mongodb-org</span><br><span class="line"><span class="comment"># test whether mongodb can be implemented</span></span><br><span class="line">sudo service mongod start</span><br><span class="line"><span class="comment"># # to new file &#x27;mongod.service&#x27; in /lib/systemd/system with content:</span></span><br><span class="line"><span class="comment"># [Unit]</span></span><br><span class="line"><span class="comment"># Description=High-performance, schema-free document-oriented database</span></span><br><span class="line"><span class="comment"># Documentation=man:mongod(1)</span></span><br><span class="line"><span class="comment"># After=network.target</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># [Service]</span></span><br><span class="line"><span class="comment"># Type=forking</span></span><br><span class="line"><span class="comment"># User=mongodb</span></span><br><span class="line"><span class="comment"># Group=mongodb</span></span><br><span class="line"><span class="comment"># RuntimeDirectory=mongod</span></span><br><span class="line"><span class="comment"># PIDFile=/var/run/mongod/mongod.pid</span></span><br><span class="line"><span class="comment"># ExecStart=/usr/bin/mongod -f /etc/mongod.conf --pidfilepath /var/run/mongod/mongod.pid --fork</span></span><br><span class="line"><span class="comment"># TimeoutStopSec=5</span></span><br><span class="line"><span class="comment"># KillMode=mixed</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># [Install]</span></span><br><span class="line"><span class="comment"># WantedBy=multi-user.target</span></span><br><span class="line"><span class="comment"># # Reference:</span></span><br><span class="line"><span class="comment"># http://askubuntu.com/questions/690993/mongodb-3-0-2-wont-start-after-upgrading-to-ubuntu-15-10</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># port to mongodb</span></span><br><span class="line">iptables -A INPUT -p tcp --dport 27017 -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="comment"># check whether it success</span></span><br><span class="line">cat /var/<span class="built_in">log</span>/mongodb/mongod.log</span><br></pre></td></tr></table></figure>


<p>use <code>subl /etc/mongod.conf</code> to edit the configuration of mongodb. The default file:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># mongod.conf</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for documentation of all options, see:</span></span><br><span class="line"><span class="comment">#   http://docs.mongodb.org/manual/reference/configuration-options/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Where and how to store data.</span></span><br><span class="line">storage:</span><br><span class="line">  dbPath: /var/lib/mongodb</span><br><span class="line">  journal:</span><br><span class="line">    enabled: <span class="literal">true</span></span><br><span class="line"><span class="comment">#  engine:</span></span><br><span class="line"><span class="comment">#  mmapv1:</span></span><br><span class="line"><span class="comment">#  wiredTiger:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># where to write logging data.</span></span><br><span class="line">systemLog:</span><br><span class="line">  destination: file</span><br><span class="line">  logAppend: <span class="literal">true</span></span><br><span class="line">  path: /var/<span class="built_in">log</span>/mongodb/mongod.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># network interfaces</span></span><br><span class="line">net:</span><br><span class="line">  port: 27017</span><br><span class="line">  bindIp: 127.0.0.1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#processManagement:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#security:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#operationProfiling:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#replication:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#sharding:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Enterprise-Only Options:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#auditLog:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#snmp:</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>After some edits:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># mongod.conf</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for documentation of all options, see:</span></span><br><span class="line"><span class="comment">#   http://docs.mongodb.org/manual/reference/configuration-options/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Where and how to store data.</span></span><br><span class="line">storage:</span><br><span class="line">  dbPath: /var/lib/mongodb</span><br><span class="line">  journal:</span><br><span class="line">    enabled: <span class="literal">true</span></span><br><span class="line"><span class="comment">#  engine:</span></span><br><span class="line"><span class="comment">#  mmapv1:</span></span><br><span class="line"><span class="comment">#  wiredTiger:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># where to write logging data.</span></span><br><span class="line">systemLog:</span><br><span class="line">  destination: file</span><br><span class="line">  logAppend: <span class="literal">true</span></span><br><span class="line">  path: /var/<span class="built_in">log</span>/mongodb/mongod.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># network interfaces</span></span><br><span class="line">net:</span><br><span class="line">  port: 27017</span><br><span class="line">  bindIp: 127.0.0.1</span><br><span class="line"><span class="comment">## for remote connection, bind_ip need to be set 0.0.0.0.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#processManagement:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#security:</span></span><br><span class="line">security:</span><br><span class="line">   authorization: <span class="built_in">enable</span></span><br><span class="line"><span class="comment">#operationProfiling:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#replication:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#sharding:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Enterprise-Only Options:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#auditLog:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#snmp:</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>For security, to add admin user and create users:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">use admin</span><br><span class="line"><span class="comment"># the user managing users</span></span><br><span class="line">db.createUser(</span><br><span class="line">  &#123;</span><br><span class="line">    user: <span class="string">&quot;adminname&quot;</span>,</span><br><span class="line">    <span class="built_in">pwd</span>: <span class="string">&quot;password&quot;</span>,</span><br><span class="line">    roles: [ &#123; role: <span class="string">&quot;userAdminAnyDatabase&quot;</span>, db: <span class="string">&quot;admin&quot;</span> &#125; ]</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"><span class="comment"># dbOwner</span></span><br><span class="line"><span class="comment"># read/write all databases user</span></span><br><span class="line">db.createUser(</span><br><span class="line">  &#123;</span><br><span class="line">    user: <span class="string">&quot;adminname&quot;</span>,</span><br><span class="line">    <span class="built_in">pwd</span>: <span class="string">&quot;password&quot;</span>,</span><br><span class="line">    roles: [ &#123; role: <span class="string">&quot;dbOwner&quot;</span>, db: <span class="string">&quot;admin&quot;</span> &#125; ]</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"><span class="comment"># read/write all databases user</span></span><br><span class="line">db.createUser(</span><br><span class="line">  &#123;</span><br><span class="line">    user: <span class="string">&quot;adminname&quot;</span>,</span><br><span class="line">    <span class="built_in">pwd</span>: <span class="string">&quot;password&quot;</span>,</span><br><span class="line">    roles: [ &#123; role: <span class="string">&quot;readWriteAnyDatabase&quot;</span>, db: <span class="string">&quot;admin&quot;</span> &#125; ]</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"><span class="comment"># general users</span></span><br><span class="line">db.createUser(</span><br><span class="line">    &#123;</span><br><span class="line">      user: <span class="string">&quot;adminname&quot;</span>,</span><br><span class="line">      <span class="built_in">pwd</span>: <span class="string">&quot;password&quot;</span>,</span><br><span class="line">      roles: [</span><br><span class="line">         &#123; role: <span class="string">&quot;read&quot;</span>, db: <span class="string">&quot;reporting&quot;</span> &#125;,</span><br><span class="line">         &#123; role: <span class="string">&quot;read&quot;</span>, db: <span class="string">&quot;products&quot;</span> &#125;,</span><br><span class="line">         &#123; role: <span class="string">&quot;read&quot;</span>, db: <span class="string">&quot;sales&quot;</span> &#125;,</span><br><span class="line">         &#123; role: <span class="string">&quot;readWrite&quot;</span>, db: <span class="string">&quot;accounts&quot;</span> &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>ubuntu</tag>
        <tag>mongodb</tag>
      </tags>
  </entry>
  <entry>
    <title>deployment of Oracle database</title>
    <url>/posts/201607/2016-07-24-deployment-of-oracle-database.html</url>
    <content><![CDATA[<p>這一篇文章主要是在CentOS 7.4最小安裝下去部署Oracle database</p>
<p>我會建立Oracle database的主要原因是</p>
<p>為了下一篇測試從Oracle database拉資料到sqoop</p>
<p>(Note: modified at 2018/04/19)</p>
<a id="more"></a>

<ol>
<li>準備工作</li>
</ol>
<p>這部分照著前一篇spark的布置即可</p>
<ol start="2">
<li>安裝java</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下載並安裝java</span></span><br><span class="line">curl -v -j -k -L -H <span class="string">&quot;Cookie: oraclelicense=accept-securebackup-cookie&quot;</span> \</span><br><span class="line">http://download.oracle.com/otn-pub/java/jdk/8u171-b11/512cd62ec5174c3487ac17c61aaa89e8/jdk-8u171-linux-x64.rpm \</span><br><span class="line">-o jdk-8u171-linux-x64.rpm</span><br><span class="line">sudo yum install -y jdk-8u171-linux-x64.rpm</span><br><span class="line"><span class="comment"># setup environment</span></span><br><span class="line">sudo tee -a /etc/profile &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/java/jdk1.8.0_171-amd64</span><br><span class="line">EOF</span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>安裝Oracle database</li>
</ol>
<p>a. set up hostname</p>
<p>用<code>sudo hostnamectl set-hostname oracleTest.test.com</code>就會立即生效了</p>
<p>b. 創建Oracle database的group, user</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo groupadd oinstall</span><br><span class="line">sudo groupadd dba</span><br><span class="line">sudo useradd -g oinstall -G dba oracle</span><br><span class="line"><span class="comment"># 更改密碼</span></span><br><span class="line">sudo passwd oracle</span><br></pre></td></tr></table></figure>


<p>c. 設定系統變數</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo tee -a /etc/sysctl.conf &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">fs.aio-max-nr = 1048576</span><br><span class="line">fs.file-max = 6815744</span><br><span class="line">kernel.shmall = 2097152</span><br><span class="line">kernel.shmmax = 1987162112</span><br><span class="line">kernel.shmmni = 4096</span><br><span class="line">kernel.sem = 250 32000 100 128</span><br><span class="line">net.ipv4.ip_local_port_range = 9000 65500</span><br><span class="line">net.core.rmem_default = 262144</span><br><span class="line">net.core.rmem_max = 4194304</span><br><span class="line">net.core.wmem_default = 262144</span><br><span class="line">net.core.wmem_max = 1048586</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<p>可以用<code>sysctl -p</code>跟<code>sysctl -a</code>來確定是否設定成功</p>
<p>d. 設定系統安全性</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo tee -a /etc/security/limits.conf &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">oracle   soft   nproc    131072</span><br><span class="line">oracle   hard   nproc    131072</span><br><span class="line">oracle   soft   nofile   131072</span><br><span class="line">oracle   hard   nofile   131072</span><br><span class="line">oracle   soft   core     unlimited</span><br><span class="line">oracle   hard   core     unlimited</span><br><span class="line">oracle   soft   memlock  50000000</span><br><span class="line">oracle   hard   memlock  50000000</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>


<p>e. 修改hosts</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo tee -a /etc/hosts &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">192.168.0.120 oracleTest oracleTest.test.com localhost localhost.localdomain</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<p>f. 安裝需要元件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum install -y zip unzip binutils.x86_64 compat-libcap1.x86_64 gcc.x86_64 gcc-c++.x86_64 \</span><br><span class="line">glibc.i686 glibc.x86_64 glibc-devel.i686 glibc-devel.x86_64 ksh compat-libstdc++-33 libaio.i686 \</span><br><span class="line">libaio.x86_64 libaio-devel.i686 libaio-devel.x86_64 libgcc.i686 libgcc.x86_64 libstdc++.i686 \</span><br><span class="line">libstdc++.x86_64 libstdc++-devel.i686 libstdc++-devel.x86_64 libXi.i686 libXi.x86_64 libXtst.i686 \</span><br><span class="line">libXtst.x86_64 make.x86_64 sysstat.x86_64 unixODBC.x86_64 unixODBC-devel.x86_64 libaio.i386</span><br><span class="line"><span class="comment"># for installation</span></span><br><span class="line">sudo yum groupinstall <span class="string">&quot;X Window System&quot;</span> <span class="string">&quot;Fonts&quot;</span> -y</span><br></pre></td></tr></table></figure>

<p>g. 下載安裝檔案</p>
<p>可以從oracle網站<a href="http://www.oracle.com/technetwork/database/enterprise-edition/downloads/index.html">點這</a>下載下來，然後用sftp上傳到你的VM</p>
<p>上傳常見的工具是FileZilla，在google很容易找到</p>
<p>至於使用方法搜尋一下也能找的到</p>
<p>假設下載到目前最新版本：12c Release 1</p>
<p>那檔名應該是：linuxamd64_12102_database_1of2.zip跟linuxamd64_12102_database_2of2.zip</p>
<p>h. 解壓縮檔案</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo unzip linuxamd64_12102_database_1of2.zip -d /stage/</span><br><span class="line">sudo unzip linuxamd64_12102_database_2of2.zip -d /stage/</span><br></pre></td></tr></table></figure>

<p>i. 建立需要的資料夾</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mkdir /u01</span><br><span class="line">sudo mkdir /u02</span><br><span class="line">sudo chown -R oracle:oinstall /u01</span><br><span class="line">sudo chown -R oracle:oinstall /u02</span><br><span class="line">sudo chmod -R 775 /u01</span><br><span class="line">sudo chmod -R 775 /u02</span><br><span class="line">sudo chmod g+s /u01</span><br><span class="line">sudo chmod g+s /u02</span><br></pre></td></tr></table></figure>

<p>j. 利用Xming安裝 (putty in windows，如果其他系統要再用別的方式)</p>
<p>  (i) 下載Xming：<a href="https://sourceforge.net/projects/xming/">https://sourceforge.net/projects/xming/</a><br> (ii) 安裝Xming<br>(iii) Putty設定中的Connection/SSH/X11的分頁裡面，啟用X11，並設定X display location為localhost:0<br> (iv) 登入伺服器，使用者用oracle<br>  (v) 使用<code>/stage/database/runInstaller</code> (出現要設定DISPLAY問題可以先打<code>xhost +</code>，然後在執行一次)<br> (vi) 細部的安裝設定可以參考 <a href="https://wiki.centos.org/zh-tw/HowTos/Oracle12onCentos7">https://wiki.centos.org/zh-tw/HowTos/Oracle12onCentos7</a></p>
<p>k. 設定防火牆</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo firewall-cmd --zone=public --add-port=1521/tcp --add-port=1539/tcp \</span><br><span class="line">--add-port=5500/tcp --add-port=5520/tcp --add-port=3938/tcp \</span><br><span class="line">--permanent</span><br><span class="line">sudo firewall-cmd --reload</span><br><span class="line"><span class="comment"># 確定有開啟port</span></span><br><span class="line">sudo firewall-cmd --list-ports</span><br><span class="line"><span class="comment"># 1521/tcp 1539/tcp 3938/tcp 5500/tcp 5520/tcp</span></span><br></pre></td></tr></table></figure>

<p>l. 設定環境變數</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tee -a /home/oracle/.bash_profile &lt;&lt; EOF</span><br><span class="line"><span class="built_in">export</span> TMPDIR=<span class="variable">$TMP</span></span><br><span class="line"><span class="built_in">export</span> ORACLE_BASE=/u01/app/oracle</span><br><span class="line"><span class="built_in">export</span> ORACLE_HOME=<span class="variable">$ORACLE_BASE</span>/product/12.1.0/dbhome_1</span><br><span class="line"><span class="built_in">export</span> ORACLE_SID=orcl</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$ORACLE_HOME</span>/bin:<span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=<span class="variable">$ORACLE_HOME</span>/lib:/lib:/usr/lib:/usr/lib64</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=<span class="variable">$ORACLE_HOME</span>/jlib:<span class="variable">$ORACLE_HOME</span>/rdbms/jlib</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">tee -a /etc/bashrc &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line"><span class="built_in">export</span> ORACLE_HOME=/u01/app/oracle/product/12.1.0/dbhome_1</span><br><span class="line">EOF</span><br><span class="line"><span class="built_in">source</span> /etc/bashrc</span><br></pre></td></tr></table></figure>

<p>m. 設定對外連線</p>
<p>編輯<code>/u01/app/oracle/product/12.1.0/dbhome_1/network/admin/listener.ora</code>檔案，增加一行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.0.120)(PORT = 1539))</span><br></pre></td></tr></table></figure>


<p>n. 設定自動啟動</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tee /etc/sysconfig/oral_envs &lt;&lt; EOF</span><br><span class="line">ORACLE_BASE=/u01/app/oracle</span><br><span class="line">ORACLE_HOME=/u01/app/oracle/product/12.1.0/dbhome_1</span><br><span class="line">ORACLE_SID=orcl</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">tee /usr/lib/systemd/system/oral@lsnrctl.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Oracle Net Listener</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">EnvironmentFile=/etc/sysconfig/oral_envs</span><br><span class="line">ExecStart=/u01/app/oracle/product/12.1.0/dbhome_1/bin/lsnrctl start</span><br><span class="line">ExecStop=/u01/app/oracle/product/12.1.0/dbhome_1/bin/lsnrctl stop</span><br><span class="line">User=oracle</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">tee /usr/lib/systemd/system/oral@oracledb.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Oracle Database service</span><br><span class="line">After=network.target lsnrctl.service</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">EnvironmentFile=/etc/sysconfig/oral_envs</span><br><span class="line">ExecStart=/u01/app/oracle/product/12.1.0/dbhome_1/bin/dbstart \<span class="variable">$ORACLE_HOME</span></span><br><span class="line">ExecStop=/u01/app/oracle/product/12.1.0/dbhome_1/bin/dbshut \<span class="variable">$ORACLE_HOME</span></span><br><span class="line">User=oracle</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl <span class="built_in">enable</span> oral@lsnrctl oral@oracledb</span><br></pre></td></tr></table></figure>

<p>o. 確定database狀態</p>
<p>確定LISTENER：<code>$ORACLE_HOME/bin/lsnrctl status LISTENER</code> 或是 <code>systemctl status oral@lsnrctl</code></p>
<p>確定db是否有正常啟動服務：<code>ps -ef | grep ora</code> 或是 <code>systemctl status oral@oracledb</code></p>
<p>也可以透過<code>$ORACLE_HOME/bin/sqlplus system/password@oracleServer:1539/orcl</code>來連線</p>
<p>(password請記得換成你在安裝時設定的密碼)</p>
<p>去試試看是否有正常啟動，並且也可以寫SQL試試看</p>
<p>正常啟動的文字顯示如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SQL*Plus: Release 12.1.0.2.0 Production on Fri Jul 29 21:27:14 2016</span><br><span class="line"></span><br><span class="line">Copyright (c) 1982, 2014, Oracle.  All rights reserved.</span><br><span class="line"></span><br><span class="line">Last Successful login time: Fri Jul 29 2016 21:20:01 +08:00</span><br><span class="line"></span><br><span class="line">Connected to:</span><br><span class="line">Oracle Database 12c Enterprise Edition Release 12.1.0.2.0 - 64bit Production</span><br><span class="line">With the Partitioning, OLAP, Advanced Analytics and Real Application Testing options</span><br><span class="line"></span><br><span class="line">SQL&gt;</span><br></pre></td></tr></table></figure>

<p>連上後可以測試看看<code>select OWNER,TABLE_NAME from all_tables;</code>就會跑出所有表格的名字跟主人名字</p>
<p>另外補充一個工具，Oracle PL/SQL Developer，可以從<a href="http://www.oracle.com/technetwork/developer-tools/sql-developer/downloads/index.html">這裡</a>下載到</p>
<p>是一個簡單、方便操作的GUI去查詢SQL，比起直接使用sqlplus良善許多</p>
<ol start="4">
<li><p>Reference</p>
<ol>
<li><a href="http://dbaora.com/install-oracle-11g-release-2-11-2-on-centos-linux-7/">http://dbaora.com/install-oracle-11g-release-2-11-2-on-centos-linux-7/</a></li>
<li><a href="https://www.unixmen.com/how-to-install-oralce-11gr2-database-server-on-centos-6-3/">https://www.unixmen.com/how-to-install-oralce-11gr2-database-server-on-centos-6-3/</a></li>
<li><a href="http://www.linuxidc.com/Linux/2016-04/130559.htm">http://www.linuxidc.com/Linux/2016-04/130559.htm</a></li>
<li><a href="http://superuser.com/questions/576006/linker-error-while-installing-oracle-11g-on-fedora-18">http://superuser.com/questions/576006/linker-error-while-installing-oracle-11g-on-fedora-18</a></li>
<li><a href="https://dotblogs.com.tw/jamesfu/2016/02/02/oracle12c_install">https://dotblogs.com.tw/jamesfu/2016/02/02/oracle12c_install</a></li>
<li><a href="https://wiki.centos.org/zh-tw/HowTos/Oracle12onCentos7">https://wiki.centos.org/zh-tw/HowTos/Oracle12onCentos7</a></li>
<li><a href="http://stackoverflow.com/questions/8937933/installing-oracle-11g-r2-in-ubuntu-10-04">http://stackoverflow.com/questions/8937933/installing-oracle-11g-r2-in-ubuntu-10-04</a> (Err: must be configured to display at least 256 colors)</li>
<li><a href="https://dotblogs.com.tw/jamesfu/2016/02/02/oracle12c_install">https://dotblogs.com.tw/jamesfu/2016/02/02/oracle12c_install</a></li>
<li><a href="http://www.cnblogs.com/interboy/archive/2008/07/24/1250077.html">http://www.cnblogs.com/interboy/archive/2008/07/24/1250077.html</a></li>
<li><a href="https://www.server-world.info/en/note?os=CentOS_7&amp;p=oracle12c&amp;f=6">https://www.server-world.info/en/note?os=CentOS_7&amp;p=oracle12c&amp;f=6</a></li>
</ol>
</li>
</ol>
]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>CentOS</tag>
        <tag>Oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>在R用ROracle去操作Oracle資料庫</title>
    <url>/posts/201607/2016-07-25-use-ROracle-to-manipulate-oracle-database-in-R.html</url>
    <content><![CDATA[<p>前兩篇裝了Hadoop跟Oracle</p>
<p>為了接下來可以測試sqoop，使用ROracle去塞一下資料表進去</p>
<p>在windows下，安裝ROracle，也測試看看在centos下安裝看看</p>
<p>(Note: modified at 2018/04/19)</p>
<a id="more"></a>

<p>(ubuntu, mint部分前面有文章介紹怎麼裝R，就不在贅述，至於裝ROracle就跟centos大同小異了)</p>
<ol>
<li>準備工作</li>
</ol>
<p>基本上同Hadoop那篇，這裡就不贅述</p>
<p>我這裡是直接裝在Hadoop的master (sparkServer0)上</p>
<p>centos部分： (windows請往下轉)</p>
<ol start="2">
<li>安裝Microsoft R Open</li>
</ol>
<p>主要參考我自己前幾篇文章 - <a href="http://chingchuan-chen.github.io/linux/2016/05/11/initialization_of_centos.html"><br>Some installations of centos</a></p>
<p>簡單敘述一下(不同的地方是centos最小安裝沒有wget)：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 更新repo，並安裝R</span></span><br><span class="line">su -c <span class="string">&#x27;rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm&#x27;</span></span><br><span class="line">sudo yum update</span><br><span class="line">sudo yum install gcc-c++ R R-devel R-java</span><br><span class="line"></span><br><span class="line"><span class="comment">## remove R</span></span><br><span class="line">sudo rm -rf /usr/lib64/R</span><br><span class="line"></span><br><span class="line"><span class="comment"># install MRO</span></span><br><span class="line"><span class="comment">## Make sure the system repositories are up-to-date prior to installing Microsoft R Open.</span></span><br><span class="line">sudo yum clean all</span><br><span class="line"><span class="comment">## get the installers</span></span><br><span class="line">curl -v -j -k -L https://mran.microsoft.com/install/mro/3.3.0/MRO-3.3.0.el7.x86_64.rpm -o MRO-3.3.0.el7.x86_64.rpm</span><br><span class="line">curl -v -j -k -L https://mran.microsoft.com/install/mro/3.3.0/RevoMath-3.3.0.tar.gz -o RevoMath-3.3.0.tar.gz</span><br><span class="line"><span class="comment">## 安裝MRO</span></span><br><span class="line">sudo yum install MRO-3.3.0.el7.x86_64.rpm</span><br><span class="line"><span class="comment">## 安裝MKL</span></span><br><span class="line">tar -xzf RevoMath-3.3.0.tar.gz</span><br><span class="line"><span class="comment">## 備註一點，這裡如果直接用 sudo bash ./RevoMath/RevoMath.sh會失敗</span></span><br><span class="line"><span class="comment">## 失敗之後要先 sudo yum remove MRO重裝一次</span></span><br><span class="line"><span class="built_in">cd</span> RevoMath</span><br><span class="line">sudo bash ./RevoMath.sh</span><br><span class="line"></span><br><span class="line"><span class="comment">## 開啟Library讀寫權限</span></span><br><span class="line">sudo chmod -R 777 /usr/lib64/MRO-3.3.0/R-3.3.0/lib64/R</span><br><span class="line"></span><br><span class="line"><span class="comment">## 安裝之後打開R</span></span><br><span class="line">R</span><br><span class="line"><span class="comment">## 會出現下方訊息</span></span><br><span class="line"><span class="comment"># R version 3.3.0 (2016-05-03) -- &quot;Supposedly Educational&quot;</span></span><br><span class="line"><span class="comment"># Copyright (C) 2016 The R Foundation for Statistical Computing</span></span><br><span class="line"><span class="comment"># Platform: x86_64-pc-linux-gnu (64-bit)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># R is free software and comes with ABSOLUTELY NO WARRANTY.</span></span><br><span class="line"><span class="comment"># You are welcome to redistribute it under certain conditions.</span></span><br><span class="line"><span class="comment"># Type &#x27;license()&#x27; or &#x27;licence()&#x27; for distribution details.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   Natural language support but running in an English locale</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># R is a collaborative project with many contributors.</span></span><br><span class="line"><span class="comment"># Type &#x27;contributors()&#x27; for more information and</span></span><br><span class="line"><span class="comment"># &#x27;citation()&#x27; on how to cite R or R packages in publications.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Type &#x27;demo()&#x27; for some demos, &#x27;help()&#x27; for on-line help, or</span></span><br><span class="line"><span class="comment"># &#x27;help.start()&#x27; for an HTML browser interface to help.</span></span><br><span class="line"><span class="comment"># Type &#x27;q()&#x27; to quit R.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Microsoft R Open 3.3.0</span></span><br><span class="line"><span class="comment"># Default CRAN mirror snapshot taken on 2016-06-01</span></span><br><span class="line"><span class="comment"># The enhanced R distribution from Microsoft</span></span><br><span class="line"><span class="comment"># Visit https://mran.microsoft.com/ for information</span></span><br><span class="line"><span class="comment"># about additional features.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Multithreaded BLAS/LAPACK libraries detected. Using 2 cores for math algorithms.</span></span><br><span class="line"><span class="comment">## 有上面這行代表MKL才有裝成功</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 安裝一些ROracle的必要套件</span></span><br><span class="line">R -e <span class="string">&#x27;install.packages(&quot;DBI&quot;)&#x27;</span></span><br><span class="line"><span class="comment">## 也可以打開R輸入指令</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 安裝一些等等資料用到的套件</span></span><br><span class="line">R -e <span class="string">&#x27;install.packages(c(&quot;data.table&quot;, &quot;pipeR&quot;, &quot;dplyr&quot;, &quot;GGally&quot;, &quot;ggplot2&quot;, &quot;nycflights13&quot;))&#x27;</span></span><br><span class="line"><span class="comment">## 也可以打開R輸入指令</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>安裝ROracle</li>
</ol>
<p>先從<a href="http://www.oracle.com/technetwork/topics/linuxx86-64soft-092277.html">官方網站</a>下載Oracle instant client，下載basck.rpm跟devel.rpm(詳細檔名看下方)，然後上傳到VM</p>
<p>接著下載ROracle原始包，利用<code>R CMD INSTALL</code>並同時configure做安裝的動作，指令如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安裝Oracle instant client</span></span><br><span class="line">sudo yum install oracle-instantclient12.1-basic-12.1.0.2.0-1.x86_64.rpm</span><br><span class="line">sudo yum install oracle-instantclient12.1-devel-12.1.0.2.0-1.x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 設定環境變數</span></span><br><span class="line">sudo tee -a /etc/bashrc &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line"><span class="built_in">export</span> ORACLE_HOME=/usr/lib/oracle/12.1/client64</span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=<span class="variable">$LD_LIBRARY_PATH</span>:<span class="variable">$ORACLE_HOME</span>/lib</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$ORACLE_HOME</span>/bin</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下載ROracle套件</span></span><br><span class="line">curl -v -j -k -L https://cran.r-project.org/src/contrib/ROracle_1.2-2.tar.gz -o ROracle_1.2-2.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安裝ROracle</span></span><br><span class="line">R CMD INSTALL --configure-args=<span class="string">&#x27;--with-oci-lib=/usr/lib/oracle/12.1/client64/lib --with-oci-inc=/usr/include/oracle/12.1/client64&#x27;</span> ROracle_1.2-2.tar.gz</span><br></pre></td></tr></table></figure>

<p>windows部分：</p>
<ol start="2">
<li>安裝MRO跟MKL</li>
</ol>
<p>到<a href="https://mran.revolutionanalytics.com/download/">官方網站</a>下載安裝包</p>
<p>然後安裝MRO跟MKL，安裝之後，利用installr安裝Rtools</p>
<p>打開R輸入</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">install.packages(<span class="string">&quot;installr&quot;</span>)</span><br><span class="line">installr::install.Rtools()</span><br></pre></td></tr></table></figure>

<p>接著安裝一些需要的套件：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 安裝一些ROracle的必要套件</span></span><br><span class="line">install.packages(<span class="string">&quot;DBI&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 安裝一些等等資料用到的套件</span></span><br><span class="line">install.packages(c(<span class="string">&quot;data.table&quot;</span>, <span class="string">&quot;pipeR&quot;</span>, <span class="string">&quot;dplyr&quot;</span>, <span class="string">&quot;GGally&quot;</span>, <span class="string">&quot;ggplot2&quot;</span>, <span class="string">&quot;nycflights13&quot;</span>))</span><br></pre></td></tr></table></figure>

<p>然後一樣到Oracle的官方網站下載instant client，要下載basic跟sdk</p>
<p>解壓縮放到<code>C:\instantclient_12_1</code></p>
<p>接著下載R的套件包：<a href="https://cran.r-project.org/src/contrib/ROracle_1.3-1.tar.gz">https://cran.r-project.org/src/contrib/ROracle_1.3-1.tar.gz</a></p>
<p>在安裝的目錄下新增一個<code>install_ROracle.bat</code>的檔案</p>
<p>按右鍵編輯貼上下方內容後執行就可以成功安裝ROracle了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SET OCI_LIB64&#x3D;C:\instantclient_12_1</span><br><span class="line">SET OCI_INC&#x3D;C:\instantclient_12_1\sdk\include</span><br><span class="line">SET PATH&#x3D;%PATH%;C:\instantclient_12_1</span><br><span class="line">R CMD INSTALL --build ROracle_1.2-2.tar.gz</span><br></pre></td></tr></table></figure>

<p>PS: 這裡我還沒有測試過，因為避免牽扯到windwos的環境變數就省掉</p>
<p>如果有人測試過不行，我在提供增加的環境變數</p>
<p>我是直接安裝Rtools手動設定環境變數… 比較不適合一般初學者</p>
<ol start="4">
<li>創造適當的使用者</li>
</ol>
<p>我想要創造三個使用者，等等利用ROracle上傳到這三個使用者下的schema，SQL內容如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLESPACE</span> nycflights13</span><br><span class="line">  <span class="keyword">DATAFILE</span> <span class="string">&#x27;nycflights13.dat&#x27;</span></span><br><span class="line">  <span class="keyword">SIZE</span> <span class="number">40</span>M <span class="keyword">REUSE</span> <span class="keyword">AUTOEXTEND</span> <span class="keyword">ON</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TEMPORARY</span> <span class="keyword">TABLESPACE</span> nycflights13_tmp</span><br><span class="line">  TEMPFILE <span class="string">&#x27;nycflights13_tmp.dbf&#x27;</span></span><br><span class="line">  <span class="keyword">SIZE</span> <span class="number">10</span>M <span class="keyword">REUSE</span> <span class="keyword">AUTOEXTEND</span> <span class="keyword">ON</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> C<span class="comment">##nycflights13</span></span><br><span class="line"><span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> nycflights13</span><br><span class="line"><span class="keyword">DEFAULT</span> <span class="keyword">TABLESPACE</span> nycflights13</span><br><span class="line"><span class="keyword">TEMPORARY</span> <span class="keyword">TABLESPACE</span> nycflights13_tmp</span><br><span class="line"><span class="keyword">quota</span> <span class="keyword">unlimited</span> <span class="keyword">on</span> nycflights13;</span><br><span class="line"></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">CREATE</span> <span class="keyword">SESSION</span>,</span><br><span class="line">      <span class="keyword">CREATE</span> <span class="keyword">TABLE</span>,</span><br><span class="line">      <span class="keyword">CREATE</span> <span class="keyword">VIEW</span>,</span><br><span class="line">      <span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span></span><br><span class="line"><span class="keyword">TO</span> C<span class="comment">##nycflights13;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLESPACE</span> datasets</span><br><span class="line">  <span class="keyword">DATAFILE</span> <span class="string">&#x27;datasets.dat&#x27;</span></span><br><span class="line">  <span class="keyword">SIZE</span> <span class="number">40</span>M <span class="keyword">AUTOEXTEND</span> <span class="keyword">ON</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TEMPORARY</span> <span class="keyword">TABLESPACE</span> datasets_tmp</span><br><span class="line">  TEMPFILE <span class="string">&#x27;datasets_tmp.dbf&#x27;</span></span><br><span class="line">  <span class="keyword">SIZE</span> <span class="number">10</span>M <span class="keyword">AUTOEXTEND</span> <span class="keyword">ON</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> C<span class="comment">##datasets</span></span><br><span class="line"><span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> datasets</span><br><span class="line"><span class="keyword">DEFAULT</span> <span class="keyword">TABLESPACE</span> datasets</span><br><span class="line"><span class="keyword">TEMPORARY</span> <span class="keyword">TABLESPACE</span> datasets_tmp</span><br><span class="line"><span class="keyword">quota</span> <span class="keyword">unlimited</span> <span class="keyword">on</span> datasets;</span><br><span class="line"></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">CREATE</span> <span class="keyword">SESSION</span>,</span><br><span class="line">      <span class="keyword">CREATE</span> <span class="keyword">TABLE</span>,</span><br><span class="line">      <span class="keyword">CREATE</span> <span class="keyword">VIEW</span>,</span><br><span class="line">      <span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span></span><br><span class="line"><span class="keyword">TO</span> C<span class="comment">##datasets;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLESPACE</span> hadley</span><br><span class="line">  <span class="keyword">DATAFILE</span> <span class="string">&#x27;hadley.dat&#x27;</span></span><br><span class="line">  <span class="keyword">SIZE</span> <span class="number">40</span>M <span class="keyword">AUTOEXTEND</span> <span class="keyword">ON</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TEMPORARY</span> <span class="keyword">TABLESPACE</span> hadley_tmp</span><br><span class="line">  TEMPFILE <span class="string">&#x27;hadley_tmp.dbf&#x27;</span></span><br><span class="line">  <span class="keyword">SIZE</span> <span class="number">10</span>M <span class="keyword">AUTOEXTEND</span> <span class="keyword">ON</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> C<span class="comment">##hadley</span></span><br><span class="line"><span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> hadley</span><br><span class="line"><span class="keyword">DEFAULT</span> <span class="keyword">TABLESPACE</span> hadley</span><br><span class="line"><span class="keyword">TEMPORARY</span> <span class="keyword">TABLESPACE</span> hadley_tmp</span><br><span class="line"><span class="keyword">quota</span> <span class="keyword">unlimited</span> <span class="keyword">on</span> hadley;</span><br><span class="line"></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">CREATE</span> <span class="keyword">SESSION</span>,</span><br><span class="line">      <span class="keyword">CREATE</span> <span class="keyword">TABLE</span>,</span><br><span class="line">      <span class="keyword">CREATE</span> <span class="keyword">VIEW</span>,</span><br><span class="line">      <span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span></span><br><span class="line"><span class="keyword">TO</span> C<span class="comment">##hadley;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* DELETE USERS AND TABLESPACES</span></span><br><span class="line"><span class="comment">DROP USER C##hadley;</span></span><br><span class="line"><span class="comment">DROP USER C##datasets;</span></span><br><span class="line"><span class="comment">DROP USER C##nycflights13;</span></span><br><span class="line"><span class="comment">DROP TABLESPACE hadley;</span></span><br><span class="line"><span class="comment">DROP TABLESPACE datasets;</span></span><br><span class="line"><span class="comment">DROP TABLESPACE nycflights13;</span></span><br><span class="line"><span class="comment">DROP TABLESPACE hadley_tmp;</span></span><br><span class="line"><span class="comment">DROP TABLESPACE datasets_tmp;</span></span><br><span class="line"><span class="comment">DROP TABLESPACE nycflights13_tmp;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<p>PS: C##是Oracle要求的，請搜尋common users vs local users oracle就知道差異，還有命名要求</p>
<p>把上面的SQL下載下來命名成<code>createUser.sql</code>並上傳到Oracle的server</p>
<p>使用<code>$ORACLE_HOME/bin/sqlplus system/password@oracleServer:1539/orcl @createUser.sql</code>來執行創造使用者的SQL</p>
<ol start="5">
<li>使用ROracle去上傳資料</li>
</ol>
<p>程式如下：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(ROracle)</span><br><span class="line"><span class="keyword">library</span>(data.table)</span><br><span class="line"><span class="keyword">library</span>(pipeR)</span><br><span class="line">Sys.setenv(TZ = <span class="string">&quot;Asia/Taipei&quot;</span>, ORA_SDTZ = <span class="string">&quot;Asia/Taipei&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 創造資料列表</span></span><br><span class="line"><span class="comment"># 全部資料大小: 60 Mb</span></span><br><span class="line">uploadDataList &lt;- <span class="string">&#x27;</span></span><br><span class="line"><span class="string">TableName,pkgName,TableSize,savingSchema,savingTblName</span></span><br><span class="line"><span class="string">airlines,nycflights13,&quot;2.9 Kb&quot;,nycflights13,airlines</span></span><br><span class="line"><span class="string">airports,nycflights13,&quot;228.9 Kb&quot;,nycflights13,airports</span></span><br><span class="line"><span class="string">flights,nycflights13,&quot;38.7 Mb&quot;,nycflights13,flights</span></span><br><span class="line"><span class="string">planes,nycflights13,&quot;347.9 Kb&quot;,nycflights13,planes</span></span><br><span class="line"><span class="string">weather,nycflights13,&quot;2.8 Mb&quot;,nycflights13,weather</span></span><br><span class="line"><span class="string">iris,datasets,&quot;6.9 Kb&quot;,datasets,iris</span></span><br><span class="line"><span class="string">cars,datasets,&quot;1.5 Kb&quot;,datasets,cars</span></span><br><span class="line"><span class="string">USCancerRates,latticeExtra,&quot;504.8 Kb&quot;,datasets,uscancerrates</span></span><br><span class="line"><span class="string">gvhd10,latticeExtra,&quot;6.5 Mb&quot;,datasets,gvhd10</span></span><br><span class="line"><span class="string">nasa,GGally,&quot;4.6 Mb&quot;,hadley,nasa</span></span><br><span class="line"><span class="string">happy,GGally,&quot;2.7 Mb&quot;,hadley,happy</span></span><br><span class="line"><span class="string">diamonds,ggplot2,&quot;3.3 Mb&quot;,hadley,diamonds</span></span><br><span class="line"><span class="string">txhousing,ggplot2,&quot;541.8 Kb&quot;,hadley,txhousing</span></span><br><span class="line"><span class="string">&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 讀取列表</span></span><br><span class="line">tblListDT &lt;- fread(uploadDataList)</span><br><span class="line"><span class="comment"># 讀取資料</span></span><br><span class="line">tblListDT %&gt;&gt;% apply(<span class="number">1</span>, <span class="keyword">function</span>(v)&#123;</span><br><span class="line">  data(v[<span class="number">1</span>], package = v[<span class="number">2</span>])</span><br><span class="line">&#125;) %&gt;&gt;% invisible</span><br><span class="line"></span><br><span class="line"><span class="comment">#連線資訊</span></span><br><span class="line">host &lt;- <span class="string">&quot;192.168.0.120&quot;</span></span><br><span class="line">port &lt;- <span class="number">1539</span></span><br><span class="line">sid &lt;- <span class="string">&quot;orcl&quot;</span></span><br><span class="line">connectString &lt;- paste(</span><br><span class="line">  <span class="string">&quot;(DESCRIPTION=&quot;</span>,</span><br><span class="line">  <span class="string">&quot;(ADDRESS=(PROTOCOL=TCP)(HOST=&quot;</span>, host, <span class="string">&quot;)(PORT=&quot;</span>, port, <span class="string">&quot;))&quot;</span>,</span><br><span class="line">  <span class="string">&quot;(CONNECT_DATA=(SID=&quot;</span>, sid, <span class="string">&quot;)))&quot;</span>, sep = <span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 先用system權限登入查看user</span></span><br><span class="line">con &lt;- dbConnect(dbDriver(<span class="string">&quot;Oracle&quot;</span>), username = <span class="string">&quot;system&quot;</span>,</span><br><span class="line">                 password = <span class="string">&quot;qscf12356&quot;</span>, dbname = connectString)</span><br><span class="line"><span class="comment"># query all_users</span></span><br><span class="line">userList &lt;- dbSendQuery(con, <span class="string">&quot;select * from ALL_USERS&quot;</span>) %&gt;&gt;%</span><br><span class="line">  fetch(n = -<span class="number">1</span>) %&gt;&gt;% data.table</span><br><span class="line"><span class="comment"># 印出表格，user按照創造時間排列</span></span><br><span class="line"><span class="comment"># 可以看到已經創造了C##NYCFLIGHTS13, C##DATASETS跟C##HADLEY三個user</span></span><br><span class="line">print(userList[order(CREATED)])</span><br><span class="line"><span class="comment"># system帳號斷線</span></span><br><span class="line">dbDisconnect(con)</span><br><span class="line"></span><br><span class="line">st &lt;- proc.time()</span><br><span class="line">uniqueUserNames &lt;- unique(tblListDT$savingSchema)</span><br><span class="line">sapply(uniqueUserNames, <span class="keyword">function</span>(userName)&#123;</span><br><span class="line">  <span class="comment"># filter要上傳的表</span></span><br><span class="line">  uploadDataDT &lt;- tblListDT[savingSchema == userName]</span><br><span class="line">  mapply(<span class="keyword">function</span>(tblName, pkgName) data(list = tblName, package = pkgName),</span><br><span class="line">         uploadDataDT$TableName, uploadDataDT$pkgName) %&gt;&gt;% invisible</span><br><span class="line">  <span class="comment"># 用user去上傳，這樣才會傳到以該user命名的schema下</span></span><br><span class="line">  con &lt;- dbConnect(dbDriver(<span class="string">&quot;Oracle&quot;</span>), username = paste0(<span class="string">&quot;C##&quot;</span>, userName),</span><br><span class="line">                   password = userName, dbname = connectString)</span><br><span class="line">  <span class="comment"># 把每一張要上傳的表 上傳上去</span></span><br><span class="line">  mapply(<span class="keyword">function</span>(tblName, tblNameUpload)&#123;</span><br><span class="line">    <span class="keyword">if</span> (!dbExistsTable(con, tblNameUpload))</span><br><span class="line">      dbWriteTable(con, tblNameUpload, as.data.frame(get(tblName)), row.names = <span class="literal">FALSE</span>)</span><br><span class="line">    &#125;, uploadDataDT$TableName, uploadDataDT$savingTblName) %&gt;&gt;% invisible</span><br><span class="line">  dbDisconnect(con)</span><br><span class="line">&#125;) %&gt;&gt;% invisible</span><br><span class="line">proc.time() - st</span><br><span class="line"><span class="comment"># user  system elapsed</span></span><br><span class="line"><span class="comment"># 0.95    0.16   11.56</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 移除所有表格</span></span><br><span class="line">rm(list = tblListDT$TableName)</span><br><span class="line"></span><br><span class="line">con &lt;- dbConnect(dbDriver(<span class="string">&quot;Oracle&quot;</span>), username = <span class="string">&quot;system&quot;</span>,</span><br><span class="line">                 password = <span class="string">&quot;qscf12356&quot;</span>, dbname = connectString)</span><br><span class="line"><span class="comment"># list schema</span></span><br><span class="line">dbListTables(con)</span><br><span class="line"><span class="comment"># find the table in current schema (parameter, schema = NULL)</span></span><br><span class="line">dbExistsTable(con, <span class="string">&quot;airlines&quot;</span>)</span><br><span class="line"><span class="comment"># find the table in the schema</span></span><br><span class="line">dbExistsTable(con, <span class="string">&quot;airlines&quot;</span>, schema = <span class="string">&#x27;C##NYCFLIGHTS13&#x27;</span>)</span><br><span class="line"><span class="comment"># remove table</span></span><br><span class="line">dbRemoveTable(con, <span class="string">&quot;airlines&quot;</span>)</span><br><span class="line"><span class="comment"># query data, fetch all data and convert to data.table (這是查詢全部的tablespaces)</span></span><br><span class="line">dbSendQuery(con, <span class="string">&quot;select * from C##NYCFLIGHTS13.\&quot;airlines\&quot;&quot;</span>) %&gt;&gt;%</span><br><span class="line">  fetch(n = -<span class="number">1</span>) %&gt;&gt;% data.table</span><br><span class="line"><span class="comment"># query rowid and name from airlines data,</span></span><br><span class="line"><span class="comment"># fetch all data and convert to data.table (這是查詢全部的tablespaces)</span></span><br><span class="line">dbSendQuery(con, <span class="string">&quot;select rowid,t.\&quot;name\&quot; from C##NYCFLIGHTS13.\&quot;airlines\&quot; t&quot;</span>) %&gt;&gt;%</span><br><span class="line">  fetch(n = -<span class="number">1</span>) %&gt;&gt;% data.table</span><br><span class="line"><span class="comment"># query data, fetch all data and convert to data.table (這是查詢全部的tablespaces)</span></span><br><span class="line">dbSendQuery(con, <span class="string">&quot;select * from dba_tablespaces&quot;</span>) %&gt;&gt;%</span><br><span class="line">  fetch(n = -<span class="number">1</span>) %&gt;&gt;% data.table</span><br><span class="line"><span class="comment"># query data, fetch all data and convert to data.table (這是查詢全部的tables)</span></span><br><span class="line">dbSendQuery(con, <span class="string">&quot;select * from all_tables&quot;</span>) %&gt;&gt;%</span><br><span class="line">  fetch(n = -<span class="number">1</span>) %&gt;&gt;% data.table</span><br><span class="line"><span class="comment"># query data, fetch all data and convert to data.table (這是查詢全部的users)</span></span><br><span class="line">dbSendQuery(con, <span class="string">&quot;select * from all_users&quot;</span>) %&gt;&gt;%</span><br><span class="line">  fetch(n = -<span class="number">1</span>) %&gt;&gt;% data.table</span><br><span class="line"><span class="comment"># 從DB斷線</span></span><br><span class="line">dbDisconnect(con)</span><br><span class="line"></span><br><span class="line"><span class="comment"># remove all tables (用最高權限刪除)</span></span><br><span class="line">st &lt;- proc.time()</span><br><span class="line">con &lt;- dbConnect(dbDriver(<span class="string">&quot;Oracle&quot;</span>), username = <span class="string">&quot;system&quot;</span>,</span><br><span class="line">                 password = <span class="string">&quot;qscf12356&quot;</span>, dbname = connectString)</span><br><span class="line">mapply(<span class="keyword">function</span>(schemaName, tblNameUpload)&#123;</span><br><span class="line">  sn &lt;- paste0(<span class="string">&quot;C##&quot;</span>, schemaName) %&gt;&gt;% toupper</span><br><span class="line">  <span class="keyword">if</span> (dbExistsTable(con, tblNameUpload, schema = sn))</span><br><span class="line">    dbRemoveTable(con, tblNameUpload, schema = sn)</span><br><span class="line">&#125;, tblListDT$savingSchema, tblListDT$savingTblName) %&gt;&gt;% invisible</span><br><span class="line">dbDisconnect(con)</span><br><span class="line">proc.time() - st</span><br><span class="line"><span class="comment"># user  system elapsed</span></span><br><span class="line"><span class="comment"># 0.02    0.00    0.35</span></span><br></pre></td></tr></table></figure>

<ol start="6">
<li>小抱怨</li>
</ol>
<p>ROracle寫入表格的時候，會自動加上double quote框住表格</p>
<p>因為這一個自動功能，讓我debug，de了一天晚上</p>
<p>最後是去下載Oracle PL/SQL Developer用介面的自動提示才發現這件事情…</p>
<p>然後才回去看dbWriteTable下面的解釋</p>
<blockquote>
<p>Table, schema, and column names are case sensitive, e.g., table names ABC and abc are not the same. All database schema object names should not include double quotes as they are enclosed in double quotes when the corresponding SQL statement is generated.</p>
</blockquote>
<p>只是最神奇的事情是</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">dbWriteTable(con, <span class="string">&quot;airlines&quot;</span>, as.data.frame(airlines), row.names = <span class="literal">FALSE</span>)</span><br></pre></td></tr></table></figure>

<p>寫入表格之後，query的表格名字要加quote，像這樣：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">dbSendQuery(con, <span class="string">&quot;select * from \&quot;airlines\&quot;&quot;</span>) %&gt;&gt;% fetch(n = -<span class="number">1</span>) %&gt;&gt;% data.table</span><br></pre></td></tr></table></figure>
<p>我查表是否存在不用quote</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dbExistsTable(con, &quot;airlines&quot;)</span><br></pre></td></tr></table></figure>

<p>害我一直想說為啥我找不到我的表</p>
<p>最後只能去安裝Oracle SQL Developer查看真正的表格名稱</p>
<p>7/31補充：</p>
<p>更扯的事情是column name都有包quote，select時候，都要多打””去框住column name</p>
<p>8/12更新：</p>
<p>全部使用大寫字元，就不會產生上面的情況</p>
]]></content>
      <categories>
        <category>BigData</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>BigData</tag>
        <tag>Oracle</tag>
        <tag>ROracle</tag>
      </tags>
  </entry>
  <entry>
    <title>在Python用cx_Oracle去操作Oracle資料庫</title>
    <url>/posts/201607/2016-07-26-use-cx_Oracle-to-manipulate-oracle-database-in-Python.html</url>
    <content><![CDATA[<p>前一篇用R去操作了Oracle資料庫</p>
<p>結果不幸發現兩件事情：</p>
<ol>
<li>表的名字會自動有quote，你預期的表明應該是airlines，會變成”airlines”</li>
<li>column name也會自動有quote，你預期的表明應該是name，會變成”name”</li>
</ol>
<a id="more"></a>

<p>這一篇實現用Python去操作Oracle資料庫的部分</p>
<ol>
<li>準備工作</li>
</ol>
<p>基本上同R那篇，這裡不贅述</p>
<ol start="2">
<li>安裝cx_Oracle</li>
</ol>
<p>其實跟R那篇一樣，都要安裝Oracle instant client</p>
<p>差別只在python使用<code>pip install cx_Oracle</code>去做安裝套件的動作而已</p>
<p>這裡推薦大家直接使用Anaconda，並用<code>conda install cx_Oracle</code>去安裝</p>
<p>conda會幫你把Oracle instant client下載好，並放在適當目錄中</p>
<p>(2018/04/21備註：在centos上可以用這個做法：<a href="https://www.mylinuxplace.com/install-cx_oracle-on-centos-7/">Link</a>)</p>
<ol start="3">
<li>使用cx_Oracle去上傳資料</li>
</ol>
<p>使用的資料都是來自<a href="http://archive.ics.uci.edu/ml/">UC Irvine Machine Learning Repository</a></p>
<p>我分別去抓了iris, forest fires, Car Evaluation, default of credit card clients跟adult這五個資料集</p>
<p>放在下方程式目錄下的testData資料夾中</p>
<p>資料都是csv檔案，含有表頭(從UCI下載之後要自己做一點更動)</p>
<p>完整程式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> StringIO, csv, cx_Oracle, sys, os, datetime, time</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LengthNotEqualErr</span>(<span class="params">Exception</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Err type for too many arguments.&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#%% functions to read the csv file with auto type convertion</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getFieldnames</span>(<span class="params">csvFile</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Read the first row and store values in a tuple</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">with</span> open(csvFile) <span class="keyword">as</span> csvfile:</span><br><span class="line">        firstRow = csvfile.readlines(<span class="number">1</span>)</span><br><span class="line">        fieldnames = tuple(firstRow[<span class="number">0</span>].strip(<span class="string">&#x27;\n&#x27;</span>).split(<span class="string">&quot;,&quot;</span>))</span><br><span class="line">    <span class="keyword">return</span> fieldnames</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parseValues</span>(<span class="params">values, dataType = None</span>):</span></span><br><span class="line">    <span class="keyword">from</span> ast <span class="keyword">import</span> literal_eval</span><br><span class="line">    <span class="keyword">import</span> re</span><br><span class="line">    regxpPattern = re.compile(<span class="string">&#x27;\d+[^.\d]+&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i, value <span class="keyword">in</span> enumerate(values):</span><br><span class="line">        <span class="keyword">if</span> (dataType <span class="keyword">is</span> <span class="literal">None</span>) <span class="keyword">or</span> (dataType[i] == <span class="string">&#x27;float&#x27;</span> <span class="keyword">or</span> dataType[i] == <span class="string">&#x27;int&#x27;</span>):</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                <span class="keyword">if</span> len(regxpPattern.findall(value)) <span class="keyword">is</span> <span class="number">0</span>:</span><br><span class="line">                    nValue = literal_eval(value)</span><br><span class="line">                    values[i] = nValue</span><br><span class="line">            <span class="keyword">except</span> ValueError:</span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line">            <span class="keyword">except</span> SyntaxError:</span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">return</span> values</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">readCsvWithTypeConv</span>(<span class="params">csvFileName, dataType = None</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Convert csv rows into an array of dictionaries</span></span><br><span class="line"><span class="string">    All data types are automatically checked and converted</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">from</span> itertools <span class="keyword">import</span> islice</span><br><span class="line">    fieldnames = getFieldnames(csvFileName)</span><br><span class="line">    dataTypeMap = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">if</span> dataType <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        dataTypeMap = [dataType[x] <span class="keyword">for</span> x <span class="keyword">in</span> list(fieldnames)]</span><br><span class="line">        <span class="keyword">if</span> len(dataType) <span class="keyword">is</span> <span class="keyword">not</span> len(fieldnames):</span><br><span class="line">            <span class="keyword">raise</span> LengthNotEqualErr(<span class="string">&#x27;The length of dataType must be equal to the lenght of fieldnames.&#x27;</span>)</span><br><span class="line">    cursor = []  <span class="comment"># Placeholder for the dictionaries/documents</span></span><br><span class="line">    <span class="keyword">with</span> open(csvFileName) <span class="keyword">as</span> csvFile:</span><br><span class="line">        <span class="keyword">for</span> row <span class="keyword">in</span> islice(csvFile, <span class="number">1</span>, <span class="literal">None</span>):</span><br><span class="line">            values = parseValues(row.strip(<span class="string">&#x27;\n&#x27;</span>).split(<span class="string">&quot;,&quot;</span>), dataTypeMap)</span><br><span class="line">            cursor.append(dict(zip(fieldnames, values)))</span><br><span class="line">    <span class="keyword">return</span> cursor</span><br><span class="line"></span><br><span class="line"><span class="comment">#%% main function</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="comment"># information for connecting to oracle</span></span><br><span class="line">    oracleSystemLoginInfo = <span class="string">u&#x27;system/qscf12356@192.168.0.120:1521/orcl&#x27;</span></span><br><span class="line">    <span class="comment"># create a dict to map the data type of python to the one in Oracle DB</span></span><br><span class="line">    pythonOracleTypeMap = dict([[<span class="string">&quot;str&quot;</span>, <span class="string">&quot;VARCHAR(255)&quot;</span>], [<span class="string">&quot;int&quot;</span>, <span class="string">&quot;NUMBER&quot;</span>], \</span><br><span class="line">        [<span class="string">&quot;float&quot;</span>, <span class="string">&quot;FLOAT&quot;</span>]])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Read list of data table</span></span><br><span class="line">    tableList = <span class="string">&quot;&quot;&quot;dataName,path,uploadShema,uploadTblName</span></span><br><span class="line"><span class="string">iris,testData/iris.csv,datasets_1,iris</span></span><br><span class="line"><span class="string">forestfires,testData/forestfires.csv,datasets_1,forestfires</span></span><br><span class="line"><span class="string">car,testData/car.csv,datasets_1,car</span></span><br><span class="line"><span class="string">credit,testData/credit.csv,datasets_2,credit</span></span><br><span class="line"><span class="string">adult,testData/adult.csv,datasets_2,adult&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    fid = StringIO.StringIO(tableList)</span><br><span class="line">    reader = csv.reader(fid, delimiter=<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">    dataTableList = list();</span><br><span class="line">    <span class="keyword">for</span> i,row <span class="keyword">in</span> enumerate(reader):</span><br><span class="line">        <span class="keyword">if</span> i &gt; <span class="number">0</span>:</span><br><span class="line">            dataTableList.append(row)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># create connection</span></span><br><span class="line">    oracleConn = cx_Oracle.connect(oracleSystemLoginInfo)</span><br><span class="line">    <span class="comment"># activate cursor</span></span><br><span class="line">    oracleCursor = oracleConn.cursor()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># find the all users in oracle</span></span><br><span class="line">    oracleCursor.execute(<span class="string">&quot;SELECT USERNAME FROM all_users&quot;</span>)</span><br><span class="line">    orclUserNames = [x[<span class="number">0</span>] <span class="keyword">for</span> x <span class="keyword">in</span> oracleCursor.fetchall()]</span><br><span class="line">    uniqueUserNames = list(set([x <span class="keyword">for</span> x <span class="keyword">in</span> [<span class="string">&#x27;C##&#x27;</span> + y[<span class="number">2</span>].upper() <span class="keyword">for</span> y <span class="keyword">in</span> dataTableList]]))</span><br><span class="line">    nonexistOrcl = [x <span class="keyword">not</span> <span class="keyword">in</span> orclUserNames <span class="keyword">for</span> x <span class="keyword">in</span> uniqueUserNames]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># find the all tables in oracle</span></span><br><span class="line">    oracleCursor.execute(<span class="string">&#x27;&#x27;&#x27;SELECT t.TABLE_NAME FROM all_tables t</span></span><br><span class="line"><span class="string">                            WHERE t.OWNER NOT IN (&#x27;SYSTEM&#x27;, &#x27;SYS&#x27;, &#x27;MDSYS&#x27;, &#x27;LBACSYS&#x27;, &#x27;CTXSYS&#x27;,</span></span><br><span class="line"><span class="string">                              &#x27;WMSYS&#x27;, &#x27;XDB&#x27;, &#x27;APPQOSSYS&#x27;, &#x27;ORDSYS&#x27;, &#x27;OJVMSYS&#x27;, &#x27;DVSYS&#x27;)&#x27;&#x27;&#x27;</span>)</span><br><span class="line">    oracleAllTables = [x[<span class="number">0</span>] <span class="keyword">for</span> x <span class="keyword">in</span> oracleCursor.fetchall()]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># if the schema is not existent, then print out the SQL to create</span></span><br><span class="line">    <span class="keyword">if</span> any(nonexistOrcl):</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&#x27;Please create users first with following SQL:&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> i,x <span class="keyword">in</span> enumerate(uniqueUserNames):</span><br><span class="line">            <span class="keyword">if</span> nonexistOrcl[i]:</span><br><span class="line">                <span class="keyword">print</span> <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">                CREATE TABLESPACE userNameVar</span></span><br><span class="line"><span class="string">                  DATAFILE &#x27;userNameVar.dat&#x27;</span></span><br><span class="line"><span class="string">                  SIZE 40M REUSE AUTOEXTEND ON;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                CREATE TEMPORARY TABLESPACE userNameVar_tmp</span></span><br><span class="line"><span class="string">                  TEMPFILE &#x27;userNameVar_tmp.dbf&#x27;</span></span><br><span class="line"><span class="string">                  SIZE 10M REUSE AUTOEXTEND ON;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                CREATE USER C##userNameVar</span></span><br><span class="line"><span class="string">                IDENTIFIED BY userNameVar</span></span><br><span class="line"><span class="string">                DEFAULT TABLESPACE userNameVar</span></span><br><span class="line"><span class="string">                TEMPORARY TABLESPACE userNameVar_tmp</span></span><br><span class="line"><span class="string">                quota unlimited on userNameVar;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                GRANT CREATE SESSION,</span></span><br><span class="line"><span class="string">                      CREATE TABLE,</span></span><br><span class="line"><span class="string">                      CREATE VIEW,</span></span><br><span class="line"><span class="string">                      CREATE PROCEDURE</span></span><br><span class="line"><span class="string">                TO C##userNameVar;&#x27;&#x27;&#x27;</span>.replace(<span class="string">&#x27;userNameVar&#x27;</span>, x.replace(<span class="string">&#x27;C##&#x27;</span>, <span class="string">&#x27;&#x27;</span>))</span><br><span class="line">            sys.exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># clost the connection to Oracle</span></span><br><span class="line">    oracleCursor.close()</span><br><span class="line">    oracleConn.close()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> dataTableList:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;Now uplaod &#123;&#125; data to Oracle DB...&quot;</span>.format(row[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> os.path.isfile(row[<span class="number">1</span>]):</span><br><span class="line">            <span class="comment"># read the data</span></span><br><span class="line">            dataTable = readCsvWithTypeConv(row[<span class="number">1</span>])</span><br><span class="line">            colNames = [name.replace(<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;_&#x27;</span>).replace(<span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;_&#x27;</span>).upper() <span class="keyword">for</span> name <span class="keyword">in</span> dataTable[<span class="number">0</span>].keys()]</span><br><span class="line">            colDataType = [type(r).__name__ <span class="keyword">for</span> r <span class="keyword">in</span> dataTable[<span class="number">0</span>].values()]</span><br><span class="line">            newDataType = [type(r).__name__ <span class="keyword">for</span> r <span class="keyword">in</span> dataTable[<span class="number">0</span>].values()]</span><br><span class="line">            convert = <span class="literal">False</span></span><br><span class="line">            <span class="keyword">for</span> rowDataTbl <span class="keyword">in</span> dataTable:</span><br><span class="line">                otherRowDataType = [type(r).__name__ <span class="keyword">for</span> r <span class="keyword">in</span> rowDataTbl.values()]</span><br><span class="line">                typeNotEqual = [x != y <span class="keyword">for</span> x,y <span class="keyword">in</span> zip(colDataType, otherRowDataType)]</span><br><span class="line">                <span class="keyword">if</span> any(typeNotEqual):</span><br><span class="line">                    missConversion = [(i, otherRowDataType[i], colDataType[i]) <span class="keyword">for</span>\</span><br><span class="line">                        i, x <span class="keyword">in</span> enumerate(typeNotEqual) <span class="keyword">if</span> x]</span><br><span class="line">                    <span class="keyword">for</span> i,x,y <span class="keyword">in</span> missConversion:</span><br><span class="line">                        <span class="keyword">if</span> x != y:</span><br><span class="line">                            <span class="keyword">if</span> x == <span class="string">&#x27;str&#x27;</span> <span class="keyword">or</span> y == <span class="string">&#x27;str&#x27;</span>:</span><br><span class="line">                                newDataType[i] = <span class="string">&#x27;str&#x27;</span></span><br><span class="line">                            <span class="keyword">elif</span> (x == <span class="string">&#x27;float&#x27;</span> <span class="keyword">and</span> y == <span class="string">&#x27;int&#x27;</span>) <span class="keyword">or</span> (x == <span class="string">&#x27;float&#x27;</span> <span class="keyword">and</span> y == <span class="string">&#x27;int&#x27;</span>):</span><br><span class="line">                                newDataType[i] = <span class="string">&#x27;float&#x27;</span></span><br><span class="line">            <span class="keyword">if</span> any([x != y <span class="keyword">for</span> x,y <span class="keyword">in</span> zip(colDataType, newDataType)]):</span><br><span class="line">                dataTable = readCsvWithTypeConv(row[<span class="number">1</span>], \</span><br><span class="line">                    dict(zip(dataTable[<span class="number">0</span>].keys(), newDataType)))</span><br><span class="line">                colDataType = newDataType</span><br><span class="line">            oracleType = [pythonOracleTypeMap[dataType] <span class="keyword">for</span> dataType <span class="keyword">in</span> colDataType]</span><br><span class="line"></span><br><span class="line">        orclLogin = oracleSystemLoginInfo.replace(<span class="string">&#x27;system&#x27;</span>, <span class="string">&#x27;C##&#x27;</span> + row[<span class="number">2</span>].upper())\</span><br><span class="line">          .replace(<span class="string">&#x27;qscf12356&#x27;</span>, row[<span class="number">2</span>])</span><br><span class="line">        <span class="comment"># create connection</span></span><br><span class="line">        oracleConn = cx_Oracle.connect(orclLogin)</span><br><span class="line">        <span class="comment"># activate cursor</span></span><br><span class="line">        oracleCursor = oracleConn.cursor()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># create table</span></span><br><span class="line">        <span class="keyword">if</span> row[<span class="number">3</span>].upper() <span class="keyword">not</span> <span class="keyword">in</span> oracleAllTables:</span><br><span class="line">            oracleCursor.execute(<span class="string">&#x27;&#x27;&#x27;CREATE TABLE &#123;&#125;(&#123;&#125;)&#x27;&#x27;&#x27;</span>.format(row[<span class="number">3</span>].upper(), \</span><br><span class="line">                <span class="string">&#x27;,&#x27;</span>.join([x + <span class="string">&#x27; &#x27;</span> + y <span class="keyword">for</span> (x,y) <span class="keyword">in</span> zip(colNames, oracleType)])))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># insert data</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">&#x27;start upload at %s...&#x27;</span> % datetime.datetime.now()</span><br><span class="line">        st = time.clock()</span><br><span class="line"></span><br><span class="line">        oracleCursor.executemany(</span><br><span class="line">            <span class="string">&#x27;&#x27;&#x27;INSERT INTO &#123;&#125;(&#123;&#125;) values (&#123;&#125;)&#x27;&#x27;&#x27;</span>.format(row[<span class="number">3</span>], <span class="string">&#x27;,&#x27;</span>.join(colNames), \</span><br><span class="line">                <span class="string">&#x27;,&#x27;</span>.join([<span class="string">&#x27;:&#123;&#125;&#x27;</span>.format(i) <span class="keyword">for</span> i <span class="keyword">in</span> range(len(colNames))])), \</span><br><span class="line">                [d.values() <span class="keyword">for</span> d <span class="keyword">in</span> dataTable])</span><br><span class="line"></span><br><span class="line">        <span class="keyword">print</span> <span class="string">&#x27;End upload at %s...&#x27;</span> % datetime.datetime.now()</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&#x27;The total upload time for %i cells is %s seconds...\n&#x27;</span> % \</span><br><span class="line">            (len(dataTable) * len(dataTable[<span class="number">0</span>]), time.clock() - st)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># commit change</span></span><br><span class="line">        oracleConn.commit()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># clost the connection to Oracle</span></span><br><span class="line">        oracleCursor.close()</span><br><span class="line">        oracleConn.close()</span><br></pre></td></tr></table></figure>

<p>刪除全部測試資料的程式碼：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> StringIO, csv, cx_Oracle</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    oracleSystemLoginInfo = <span class="string">u&#x27;system/qscf12356@192.168.0.120:1521/orcl&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Read list of data table</span></span><br><span class="line">    tableList = <span class="string">&quot;&quot;&quot;dataName,path,uploadShema,uploadTblName</span></span><br><span class="line"><span class="string">iris,testData/iris.csv,datasets_1,iris</span></span><br><span class="line"><span class="string">forestfires,testData/forestfires.csv,datasets_1,forestfires</span></span><br><span class="line"><span class="string">car,testData/car.csv,datasets_1,car</span></span><br><span class="line"><span class="string">credit,testData/credit.csv,datasets_2,credit</span></span><br><span class="line"><span class="string">adult,testData/adult.csv,datasets_2,adult&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    fid = StringIO.StringIO(tableList)</span><br><span class="line">    reader = csv.reader(fid, delimiter=<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">    dataTableList = list();</span><br><span class="line">    <span class="keyword">for</span> i,row <span class="keyword">in</span> enumerate(reader):</span><br><span class="line">        <span class="keyword">if</span> i &gt; <span class="number">0</span>:</span><br><span class="line">            dataTableList.append(row)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># create connection</span></span><br><span class="line">    oracleConn = cx_Oracle.connect(oracleSystemLoginInfo)</span><br><span class="line">    <span class="comment"># activate cursor</span></span><br><span class="line">    oracleCursor = oracleConn.cursor()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> dataTableList:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            oracleCursor.execute(<span class="string">&quot;DROP TABLE &#123;&#125;&quot;</span>.format(<span class="string">&#x27;C##&#x27;</span> + row[<span class="number">2</span>].upper() + <span class="string">&#x27;.&#x27;</span> + row[<span class="number">3</span>].upper()))</span><br><span class="line">        <span class="keyword">except</span> cx_Oracle.DatabaseError:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># clost the connection to Oracle</span></span><br><span class="line">    oracleCursor.close()</span><br><span class="line">    oracleConn.close()</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>BigData</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BigData</tag>
        <tag>Oracle</tag>
        <tag>cx_Oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>test on apache sqoop</title>
    <url>/posts/201607/2016-07-28-test-on-apache-sqoop.html</url>
    <content><![CDATA[<p>前四篇分別裝了Hadoop, Oracle, ROracle跟Python的cx_Oracle套件</p>
<p>上兩篇分別利用了ROracle跟cx_Oracle塞了一些資料進去Oracle</p>
<p>接下來是安裝sqoop，試試看用sqoop從Oracle DB把資料撈進HBase</p>
<p>這篇僅是紀錄而已，並沒有成功撈進</p>
<a id="more"></a>

<ol>
<li>準備工作</li>
</ol>
<p>基本上同Hadoop那篇，這裡就不贅述</p>
<p>我這裡是直接裝在Hadoop的master (sparkServer0)上</p>
<ol start="2">
<li>安裝sqoop</li>
</ol>
<p>從官網上下載下來，然後解壓縮，並加入環境變數：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下載安裝sqoop</span></span><br><span class="line">curl -v -j -k -L http://apache.stu.edu.tw/sqoop/1.4.6/sqoop-1.4.6.bin__hadoop-2.0.4-alpha.tar.gz -o sqoop-1.4.6.bin__hadoop-2.0.4-alpha.tar.gz</span><br><span class="line">tar -zxvf sqoop-1.4.6.bin__hadoop-2.0.4-alpha.tar.gz</span><br><span class="line">sudo mv sqoop-1.4.6.bin__hadoop-2.0.4-alpha /usr/<span class="built_in">local</span>/sqoop</span><br><span class="line">sudo chown -R tester /usr/<span class="built_in">local</span>/sqoop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加入環境變數</span></span><br><span class="line">sudo tee -a /etc/bashrc &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line"><span class="built_in">export</span> SQOOP_HOME=/usr/<span class="built_in">local</span>/sqoop</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$SQOOP_HOME</span>/bin</span><br><span class="line"><span class="built_in">export</span> ZOOCFGDIR=<span class="variable">$ZOOKEEPER_HOME</span>/conf</span><br><span class="line">EOF</span><br><span class="line"><span class="built_in">source</span> /etc/bashrc</span><br></pre></td></tr></table></figure>

<p>Note: HBase 0.98版本才能兼容sqoop 1.4.6，如果是1.0以上版本請重新安裝HBase</p>
<ol start="3">
<li>加入oracle連線jar</li>
</ol>
<p>到<a href="http://www.oracle.com/technetwork/apps-tech/jdbc-112010-090769.html">oracle官網</a>去下載oracle的ojdbc6.jar上傳到tester的home目錄中</p>
<p>執行<code>mv ~/ojdbc6.jar $SQOOP_HOME/lib</code>搬去sqoop下的lib</p>
<ol start="4">
<li>開始執行</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## 在sparkServer0開啟hadoop</span><br><span class="line">start-dfs.sh &amp; start-yarn.sh &amp; zkServer.sh start &amp; start-hbase.sh</span><br><span class="line">## 把oracleServer開啟，他會自動開啟oracle database1</span><br><span class="line"></span><br><span class="line">## 先列出所有的database看看</span><br><span class="line">sqoop list-databases --connect jdbc:oracle:thin:@192.168.0.120:1521:orcl --username system --P</span><br><span class="line"># Warning: &#x2F;usr&#x2F;local&#x2F;sqoop&#x2F;..&#x2F;hcatalog does not exist! HCatalog jobs will fail.</span><br><span class="line"># Please set $HCAT_HOME to the root of your HCatalog installation.</span><br><span class="line"># Warning: &#x2F;usr&#x2F;local&#x2F;sqoop&#x2F;..&#x2F;accumulo does not exist! Accumulo imports will fail.</span><br><span class="line"># Please set $ACCUMULO_HOME to the root of your Accumulo installation.</span><br><span class="line"># 16&#x2F;07&#x2F;31 19:14:03 INFO sqoop.Sqoop: Running Sqoop version: 1.4.6</span><br><span class="line"># Enter password:</span><br><span class="line"># 16&#x2F;07&#x2F;31 19:14:06 INFO oracle.OraOopManagerFactory: Data Connector for Oracle and Hadoop is disabled.</span><br><span class="line"># 16&#x2F;07&#x2F;31 19:14:06 INFO manager.SqlManager: Using default fetchSize of 1000</span><br><span class="line"># SLF4J: Class path contains multiple SLF4J bindings.</span><br><span class="line"># SLF4J: Found binding in [jar:file:&#x2F;usr&#x2F;local&#x2F;hadoop&#x2F;share&#x2F;hadoop&#x2F;common&#x2F;lib&#x2F;slf4j-log4j12-1.7.5.jar!&#x2F;org&#x2F;slf4j&#x2F;impl&#x2F;StaticLoggerBinder.class]</span><br><span class="line"># SLF4J: Found binding in [jar:file:&#x2F;usr&#x2F;local&#x2F;hbase&#x2F;lib&#x2F;slf4j-log4j12-1.7.5.jar!&#x2F;org&#x2F;slf4j&#x2F;impl&#x2F;StaticLoggerBinder.class]</span><br><span class="line"># SLF4J: See http:&#x2F;&#x2F;www.slf4j.org&#x2F;codes.html#multiple_bindings for an explanation.</span><br><span class="line"># SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]</span><br><span class="line"># 16&#x2F;07&#x2F;31 19:14:37 INFO manager.OracleManager: Time zone has been set to GMT</span><br><span class="line"># ORACLE_OCM</span><br><span class="line"># OJVMSYS</span><br><span class="line"># SYSKM</span><br><span class="line"># XS$NULL</span><br><span class="line"># GSMCATUSER</span><br><span class="line"># MDDATA</span><br><span class="line"># SYSBACKUP</span><br><span class="line"># DIP</span><br><span class="line"># SYSDG</span><br><span class="line"># APEX_PUBLIC_USER</span><br><span class="line"># SPATIAL_CSW_ADMIN_USR</span><br><span class="line"># SPATIAL_WFS_ADMIN_USR</span><br><span class="line"># GSMUSER</span><br><span class="line"># AUDSYS</span><br><span class="line"># FLOWS_FILES</span><br><span class="line"># DVF</span><br><span class="line"># MDSYS</span><br><span class="line"># ORDSYS</span><br><span class="line"># DBSNMP</span><br><span class="line"># WMSYS</span><br><span class="line"># APEX_040200</span><br><span class="line"># APPQOSSYS</span><br><span class="line"># GSMADMIN_INTERNAL</span><br><span class="line"># ORDDATA</span><br><span class="line"># CTXSYS</span><br><span class="line"># ANONYMOUS</span><br><span class="line"># XDB</span><br><span class="line"># ORDPLUGINS</span><br><span class="line"># DVSYS</span><br><span class="line"># SI_INFORMTN_SCHEMA</span><br><span class="line"># OLAPSYS</span><br><span class="line"># LBACSYS</span><br><span class="line"># OUTLN</span><br><span class="line"># SYSTEM</span><br><span class="line"># SYS</span><br><span class="line"># C##DATASETS_1</span><br><span class="line"># C##DATASETS_2</span><br><span class="line"># C##DATASETS_3</span><br><span class="line"></span><br><span class="line">## 再來測試看看拉oracle中的表格C##DATASETS_1.IRIS到HDFS上去</span><br><span class="line">sqoop import \</span><br><span class="line">--connect jdbc:oracle:thin:@192.168.0.120:1521:orcl \</span><br><span class="line">--username system --P \</span><br><span class="line">--query &quot;SELECT * FROM C##DATASETS_1.IRIS&quot; \</span><br><span class="line">--split-by SPECIES -m 5 --target-dir &#x2F;user&#x2F;tester&#x2F;iris</span><br><span class="line"></span><br><span class="line">## 出現錯誤：</span><br><span class="line"># 16&#x2F;07&#x2F;31 19:57:28 ERROR tool.ImportTool: Encountered IOException running import job: </span><br><span class="line"># java.io.IOException: Query [SELECT * FROM C##DATASETS_1.IRIS] must contain </span><br><span class="line"># &#39;$CONDITIONS&#39; in WHERE clause.</span><br><span class="line"></span><br><span class="line">## 加入CONDITIONS再一次</span><br><span class="line">export CONDITIONS&#x3D;1&#x3D;1</span><br><span class="line">sqoop import \</span><br><span class="line">--connect jdbc:oracle:thin:@192.168.0.120:1521:orcl \</span><br><span class="line">--username system --P \</span><br><span class="line">--query &quot;SELECT * FROM C##DATASETS_1.IRIS WHERE 1&#x3D;1 AND \$CONDITIONS&quot; \</span><br><span class="line">--split-by SPECIES -m 5 --target-dir &#x2F;user&#x2F;tester&#x2F;iris</span><br><span class="line">## 出現錯誤：</span><br><span class="line"># 16&#x2F;07&#x2F;31 20:00:25 ERROR manager.SqlManager: Error executing statement: </span><br><span class="line"># java.sql.SQLRecoverableException: IO Error: Connection reset</span><br><span class="line"># java.sql.SQLRecoverableException: IO Error: Connection reset</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 換成匯到HBase試試看</span><br><span class="line">export CONDITIONS&#x3D;1&#x3D;1</span><br><span class="line">sqoop import \</span><br><span class="line">--connect jdbc:oracle:thin:@192.168.0.120:1521:orcl \</span><br><span class="line">--username system --P \</span><br><span class="line">--query &quot;SELECT SEPALLENGTH,SEPALWIDTH,PETALLENGTH,PETALWIDTH,SPECIES FROM C##DATASETS_1.IRIS WHERE 1&#x3D;1 AND \$CONDITIONS&quot; \</span><br><span class="line">--hbase-table C##DATASETS_1.IRIS --hbase-create-table \</span><br><span class="line">--hbase-row-key id --split-by SPECIES -m 10 \</span><br><span class="line">--column-family SEPALLENGTH,SEPALWIDTH,PETALLENGTH,PETALWIDTH,SPECIES</span><br><span class="line">## 出現錯誤：</span><br><span class="line"># 16&#x2F;07&#x2F;31 20:01:36 ERROR manager.SqlManager: Error executing statement: </span><br><span class="line"># java.sql.SQLRecoverableException: IO Error: Connection reset</span><br><span class="line"># java.sql.SQLRecoverableException: IO Error: Connection reset</span><br><span class="line"></span><br><span class="line">## 試試看網路解法，出現不同錯誤</span><br><span class="line">sqoop import -D mapred.child.java.opts&#x3D;&quot;\-Djava.security.egd&#x3D;file:&#x2F;dev&#x2F;..&#x2F;dev&#x2F;urandom&quot; \</span><br><span class="line">--connect jdbc:oracle:thin:@192.168.0.120:1521:orcl \</span><br><span class="line">--username system --P \</span><br><span class="line">--query &quot;SELECT SEPALLENGTH,SEPALWIDTH,PETALLENGTH,PETALWIDTH,SPECIES FROM C##DATASETS_1.IRIS WHERE 1&#x3D;1 AND \$CONDITIONS&quot; \</span><br><span class="line">--hbase-table C##DATASETS_1.IRIS --hbase-create-table \</span><br><span class="line">--hbase-row-key id --split-by SPECIES -m 10 \</span><br><span class="line">--column-family SEPALLENGTH,SEPALWIDTH,PETALLENGTH,PETALWIDTH,SPECIES</span><br><span class="line">## 出現錯誤</span><br><span class="line"># ERROR tool.ImportTool: Imported Failed: Illegal character code:35, &lt;#&gt; at 1. </span><br><span class="line"># User-space table qualifiers can only contain &#39;alphanumeric characters&#39;: </span><br><span class="line"># i.e. [a-zA-Z_0-9-.]: C##DATASETS_1.IRIS</span><br><span class="line"></span><br><span class="line">## 換使用者在一次，還是出現一樣的錯誤</span><br><span class="line">sqoop import -D mapred.child.java.opts&#x3D;&quot;\-Djava.security.egd&#x3D;file:&#x2F;dev&#x2F;..&#x2F;dev&#x2F;urandom&quot; \</span><br><span class="line">--connect jdbc:oracle:thin:@192.168.0.120:1521:orcl \</span><br><span class="line">--username C##DATASETS_1 --P \</span><br><span class="line">--query &quot;SELECT SEPALLENGTH,SEPALWIDTH,PETALLENGTH,PETALWIDTH,SPECIES FROM C##DATASETS_1.IRIS WHERE 1&#x3D;1 AND \$CONDITIONS&quot; \</span><br><span class="line">--hbase-table IRIS --hbase-create-table \</span><br><span class="line">--hbase-row-key id --split-by SPECIES -m 10 \</span><br><span class="line">--column-family SEPALLENGTH,SEPALWIDTH,PETALLENGTH,PETALWIDTH,SPECIES</span><br><span class="line">## 出現錯誤</span><br><span class="line"># 16&#x2F;08&#x2F;02 20:12:17 ERROR manager.SqlManager: Error executing statement: </span><br><span class="line"># java.sql.SQLRecoverableException: IO Error: Connection reset</span><br><span class="line"># java.sql.SQLRecoverableException: IO Error: Connection reset</span><br></pre></td></tr></table></figure>

<p>然後我就放棄再嘗試了，我中間還有把HBase從1.1.0降板到0.98，但是還是沒用，特此紀錄。</p>
<ol start="5">
<li><p>Reference</p>
</li>
<li><p><a href="http://www.cnblogs.com/byrhuangqiang/p/3922594.html">http://www.cnblogs.com/byrhuangqiang/p/3922594.html</a></p>
</li>
<li><p><a href="https://www.zybuluo.com/aitanjupt/note/209968">https://www.zybuluo.com/aitanjupt/note/209968</a></p>
</li>
<li><p><a href="http://blog.csdn.net/u010330043/article/details/51441135">http://blog.csdn.net/u010330043/article/details/51441135</a></p>
</li>
<li><p><a href="http://www.cnblogs.com/smartloli/p/4202710.html">http://www.cnblogs.com/smartloli/p/4202710.html</a></p>
</li>
</ol>
]]></content>
      <categories>
        <category>BigData</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>HBase</tag>
        <tag>Oracle</tag>
        <tag>Sqoop</tag>
      </tags>
  </entry>
  <entry>
    <title>在centos下部署cassandra</title>
    <url>/posts/201607/2016-07-30-deployment-of-cassandra-in-centos.html</url>
    <content><![CDATA[<p>這篇是我在centos部署cassandra的紀錄</p>
<a id="more"></a>

<ol>
<li>準備工作</li>
</ol>
<p>基本上同Hadoop那篇，這裡不贅述</p>
<ol start="2">
<li>部署Cassandra</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -v -j -k -L http://apache.stu.edu.tw/cassandra/2.2.7/apache-cassandra-2.2.7-bin.tar.gz -o apache-cassandra-2.2.7-bin.tar.gz</span><br><span class="line">tar -zxvf apache-cassandra-2.2.7-bin.tar.gz</span><br><span class="line">sudo mv apache-cassandra-2.2.7 /usr/<span class="built_in">local</span>/cassandra</span><br><span class="line">sudo chown -R tester /usr/<span class="built_in">local</span>/cassandra</span><br><span class="line"></span><br><span class="line">sudo tee -a /etc/bashrc &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line"><span class="built_in">export</span> CASSANDRA_HOME=/usr/<span class="built_in">local</span>/cassandra</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$CASSANDRA_HOME</span>/bin</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>修改配置</li>
</ol>
<p>使用<code>vi $CASSANDRA_HOME/conf/cassandra.yaml</code>去改設定檔，改的部分如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># first place:</span></span><br><span class="line"><span class="attr">cluster_name:</span> <span class="string">&#x27;sparkSever&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># second place:</span></span><br><span class="line"><span class="attr">seed_provider:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">class_name:</span> <span class="string">org.apache.cassandra.locator.SimpleSeedProvider</span></span><br><span class="line">      <span class="attr">parameters:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">seeds:</span> <span class="string">&quot;192.168.0.161,192.168.0.162,192.168.0.163,192.168.0.164&quot;</span></span><br><span class="line">          </span><br><span class="line"><span class="comment"># third place:</span></span><br><span class="line"><span class="attr">listen_address:</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.161</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># fourth place:</span></span><br><span class="line"><span class="attr">rpc_address:</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.161</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># fifth place:</span></span><br><span class="line"><span class="attr">endpoint_snitch:</span> <span class="string">GossipingPropertyFileSnitch</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sixth place:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># seventh place:</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>一台裝完之後，可以用下面指令做複製的動作，然後修改需要設定的地方(listen_address跟rpc_address)：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scp -rp /usr/<span class="built_in">local</span>/cassandra tester@sparkServer1:/usr/<span class="built_in">local</span></span><br><span class="line">scp -rp /usr/<span class="built_in">local</span>/cassandra tester@sparkServer2:/usr/<span class="built_in">local</span></span><br><span class="line">scp -rp /usr/<span class="built_in">local</span>/cassandra tester@sparkServer3:/usr/<span class="built_in">local</span></span><br><span class="line"></span><br><span class="line">ssh tester@sparkServer1 <span class="string">&quot;sed -i -e &#x27;s/: 192.168.0.161/: 192.168.0.162/g&#x27; /usr/local/cassandra/conf/cassandra.yaml&quot;</span></span><br><span class="line">ssh tester@sparkServer2 <span class="string">&quot;sed -i -e &#x27;s/: 192.168.0.161/: 192.168.0.163/g&#x27; /usr/local/cassandra/conf/cassandra.yaml&quot;</span></span><br><span class="line">ssh tester@sparkServer3 <span class="string">&quot;sed -i -e &#x27;s/: 192.168.0.161/: 192.168.0.164/g&#x27; /usr/local/cassandra/conf/cassandra.yaml&quot;</span></span><br></pre></td></tr></table></figure>

<ol start="4">
<li>啟動Cassandra</li>
</ol>
<p>在sparkServer0上輸入下面的指令，就可以成功開啟四台Cassandra的node：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh tester@sparkServer1 <span class="string">&quot;cassandra&quot;</span></span><br><span class="line">ssh tester@sparkServer2 <span class="string">&quot;cassandra&quot;</span></span><br><span class="line">ssh tester@sparkServer3 <span class="string">&quot;cassandra&quot;</span></span><br><span class="line">cassandra</span><br></pre></td></tr></table></figure>

<p>用<code>nodetool status</code>可以確定一下是不是都有跑起來，顯示資訊如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nodetool status</span><br><span class="line"><span class="comment"># Datacenter: dc1</span></span><br><span class="line"><span class="comment"># ===============</span></span><br><span class="line"><span class="comment"># Status=Up/Down</span></span><br><span class="line"><span class="comment"># |/ State=Normal/Leaving/Joining/Moving</span></span><br><span class="line"><span class="comment"># --  Address        Load       Tokens       Owns (effective)  Host ID                               Rack</span></span><br><span class="line"><span class="comment"># UN  192.168.0.161  150.93 KB  256          45.5%             5fbf33ca-a88c-4ca4-86c3-6fee0679f2ac  rack1</span></span><br><span class="line"><span class="comment"># UN  192.168.0.162  98.96 KB   256          49.4%             752cd742-8169-415a-b6e5-b0d60fdf3fc0  rack1</span></span><br><span class="line"><span class="comment"># UN  192.168.0.163  68.49 KB   256          52.8%             b6b7f4b9-9843-430f-a2a4-7ad7a56e4361  rack1</span></span><br><span class="line"><span class="comment"># UN  192.168.0.164  90.3 KB    256          52.2%             2ee0ec24-b542-4bd6-86d3-fc284a12bf5e  rack1</span></span><br></pre></td></tr></table></figure>

<ol start="5">
<li>自動啟動Cassandra</li>
</ol>
<p>開機自動啟動Cassandra的script(用<code>sudo vi /etc/init.d/cassandra</code>去create)：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># chkconfig: 2345 99 01</span></span><br><span class="line"><span class="comment"># description: Cassandra</span></span><br><span class="line"></span><br><span class="line">. /etc/rc.d/init.d/<span class="built_in">functions</span></span><br><span class="line"></span><br><span class="line">CASSANDRA_HOME=/usr/<span class="built_in">local</span>/cassandra</span><br><span class="line">CASSANDRA_BIN=<span class="variable">$CASSANDRA_HOME</span>/bin/cassandra</span><br><span class="line">CASSANDRA_NODETOOL=<span class="variable">$CASSANDRA_HOME</span>/bin/nodetool</span><br><span class="line">CASSANDRA_LOG=<span class="variable">$CASSANDRA_HOME</span>/logs/cassandra.log</span><br><span class="line">CASSANDRA_PID=/var/run/cassandra.pid</span><br><span class="line">CASSANDRA_LOCK=/var/lock/subsys/cassandra</span><br><span class="line">PROGRAM=<span class="string">&quot;cassandra&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! -f <span class="variable">$CASSANDRA_BIN</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;File not found: <span class="variable">$CASSANDRA_BIN</span>&quot;</span></span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">RETVAL=0</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">start</span></span>() &#123;</span><br><span class="line">  <span class="keyword">if</span> [ -f <span class="variable">$CASSANDRA_PID</span> ] &amp;&amp; checkpid `cat <span class="variable">$CASSANDRA_PID</span>`; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Cassandra is already running.&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 0</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">  <span class="built_in">echo</span> -n $<span class="string">&quot;Starting <span class="variable">$PROGRAM</span>: &quot;</span></span><br><span class="line">  daemon <span class="variable">$CASSANDRA_BIN</span> -p <span class="variable">$CASSANDRA_PID</span> &gt;&gt; <span class="variable">$CASSANDRA_LOG</span> 2&gt;&amp;1</span><br><span class="line">  usleep 500000</span><br><span class="line">  RETVAL=$?</span><br><span class="line">  <span class="keyword">if</span> [ <span class="variable">$RETVAL</span> -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">    touch <span class="variable">$CASSANDRA_LOCK</span></span><br><span class="line">    echo_success</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    echo_failure</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">  <span class="built_in">echo</span></span><br><span class="line">  <span class="built_in">return</span> <span class="variable">$RETVAL</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">stop</span></span>() &#123;</span><br><span class="line">  <span class="keyword">if</span> [ ! -f <span class="variable">$CASSANDRA_PID</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Cassandra is already stopped.&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 0</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">  <span class="built_in">echo</span> -n $<span class="string">&quot;Stopping <span class="variable">$PROGRAM</span>: &quot;</span></span><br><span class="line">  <span class="variable">$CASSANDRA_NODETOOL</span> -h 127.0.0.1 decommission</span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">kill</span> `cat <span class="variable">$CASSANDRA_PID</span>`; <span class="keyword">then</span></span><br><span class="line">    RETVAL=0</span><br><span class="line">    rm -f <span class="variable">$CASSANDRA_LOCK</span></span><br><span class="line">    echo_success</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    RETVAL=1</span><br><span class="line">    echo_failure</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">  <span class="built_in">echo</span></span><br><span class="line">  [ <span class="variable">$RETVAL</span> = 0 ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">status_fn</span></span>() &#123;</span><br><span class="line">  <span class="keyword">if</span> [ -f <span class="variable">$CASSANDRA_PID</span> ] &amp;&amp; checkpid `cat <span class="variable">$CASSANDRA_PID</span>`; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Cassandra is running.&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 0</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Cassandra is stopped.&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">  start)</span><br><span class="line">    start</span><br><span class="line">    ;;</span><br><span class="line">  stop)</span><br><span class="line">    stop</span><br><span class="line">    ;;</span><br><span class="line">  status)</span><br><span class="line">    status_fn</span><br><span class="line">    ;;</span><br><span class="line">  restart)</span><br><span class="line">    stop</span><br><span class="line">    start</span><br><span class="line">    ;;</span><br><span class="line">  *)</span><br><span class="line">    <span class="built_in">echo</span> $<span class="string">&quot;Usage: <span class="variable">$PROGRAM</span> &#123;start|stop|restart|status&#125;&quot;</span></span><br><span class="line">    RETVAL=3</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span> <span class="variable">$RETVAL</span></span><br></pre></td></tr></table></figure>

<p>然後使用下面指令讓這個script能夠自動跑：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo chmod +x /etc/init.d/cassandra</span><br><span class="line">sudo chkconfig --add cassandra</span><br><span class="line">sudo service cassandra start</span><br></pre></td></tr></table></figure>

<ol start="6">
<li>測試</li>
</ol>
<p>打開Terminal，輸入<code>cqlsh 192.168.0.161</code> (任意一台有cassandra在運行的電腦IP)就可以開始用Cassandra的cql了，簡單測試如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- Create KEYSPACE</span></span><br><span class="line"><span class="keyword">CREATE</span> KEYSPACE mariadbtest2</span><br><span class="line">    <span class="keyword">WITH</span> <span class="keyword">replication</span> = &#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;SimpleStrategy&#x27;</span>, </span><br><span class="line">        <span class="string">&#x27;replication_factor&#x27;</span>: <span class="string">&#x27;3&#x27;</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- Use the KEYSPACE</span></span><br><span class="line"><span class="keyword">USE</span> mariadbtest2;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- create table</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t1 (<span class="keyword">rowid</span> <span class="built_in">text</span>, data1 <span class="built_in">text</span>, data2 <span class="built_in">int</span>, PRIMARY <span class="keyword">KEY</span> (<span class="keyword">rowid</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">-- insert data</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> t1 (<span class="keyword">rowid</span>, data1, data2) <span class="keyword">VALUES</span> (<span class="string">&#x27;rowid001&#x27;</span>, <span class="string">&#x27;g1&#x27;</span>, <span class="number">123456</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> t1 (<span class="keyword">rowid</span>, data1, data2) <span class="keyword">VALUES</span> (<span class="string">&#x27;rowid002&#x27;</span>, <span class="string">&#x27;g2&#x27;</span>, <span class="number">34543</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> t1 (<span class="keyword">rowid</span>, data1, data2) <span class="keyword">VALUES</span> (<span class="string">&#x27;rowid003&#x27;</span>, <span class="string">&#x27;g1&#x27;</span>, <span class="number">97548</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> t1 (<span class="keyword">rowid</span>, data1, data2) <span class="keyword">VALUES</span> (<span class="string">&#x27;rowid004&#x27;</span>, <span class="string">&#x27;g1&#x27;</span>, <span class="number">62145</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> t1 (<span class="keyword">rowid</span>, data1, data2) <span class="keyword">VALUES</span> (<span class="string">&#x27;rowid005&#x27;</span>, <span class="string">&#x27;g2&#x27;</span>, <span class="number">140578</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- query whole data</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> t1;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> rowid    | data1 | data2</span></span><br><span class="line"><span class="comment">----------+-------+--------</span></span><br><span class="line"><span class="comment"> rowid003 |    g1 |  97548</span></span><br><span class="line"><span class="comment"> rowid002 |    g2 |  34543</span></span><br><span class="line"><span class="comment"> rowid001 |    g1 | 123456</span></span><br><span class="line"><span class="comment"> rowid005 |    g2 | 140578</span></span><br><span class="line"><span class="comment"> rowid004 |    g1 |  62145</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">(5 rows)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- simple calculation</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">sum</span>(data2) <span class="keyword">FROM</span> t1;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> system.sum(data2)</span></span><br><span class="line"><span class="comment">-------------------</span></span><br><span class="line"><span class="comment">            458270</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">(1 rows)</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<p>現行的Cassandra CQL還沒支援使用<code>GROUP BY</code>的功能</p>
<p>看了一下網路討論，主要是Cassandra最原本的開發目的是為了快速讀取、儲存的地方，而非計算之用</p>
<p>因此，CQL這一塊還在發展，我有看到issue已經要準備在3.X更新<code>GROUP BY</code>的部分了，敬請期待</p>
<ol start="7">
<li><p>Reference</p>
</li>
<li><p><a href="http://blog.fens.me/nosql-r-cassandra/">http://blog.fens.me/nosql-r-cassandra/</a></p>
</li>
<li><p><a href="https://twgame.wordpress.com/2015/02/16/real-machine-cassandra-cluster/">https://twgame.wordpress.com/2015/02/16/real-machine-cassandra-cluster/</a></p>
</li>
<li><p><a href="http://www.planetcassandra.org/blog/installing-the-cassandra-spark-oss-stack/">http://www.planetcassandra.org/blog/installing-the-cassandra-spark-oss-stack/</a></p>
</li>
<li><p><a href="http://datastax.github.io/python-driver/getting_started.html">http://datastax.github.io/python-driver/getting_started.html</a></p>
</li>
<li><p><a href="https://docs.datastax.com/en/developer/python-driver/1.0/python-driver/quick_start/qsSimpleClientAddSession_t.html">https://docs.datastax.com/en/developer/python-driver/1.0/python-driver/quick_start/qsSimpleClientAddSession_t.html</a></p>
</li>
<li><p><a href="https://mariadb.com/kb/en/mariadb/cassandra-storage-engine-use-example/">https://mariadb.com/kb/en/mariadb/cassandra-storage-engine-use-example/</a></p>
</li>
</ol>
]]></content>
      <categories>
        <category>BigData</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>CentOS</tag>
        <tag>Cassandra</tag>
      </tags>
  </entry>
  <entry>
    <title>用Python將Oracle DB的資料匯出到Cassandra</title>
    <url>/posts/201608/2016-08-01-export-oracle-data-to-cassandra-using-python.html</url>
    <content><![CDATA[<p>基本上的工具在前幾篇都安裝完</p>
<p>這一篇主要目的是把Oracle資料庫的資料匯出到Cassandra中</p>
<a id="more"></a>

<p>原本這部分要用sqoop做，結果發現沒辦法使用</p>
<p>只好用Python自己做輪子，於是這篇就誕生了</p>
<ol>
<li>準備工作</li>
</ol>
<p>要有Oracle DB, Cassandra cluster跟安裝好Python本機</p>
<p>我的架構是：</p>
<p>5台VM，每一台都是4G RAM，兩核心</p>
<p>1台是Oracle DB，其他四台是Cassandra Cluster</p>
<p>本機是四核心八執行緒，32GB的電腦，所以全部電腦在跑，本機會有點喘XDD</p>
<ol start="2">
<li>Python程式</li>
</ol>
<p>上傳、刪除Oracle DB的部分就參考cx_Oracle那篇</p>
<p>這篇程式主要是做了一些type mapping、cassandra上傳加速的測試</p>
<p>最後發現使用<code>execute_concurrent_with_args</code>可以比正常用for + execute快上7倍</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys, cx_Oracle, datetime, time</span><br><span class="line"><span class="keyword">import</span> cassandra.cluster</span><br><span class="line"><span class="keyword">import</span> cassandra.concurrent</span><br><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> islice</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TooManyArgsError</span>(<span class="params">Exception</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Err type for too many arguments.&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># import sys, getopt</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">argv</span>):</span></span><br><span class="line">    <span class="comment"># information for connecting to oracle</span></span><br><span class="line">    oracleLoginInfo = <span class="string">u&#x27;system/qscf12356@192.168.0.120:1521/orcl&#x27;</span></span><br><span class="line">    <span class="comment"># define the number of fetching once = the number of rows uploaded to cassandra</span></span><br><span class="line">    numFetch = <span class="number">5000</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># cassandra cluster ips</span></span><br><span class="line">    cassandraIpAddrs = [<span class="string">u&#x27;192.168.0.161&#x27;</span>, <span class="string">u&#x27;192.168.0.162&#x27;</span>, \</span><br><span class="line">                        <span class="string">u&#x27;192.168.0.163&#x27;</span>, <span class="string">u&#x27;192.168.0.164&#x27;</span>];</span><br><span class="line">    <span class="comment"># create a dict to map the data type of python to the one in Cassandra</span></span><br><span class="line">    pythonCassTypeMap = dict([[<span class="string">&quot;str&quot;</span>, <span class="string">&quot;text&quot;</span>], [<span class="string">&quot;int&quot;</span>, <span class="string">&quot;int&quot;</span>], \</span><br><span class="line">        [<span class="string">&quot;float&quot;</span>, <span class="string">&quot;double&quot;</span>], [<span class="string">&quot;datetime&quot;</span>, <span class="string">&quot;timestamp&quot;</span>]])</span><br><span class="line"></span><br><span class="line">    <span class="comment">#%% input check</span></span><br><span class="line">    <span class="keyword">if</span> len(argv) <span class="keyword">is</span> <span class="number">0</span>:</span><br><span class="line">        tableListFN = <span class="string">&#x27;dataTable.csv&#x27;</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;&quot;&quot;The default filename of the table list is &#x27;%s&#x27;.&quot;&quot;&quot;</span> % tableListFN</span><br><span class="line">    <span class="keyword">elif</span> len(argv) &gt; <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">raise</span> TooManyArgsError(<span class="string">&#x27;Too many input arguments!&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        tableListFN = argv[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment">#%% read input file</span></span><br><span class="line">    <span class="comment"># print log</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">&#x27;The filename you input is %s.&#x27;</span> % tableListFN</span><br><span class="line">    <span class="comment"># read the title row of csv</span></span><br><span class="line">    fieldnames = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">with</span> open(tableListFN) <span class="keyword">as</span> csvfile:</span><br><span class="line">        firstRow = csvfile.readlines(<span class="number">1</span>)</span><br><span class="line">        fieldnames = tuple(firstRow[<span class="number">0</span>].strip(<span class="string">&#x27;\n&#x27;</span>).split(<span class="string">&quot;,&quot;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># read the rows of csv</span></span><br><span class="line">    tableList = list()</span><br><span class="line">    <span class="keyword">with</span> open(tableListFN) <span class="keyword">as</span> csvfile:</span><br><span class="line">        <span class="keyword">for</span> row <span class="keyword">in</span> islice(csvfile, <span class="number">1</span>, <span class="literal">None</span>):</span><br><span class="line">            values = [elem.upper() <span class="keyword">for</span> elem <span class="keyword">in</span> row.strip(<span class="string">&#x27;\n&#x27;</span>).split(<span class="string">&quot;,&quot;</span>)]</span><br><span class="line">            tableList.append(dict(zip(fieldnames, values)))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> len(tableList) <span class="keyword">is</span> <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&#x27;There is no data in %s.&#x27;</span> % tableListFN</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> tableList:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&#x27;Now is upload the dataset %s.%s...&#x27;</span> % \</span><br><span class="line">            (row[<span class="string">&#x27;oracleSchema&#x27;</span>].lower(), row[<span class="string">&#x27;oracleTblName&#x27;</span>].lower())</span><br><span class="line">        <span class="comment">#%% import data from Oracle database</span></span><br><span class="line">        <span class="comment"># create connection</span></span><br><span class="line">        oracleConn = cx_Oracle.connect(oracleLoginInfo)</span><br><span class="line">        <span class="comment"># activate cursor</span></span><br><span class="line">        oracleCursor = oracleConn.cursor()</span><br><span class="line">        <span class="comment"># make sql</span></span><br><span class="line">        oracleSql = <span class="string">&quot;select rowid,t.* from %s.%s t&quot;</span> % \</span><br><span class="line">            (row[<span class="string">&#x27;oracleSchema&#x27;</span>], row[<span class="string">&#x27;oracleTblName&#x27;</span>])</span><br><span class="line">        <span class="comment"># execute sql query</span></span><br><span class="line">        oracleCursor.execute(oracleSql)</span><br><span class="line"></span><br><span class="line">        <span class="comment">#%% start to fetch rows and upload to cassandra</span></span><br><span class="line">        <span class="comment"># connect to cassandra</span></span><br><span class="line">        casCon = cassandra.cluster.Cluster(cassandraIpAddrs)</span><br><span class="line">        casSession = casCon.connect()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># create keyspace if it does not exist</span></span><br><span class="line">        casSession.execute(<span class="string">&quot;&quot;&quot;CREATE KEYSPACE IF NOT EXISTS %s</span></span><br><span class="line"><span class="string">            WITH replication = &#123;&#x27;class&#x27;: &#x27;SimpleStrategy&#x27;, &#x27;replication_factor&#x27;: &#x27;2&#x27;&#125;</span></span><br><span class="line"><span class="string">            &quot;&quot;&quot;</span> % row[<span class="string">&#x27;cassandraKeyspace&#x27;</span>])</span><br><span class="line">        <span class="comment"># set to keyspace</span></span><br><span class="line">        casSession.set_keyspace(row[<span class="string">&#x27;cassandraKeyspace&#x27;</span>].lower())</span><br><span class="line"></span><br><span class="line">        <span class="comment">#%% get the oracle data and check the data type</span></span><br><span class="line">        oracleRows = oracleCursor.fetchmany(numFetch)</span><br><span class="line">        <span class="comment"># get data type</span></span><br><span class="line">        colDataType = [type(r).__name__ <span class="keyword">for</span> r <span class="keyword">in</span> oracleRows[<span class="number">0</span>]]</span><br><span class="line">        <span class="comment"># find the mapping data type in cassandra</span></span><br><span class="line">        cassType = [pythonCassTypeMap[dataType] <span class="keyword">for</span> dataType <span class="keyword">in</span> colDataType]</span><br><span class="line">        <span class="comment"># acquire the column names in Oracle DB</span></span><br><span class="line">        oracleColNames = [x[<span class="number">0</span>].lower() <span class="keyword">for</span> x <span class="keyword">in</span> oracleCursor.description]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># create table  if it does not exist</span></span><br><span class="line">        casSession.execute(<span class="string">&#x27;&#x27;&#x27;CREATE TABLE IF NOT EXISTS &#123;&#125;.&#123;&#125; (&#123;&#125;, PRIMARY KEY (rowid))&#x27;&#x27;&#x27;</span>.format(\</span><br><span class="line">            row[<span class="string">&#x27;cassandraKeyspace&#x27;</span>].lower(), row[<span class="string">&#x27;cassandraTblName&#x27;</span>].lower(),\</span><br><span class="line">                <span class="string">&#x27;,&#x27;</span>.join([x + <span class="string">&#x27; &#x27;</span> + y <span class="keyword">for</span> (x,y) <span class="keyword">in</span> zip(oracleColNames, cassType)])))</span><br><span class="line"></span><br><span class="line">        <span class="comment">#%% upload data to cassandra</span></span><br><span class="line">        insertCQL = <span class="string">&quot;&quot;&quot;INSERT INTO &#123;&#125;.&#123;&#125; (&#123;&#125;) VALUES (&#123;&#125;)&quot;&quot;&quot;</span>.format(\</span><br><span class="line">                    row[<span class="string">&#x27;cassandraKeyspace&#x27;</span>].lower(), row[<span class="string">&#x27;cassandraTblName&#x27;</span>].lower(), \</span><br><span class="line">                    <span class="string">&#x27;,&#x27;</span>.join(oracleColNames), \</span><br><span class="line">                    <span class="string">&#x27;,&#x27;</span>.join([<span class="string">&#x27;%s&#x27;</span> <span class="keyword">for</span> x <span class="keyword">in</span> range(len(oracleColNames))]))</span><br><span class="line">        preparedCQL = casSession.prepare(insertCQL.replace(<span class="string">&#x27;%s&#x27;</span>, <span class="string">&#x27;?&#x27;</span>))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">print</span> <span class="string">&#x27;start upload at %s...&#x27;</span> % datetime.datetime.now()</span><br><span class="line">        st = time.clock()</span><br><span class="line"></span><br><span class="line">        numRowsOracle = len(oracleRows)</span><br><span class="line">        <span class="keyword">while</span> len(oracleRows) <span class="keyword">is</span> <span class="keyword">not</span> <span class="number">0</span>:</span><br><span class="line">            <span class="comment">## first 750,000 cells ~ 55 secs</span></span><br><span class="line">            <span class="comment"># for dataRow in oracleRows:</span></span><br><span class="line">                <span class="comment"># casSession.execute(insertCQL, dataRow)</span></span><br><span class="line">            <span class="comment">## second 750,000 cells ~ 50 secs</span></span><br><span class="line">            <span class="comment"># for dataRow in oracleRows:</span></span><br><span class="line">                <span class="comment"># casSession.execute(preparedCQL, dataRow)</span></span><br><span class="line">            <span class="comment">## third 750,000 cells ~ 15 secs</span></span><br><span class="line">            <span class="comment"># for dataRow in oracleRows:</span></span><br><span class="line">                <span class="comment"># casSession.execute_async(preparedCQL, dataRow)</span></span><br><span class="line">            <span class="comment">## fourth 750,000 cells ~ 8 secs</span></span><br><span class="line">            oracleRows = oracleCursor.fetchmany(numFetch)</span><br><span class="line">            cassandra.concurrent.execute_concurrent_with_args(casSession, preparedCQL, oracleRows, concurrency = <span class="number">50</span>)</span><br><span class="line">            numRowsOracle += len(oracleRows)                   </span><br><span class="line"></span><br><span class="line">        <span class="keyword">print</span> <span class="string">&#x27;End upload at %s...&#x27;</span> % datetime.datetime.now()</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&#x27;The total upload time for %i cells is %s seconds...\n&#x27;</span> % \</span><br><span class="line">            (numRowsOracle * len(oracleColNames), time.clock() - st)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># shutdown the connection to cassandra</span></span><br><span class="line">        casCon.shutdown()</span><br><span class="line">        <span class="comment"># clost the connection to Oracle</span></span><br><span class="line">        oracleCursor.close()</span><br><span class="line">        oracleConn.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main(sys.argv[<span class="number">1</span>:])</span><br></pre></td></tr></table></figure>

<p>之後又寫了一版同時用pp去平行的處理各張表格</p>
<p>手上表格不多(六個)，反正處理時間大概就是最大那張表格的時間：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> islice</span><br><span class="line"><span class="keyword">import</span> sys, pp</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TooManyArgsError</span>(<span class="params">Exception</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Err type for too many arguments.&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">implementUploadTbl</span>(<span class="params">row</span>):</span></span><br><span class="line">    <span class="keyword">import</span> cx_Oracle</span><br><span class="line">    <span class="keyword">import</span> cassandra.cluster</span><br><span class="line">    <span class="keyword">import</span> cassandra.concurrent</span><br><span class="line"></span><br><span class="line">    <span class="comment"># information for connecting to oracle</span></span><br><span class="line">    oracleLoginInfo = <span class="string">u&#x27;system/qscf12356@192.168.0.120:1521/orcl&#x27;</span></span><br><span class="line">    <span class="comment"># define the number of fetching once = the number of rows uploaded to cassandra</span></span><br><span class="line">    numFetch = <span class="number">5000</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># cassandra cluster ips</span></span><br><span class="line">    cassandraIpAddrs = [<span class="string">u&#x27;192.168.0.161&#x27;</span>, <span class="string">u&#x27;192.168.0.162&#x27;</span>, \</span><br><span class="line">                        <span class="string">u&#x27;192.168.0.163&#x27;</span>, <span class="string">u&#x27;192.168.0.164&#x27;</span>];    </span><br><span class="line">    </span><br><span class="line">    <span class="comment"># create a dict to map the data type of python to the one in Cassandra</span></span><br><span class="line">    pythonCassTypeMap = dict([[<span class="string">&quot;str&quot;</span>, <span class="string">&quot;text&quot;</span>], [<span class="string">&quot;int&quot;</span>, <span class="string">&quot;int&quot;</span>], \</span><br><span class="line">        [<span class="string">&quot;float&quot;</span>, <span class="string">&quot;double&quot;</span>], [<span class="string">&quot;datetime&quot;</span>, <span class="string">&quot;timestamp&quot;</span>]])</span><br><span class="line"></span><br><span class="line">    <span class="comment">#%% import data from Oracle database</span></span><br><span class="line">    <span class="comment"># create connection</span></span><br><span class="line">    oracleConn = cx_Oracle.connect(oracleLoginInfo)</span><br><span class="line">    <span class="comment"># activate cursor</span></span><br><span class="line">    oracleCursor = oracleConn.cursor()</span><br><span class="line">    <span class="comment"># make sql</span></span><br><span class="line">    oracleSql = <span class="string">&quot;select rowid,t.* from %s.%s t&quot;</span> % \</span><br><span class="line">        (row[<span class="string">&#x27;oracleSchema&#x27;</span>], row[<span class="string">&#x27;oracleTblName&#x27;</span>])</span><br><span class="line">    <span class="comment"># execute sql query</span></span><br><span class="line">    oracleCursor.execute(oracleSql)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#%% start to fetch rows and upload to cassandra</span></span><br><span class="line">    <span class="comment"># connect to cassandra</span></span><br><span class="line">    casCon = cassandra.cluster.Cluster(cassandraIpAddrs)</span><br><span class="line">    casSession = casCon.connect()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># create keyspace if it does not exist</span></span><br><span class="line">    casSession.execute(<span class="string">&quot;&quot;&quot;CREATE KEYSPACE IF NOT EXISTS %s</span></span><br><span class="line"><span class="string">        WITH replication = &#123;&#x27;class&#x27;: &#x27;SimpleStrategy&#x27;, &#x27;replication_factor&#x27;: &#x27;2&#x27;&#125;</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span> % row[<span class="string">&#x27;cassandraKeyspace&#x27;</span>])</span><br><span class="line">    <span class="comment"># set to keyspace</span></span><br><span class="line">    casSession.set_keyspace(row[<span class="string">&#x27;cassandraKeyspace&#x27;</span>].lower())</span><br><span class="line"></span><br><span class="line">    <span class="comment">#%% get the oracle data and check the data type</span></span><br><span class="line">    oracleRows = oracleCursor.fetchmany(numFetch)</span><br><span class="line">    <span class="comment"># get data type</span></span><br><span class="line">    colDataType = [type(r).__name__ <span class="keyword">for</span> r <span class="keyword">in</span> oracleRows[<span class="number">0</span>]]</span><br><span class="line">    <span class="comment"># find the mapping data type in cassandra</span></span><br><span class="line">    cassType = [pythonCassTypeMap[dataType] <span class="keyword">for</span> dataType <span class="keyword">in</span> colDataType]</span><br><span class="line">    <span class="comment"># acquire the column names in Oracle DB</span></span><br><span class="line">    oracleColNames = [x[<span class="number">0</span>].lower() <span class="keyword">for</span> x <span class="keyword">in</span> oracleCursor.description]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># create table  if it does not exist</span></span><br><span class="line">    casSession.execute(<span class="string">&#x27;&#x27;&#x27;CREATE TABLE IF NOT EXISTS &#123;&#125;.&#123;&#125; (&#123;&#125;, PRIMARY KEY (rowid))&#x27;&#x27;&#x27;</span>.format(\</span><br><span class="line">        row[<span class="string">&#x27;cassandraKeyspace&#x27;</span>].lower(), row[<span class="string">&#x27;cassandraTblName&#x27;</span>].lower(),\</span><br><span class="line">            <span class="string">&#x27;,&#x27;</span>.join([x + <span class="string">&#x27; &#x27;</span> + y <span class="keyword">for</span> (x,y) <span class="keyword">in</span> zip(oracleColNames, cassType)])))</span><br><span class="line"></span><br><span class="line">    <span class="comment">#%% upload data to cassandra</span></span><br><span class="line">    insertCQL = <span class="string">&quot;&quot;&quot;INSERT INTO &#123;&#125;.&#123;&#125; (&#123;&#125;) VALUES (&#123;&#125;)&quot;&quot;&quot;</span>.format(\</span><br><span class="line">                row[<span class="string">&#x27;cassandraKeyspace&#x27;</span>].lower(), row[<span class="string">&#x27;cassandraTblName&#x27;</span>].lower(), \</span><br><span class="line">                <span class="string">&#x27;,&#x27;</span>.join(oracleColNames), \</span><br><span class="line">                <span class="string">&#x27;,&#x27;</span>.join([<span class="string">&#x27;%s&#x27;</span> <span class="keyword">for</span> x <span class="keyword">in</span> range(len(oracleColNames))]))</span><br><span class="line">    preparedCQL = casSession.prepare(insertCQL.replace(<span class="string">&#x27;%s&#x27;</span>, <span class="string">&#x27;?&#x27;</span>))</span><br><span class="line"></span><br><span class="line">    numRowsOracle = len(oracleRows)</span><br><span class="line">    <span class="keyword">while</span> len(oracleRows) <span class="keyword">is</span> <span class="keyword">not</span> <span class="number">0</span>:</span><br><span class="line">        oracleRows = oracleCursor.fetchmany(numFetch)</span><br><span class="line">        cassandra.concurrent.execute_concurrent_with_args(casSession, preparedCQL, oracleRows, concurrency = <span class="number">50</span>)</span><br><span class="line">        numRowsOracle += len(oracleRows)                   </span><br><span class="line"></span><br><span class="line">    <span class="comment"># shutdown the connection to cassandra</span></span><br><span class="line">    casCon.shutdown()</span><br><span class="line">    <span class="comment"># clost the connection to Oracle</span></span><br><span class="line">    oracleCursor.close()</span><br><span class="line">    oracleConn.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">argv</span>):</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">#%% input check</span></span><br><span class="line">    <span class="keyword">if</span> len(argv) <span class="keyword">is</span> <span class="number">0</span>:</span><br><span class="line">        tableListFN = <span class="string">&#x27;dataTable.csv&#x27;</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;&quot;&quot;The default filename of the table list is &#x27;%s&#x27;.&quot;&quot;&quot;</span> % tableListFN</span><br><span class="line">    <span class="keyword">elif</span> len(argv) &gt; <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">raise</span> TooManyArgsError(<span class="string">&#x27;Too many input arguments!&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        tableListFN = argv[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment">#%% read input file</span></span><br><span class="line">    <span class="comment"># print log</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">&#x27;The filename you input is %s.&#x27;</span> % tableListFN</span><br><span class="line">    <span class="comment"># read the title row of csv</span></span><br><span class="line">    fieldnames = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">with</span> open(tableListFN) <span class="keyword">as</span> csvfile:</span><br><span class="line">        firstRow = csvfile.readlines(<span class="number">1</span>)</span><br><span class="line">        fieldnames = tuple(firstRow[<span class="number">0</span>].strip(<span class="string">&#x27;\n&#x27;</span>).split(<span class="string">&quot;,&quot;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># read the rows of csv</span></span><br><span class="line">    tableList = list()</span><br><span class="line">    <span class="keyword">with</span> open(tableListFN) <span class="keyword">as</span> csvfile:</span><br><span class="line">        <span class="keyword">for</span> row <span class="keyword">in</span> islice(csvfile, <span class="number">1</span>, <span class="literal">None</span>):</span><br><span class="line">            values = [elem.upper() <span class="keyword">for</span> elem <span class="keyword">in</span> row.strip(<span class="string">&#x27;\n&#x27;</span>).split(<span class="string">&quot;,&quot;</span>)]</span><br><span class="line">            tableList.append(dict(zip(fieldnames, values)))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> len(tableList) <span class="keyword">is</span> <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&#x27;There is no data in %s.&#x27;</span> % tableListFN</span><br><span class="line"></span><br><span class="line">    jobs = []</span><br><span class="line">    job_server = pp.Server()</span><br><span class="line">    job_server.set_ncpus()</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> tableList:</span><br><span class="line">        jobs.append(job_server.submit(implementUploadTbl, (row,)))</span><br><span class="line">    runJob = [job() <span class="keyword">for</span> job <span class="keyword">in</span> jobs]</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">import</span> time    </span><br><span class="line">    st = time.clock()</span><br><span class="line">    main(sys.argv[<span class="number">1</span>:])</span><br><span class="line">    <span class="keyword">print</span> <span class="string">&#x27;The total upload time is %s seconds...\n&#x27;</span> % (time.clock() - st)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>BigData</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BigData</tag>
        <tag>Oracle</tag>
        <tag>Cassandra</tag>
      </tags>
  </entry>
  <entry>
    <title>基於Cassandra的spark環境部署</title>
    <url>/posts/201608/2016-08-05-deployment-of-spark-based-on-cassandra.html</url>
    <content><![CDATA[<p>之前的部屬是base on hadoop所建立的spark環境</p>
<p>這一篇會從頭建立基於cassandra的spark環境</p>
<a id="more"></a>

<p>一樣是透過VM安裝minimal system of centos</p>
<p>再部署好其中一台做為spark的master，將該台的映像檔做clone，變成slaves</p>
<p>Cassandra則部署到全部的節點上</p>
<ol>
<li><p>準備工作</p>
<ol>
<li>安裝好VMware，然後新增一台VM (網路連接方式使用bridged即可)，引進centos 7.2安裝映像檔</li>
<li>安裝centos的時候先將一些設定configure好，之後就不需要用小黑框慢慢config了</li>
<li>先設置網路，第一個分頁的自動連線打勾、第四頁的IPv4選Manual，填上IP、Net mask、Gateway跟DNS，接著點進硬碟確定配置，然後設定時區(你可以不設定，就用美國紐約)</li>
<li>按下一步安裝，此時可以新增使用者跟設置root密碼，我這裡新增一個使用者tester</li>
</ol>
</li>
</ol>
<p>安裝後重開機後，先幫你自己的使用者帳號開權限：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">su <span class="comment"># 切換到root</span></span><br><span class="line">visudo <span class="comment"># 打開設定檔</span></span><br><span class="line"><span class="comment"># 打/root\tALL找到這行 root ALL=(ALL) ALL</span></span><br><span class="line"><span class="comment"># 在下面新增 tester ALL=(ALL) ALL</span></span><br></pre></td></tr></table></figure>

<p>而ssh已經有了，就不用安裝了，直接產生key：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 產生SSH Key</span></span><br><span class="line">ssh-keygen -t rsa -P <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment"># 授權SSH Key</span></span><br><span class="line">cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 設定.ssh的權限</span></span><br><span class="line">sudo chmod 700 /home/tester</span><br><span class="line">sudo chmod 700 /home/tester/.ssh</span><br><span class="line">sudo chmod 644 /home/tester/.ssh/authorized_keys</span><br><span class="line">sudo chmod 600 /home/tester/.ssh/id_rsa</span><br><span class="line">sudo service sshd restart</span><br></pre></td></tr></table></figure>

<p>再來是讓電腦認得自己，並讓其他電腦認得自己</p>
<p><code>echo &quot;cassSpark1&quot; | sudo tee /etc/hostname</code> (每台電腦用不同名字)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo tee -a /etc/hosts &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">192.168.0.121 cassSpark1</span><br><span class="line">192.168.0.122 cassSpark2</span><br><span class="line">192.168.0.123 cassSpark3</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<p>最後是斷掉防火牆</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl stop firewalld</span><br><span class="line">sudo systemctl <span class="built_in">disable</span> firewalld  </span><br></pre></td></tr></table></figure>

<p>然後用<code>sudo reboot</code>重開機</p>
<ol start="2">
<li>開始部署</li>
</ol>
<p>Note: spark-cassandra-connector 1.6是用spark 1.6.1, scala 2.10.5編譯出來的</p>
<p>所以我這版本就用一樣的，避免版本不同，沒有align情況下出現methodNotFound的exception</p>
<p>i. 下載檔案並移到適當位置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mkdir /usr/<span class="built_in">local</span>/bigdata</span><br><span class="line">sudo chown -R tester /usr/<span class="built_in">local</span>/bigdata</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下載並安裝java</span></span><br><span class="line">curl -v -j -k -L -H <span class="string">&quot;Cookie: oraclelicense=accept-securebackup-cookie&quot;</span> http://download.oracle.com/otn-pub/java/jdk/8u101-b13/jdk-8u101-linux-x64.rpm -o jdk-8u101-linux-x64.rpm</span><br><span class="line">sudo yum install -y jdk-8u101-linux-x64.rpm</span><br><span class="line"><span class="comment"># 下載並部署scala</span></span><br><span class="line">curl -v -j -k -L http://downloads.lightbend.com/scala/2.10.5/scala-2.10.5.tgz -o scala-2.10.5.tgz</span><br><span class="line">tar -zxvf scala-2.10.5.tgz</span><br><span class="line">sudo mkdir /usr/<span class="built_in">local</span>/scala</span><br><span class="line">sudo mv scala-2.10.5 /usr/<span class="built_in">local</span>/scala/scala-2.10</span><br><span class="line"><span class="comment"># 下載並部署spark</span></span><br><span class="line">curl -v -j -k -L http://d3kbcqa49mib13.cloudfront.net/spark-1.6.1-bin-hadoop2.6.tgz -o spark-1.6.1-bin-hadoop2.6.tgz</span><br><span class="line">tar -zxvf spark-1.6.1-bin-hadoop2.6.tgz</span><br><span class="line">mv spark-1.6.1-bin-hadoop2.6 /usr/<span class="built_in">local</span>/bigdata/spark</span><br><span class="line"><span class="comment"># 下載並部署cassandra</span></span><br><span class="line">curl -v -j -k -L http://apache.stu.edu.tw/cassandra/2.2.7/apache-cassandra-2.2.7-bin.tar.gz -o apache-cassandra-2.2.7-bin.tar.gz</span><br><span class="line">tar -zxvf apache-cassandra-2.2.7-bin.tar.gz</span><br><span class="line">mv apache-cassandra-2.2.7 /usr/<span class="built_in">local</span>/bigdata/cassandra</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果不是VM，實體可以一台下載之後用scp</span></span><br><span class="line"><span class="comment"># scp -r /usr/local/bigdata/* tester@cassSpark2:/usr/local/bigdata</span></span><br><span class="line"><span class="comment"># scp -r /usr/local/bigdata/* tester@cassSpark3:/usr/local/bigdata</span></span><br></pre></td></tr></table></figure>

<p>ii. 環境變數設置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo tee -a /etc/bashrc &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line"><span class="comment"># JAVA</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/java/jdk1.8.0_101</span><br><span class="line"><span class="comment"># SCALA</span></span><br><span class="line"><span class="built_in">export</span> SCALA_HOME=/usr/<span class="built_in">local</span>/scala/scala-2.10</span><br><span class="line"><span class="comment"># SPARK</span></span><br><span class="line"><span class="built_in">export</span> SPARK_HOME=/usr/<span class="built_in">local</span>/bigdata/spark</span><br><span class="line"><span class="comment"># CASSANDRA</span></span><br><span class="line"><span class="built_in">export</span> CASSANDRA_HOME=/usr/<span class="built_in">local</span>/bigdata/cassandra</span><br><span class="line"><span class="comment"># PATH</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>:<span class="variable">$SPARK_HOME</span>/bin:<span class="variable">$SPARK_HOME</span>/sbin:<span class="variable">$CASSANDRA_HOME</span>/bin</span><br><span class="line">EOF</span><br><span class="line"><span class="built_in">source</span> /etc/bashrc</span><br></pre></td></tr></table></figure>

<p>iii. 配置scala and spark</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 複製hadoop的slaves</span></span><br><span class="line">tee <span class="variable">$SPARK_HOME</span>/conf/slaves &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">cassSpark1</span><br><span class="line">cassSpark2</span><br><span class="line">cassSpark3</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 複製檔案</span></span><br><span class="line">cp <span class="variable">$SPARK_HOME</span>/conf/spark-env.sh.template <span class="variable">$SPARK_HOME</span>/conf/spark-env.sh</span><br><span class="line">cp <span class="variable">$SPARK_HOME</span>/conf/log4j.properties.template <span class="variable">$SPARK_HOME</span>/conf/log4j.properties</span><br><span class="line">cp <span class="variable">$SPARK_HOME</span>/conf/spark-defaults.conf.template <span class="variable">$SPARK_HOME</span>/conf/spark-defaults.conf</span><br><span class="line"><span class="comment"># 傳入設定</span></span><br><span class="line">tee -a <span class="variable">$SPARK_HOME</span>/conf/spark-env.sh &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">SPARK_MASTER_IP=cassSpark1</span><br><span class="line">SPARK_LOCAL_DIRS=/usr/<span class="built_in">local</span>/bigdata/spark</span><br><span class="line">SPARK_DRIVER_MEMORY=3G</span><br><span class="line">SPARK_WORKER_CORES=2</span><br><span class="line">SPARK_WORKER_MEMORY=3g</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># download dependencies of spark-cassandra-connector</span></span><br><span class="line">mkdir <span class="variable">$SPARK_HOME</span>/extraClass</span><br><span class="line"></span><br><span class="line">curl -v -j -k -L http://search.maven.org/remotecontent?filepath=org/apache/ivy/ivy/2.4.0/ivy-2.4.0.jar -o ivy-2.4.0.jar</span><br><span class="line">curl -v -j -k -L http://search.maven.org/remotecontent?filepath=org/apache/ivy/ivy/2.4.0/ivy-2.4.0.jar -o ivy-2.4.0.jar</span><br><span class="line">curl -v -j -k -L http://search.maven.org/remotecontent?filepath=com/datastax/spark/spark-cassandra-connector_2.10/1.6.0/spark-cassandra-connector_2.10-1.6.0.jar  -o spark-cassandra-connector_2.10-1.6.0.jar</span><br><span class="line"><span class="comment"># remove spark-related jar</span></span><br><span class="line">rm spark-catalyst_2.10-1.6.1.jar</span><br><span class="line">rm spark-core_2.10-1.6.1.jar</span><br><span class="line">rm spark-hive_2.10-1.6.1.jar</span><br><span class="line">rm spark-launcher_2.10-1.6.1.jar</span><br><span class="line">rm spark-network-common_2.10-1.6.1.jar</span><br><span class="line">rm spark-network-shuffle_2.10-1.6.1.jar</span><br><span class="line">rm spark-sql_2.10-1.6.1.jar</span><br><span class="line">rm spark-streaming_2.10-1.6.1.jar</span><br><span class="line">rm spark-unsafe_2.10-1.6.1.jar</span><br><span class="line">rm datanucleus-*</span><br><span class="line"></span><br><span class="line">java -jar ivy-2.3.0.jar -dependency com.datastax.cassandra spark-cassandra-connector_2.10 1.6.0 -retrieve <span class="string">&quot;[artifact]-[revision](-[classifier]).[ext]&quot;</span></span><br><span class="line">rm -f *-&#123;sources,javadoc&#125;.jar</span><br><span class="line"></span><br><span class="line"><span class="comment"># add jars to spark-defaults.conf</span></span><br><span class="line">jarsToImport=$(<span class="built_in">echo</span> <span class="variable">$SPARK_HOME</span>/extraClass/*.jar | sed <span class="string">&#x27;s/ /:/g&#x27;</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;spark.executor.extraClassPath <span class="variable">$jarsToImport</span>&quot;</span> &gt;&gt; <span class="variable">$SPARK_HOME</span>/conf/spark-defaults.conf</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;spark.driver.extraClassPath <span class="variable">$jarsToImport</span>&quot;</span> &gt;&gt; <span class="variable">$SPARK_HOME</span>/conf/spark-defaults.conf</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;spark.driver.extraLibraryPath <span class="variable">$SPARK_HOME</span>/extraClass&quot;</span> &gt;&gt; <span class="variable">$SPARK_HOME</span>/conf/spark-defaults.conf</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;spark.executor.extraLibraryPath <span class="variable">$SPARK_HOME</span>/extraClass&quot;</span> &gt;&gt; <span class="variable">$SPARK_HOME</span>/conf/spark-defaults.conf</span><br><span class="line">jarsToImport2=$(<span class="built_in">echo</span> <span class="variable">$SPARK_HOME</span>/extraClass/*.jar | sed <span class="string">&#x27;s/ /,/g&#x27;</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;spark.jars <span class="variable">$jarsToImport2</span>&quot;</span> &gt;&gt; <span class="variable">$SPARK_HOME</span>/conf/spark-defaults.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 複製到各台</span></span><br><span class="line">scp -r /usr/<span class="built_in">local</span>/bigdata/spark tester@cassSpark2:/usr/<span class="built_in">local</span>/bigdata</span><br><span class="line">scp -r /usr/<span class="built_in">local</span>/bigdata/spark tester@cassSpark3:/usr/<span class="built_in">local</span>/bigdata</span><br></pre></td></tr></table></figure>

<p>iv. slaves的部署</p>
<p>因為是VM，所以剩下的就是把映像檔clone複製成各個nodes，然後針對需要個別配置的地方做配置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 改hostname</span></span><br><span class="line">sudo vi /etc/hostname</span><br><span class="line"><span class="comment"># 改網路設定</span></span><br><span class="line">sudo vi /etc/sysconfig/network-scripts/ifcfg-eno16777736</span><br><span class="line"><span class="comment"># 配置玩各台電腦，並透過`sudo service network restart`重啟網路服務後</span></span><br><span class="line"><span class="comment"># 生成新的SSH key</span></span><br><span class="line">ssh-keygen -t rsa -P <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment"># 在sparkServer0，把他的ssh key傳到各台電腦去</span></span><br><span class="line">tee run.sh &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> hostname <span class="keyword">in</span> `cat <span class="variable">$SPARK_HOME</span>/conf/slaves`; <span class="keyword">do</span></span><br><span class="line">  ssh-copy-id -i ~/.ssh/id_rsa.pub <span class="variable">$hostname</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">EOF</span><br><span class="line">bash ./run.sh</span><br></pre></td></tr></table></figure>

<p>v. 設置Cassandra</p>
<p>使用<code>vi $CASSANDRA_HOME/conf/cassandra.yaml</code>去改設定檔，改的部分如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># first place:</span></span><br><span class="line"><span class="attr">cluster_name:</span> <span class="string">&#x27;cassSparkServer&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># second place:</span></span><br><span class="line"><span class="attr">seed_provider:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">class_name:</span> <span class="string">org.apache.cassandra.locator.SimpleSeedProvider</span></span><br><span class="line">      <span class="attr">parameters:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">seeds:</span> <span class="string">&quot;192.168.0.121,192.168.0.122,192.168.0.123&quot;</span></span><br><span class="line">          </span><br><span class="line"><span class="comment"># third place:</span></span><br><span class="line"><span class="attr">listen_address:</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.121</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># fourth place:</span></span><br><span class="line"><span class="attr">rpc_address:</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.121</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># fifth place:</span></span><br><span class="line"><span class="attr">endpoint_snitch:</span> <span class="string">GossipingPropertyFileSnitch</span></span><br></pre></td></tr></table></figure>

<p>設置多台的做法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">scp -rp $CASSANDRA_HOME&#x2F;* tester@cassSpark2:&#x2F;usr&#x2F;local&#x2F;bigdata&#x2F;cassandra</span><br><span class="line">scp -rp $CASSANDRA_HOME&#x2F;* tester@cassSpark3:&#x2F;usr&#x2F;local&#x2F;bigdata&#x2F;cassandra</span><br><span class="line">ssh tester@cassSpark2 &quot;sed -i -e &#39;s&#x2F;: 192.168.0.121&#x2F;: 192.168.0.122&#x2F;g&#39; &#x2F;usr&#x2F;local&#x2F;bigdata&#x2F;cassandra&#x2F;conf&#x2F;cassandra.yaml&quot;</span><br><span class="line">ssh tester@cassSpark3 &quot;sed -i -e &#39;s&#x2F;: 192.168.0.121&#x2F;: 192.168.0.123&#x2F;g&#39; &#x2F;usr&#x2F;local&#x2F;bigdata&#x2F;cassandra&#x2F;conf&#x2F;cassandra.yaml&quot;</span><br></pre></td></tr></table></figure>

<p>vi. 設置Cassandra自動開機啟動</p>
<p>開機自動啟動Cassandra的script(用<code>sudo vi /etc/init.d/cassandra</code>去create)：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># chkconfig: - 79 01</span></span><br><span class="line"><span class="comment"># description: Cassandra</span></span><br><span class="line"></span><br><span class="line">. /etc/rc.d/init.d/<span class="built_in">functions</span></span><br><span class="line"></span><br><span class="line">CASSANDRA_HOME=/usr/<span class="built_in">local</span>/bigdata/cassandra</span><br><span class="line">CASSANDRA_BIN=<span class="variable">$CASSANDRA_HOME</span>/bin/cassandra</span><br><span class="line">CASSANDRA_NODETOOL=<span class="variable">$CASSANDRA_HOME</span>/bin/nodetool</span><br><span class="line">CASSANDRA_LOG=<span class="variable">$CASSANDRA_HOME</span>/logs/cassandra.log</span><br><span class="line">CASSANDRA_PID=/var/run/cassandra.pid</span><br><span class="line">CASSANDRA_LOCK=/var/lock/subsys/cassandra</span><br><span class="line">PROGRAM=<span class="string">&quot;cassandra&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! -f <span class="variable">$CASSANDRA_BIN</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;File not found: <span class="variable">$CASSANDRA_BIN</span>&quot;</span></span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">RETVAL=0</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">start</span></span>() &#123;</span><br><span class="line">  <span class="keyword">if</span> [ -f <span class="variable">$CASSANDRA_PID</span> ] &amp;&amp; checkpid `cat <span class="variable">$CASSANDRA_PID</span>`; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Cassandra is already running.&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 0</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">  <span class="built_in">echo</span> -n $<span class="string">&quot;Starting <span class="variable">$PROGRAM</span>: &quot;</span></span><br><span class="line">  daemon <span class="variable">$CASSANDRA_BIN</span> -p <span class="variable">$CASSANDRA_PID</span> &gt;&gt; <span class="variable">$CASSANDRA_LOG</span> 2&gt;&amp;1</span><br><span class="line">  usleep 500000</span><br><span class="line">  RETVAL=$?</span><br><span class="line">  <span class="keyword">if</span> [ <span class="variable">$RETVAL</span> -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">    touch <span class="variable">$CASSANDRA_LOCK</span></span><br><span class="line">    echo_success</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    echo_failure</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">  <span class="built_in">echo</span></span><br><span class="line">  <span class="built_in">return</span> <span class="variable">$RETVAL</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">stop</span></span>() &#123;</span><br><span class="line">  <span class="keyword">if</span> [ ! -f <span class="variable">$CASSANDRA_PID</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Cassandra is already stopped.&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 0</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">  <span class="built_in">echo</span> -n $<span class="string">&quot;Stopping <span class="variable">$PROGRAM</span>: &quot;</span></span><br><span class="line">  <span class="variable">$CASSANDRA_NODETOOL</span> -h 127.0.0.1 decommission</span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">kill</span> `cat <span class="variable">$CASSANDRA_PID</span>`; <span class="keyword">then</span></span><br><span class="line">    RETVAL=0</span><br><span class="line">    rm -f <span class="variable">$CASSANDRA_LOCK</span></span><br><span class="line">    echo_success</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    RETVAL=1</span><br><span class="line">    echo_failure</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">  <span class="built_in">echo</span></span><br><span class="line">  [ <span class="variable">$RETVAL</span> = 0 ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">status_fn</span></span>() &#123;</span><br><span class="line">  <span class="keyword">if</span> [ -f <span class="variable">$CASSANDRA_PID</span> ] &amp;&amp; checkpid `cat <span class="variable">$CASSANDRA_PID</span>`; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Cassandra is running.&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 0</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Cassandra is stopped.&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">  start)</span><br><span class="line">    start</span><br><span class="line">    ;;</span><br><span class="line">  stop)</span><br><span class="line">    stop</span><br><span class="line">    ;;</span><br><span class="line">  status)</span><br><span class="line">    status_fn</span><br><span class="line">    ;;</span><br><span class="line">  restart)</span><br><span class="line">    stop</span><br><span class="line">    start</span><br><span class="line">    ;;</span><br><span class="line">  *)</span><br><span class="line">    <span class="built_in">echo</span> $<span class="string">&quot;Usage: <span class="variable">$PROGRAM</span> &#123;start|stop|restart|status&#125;&quot;</span></span><br><span class="line">    RETVAL=3</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span> <span class="variable">$RETVAL</span></span><br></pre></td></tr></table></figure>

<p>然後使用下面指令讓這個script能夠自動跑：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo chmod +x /etc/init.d/cassandra</span><br><span class="line">sudo chkconfig --add cassandra</span><br><span class="line">sudo service cassandra start</span><br></pre></td></tr></table></figure>

<p>接著用<code>nodetool status</code>可以確定一下是不是都有跑起來，顯示資訊如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nodetool status</span><br><span class="line"><span class="comment"># Datacenter: dc1</span></span><br><span class="line"><span class="comment"># ===============</span></span><br><span class="line"><span class="comment"># Status=Up/Down</span></span><br><span class="line"><span class="comment"># |/ State=Normal/Leaving/Joining/Moving</span></span><br><span class="line"><span class="comment"># --  Address        Load       Tokens       Owns (effective)  Host ID                               Rack</span></span><br><span class="line"><span class="comment"># UN  192.168.0.121  202.17 KB  256          66.7%             265daa7e-8039-46f4-842e-4255ec18be19  rack1</span></span><br><span class="line"><span class="comment"># UN  192.168.0.122  185.65 KB  256          66.4%             0fed9978-0097-417c-b0a8-dcd7be2b2c10  rack1</span></span><br><span class="line"><span class="comment"># UN  192.168.0.123  207.79 KB  256          66.9%             cf7b47b3-5d50-444e-99b4-843f9a5dadb2  rack1</span></span><br></pre></td></tr></table></figure>

<p>vii. 設置spark自動開機</p>
<p>在spark的master (你的User跟Group那裏記得要修改):</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo tee -a &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;multi-user.target.wants&#x2F;spark-master.service &lt;&lt; &quot;EOF&quot;</span><br><span class="line">[Unit]</span><br><span class="line">Description&#x3D;Spark Master</span><br><span class="line">After&#x3D;network.target</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">Type&#x3D;forking</span><br><span class="line">User&#x3D;tester</span><br><span class="line">Group&#x3D;tester</span><br><span class="line">ExecStart&#x3D;&#x2F;usr&#x2F;local&#x2F;bigdata&#x2F;spark&#x2F;sbin&#x2F;start-master.sh</span><br><span class="line">StandardOutput&#x3D;journal</span><br><span class="line">StandardError&#x3D;journal</span><br><span class="line">LimitNOFILE&#x3D;infinity</span><br><span class="line">LimitMEMLOCK&#x3D;infinity</span><br><span class="line">LimitNPROC&#x3D;infinity</span><br><span class="line">LimitAS&#x3D;infinity</span><br><span class="line"> </span><br><span class="line">[Install]</span><br><span class="line">WantedBy&#x3D;multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<p>在spark的master跟slaves:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo tee -a &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;multi-user.target.wants&#x2F;spark-slave.service &lt;&lt; &quot;EOF&quot;</span><br><span class="line">[Unit]</span><br><span class="line">Description&#x3D;Spark Slave</span><br><span class="line">After&#x3D;network.target</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">Type&#x3D;forking</span><br><span class="line">User&#x3D;tester</span><br><span class="line">Group&#x3D;tester</span><br><span class="line">ExecStart&#x3D;&#x2F;usr&#x2F;local&#x2F;bigdata&#x2F;spark&#x2F;sbin&#x2F;start-slave.sh spark:&#x2F;&#x2F;cassSpark1:7077</span><br><span class="line">StandardOutput&#x3D;journal</span><br><span class="line">StandardError&#x3D;journal</span><br><span class="line">LimitNOFILE&#x3D;infinity</span><br><span class="line">LimitMEMLOCK&#x3D;infinity</span><br><span class="line">LimitNPROC&#x3D;infinity</span><br><span class="line">LimitAS&#x3D;infinity</span><br><span class="line">CPUAccounting&#x3D;true</span><br><span class="line">CPUShares&#x3D;100</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy&#x3D;multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<p>然後全部node執行<code>sudo systemctl daemon-reload</code></p>
<p>master執行<code>sudo systemctl start spark-master.service</code></p>
<p>master跟slave都執行<code>sudo systemctl start spark-slave.service</code></p>
<ol start="3">
<li>測試</li>
</ol>
<p>用<code>cqlsh cassSpark1</code>登入CQL介面</p>
<p>用下面指令去創測試資料：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> KEYSPACE <span class="keyword">test</span> <span class="keyword">WITH</span> <span class="keyword">replication</span> = &#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;SimpleStrategy&#x27;</span>, <span class="string">&#x27;replication_factor&#x27;</span>: <span class="number">3</span> &#125;;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> test.kv(<span class="keyword">key</span> <span class="built_in">text</span> PRIMARY <span class="keyword">KEY</span>, <span class="keyword">value</span> <span class="built_in">int</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test.kv(<span class="keyword">key</span>, <span class="keyword">value</span>) <span class="keyword">VALUES</span> (<span class="string">&#x27;key1&#x27;</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test.kv(<span class="keyword">key</span>, <span class="keyword">value</span>) <span class="keyword">VALUES</span> (<span class="string">&#x27;key2&#x27;</span>, <span class="number">2</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test.kv(<span class="keyword">key</span>, <span class="keyword">value</span>) <span class="keyword">VALUES</span> (<span class="string">&#x27;key3&#x27;</span>, <span class="number">11</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test.kv(<span class="keyword">key</span>, <span class="keyword">value</span>) <span class="keyword">VALUES</span> (<span class="string">&#x27;key4&#x27;</span>, <span class="number">25</span>);</span><br></pre></td></tr></table></figure>

<p>然後用<code>spark-shell</code>打開spark的shell</p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line">sc.stop()</span><br><span class="line"><span class="keyword">import</span> com.datastax.spark.connector._, org.apache.spark.<span class="type">SparkContext</span>, org.apache.spark.<span class="type">SparkContext</span>._, org.apache.spark.<span class="type">SparkConf</span></span><br><span class="line"><span class="keyword">val</span> conf = <span class="keyword">new</span> <span class="type">SparkConf</span>(<span class="literal">true</span>).set(<span class="string">&quot;spark.cassandra.connection.host&quot;</span>, <span class="string">&quot;192.168.0.121&quot;</span>)</span><br><span class="line"><span class="keyword">val</span> sc = <span class="keyword">new</span> <span class="type">SparkContext</span>(conf)</span><br><span class="line"><span class="keyword">val</span> rdd = sc.cassandraTable(<span class="string">&quot;test&quot;</span>, <span class="string">&quot;kv&quot;</span>)</span><br><span class="line">println(rdd.first)</span><br><span class="line"><span class="comment">// CassandraRow&#123;key: key4, value: 25&#125;</span></span><br><span class="line">println(rdd.map(_.getInt(<span class="string">&quot;value&quot;</span>)).sum) <span class="comment">// 39.0</span></span><br><span class="line"><span class="keyword">val</span> collection = sc.parallelize(<span class="type">Seq</span>((<span class="string">&quot;key5&quot;</span>, <span class="number">38</span>), (<span class="string">&quot;key6&quot;</span>, <span class="number">5</span>)))</span><br><span class="line"><span class="comment">// save new data into cassandra</span></span><br><span class="line">collection.saveToCassandra(<span class="string">&quot;test&quot;</span>, <span class="string">&quot;kv&quot;</span>, <span class="type">SomeColumns</span>(<span class="string">&quot;key&quot;</span>, <span class="string">&quot;value&quot;</span>))</span><br><span class="line">sc.stop()</span><br><span class="line">:quit</span><br></pre></td></tr></table></figure>

<p>用<code>cqlsh cassSpark1</code>登入CQL，去看剛剛塞進去的資料</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">USE</span> <span class="keyword">test</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> kv;</span><br><span class="line"><span class="comment">#  key   | value</span></span><br><span class="line"><span class="comment"># -------+-------</span></span><br><span class="line"><span class="comment">#   key5 |    38</span></span><br><span class="line"><span class="comment">#   key6 |     5</span></span><br><span class="line"><span class="comment">#   key1 |     1</span></span><br><span class="line"><span class="comment">#   key4 |    25</span></span><br><span class="line"><span class="comment">#   key3 |    11</span></span><br><span class="line"><span class="comment">#   key2 |     2</span></span><br></pre></td></tr></table></figure>

<p>根據我自己的測試，要用spark-submit才能在remote cluster上run</p>
<p>Intellij的application不能直接跑，所以先用intellij的SBT Task: package</p>
<p>會在專案目錄/target/scala-2.10下面產生一個jar檔，我這裡是<code>test_cassspark_2.10-1.0.jar</code></p>
<p>把這個jar上傳到cluster上，然後用下面指令就可以成功運行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">spark-submit --class cassSpark test_cassspark_2.10-1.0.jar --master spark://192.168.0.121:7077</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>Ref<ol>
<li><a href="https://github.com/datastax/spark-cassandra-connector/blob/master/doc/0_quick_start.md">https://github.com/datastax/spark-cassandra-connector/blob/master/doc/0_quick_start.md</a></li>
<li><a href="https://tobert.github.io/post/2014-07-15-installing-cassandra-spark-stack.html">https://tobert.github.io/post/2014-07-15-installing-cassandra-spark-stack.html</a></li>
</ol>
</li>
</ol>
]]></content>
      <categories>
        <category>BigData</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>Cassandra</tag>
        <tag>Spark</tag>
      </tags>
  </entry>
  <entry>
    <title>用Nexus建立本地maven倉庫</title>
    <url>/posts/201608/2016-08-10-nexus-local-maven-repository.html</url>
    <content><![CDATA[<p>sbt每次撈maven跟sbt相關的套件時</p>
<p>都會花很多時間，如果能夠透過本地proxy去降低時間就好了</p>
<p>或是在公司內部網路無法access到外部網路時</p>
<p>就能夠透過proxy去處理這類問題</p>
<p>此時，簡單易用的Nexus就提供很好的協助</p>
<a id="more"></a>

<p>安裝很簡單，只需要到<a href="http://www.sonatype.com/download-oss-sonatype?__hssc=31049440.4.1471001289156&__hstc=31049440.ab44c999338fa3bd70ea922bfa73b935.1470829351372.1470829351372.1471001289156.2&__hsfp=203408250&hsCtaTracking=43e2beb1-4cb4-42e4-b2d8-9bb4edf0493b%7C7c6988c8-ca35-42d0-b585-ae5147f27d5b">官網</a>下載</p>
<p>然後電腦裝有Java就可以跑了</p>
<p>我自己是下載2.13的版本，下載之後，解壓縮放到<code>C:\</code>下面</p>
<p>此處路徑假設是<code>C:\nexus-2.13.0-01</code>，按開始搜尋cmd，對cmd.exe點右鍵</p>
<p>以系統管理員身分開啟，鍵入<code>cd C:\nexus-2.13.0-01\bin</code></p>
<p>接著，打<code>nexus.bat install</code>進行安裝，再用<code>nexus.bat start</code>運行Nexus</p>
<p>在瀏覽器上打<code>http:\\localhost:8081\nexus</code>就可以成功進入到configuration的網頁了</p>
<p>右上角log in，帳號密碼為admin/admin123</p>
<p>至於設置方式，這部分也很簡單</p>
<p>在左邊Views/Repositories下面的Repositories裡面</p>
<p>按下<code>Add...</code>新增<code>Proxy Repository</code></p>
<p>Repository ID/Repository Name都隨便你打</p>
<p>Remote Storage Location就輸入你要的倉庫</p>
<p>這裡列舉一些我用到的：</p>
<ol>
<li><a href="http://repo2.maven.org/maven2/">http://repo2.maven.org/maven2/</a></li>
<li><a href="http://repository.jboss.com/maven2/">http://repository.jboss.com/maven2/</a></li>
<li><a href="http://dl.bintray.com/sbt/sbt-plugin-releases/">http://dl.bintray.com/sbt/sbt-plugin-releases/</a></li>
<li><a href="http://repo.typesafe.com/typesafe/ivy-releases/">http://repo.typesafe.com/typesafe/ivy-releases/</a></li>
</ol>
<p>建好之後，要為ivy另外建一個Repository Group</p>
<p>一樣是Add..然後Repository Group，Key上ID跟Name</p>
<p>把typesafe跟sbt那兩個放進去</p>
<p>至於repo2跟maven2放到public跟maven的central repo一起即可</p>
<p>最後，要在本地端使用，就要到<code>~/.sbt</code>下，去新增/修改repositories</p>
<p>內容是：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[repositories]</span><br><span class="line"></span><br><span class="line">  <span class="built_in">local</span></span><br><span class="line"></span><br><span class="line">  my-ivy-proxy-releases: http://localhost:8081/nexus/content/groups/ivy/, [organization]/[module]/(scala_[scalaVersion]/)(sbt_[sbtVersion]/)[revision]/[<span class="built_in">type</span>]s/[artifact](-[classifier]).[ext]</span><br><span class="line"></span><br><span class="line">  my-maven-proxy-releases: http://localhost:8081/nexus/content/groups/public</span><br></pre></td></tr></table></figure>

<p>Reference:</p>
<ol>
<li><a href="http://www.coderblog.cn/server/building-maven-and-sbt-repository-using-nexus-3.0.0/">http://www.coderblog.cn/server/building-maven-and-sbt-repository-using-nexus-3.0.0/</a></li>
<li><a href="http://lab.howie.tw/2012/06/prepare-for-build-automation-install.html">http://lab.howie.tw/2012/06/prepare-for-build-automation-install.html</a></li>
<li><a href="http://shzhangji.com/blog/2014/11/07/sbt-offline/">http://shzhangji.com/blog/2014/11/07/sbt-offline/</a></li>
</ol>
]]></content>
      <categories>
        <category>BigData</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>Spark</tag>
        <tag>Maven</tag>
        <tag>sbt</tag>
        <tag>proxy</tag>
        <tag>Nexus</tag>
      </tags>
  </entry>
  <entry>
    <title>基於cassandra的spark 2.0.0環境部署 (scala 2.11)</title>
    <url>/posts/201608/2016-08-12-deployment-of-spark-2_0_0-based-on-cassandra.html</url>
    <content><![CDATA[<p>spark升級到2.0.0，等了幾天</p>
<a id="more"></a>

<p>spark-cassandra-connector終於升級到2.0.0-M1</p>
<p>就直接來嘗試重新裝一次</p>
<ol>
<li>準備工作</li>
</ol>
<p>這裡基本上跟<a href="http://chingchuan-chen.github.io/cassandra/2016/08/05/deployment-of-spark-based-on-cassandra.html">前篇</a>一樣，就不贅述了</p>
<ol start="2">
<li>開始部署</li>
</ol>
<p>i. 下載檔案並移到適當位置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mkdir /usr/<span class="built_in">local</span>/bigdata</span><br><span class="line">sudo chown -R tester /usr/<span class="built_in">local</span>/bigdata</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下載並安裝java</span></span><br><span class="line">curl -v -j -k -L -H <span class="string">&quot;Cookie: oraclelicense=accept-securebackup-cookie&quot;</span> http://download.oracle.com/otn-pub/java/jdk/8u101-b13/jdk-8u101-linux-x64.rpm -o jdk-8u101-linux-x64.rpm</span><br><span class="line">sudo yum install -y jdk-8u101-linux-x64.rpm</span><br><span class="line"><span class="comment"># 下載並部署scala</span></span><br><span class="line">curl -v -j -k -L http://downloads.lightbend.com/scala/2.11.8/scala-2.11.8.tgz -o scala-2.11.8.tgz</span><br><span class="line">tar -zxvf scala-2.11.8.tgz</span><br><span class="line">sudo mkdir /usr/<span class="built_in">local</span>/scala</span><br><span class="line">sudo mv scala-2.11.8 /usr/<span class="built_in">local</span>/scala/scala-2.11</span><br><span class="line"><span class="comment"># 下載並部署spark</span></span><br><span class="line">curl -v -j -k -L http://d3kbcqa49mib13.cloudfront.net/spark-2.0.0-bin-hadoop2.6.tgz -o spark-2.0.0-bin-hadoop2.6.tgz</span><br><span class="line">tar -zxvf spark-2.0.0-bin-hadoop2.6.tgz</span><br><span class="line">mv spark-2.0.0-bin-hadoop2.6 /usr/<span class="built_in">local</span>/bigdata/spark</span><br><span class="line"><span class="comment"># 下載並部署cassandra</span></span><br><span class="line">curl -v -j -k -L http://apache.stu.edu.tw/cassandra/2.2.7/apache-cassandra-2.2.7-bin.tar.gz -o apache-cassandra-2.2.7-bin.tar.gz</span><br><span class="line">tar -zxvf apache-cassandra-2.2.7-bin.tar.gz</span><br><span class="line">mv apache-cassandra-2.2.7 /usr/<span class="built_in">local</span>/bigdata/cassandra</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果不是VM，實體可以一台下載之後用scp</span></span><br><span class="line"><span class="comment"># scp -r /usr/local/bigdata/* tester@cassSpark2:/usr/local/bigdata</span></span><br><span class="line"><span class="comment"># scp -r /usr/local/bigdata/* tester@cassSpark3:/usr/local/bigdata</span></span><br></pre></td></tr></table></figure>

<p>ii. 環境變數設置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo tee -a /etc/bashrc &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line"><span class="comment"># JAVA</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/java/jdk1.8.0_101</span><br><span class="line"><span class="comment"># SCALA</span></span><br><span class="line"><span class="built_in">export</span> SCALA_HOME=/usr/<span class="built_in">local</span>/scala/scala-2.11</span><br><span class="line"><span class="comment"># SPARK</span></span><br><span class="line"><span class="built_in">export</span> SPARK_HOME=/usr/<span class="built_in">local</span>/bigdata/spark</span><br><span class="line"><span class="comment"># CASSANDRA</span></span><br><span class="line"><span class="built_in">export</span> CASSANDRA_HOME=/usr/<span class="built_in">local</span>/bigdata/cassandra</span><br><span class="line"><span class="comment"># PATH</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>:<span class="variable">$SPARK_HOME</span>/bin:<span class="variable">$SPARK_HOME</span>/sbin:<span class="variable">$CASSANDRA_HOME</span>/bin</span><br><span class="line">EOF</span><br><span class="line"><span class="built_in">source</span> /etc/bashrc</span><br></pre></td></tr></table></figure>

<p>iii. 配置scala and spark</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tee <span class="variable">$SPARK_HOME</span>/conf/slaves &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">cassSpark1</span><br><span class="line">cassSpark2</span><br><span class="line">cassSpark3</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 複製檔案</span></span><br><span class="line">cp <span class="variable">$SPARK_HOME</span>/conf/spark-env.sh.template <span class="variable">$SPARK_HOME</span>/conf/spark-env.sh</span><br><span class="line">cp <span class="variable">$SPARK_HOME</span>/conf/log4j.properties.template <span class="variable">$SPARK_HOME</span>/conf/log4j.properties</span><br><span class="line">cp <span class="variable">$SPARK_HOME</span>/conf/spark-defaults.conf.template <span class="variable">$SPARK_HOME</span>/conf/spark-defaults.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 傳入設定</span></span><br><span class="line">tee -a <span class="variable">$SPARK_HOME</span>/conf/spark-env.sh &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">SPARK_MASTER_IP=cassSpark1</span><br><span class="line">SPARK_LOCAL_DIRS=/usr/<span class="built_in">local</span>/bigdata/spark</span><br><span class="line">SPARK_SCALA_VERSION=2.11</span><br><span class="line">SPARK_DRIVER_MEMORY=3G</span><br><span class="line">SPARK_WORKER_CORES=2</span><br><span class="line">SPARK_WORKER_MEMORY=3g</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># install sbt and git </span></span><br><span class="line">sudo yum install sbt git-core</span><br><span class="line"></span><br><span class="line"><span class="comment"># clone spark-cassandra-connector</span></span><br><span class="line">git <span class="built_in">clone</span> git@github.com:datastax/spark-cassandra-connector.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># compile assembly jar</span></span><br><span class="line"><span class="built_in">cd</span> spark-cassandra-connector</span><br><span class="line">rm -r spark-cassandra-connector-perf</span><br><span class="line">sbt -Dscala-2.11=<span class="literal">true</span> assembly</span><br><span class="line"></span><br><span class="line"><span class="comment"># copy jar to spark</span></span><br><span class="line">mkdir <span class="variable">$SPARK_HOME</span>/extraClass</span><br><span class="line">cp spark-cassandra-connector/target/scala-2.11/spark-cassandra-connector-assembly-2.0.0-M1-2-g70018a6.jar <span class="variable">$SPARK_HOME</span>/extraClass</span><br><span class="line"></span><br><span class="line">tee -a <span class="variable">$SPARK_HOME</span>/conf/spark-defaults.conf &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">spark.driver.extraClassPath /usr/<span class="built_in">local</span>/bigdata/spark/extraClass/spark-cassandra-connector-assembly-2.0.0-M1.jar</span><br><span class="line">spark.driver.extraLibraryPath /usr/<span class="built_in">local</span>/bigdata/spark/extraClass</span><br><span class="line">spark.executor.extraClassPath /usr/<span class="built_in">local</span>/bigdata/spark/extraClass/spark-cassandra-connector-assembly-2.0.0-M1.jar</span><br><span class="line">spark.executor.extraLibraryPath /usr/<span class="built_in">local</span>/bigdata/spark/extraClass</span><br><span class="line">spark.jars /usr/<span class="built_in">local</span>/bigdata/spark/extraClass/spark-cassandra-connector-assembly-2.0.0-M1.jar</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 複製到各台</span></span><br><span class="line">scp -r /usr/<span class="built_in">local</span>/bigdata/spark tester@cassSpark2:/usr/<span class="built_in">local</span>/bigdata</span><br><span class="line">scp -r /usr/<span class="built_in">local</span>/bigdata/spark tester@cassSpark3:/usr/<span class="built_in">local</span>/bigdata</span><br></pre></td></tr></table></figure>

<p>slaves的部署、cassandra的設置跟自動啟動部分就都一樣，此處也跳過，直接進測試</p>
<ol start="3">
<li>測試</li>
</ol>
<p>用<code>cqlsh cassSpark1</code>登入CQL介面</p>
<p>用下面指令去創測試資料：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> KEYSPACE <span class="keyword">test</span> <span class="keyword">WITH</span> <span class="keyword">replication</span> = &#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;SimpleStrategy&#x27;</span>, <span class="string">&#x27;replication_factor&#x27;</span>: <span class="number">3</span> &#125;;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> test.kv(<span class="keyword">key</span> <span class="built_in">text</span> PRIMARY <span class="keyword">KEY</span>, <span class="keyword">value</span> <span class="built_in">int</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test.kv(<span class="keyword">key</span>, <span class="keyword">value</span>) <span class="keyword">VALUES</span> (<span class="string">&#x27;key1&#x27;</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test.kv(<span class="keyword">key</span>, <span class="keyword">value</span>) <span class="keyword">VALUES</span> (<span class="string">&#x27;key2&#x27;</span>, <span class="number">2</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test.kv(<span class="keyword">key</span>, <span class="keyword">value</span>) <span class="keyword">VALUES</span> (<span class="string">&#x27;key3&#x27;</span>, <span class="number">11</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test.kv(<span class="keyword">key</span>, <span class="keyword">value</span>) <span class="keyword">VALUES</span> (<span class="string">&#x27;key4&#x27;</span>, <span class="number">25</span>);</span><br></pre></td></tr></table></figure>

<p>然後用<code>spark-shell</code>打開spark的shell</p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line">sc.stop()</span><br><span class="line"><span class="keyword">import</span> com.datastax.spark.connector._, org.apache.spark.<span class="type">SparkContext</span>, org.apache.spark.<span class="type">SparkContext</span>._, org.apache.spark.<span class="type">SparkConf</span></span><br><span class="line"><span class="keyword">val</span> conf = <span class="keyword">new</span> <span class="type">SparkConf</span>(<span class="literal">true</span>).set(<span class="string">&quot;spark.cassandra.connection.host&quot;</span>, <span class="string">&quot;192.168.0.121&quot;</span>)</span><br><span class="line"><span class="keyword">val</span> sc = <span class="keyword">new</span> <span class="type">SparkContext</span>(conf)</span><br><span class="line"><span class="keyword">val</span> rdd = sc.cassandraTable(<span class="string">&quot;test&quot;</span>, <span class="string">&quot;kv&quot;</span>)</span><br><span class="line">println(rdd.first)</span><br><span class="line"><span class="comment">// CassandraRow&#123;key: key4, value: 25&#125;</span></span><br><span class="line">println(rdd.map(_.getInt(<span class="string">&quot;value&quot;</span>)).sum) <span class="comment">// 39.0</span></span><br><span class="line"><span class="keyword">val</span> collection = sc.parallelize(<span class="type">Seq</span>((<span class="string">&quot;key5&quot;</span>, <span class="number">38</span>), (<span class="string">&quot;key6&quot;</span>, <span class="number">5</span>)))</span><br><span class="line"><span class="comment">// save new data into cassandra</span></span><br><span class="line">collection.saveToCassandra(<span class="string">&quot;test&quot;</span>, <span class="string">&quot;kv&quot;</span>, <span class="type">SomeColumns</span>(<span class="string">&quot;key&quot;</span>, <span class="string">&quot;value&quot;</span>))</span><br><span class="line">sc.stop()</span><br><span class="line">:quit</span><br></pre></td></tr></table></figure>

<p>用<code>cqlsh cassSpark1</code>登入CQL，去看剛剛塞進去的資料</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">USE</span> <span class="keyword">test</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> kv;</span><br><span class="line"><span class="comment">#  key   | value</span></span><br><span class="line"><span class="comment"># -------+-------</span></span><br><span class="line"><span class="comment">#   key5 |    38</span></span><br><span class="line"><span class="comment">#   key6 |     5</span></span><br><span class="line"><span class="comment">#   key1 |     1</span></span><br><span class="line"><span class="comment">#   key4 |    25</span></span><br><span class="line"><span class="comment">#   key3 |    11</span></span><br><span class="line"><span class="comment">#   key2 |     2</span></span><br></pre></td></tr></table></figure>

<p>根據我自己的測試，要用spark-submit才能在remote cluster上run</p>
<p>Intellij的application不能直接跑，所以先用intellij的SBT Task: package (scala SDK用2.11.8)</p>
<p>會在專案目錄/target/scala-2.11下面產生一個jar檔，我這裡是<code>test_cassspark_2.11-1.0.jar</code></p>
<p>把這個jar上傳到cluster上，然後用下面指令就可以成功運行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">spark-submit --class cassSpark test_cassspark_2.11-1.0.jar</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>Ref<ol>
<li><a href="https://github.com/datastax/spark-cassandra-connector/blob/master/doc/0_quick_start.md">https://github.com/datastax/spark-cassandra-connector/blob/master/doc/0_quick_start.md</a></li>
<li><a href="https://tobert.github.io/post/2014-07-15-installing-cassandra-spark-stack.html">https://tobert.github.io/post/2014-07-15-installing-cassandra-spark-stack.html</a></li>
</ol>
</li>
</ol>
]]></content>
      <categories>
        <category>BigData</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>Cassandra</tag>
        <tag>Spark</tag>
        <tag>Mesos</tag>
        <tag>Scala</tag>
      </tags>
  </entry>
  <entry>
    <title>使用scala透過sparkSQL去搬移Oracle DB的資料到Cassandra上</title>
    <url>/posts/201608/2016-08-13-use-scala-migrate-oracle-data-to-cassandra-through-sparksql.html</url>
    <content><![CDATA[<p>這篇主要有兩個目的：</p>
<ol>
<li><p>幫ROracle澄清其實沒那麼難用，只是要把table name跟column name都轉成大寫，就不會有double quote了</p>
</li>
<li><p>在scala用sparkSQL連ojdbc7，把Oracle資料拉出來，再透過spark-cassandra-connector把資料倒進Cassandra</p>
</li>
</ol>
<a id="more"></a>

<p>ROracle安裝部分請參考<a href="http://chingchuan-chen.github.io/oracle/2016/07/25/use-ROracle-to-manipulate-oracle-database-in-R.html">這篇</a></p>
<p>在server使用<code>$ORACLE_HOME/bin/sqlplus system/password@oracleServer:1521/orcl</code>登入</p>
<p>透過sqlplus在Oracle server上創新的user，其SQL如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLESPACE</span> testuser</span><br><span class="line">  <span class="keyword">DATAFILE</span> <span class="string">&#x27;testuser.dat&#x27;</span></span><br><span class="line">  <span class="keyword">SIZE</span> <span class="number">40</span>M <span class="keyword">REUSE</span> <span class="keyword">AUTOEXTEND</span> <span class="keyword">ON</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TEMPORARY</span> <span class="keyword">TABLESPACE</span> testuser_tmp</span><br><span class="line">  TEMPFILE <span class="string">&#x27;testuser_tmp.dbf&#x27;</span></span><br><span class="line">  <span class="keyword">SIZE</span> <span class="number">10</span>M <span class="keyword">REUSE</span> <span class="keyword">AUTOEXTEND</span> <span class="keyword">ON</span>;</span><br><span class="line">  </span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> C<span class="comment">##testuser</span></span><br><span class="line"><span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> testuser</span><br><span class="line"><span class="keyword">DEFAULT</span> <span class="keyword">TABLESPACE</span> testuser</span><br><span class="line"><span class="keyword">TEMPORARY</span> <span class="keyword">TABLESPACE</span> testuser_tmp</span><br><span class="line"><span class="keyword">quota</span> <span class="keyword">unlimited</span> <span class="keyword">on</span> testuser;</span><br><span class="line"></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">CREATE</span> <span class="keyword">SESSION</span>,</span><br><span class="line">      <span class="keyword">CREATE</span> <span class="keyword">TABLE</span>,</span><br><span class="line">      <span class="keyword">CREATE</span> <span class="keyword">VIEW</span>,</span><br><span class="line">      <span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span></span><br><span class="line"><span class="keyword">TO</span> C<span class="comment">##testuser; </span></span><br></pre></td></tr></table></figure>

<p>我們再透過R去塞一個夠大的資料到Oracle上去，其R code如下：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(rpace)  <span class="comment"># my package (there is a big data.frame)</span></span><br><span class="line"><span class="keyword">library</span>(fasttime)</span><br><span class="line"><span class="keyword">library</span>(ROracle)</span><br><span class="line"><span class="keyword">library</span>(pipeR)</span><br><span class="line"><span class="keyword">library</span>(data.table)</span><br><span class="line">Sys.setenv(TZ = <span class="string">&quot;GMT&quot;</span>, ORA_SDTZ = <span class="string">&quot;GMT&quot;</span>)</span><br><span class="line"></span><br><span class="line">tmpData &lt;- TaiwanFreeway5vdData %&gt;&gt;% data.table %&gt;&gt;%</span><br><span class="line">  `[`( , time := fastPOSIXct(sprintf(<span class="string">&quot;%i-%02i-%02i %02i:%02i:00&quot;</span>, </span><br><span class="line">                                     year, month, day, hour, minute))) %&gt;&gt;%</span><br><span class="line">  setnames(toupper(names(.)))</span><br><span class="line"></span><br><span class="line">print(c(nrow(tmpData), ncol(tmpData)))</span><br><span class="line"><span class="comment"># [1] 998177     12</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 連線資訊</span></span><br><span class="line">host &lt;- <span class="string">&quot;192.168.0.120&quot;</span></span><br><span class="line">port &lt;- <span class="number">1521</span></span><br><span class="line">sid &lt;- <span class="string">&quot;orcl&quot;</span></span><br><span class="line">connectString &lt;- paste(</span><br><span class="line">  <span class="string">&quot;(DESCRIPTION=&quot;</span>,</span><br><span class="line">  <span class="string">&quot;(ADDRESS=(PROTOCOL=TCP)(HOST=&quot;</span>, host, <span class="string">&quot;)(PORT=&quot;</span>, port, <span class="string">&quot;))&quot;</span>,</span><br><span class="line">  <span class="string">&quot;(CONNECT_DATA=(SID=&quot;</span>, sid, <span class="string">&quot;)))&quot;</span>, sep = <span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 先用system權限登入查看user</span></span><br><span class="line">con &lt;- dbConnect(dbDriver(<span class="string">&quot;Oracle&quot;</span>), username = <span class="string">&quot;system&quot;</span>, password = <span class="string">&quot;qscf12356&quot;</span>,</span><br><span class="line">                 dbname = connectString)</span><br><span class="line"></span><br><span class="line"><span class="comment"># query all_users</span></span><br><span class="line">userList &lt;- dbSendQuery(con, <span class="string">&quot;select * from ALL_USERS&quot;</span>) %&gt;&gt;% </span><br><span class="line">  fetch(n = -<span class="number">1</span>) %&gt;&gt;% data.table</span><br><span class="line">print(userList)</span><br><span class="line"><span class="comment"># 印出表格，user按照創造時間排列</span></span><br><span class="line"><span class="comment"># 可以看到已經創造了C##TESTUSER這個user</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># system帳號斷線</span></span><br><span class="line">dbDisconnect(con)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用C##TESTUSER去上傳，這樣才會傳到C##TESTUSER的schema下</span></span><br><span class="line">con &lt;- dbConnect(dbDriver(<span class="string">&quot;Oracle&quot;</span>), username = <span class="string">&quot;c##testuser&quot;</span>, </span><br><span class="line">                 password = <span class="string">&quot;testuser&quot;</span>, dbname = connectString)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 把上傳的table</span></span><br><span class="line">dbWriteTable(con, <span class="string">&quot;VDDATA&quot;</span>, as.data.frame(tmpData), row.names = <span class="literal">FALSE</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 帳號斷線</span></span><br><span class="line">dbDisconnect(con)</span><br></pre></td></tr></table></figure>

<p>在server上query看看結果：</p>
<p><img src="/images/roracle_upload_test.PNG"></p>
<p>接下來就是用scala寫一個程式去拉資料</p>
<p><code>build.sbt</code>的部分：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">name := <span class="string">&quot;oracle2cassandra_sparksql&quot;</span></span><br><span class="line"></span><br><span class="line">version := <span class="string">&quot;1.0&quot;</span></span><br><span class="line"></span><br><span class="line">scalaVersion := <span class="string">&quot;2.11.8&quot;</span></span><br><span class="line"></span><br><span class="line">libraryDependencies += <span class="string">&quot;org.apache.spark&quot;</span> %% <span class="string">&quot;spark-core&quot;</span> % <span class="string">&quot;2.0.0&quot;</span></span><br><span class="line"></span><br><span class="line">libraryDependencies += <span class="string">&quot;org.apache.spark&quot;</span> %% <span class="string">&quot;spark-sql&quot;</span> % <span class="string">&quot;2.0.0&quot;</span></span><br><span class="line"></span><br><span class="line">libraryDependencies += <span class="string">&quot;com.datastax.spark&quot;</span> %% <span class="string">&quot;spark-cassandra-connector&quot;</span> % <span class="string">&quot;2.0.0-M1&quot;</span></span><br></pre></td></tr></table></figure>

<p>scala code:</p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.<span class="type">InetAddress</span></span><br><span class="line"><span class="keyword">import</span> org.apache.spark.sql.<span class="type">SparkSession</span></span><br><span class="line"><span class="keyword">import</span> org.apache.spark.sql.cassandra._</span><br><span class="line"><span class="keyword">import</span> com.datastax.spark.connector._</span><br><span class="line"><span class="keyword">import</span> com.datastax.spark.connector.cql.&#123;<span class="type">CassandraConnector</span>, <span class="type">CassandraConnectorConf</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">ora2cass</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]) &#123;</span><br><span class="line">    <span class="comment">/* test args</span></span><br><span class="line"><span class="comment">      val args = List(&quot;C##TESTUSER&quot;, &quot;VDDATA&quot;, &quot;testuser&quot;, &quot;vddata&quot;)</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// connection information of Oracle DB</span></span><br><span class="line">    <span class="keyword">val</span> oraConnInfo = <span class="string">&quot;jdbc:oracle:thin:system/qscf12356@//192.168.0.120:1521/orcl&quot;</span></span><br><span class="line">    <span class="keyword">val</span> oraSchema = args(<span class="number">0</span>).toUpperCase()</span><br><span class="line">    <span class="keyword">val</span> oraTable = args(<span class="number">1</span>).toUpperCase()</span><br><span class="line">    <span class="keyword">val</span> cassKeyspace = args(<span class="number">2</span>).toLowerCase()</span><br><span class="line">    <span class="keyword">val</span> cassTable = args(<span class="number">3</span>).toLowerCase()</span><br><span class="line">    <span class="comment">// create SQL to grap data from Oracle DB</span></span><br><span class="line">    <span class="keyword">val</span> oraSQL = <span class="string">s&quot;(SELECT ROWIDTOCHAR(t.ROWID) ID,t.ORA_ROWSCN,t.* FROM <span class="subst">$oraSchema</span>.<span class="subst">$oraTable</span> t) tmp&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// connection information of Cassandra</span></span><br><span class="line">    <span class="keyword">val</span> cassIps = <span class="type">List</span>(<span class="string">&quot;192.168.0.121&quot;</span>, <span class="string">&quot;192.168.0.122&quot;</span>, <span class="string">&quot;192.168.0.123&quot;</span>)</span><br><span class="line">      .map(<span class="type">InetAddress</span>.getByName(_)).toSet</span><br><span class="line"></span><br><span class="line">    <span class="comment">// spark session</span></span><br><span class="line">    <span class="keyword">val</span> spark = <span class="type">SparkSession</span>.builder().master(<span class="string">&quot;local&quot;</span>)</span><br><span class="line">      .appName(<span class="string">&quot;oracle to cassandra&quot;</span>)</span><br><span class="line">      .config(<span class="string">&quot;spark.cassandra.connection.host&quot;</span>, <span class="string">&quot;192.168.0.121&quot;</span>)</span><br><span class="line">      .config(<span class="string">&quot;spark.sql.warehouse.dir&quot;</span>, <span class="string">&quot;file:///d://&quot;</span>)</span><br><span class="line">      .getOrCreate()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// read data from Oracle DB</span></span><br><span class="line">    <span class="keyword">val</span> jdbcDF = spark.read.format(<span class="string">&quot;jdbc&quot;</span>)</span><br><span class="line">      .options(<span class="type">Map</span>(<span class="string">&quot;url&quot;</span> -&gt; oraConnInfo, <span class="string">&quot;dbtable&quot;</span> -&gt; oraSQL))</span><br><span class="line">      .load()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// create connection to Cassandra</span></span><br><span class="line">    <span class="keyword">val</span> cassConf = <span class="keyword">new</span> <span class="type">CassandraConnectorConf</span>(cassIps)</span><br><span class="line">    <span class="comment">// create keyspace and table</span></span><br><span class="line">    <span class="comment">// get all ks: val allcassKS = session.getCluster().getMetadata().getKeyspaces()</span></span><br><span class="line">    <span class="keyword">val</span> cassCreate = <span class="keyword">new</span> <span class="type">CassandraConnector</span>(cassConf).withSessionDo &#123; session =&gt;</span><br><span class="line">      session.execute(<span class="string">s&quot;CREATE KEYSPACE IF NOT EXISTS <span class="subst">$cassKeyspace</span> &quot;</span> +</span><br><span class="line">        <span class="string">&quot;WITH REPLICATION = &#123;&#x27;class&#x27;: &#x27;SimpleStrategy&#x27;, &#x27;replication_factor&#x27;: 2 &#125;&quot;</span>)</span><br><span class="line">      session.execute(<span class="string">s&quot;DROP TABLE IF EXISTS <span class="subst">$cassKeyspace</span>.<span class="subst">$cassTable</span>&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// create table in Cassandra</span></span><br><span class="line">    jdbcDF.createCassandraTable(cassKeyspace, cassTable)</span><br><span class="line">    <span class="comment">// save the RDD in cassandra</span></span><br><span class="line">    jdbcDF.write.cassandraFormat(cassTable, cassKeyspace).save()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然後在Intellij用Application執行，記得Program arguments要給參數，本地端就可以運行成功了</p>
<p>如果要在遠端伺服器跑的話，<code>master</code>跟<code>spark.sql.warehouse.dir</code>記得修改成相對應的位置</p>
<p>然後把ojdbc7.jar放進server，用</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cp ~/ojdbc7.jar <span class="variable">$SPARK_HOME</span>/extraClass</span><br><span class="line">cp <span class="variable">$SPARK_HOME</span>/conf/spark-defaults.conf.template <span class="variable">$SPARK_HOME</span>/conf/spark-defaults.conf</span><br><span class="line"></span><br><span class="line">tee -a <span class="variable">$SPARK_HOME</span>/conf/spark-defaults.conf &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">spark.driver.extraClassPath /usr/<span class="built_in">local</span>/bigdata/spark/extraClass/spark-cassandra-connector-assembly-2.0.0-M1.jar:/usr/<span class="built_in">local</span>/bigdata/spark/extraClass/ojdbc7.jar</span><br><span class="line">spark.driver.extraLibraryPath /usr/<span class="built_in">local</span>/bigdata/spark/extraClass</span><br><span class="line">spark.executor.extraClassPath /usr/<span class="built_in">local</span>/bigdata/spark/extraClass/spark-cassandra-connector-assembly-2.0.0-M1.jar:/usr/<span class="built_in">local</span>/bigdata/spark/extraClass/ojdbc7.jar</span><br><span class="line">spark.executor.extraLibraryPath /usr/<span class="built_in">local</span>/bigdata/spark/extraClass</span><br><span class="line">spark.jars /usr/<span class="built_in">local</span>/bigdata/spark/extraClass/spark-cassandra-connector-assembly-2.0.0-M1.jar,/usr/<span class="built_in">local</span>/bigdata/spark/extraClass/ojdbc7.jar</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<p>重開spark，再用<code>spark-submit</code>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">spark-submit --class ora2cass oracle2cassandra_sparksql_2.11-1.0.jar C<span class="comment">##TESTUSER VDDATA testuser vddata</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>BigData</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>Oracle</tag>
        <tag>Cassandra</tag>
        <tag>Spark</tag>
        <tag>Mesos</tag>
        <tag>Scala</tag>
      </tags>
  </entry>
  <entry>
    <title>部署Spark on Mesos and Cassandra環境</title>
    <url>/posts/201608/2016-08-23-deployment-of-mesos-spark.html</url>
    <content><![CDATA[<p>本篇主要在部署Spark on Mesos的環境</p>
<a id="more"></a>

<p>目標是Spark跟Mesos的master配上兩台Mesos standby(同時為Zookeeper)</p>
<p>cassSpark1為Mesos master跟Spark master，cassSpark2以及cassSpark3為mesos standby</p>
<p>這三台同時也是Mesos slaves跟Spark slaves (實際用途中，會是其他電腦，這裡用VM就都放一起了)</p>
<ol>
<li>準備工作</li>
</ol>
<p>這裡基本上跟<a href="http://chingchuan-chen.github.io/cassandra/2016/08/05/deployment-of-spark-based-on-cassandra.html">前篇</a>一樣，就不贅述了</p>
<ol start="2">
<li>開始部署</li>
</ol>
<p>i. 下載檔案並移到適當位置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 建立放置資料夾</span></span><br><span class="line">sudo mkdir /usr/<span class="built_in">local</span>/bigdata</span><br><span class="line">sudo chown -R tester /usr/<span class="built_in">local</span>/bigdata</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下載並安裝java</span></span><br><span class="line">curl -v -j -k -L -H <span class="string">&quot;Cookie: oraclelicense=accept-securebackup-cookie&quot;</span> http://download.oracle.com/otn-pub/java/jdk/8u101-b13/jdk-8u101-linux-x64.rpm -o jdk-8u101-linux-x64.rpm</span><br><span class="line">sudo yum install -y jdk-8u101-linux-x64.rpm</span><br><span class="line"><span class="comment"># 下載並部署zookeeper</span></span><br><span class="line">curl -v -j -k -L http://apache.stu.edu.tw/zookeeper/zookeeper-3.4.8/zookeeper-3.4.8.tar.gz -o zookeeper-3.4.8.tar.gz</span><br><span class="line">tar -zxvf zookeeper-3.4.8.tar.gz</span><br><span class="line">sudo mv zookeeper-3.4.8 /usr/<span class="built_in">local</span>/bigdata/zookeeper</span><br><span class="line">sudo chown -R tester /usr/<span class="built_in">local</span>/bigdata/zookeeper</span><br><span class="line"><span class="comment"># 下載並部署mesos</span></span><br><span class="line">curl -v -j -k -L http://repos.mesosphere.com/el/7/x86_64/RPMS/mesos-1.0.0-2.0.89.centos701406.x86_64.rpm -o mesos-1.0.0-2.0.89.centos701406.x86_64.rpm</span><br><span class="line">sudo yum install mesos-1.0.0-2.0.89.centos701406.x86_64.rpm</span><br><span class="line"><span class="comment"># 下載並部署scala</span></span><br><span class="line">curl -v -j -k -L http://downloads.lightbend.com/scala/2.11.8/scala-2.11.8.tgz -o scala-2.11.8.tgz</span><br><span class="line">tar -zxvf scala-2.11.8.tgz</span><br><span class="line">mv scala-2.11.8 /usr/<span class="built_in">local</span>/bigdata/scala</span><br><span class="line"><span class="comment"># 下載並部署spark</span></span><br><span class="line">curl -v -j -k -L http://d3kbcqa49mib13.cloudfront.net/spark-2.0.0-bin-hadoop2.6.tgz -o spark-2.0.0-bin-hadoop2.6.tgz</span><br><span class="line">tar -zxvf spark-2.0.0-bin-hadoop2.6.tgz</span><br><span class="line">mv spark-2.0.0-bin-hadoop2.6 /usr/<span class="built_in">local</span>/bigdata/spark</span><br><span class="line"><span class="comment"># 下載並部署cassandra</span></span><br><span class="line">curl -v -j -k -L http://apache.stu.edu.tw/cassandra/2.2.7/apache-cassandra-2.2.7-bin.tar.gz -o apache-cassandra-2.2.7-bin.tar.gz</span><br><span class="line">tar -zxvf apache-cassandra-2.2.7-bin.tar.gz</span><br><span class="line">mv apache-cassandra-2.2.7 /usr/<span class="built_in">local</span>/bigdata/cassandra</span><br></pre></td></tr></table></figure>

<p>ii. 環境變數設置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo tee -a /etc/bashrc &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line"><span class="comment"># JAVA</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/java/jdk1.8.0_101</span><br><span class="line"><span class="comment"># ZOOKEEPER</span></span><br><span class="line"><span class="built_in">export</span> ZOOKEEPER_HOME=/usr/<span class="built_in">local</span>/bigdata/zookeeper</span><br><span class="line"><span class="comment"># SCALA</span></span><br><span class="line"><span class="built_in">export</span> SCALA_HOME=/usr/<span class="built_in">local</span>/bigdata/scala</span><br><span class="line"><span class="comment"># SPARK</span></span><br><span class="line"><span class="built_in">export</span> SPARK_HOME=/usr/<span class="built_in">local</span>/bigdata/spark</span><br><span class="line"><span class="comment"># CASSANDRA</span></span><br><span class="line"><span class="built_in">export</span> CASSANDRA_HOME=/usr/<span class="built_in">local</span>/bigdata/cassandra</span><br><span class="line"><span class="comment"># PATH</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>:<span class="variable">$ZOOKEEPER_HOME</span>/bin:<span class="variable">$SPARK_HOME</span>/bin:<span class="variable">$CASSANDRA_HOME</span>/bin</span><br></pre></td></tr></table></figure>

<p>iv. 配置Zookeeper</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 複製zoo.cfg</span></span><br><span class="line">cp <span class="variable">$ZOOKEEPER_HOME</span>/conf/zoo_sample.cfg <span class="variable">$ZOOKEEPER_HOME</span>/conf/zoo.cfg</span><br><span class="line"><span class="comment"># 傳入設定</span></span><br><span class="line">tee <span class="variable">$ZOOKEEPER_HOME</span>/conf/zoo.cfg &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">dataDir=/usr/<span class="built_in">local</span>/bigdata/zookeeper/data</span><br><span class="line">server.1=cassSpark1:2888:3888</span><br><span class="line">server.2=cassSpark2:2888:3888</span><br><span class="line">server.3=cassSpark3:2888:3888</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 接著創立需要的資料夾，並新增檔案</span></span><br><span class="line">mkdir <span class="variable">$ZOOKEEPER_HOME</span>/data</span><br><span class="line">tee <span class="variable">$ZOOKEEPER_HOME</span>/data/myid &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">1</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<p>在cassSpark2跟cassSpark3分別設定為2跟3。</p>
<p>啟動zookeeper: </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 啟動zookeeper server</span></span><br><span class="line">zkServer.sh start</span><br><span class="line">ssh tester@cassSpark2 <span class="string">&quot;zkServer.sh start&quot;</span></span><br><span class="line">ssh tester@cassSpark3 <span class="string">&quot;zkServer.sh start&quot;</span></span><br></pre></td></tr></table></figure>

<p>再來是測試看看是否有部署成功，先輸入<code>zkCli.sh -server cassSpark1:2181,cassSpark2:2181,cassSpark3:2181</code>可以登錄到zookeeper的server上，如果是正常運作會看到下面的訊息：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[zk: cassSpark1:2181,cassSpark2:2181,cassSpark3:2181(CONNECTED) 0]</span><br></pre></td></tr></table></figure>

<p>此時試著輸入看看<code>create /test01 abcd</code>，然後輸入<code>ls /</code>看看是否會出現<code>[test01, zookeeper]</code></p>
<p>如果是，zookeeper就是設定成功，如果中間有出現任何錯誤，則否</p>
<p>最後用<code>delete /test01</code>做刪除即可，然後用<code>quit</code>離開。</p>
<p>最後是設定開機自動啟動zookeeper server:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo tee /etc/init.d/zookeeper &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># ZooKeeper</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># chkconfig: - 80 99</span></span><br><span class="line"><span class="comment"># description: zookeeper</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ZooKeeper install path (where you extracted the tarball)</span></span><br><span class="line">ZOOKEEPER=/usr/<span class="built_in">local</span>/bigdata/zookeeper</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> /etc/rc.d/init.d/<span class="built_in">functions</span></span><br><span class="line"><span class="built_in">source</span> <span class="variable">$ZOOKEEPER</span>/bin/zkEnv.sh</span><br><span class="line"></span><br><span class="line">RETVAL=0</span><br><span class="line">PIDFILE=/var/run/zookeeper_server.pid</span><br><span class="line">desc=<span class="string">&quot;ZooKeeper daemon&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">start</span></span>() &#123;</span><br><span class="line">  <span class="built_in">echo</span> -n $<span class="string">&quot;Starting <span class="variable">$desc</span> (zookeeper): &quot;</span></span><br><span class="line">  daemon <span class="variable">$ZOOKEEPER</span>/bin/zkServer.sh start</span><br><span class="line">  RETVAL=$?</span><br><span class="line">  <span class="built_in">echo</span></span><br><span class="line">  [ <span class="variable">$RETVAL</span> -eq 0 ] &amp;&amp; touch /var/lock/subsys/zookeeper</span><br><span class="line">  <span class="built_in">return</span> <span class="variable">$RETVAL</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">stop</span></span>() &#123;</span><br><span class="line">  <span class="built_in">echo</span> -n $<span class="string">&quot;Stopping <span class="variable">$desc</span> (zookeeper): &quot;</span></span><br><span class="line">  daemon <span class="variable">$ZOOKEEPER</span>/bin/zkServer.sh stop</span><br><span class="line">  RETVAL=$?</span><br><span class="line">  sleep 5</span><br><span class="line">  <span class="built_in">echo</span></span><br><span class="line">  [ <span class="variable">$RETVAL</span> -eq 0 ] &amp;&amp; rm -f /var/lock/subsys/zookeeper <span class="variable">$PIDFILE</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">restart</span></span>() &#123;</span><br><span class="line">  stop</span><br><span class="line">  start</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">get_pid</span></span>() &#123;</span><br><span class="line">  cat <span class="string">&quot;<span class="variable">$PIDFILE</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">checkstatus</span></span>()&#123;</span><br><span class="line">  status -p <span class="variable">$PIDFILE</span> <span class="variable">$&#123;JAVA_HOME&#125;</span>/bin/java</span><br><span class="line">  RETVAL=$?</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">condrestart</span></span>()&#123;</span><br><span class="line">  [ -e /var/lock/subsys/zookeeper ] &amp;&amp; restart || :</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">  start)</span><br><span class="line">    start</span><br><span class="line">    ;;</span><br><span class="line">  stop)</span><br><span class="line">    stop</span><br><span class="line">    ;;</span><br><span class="line">  status)</span><br><span class="line">    checkstatus</span><br><span class="line">    ;;</span><br><span class="line">  restart)</span><br><span class="line">    restart</span><br><span class="line">    ;;</span><br><span class="line">  condrestart)</span><br><span class="line">    condrestart</span><br><span class="line">    ;;</span><br><span class="line">  *)</span><br><span class="line">    <span class="built_in">echo</span> $<span class="string">&quot;Usage: <span class="variable">$0</span> &#123;start|stop|status|restart|condrestart&#125;&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span> <span class="variable">$RETVAL</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 然後使用下面指令讓這個script能夠自動跑：</span></span><br><span class="line">sudo chmod +x /etc/init.d/zookeeper</span><br><span class="line">sudo chkconfig --add zookeeper</span><br><span class="line">sudo service zookeeper start</span><br></pre></td></tr></table></figure>

<p>v. 配置mesos</p>
<p>下面的動作在cassSpark1, cassSpark2, cassSpark3這三台都要配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改zookeeper</span></span><br><span class="line">sudo tee /etc/mesos/zk &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">zk://192.168.0.121:2181,192.168.0.122:2181,192.168.0.123:2181/mesos</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置quorum</span></span><br><span class="line">sudo tee /etc/mesos-master/quorum &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">2</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<p>ssh-copy-id -i ~/.ssh/id_rsa.pub cassSpark3</p>
<p>再來就是啟動了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 記得先啟動zookeeper server，再啟動mesos</span></span><br><span class="line"><span class="comment"># master要記得關掉slave (這裡的配置下不用關，指令供人參考用)</span></span><br><span class="line">sudo systemctl <span class="built_in">disable</span> mesos-master</span><br><span class="line">sudo systemctl stop mesos-master</span><br><span class="line">sudo service mesos-master restart</span><br><span class="line"><span class="comment"># 在cassSpark2,cassSpark3上啟動slave</span></span><br><span class="line"><span class="comment"># slave要記得關掉master (這裡的配置下不用關，指令供人參考用)</span></span><br><span class="line">sudo systemctl <span class="built_in">disable</span> mesos-slave</span><br><span class="line">sudo systemctl stop mesos-slave</span><br><span class="line">sudo service mesos-slave restart</span><br></pre></td></tr></table></figure>

<p>iii. 配置scala and spark</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 複製檔案</span></span><br><span class="line">cp <span class="variable">$SPARK_HOME</span>/conf/spark-env.sh.template <span class="variable">$SPARK_HOME</span>/conf/spark-env.sh</span><br><span class="line">cp <span class="variable">$SPARK_HOME</span>/conf/log4j.properties.template <span class="variable">$SPARK_HOME</span>/conf/log4j.properties</span><br><span class="line">cp <span class="variable">$SPARK_HOME</span>/conf/spark-defaults.conf.template <span class="variable">$SPARK_HOME</span>/conf/spark-defaults.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 傳入設定</span></span><br><span class="line">tee -a <span class="variable">$SPARK_HOME</span>/conf/spark-env.sh &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">SPARK_LOCAL_DIRS=/usr/<span class="built_in">local</span>/bigdata/spark</span><br><span class="line">SPARK_SCALA_VERSION=2.11</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># install sbt and git </span></span><br><span class="line">sudo yum install sbt git-core</span><br><span class="line"></span><br><span class="line"><span class="comment"># clone spark-cassandra-connector</span></span><br><span class="line">git <span class="built_in">clone</span> git@github.com:datastax/spark-cassandra-connector.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># compile assembly jar</span></span><br><span class="line"><span class="built_in">cd</span> spark-cassandra-connector</span><br><span class="line">rm -r spark-cassandra-connector-perf</span><br><span class="line">sbt -Dscala-2.11=<span class="literal">true</span> assembly</span><br><span class="line"></span><br><span class="line"><span class="comment"># copy jar to spark</span></span><br><span class="line">mkdir <span class="variable">$SPARK_HOME</span>/extraClass</span><br><span class="line">cp spark-cassandra-connector/target/scala-2.11/spark-cassandra-connector-assembly-2.0.0-M1-2-g70018a6.jar <span class="variable">$SPARK_HOME</span>/extraClass</span><br><span class="line"></span><br><span class="line">tee -a <span class="variable">$SPARK_HOME</span>/conf/spark-defaults.conf &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">spark.driver.extraClassPath /usr/<span class="built_in">local</span>/bigdata/spark/extraClass/spark-cassandra-connector-assembly-2.0.0-M1.jar</span><br><span class="line">spark.driver.extraLibraryPath /usr/<span class="built_in">local</span>/bigdata/spark/extraClass</span><br><span class="line">spark.executor.extraClassPath /usr/<span class="built_in">local</span>/bigdata/spark/extraClass/spark-cassandra-connector-assembly-2.0.0-M1.jar</span><br><span class="line">spark.executor.extraLibraryPath /usr/<span class="built_in">local</span>/bigdata/spark/extraClass</span><br><span class="line">spark.jars /usr/<span class="built_in">local</span>/bigdata/spark/extraClass/spark-cassandra-connector-assembly-2.0.0-M1.jar</span><br><span class="line">spark.cores.max 3</span><br><span class="line">spark.driver.memory 4g</span><br><span class="line">spark.executor.memory 4g</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<p>Spark的master, slave就不用啟動了，直接用Mesos即可</p>
<p>如果之前用我的方式配置過自動啟動的話，請用下面的指令移除：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 移除master的服務</span></span><br><span class="line">sudo systemctl stop spark-master.service</span><br><span class="line">sudo rm /etc/systemd/system/multi-user.target.wants/spark-master.service</span><br><span class="line"><span class="comment"># 移除slave的服務</span></span><br><span class="line">sudo systemctl stop spark-slave.service</span><br><span class="line">sudo rm /etc/systemd/system/multi-user.target.wants/spark-slave.service</span><br><span class="line"><span class="comment"># 重新讀取開機的服務</span></span><br><span class="line">sudo systemctl daemon-reload</span><br></pre></td></tr></table></figure>

<p>至於cassandra的設置就都一樣，此處就不贅述，直接進測試</p>
<p>執行下面兩行，成功執行就是Mesos有裝成功</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">MASTER=$(mesos-resolve `cat /etc/mesos/zk`)</span><br><span class="line">mesos-execute --master=<span class="variable">$MASTER</span> --name=<span class="string">&quot;cluster-test&quot;</span> --<span class="built_in">command</span>=<span class="string">&quot;sleep 5&quot;</span></span><br></pre></td></tr></table></figure>

<p>Mesos也可以透過去連接5050 port到目前的master上去，有出現網頁就是正常</p>
<p>再來測試Spark，用<code>spark-shell --master mesos://zk://192.168.0.121:2181,192.168.0.122:2181,192.168.0.123:2181/mesos</code>開啟spark-shell確定功能正常</p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 單純測試spark</span></span><br><span class="line"><span class="keyword">val</span> <span class="type">NUM_SAMPLES</span> = <span class="number">1000000</span></span><br><span class="line"><span class="keyword">val</span> count = sc.parallelize(<span class="number">1</span> to <span class="type">NUM_SAMPLES</span>).map&#123;i =&gt;</span><br><span class="line">  <span class="keyword">val</span> x = <span class="type">Math</span>.random()</span><br><span class="line">  <span class="keyword">val</span> y = <span class="type">Math</span>.random()</span><br><span class="line">  <span class="keyword">if</span> (x*x + y*y &lt; <span class="number">1</span>) <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span></span><br><span class="line">&#125;.reduce(_ + _)</span><br><span class="line">println(<span class="string">&quot;Pi is roughly &quot;</span> + <span class="number">4.0</span> * count / <span class="type">NUM_SAMPLES</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 測試與cassandra的connector</span></span><br><span class="line"><span class="comment">// 重啟sc</span></span><br><span class="line">sc.stop()</span><br><span class="line"><span class="comment">// imprt需要套件</span></span><br><span class="line"><span class="keyword">import</span> com.datastax.spark.connector._, org.apache.spark.<span class="type">SparkContext</span>, org.apache.spark.<span class="type">SparkContext</span>._, org.apache.spark.<span class="type">SparkConf</span>, com.datastax.spark.connector.cql.<span class="type">CassandraConnector</span></span><br><span class="line"><span class="comment">// 設定cassandra host</span></span><br><span class="line"><span class="keyword">val</span> conf = <span class="keyword">new</span> <span class="type">SparkConf</span>(<span class="literal">true</span>).set(<span class="string">&quot;spark.cassandra.connection.host&quot;</span>, <span class="string">&quot;192.168.0.121&quot;</span>)</span><br><span class="line"><span class="keyword">val</span> sc = <span class="keyword">new</span> <span class="type">SparkContext</span>(conf)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 創立keyspace, table，然後塞值</span></span><br><span class="line"><span class="type">CassandraConnector</span>(conf).withSessionDo &#123; session =&gt;</span><br><span class="line">  session.execute(<span class="string">&quot;CREATE KEYSPACE IF NOT EXISTS test WITH REPLICATION = &#123;&#x27;class&#x27;: &#x27;SimpleStrategy&#x27;, &#x27;replication_factor&#x27;: 2 &#125;&quot;</span>)</span><br><span class="line">  session.execute(<span class="string">&quot;DROP TABLE IF EXISTS test.kv&quot;</span>)</span><br><span class="line">  session.execute(<span class="string">&quot;CREATE TABLE test.kv (key text PRIMARY KEY, value DOUBLE)&quot;</span>)</span><br><span class="line">  session.execute(<span class="string">&quot;INSERT INTO test.kv(key, value) VALUES (&#x27;key1&#x27;, 1.0)&quot;</span>)</span><br><span class="line">  session.execute(<span class="string">&quot;INSERT INTO test.kv(key, value) VALUES (&#x27;key2&#x27;, 2.5)&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 印出cassandra的元素</span></span><br><span class="line"><span class="keyword">val</span> rdd = sc.cassandraTable(<span class="string">&quot;test&quot;</span>, <span class="string">&quot;kv&quot;</span>)</span><br><span class="line">println(rdd.first)</span><br><span class="line"><span class="comment">// 會出現CassandraRow&#123;key: key1, value: 1.0&#125;</span></span><br><span class="line"><span class="keyword">val</span> collection = sc.parallelize(<span class="type">Seq</span>((<span class="string">&quot;key3&quot;</span>, <span class="number">1.7</span>), (<span class="string">&quot;key4&quot;</span>, <span class="number">3.5</span>)))</span><br><span class="line"><span class="comment">// save new data into cassandra</span></span><br><span class="line">collection.saveToCassandra(<span class="string">&quot;test&quot;</span>, <span class="string">&quot;kv&quot;</span>, <span class="type">SomeColumns</span>(<span class="string">&quot;key&quot;</span>, <span class="string">&quot;value&quot;</span>))</span><br><span class="line"><span class="comment">// 印出塞完的結果</span></span><br><span class="line">rdd.collect().foreach(row =&gt; println(<span class="string">s&quot;Existing Data: <span class="subst">$row</span>&quot;</span>))</span><br><span class="line"><span class="comment">// Existing Data: CassandraRow&#123;key: key3, value: 1.7&#125;</span></span><br><span class="line"><span class="comment">// Existing Data: CassandraRow&#123;key: key1, value: 1.0&#125;</span></span><br><span class="line"><span class="comment">// Existing Data: CassandraRow&#123;key: key4, value: 3.5&#125;</span></span><br><span class="line"><span class="comment">// Existing Data: CassandraRow&#123;key: key2, value: 2.5&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 停止spark-shell，然後離開</span></span><br><span class="line">sc.stop()</span><br><span class="line">:quit</span><br></pre></td></tr></table></figure>

<p>備註：</p>
<p>如果cluster不能對外連線的話，curl可以取得的檔案都先經由能夠連線的電腦取得</p>
<p>至於Mesos的dependencies，先在能夠對外連線的centos電腦上下</p>
<p><code>sudo yum install --downloadonly --downloaddir=pkgs mesos-1.0.0-2.0.89.centos701406.x86_64.rpm</code></p>
<p>這樣就會把要下載rpm檔案全部都載下來到<code>pkgs</code>的資料夾，這些在打包傳到cluster上</p>
<p>然後用<code>sudo yum install *.rpm</code>安裝，在安裝Mesos即可</p>
]]></content>
      <categories>
        <category>BigData</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>Cassandra</tag>
        <tag>Spark</tag>
        <tag>Mesos</tag>
      </tags>
  </entry>
  <entry>
    <title>Spark on Mesos: dynamic resource allocation</title>
    <url>/posts/201608/2016-08-26-spark-on-mesos-dynamic-resource-allocation.html</url>
    <content><![CDATA[<p>上篇部署了Spark on Mesos的環境</p>
<p>而這篇主要是想要使用Spark on Mesos的dynamic resource allocation跟external shuffle service</p>
<p>Dynamic resource allocation是為了能夠讓Spark能夠更有效的使用系統資源的系統</p>
<p>能夠動態的去增加worker以利application的運行，並能realease不在使用中的executor</p>
<p>而這個功能原本只有在Spark on Yarn的配置上才有，2.0.0的Spark也在Mesos上實現支援了</p>
<a id="more"></a>

<p>在external shuffle Service啟動下，它會把executors寫入的shuffle檔案安全的移除</p>
<p>這個服務的啟動是為了去讓Spark能夠使用dynamic resource allocation</p>
<p>同時，他也會協助Executor去分配shuffle的資料，以增加shuffle的效率，減少executor的loading</p>
<ol>
<li>準備工作</li>
</ol>
<p>基本上就是有一組Spark On Mesos的cluster，並有Cassandra</p>
<ol start="2">
<li>開始配置</li>
</ol>
<p>這裡只要重新配置Spark即可</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 移除舊的 (有的話)</span></span><br><span class="line">rm -r <span class="variable">$SPARK_HOME</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下載新的binary包</span></span><br><span class="line">curl -v -j -k -L http://d3kbcqa49mib13.cloudfront.net/spark-2.0.0-bin-hadoop2.6.tgz -o spark-2.0.0-bin-hadoop2.6.tgz</span><br><span class="line">tar -zxvf spark-2.0.0-bin-hadoop2.6.tgz</span><br><span class="line">mv spark-2.0.0-bin-hadoop2.6 /usr/<span class="built_in">local</span>/bigdata/spark</span><br><span class="line"></span><br><span class="line"><span class="comment"># 複製檔案</span></span><br><span class="line">cp <span class="variable">$SPARK_HOME</span>/conf/spark-env.sh.template <span class="variable">$SPARK_HOME</span>/conf/spark-env.sh</span><br><span class="line">cp <span class="variable">$SPARK_HOME</span>/conf/spark-defaults.conf.template <span class="variable">$SPARK_HOME</span>/conf/spark-defaults.conf</span><br><span class="line">cp <span class="variable">$SPARK_HOME</span>/conf/log4j.properties.template <span class="variable">$SPARK_HOME</span>/conf/log4j.properties</span><br><span class="line"></span><br><span class="line"><span class="comment"># additional jars (這兩個的取得在前幾篇都有說，有用到再放)</span></span><br><span class="line">mkdir <span class="variable">$SPARK_HOME</span>/extraClass</span><br><span class="line">cp spark-cassandra-connector-assembly-2.0.0-M1.jar <span class="variable">$SPARK_HOME</span>/extraClass/</span><br><span class="line">cp ojdbc7.jar <span class="variable">$SPARK_HOME</span>/extraClass/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 傳入設定</span></span><br><span class="line">tee -a <span class="variable">$SPARK_HOME</span>/conf/spark-env.sh &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">SPARK_LOCAL_DIRS=/usr/<span class="built_in">local</span>/bigdata/spark</span><br><span class="line">SPARK_SCALA_VERSION=2.11</span><br><span class="line">MESOS_NATIVE_LIBRARY=/usr/<span class="built_in">local</span>/lib/libmesos.so</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">tee -a <span class="variable">$SPARK_HOME</span>/conf/spark-defaults.conf &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">spark.driver.extraClassPath /usr/<span class="built_in">local</span>/bigdata/spark/extraClass/spark-cassandra-connector-assembly-2.0.0-M1.jar:/usr/<span class="built_in">local</span>/bigdata/spark/extraClass/ojdbc7.jar</span><br><span class="line">spark.driver.extraLibraryPath /usr/<span class="built_in">local</span>/bigdata/spark/extraClass</span><br><span class="line">spark.executor.extraClassPath /usr/<span class="built_in">local</span>/bigdata/spark/extraClass/spark-cassandra-connector-assembly-2.0.0-M1.jar:/usr/<span class="built_in">local</span>/bigdata/spark/extraClass/ojdbc7.jar</span><br><span class="line">spark.executor.extraLibraryPath /usr/<span class="built_in">local</span>/bigdata/spark/extraClass</span><br><span class="line">spark.jars /usr/<span class="built_in">local</span>/bigdata/spark/extraClass/spark-cassandra-connector-assembly-2.0.0-M1.jar,/usr/<span class="built_in">local</span>/bigdata/spark/extraClass/ojdbc7.jar</span><br><span class="line">spark.scheduler.mode fair</span><br><span class="line">spark.driver.cores 1</span><br><span class="line">spark.driver.memory 2g</span><br><span class="line">spark.cores.max 6</span><br><span class="line">spark.executor.cores 1</span><br><span class="line">spark.executor.memory 2g</span><br><span class="line">spark.dynamicAllocation.enabled <span class="literal">true</span></span><br><span class="line">spark.dynamicAllocation.initialExecutors 6</span><br><span class="line">spark.executor.instances 6</span><br><span class="line">spark.dynamicAllocation.executorIdleTimeout 15</span><br><span class="line">spark.shuffle.service.enabled <span class="literal">true</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 複製到其他台</span></span><br><span class="line">ssh tester@cassSpar2 <span class="string">&quot;rm -r <span class="variable">$SPARK_HOME</span>&quot;</span></span><br><span class="line">ssh tester@cassSpar3 <span class="string">&quot;rm -r <span class="variable">$SPARK_HOME</span>&quot;</span></span><br><span class="line">scp -r /usr/<span class="built_in">local</span>/bigdata/spark tester@cassSpark2:/usr/<span class="built_in">local</span>/bigdata</span><br><span class="line">scp -r /usr/<span class="built_in">local</span>/bigdata/spark tester@cassSpark3:/usr/<span class="built_in">local</span>/bigdata</span><br></pre></td></tr></table></figure>

<p>設定自動啟動shuffle service</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo tee /etc/init.d/spark-shuffle &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># spark-shuffle</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># chkconfig: 2345 89 9 </span></span><br><span class="line"><span class="comment"># description: spark-shuffle</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> /etc/rc.d/init.d/<span class="built_in">functions</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Spark install path (where you extracted the tarball)</span></span><br><span class="line">SPARK_HOME=/usr/<span class="built_in">local</span>/bigdata/spark</span><br><span class="line"></span><br><span class="line">RETVAL=0</span><br><span class="line">PIDFILE=/var/run/spark-shuffle.pid</span><br><span class="line">desc=<span class="string">&quot;spark-shuffle daemon&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">start</span></span>() &#123;</span><br><span class="line">  <span class="built_in">echo</span> -n $<span class="string">&quot;Starting <span class="variable">$desc</span> (spark-shuffle): &quot;</span></span><br><span class="line">  daemon <span class="variable">$SPARK_HOME</span>/sbin/start-mesos-shuffle-service.sh</span><br><span class="line">  RETVAL=$?</span><br><span class="line">  <span class="built_in">echo</span></span><br><span class="line">  [ <span class="variable">$RETVAL</span> -eq 0 ] &amp;&amp; touch /var/lock/subsys/spark-shuffle</span><br><span class="line">  <span class="built_in">return</span> <span class="variable">$RETVAL</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">stop</span></span>() &#123;</span><br><span class="line">  <span class="built_in">echo</span> -n $<span class="string">&quot;Stopping <span class="variable">$desc</span> (spark-shuffle): &quot;</span></span><br><span class="line">  daemon <span class="variable">$SPARK_HOME</span>/sbin/stop-mesos-shuffle-service.sh</span><br><span class="line">  RETVAL=$?</span><br><span class="line">  sleep 5</span><br><span class="line">  <span class="built_in">echo</span></span><br><span class="line">  [ <span class="variable">$RETVAL</span> -eq 0 ] &amp;&amp; rm -f /var/lock/subsys/spark-shuffle <span class="variable">$PIDFILE</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">restart</span></span>() &#123;</span><br><span class="line">  stop</span><br><span class="line">  start</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">get_pid</span></span>() &#123;</span><br><span class="line">  cat <span class="string">&quot;<span class="variable">$PIDFILE</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">checkstatus</span></span>()&#123;</span><br><span class="line">  status -p <span class="variable">$PIDFILE</span> <span class="variable">$&#123;JAVA_HOME&#125;</span>/bin/java</span><br><span class="line">  RETVAL=$?</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">condrestart</span></span>()&#123;</span><br><span class="line">  [ -e /var/lock/subsys/spark-shuffle ] &amp;&amp; restart || :</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">  start)</span><br><span class="line">    start</span><br><span class="line">    ;;</span><br><span class="line">  stop)</span><br><span class="line">    stop</span><br><span class="line">    ;;</span><br><span class="line">  status)</span><br><span class="line">    checkstatus</span><br><span class="line">    ;;</span><br><span class="line">  restart)</span><br><span class="line">    restart</span><br><span class="line">    ;;</span><br><span class="line">  condrestart)</span><br><span class="line">    condrestart</span><br><span class="line">    ;;</span><br><span class="line">  *)</span><br><span class="line">    <span class="built_in">echo</span> $<span class="string">&quot;Usage: <span class="variable">$0</span> &#123;start|stop|status|restart|condrestart&#125;&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span> <span class="variable">$RETVAL</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 然後使用下面指令讓這個script能夠自動跑：</span></span><br><span class="line">sudo chmod +x /etc/init.d/spark-shuffle</span><br><span class="line">sudo chkconfig --add spark-shuffle</span><br><span class="line">sudo service spark-shuffle start</span><br></pre></td></tr></table></figure>

<p>試試看用下面指令submit任務</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">spark-submit --master mesos://zk://192.168.0.121:2181,192.168.0.122:2181,192.168.0.123:2181/mesos --class cassSpark test_cassspark_2.11-1.0.jar</span><br></pre></td></tr></table></figure>

<p>下方的指令可以用來找出現在的Mesos master</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mesos-resolve `cat /etc/mesos/zk`</span><br></pre></td></tr></table></figure>

<p>執行完後會出現你配置zookeeper的其中一個IP with port 5050</p>
<p>例如我的Mesos master ip是192.168.0.121:5050，那麼我連上這個網址就會看到現在任務狀況</p>
<p>用spark-submit後，在Frameworks那個分頁會看到一個framework被啟動</p>
<p>接著spark會開始動態的規畫所需的executor進行MapReduce的job</p>
<p>運行的時候會在Mesos的主頁看到Task被起起來做運行的動作</p>
<p>最後是關於刪掉framework的方式，可以在unix系統上使用下方指令去刪除framework：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># framework id可以在Framework那頁找到，按copy id就可以複製下來，然後貼到命令裡面來發出刪除的動作</span></span><br><span class="line">curl -XPOST http://192.168.0.121:5050/master/teardown -d <span class="string">&#x27;frameworkId=2444f6a3-1bfb-47d6-8b11-ab9c8f56e3c9-0000&#x27;</span></span><br></pre></td></tr></table></figure>

<p>我這裡還是覺得為什麼mesos的webUI會沒有提供直接kill的命令感到疑惑</p>
]]></content>
      <categories>
        <category>BigData</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>Spark</tag>
        <tag>Mesos</tag>
      </tags>
  </entry>
  <entry>
    <title>sparklyr初探，並連接Cassandra使用</title>
    <url>/posts/201609/2016-09-08-sparklyr-and-use-it-with-cassandra.html</url>
    <content><![CDATA[<p>RStudio推出了一個感覺很厲害的套件<code>sparklyr</code></p>
<p>可以讓dplyr變得lazy，然後去即時的操作Spark中的dataFrame</p>
<a id="more"></a>

<p>先從安裝R, RStudio Server開始：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -v -j -k -L https://mran.microsoft.com/install/mro/3.3.1/microsoft-r-open-3.3.1.tar.gz -o microsoft-r-open-3.3.1.tar.gz</span><br><span class="line">tar -zxvf microsoft-r-open-3.3.1.tar.gz</span><br><span class="line"><span class="built_in">cd</span> microsoft-r-open/rpm</span><br><span class="line">su -c <span class="string">&#x27;rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm&#x27;</span></span><br><span class="line"><span class="comment"># for offline installation</span></span><br><span class="line">sudo yum install R R-devel R-java --downloadonly --downloaddir=r_deps</span><br><span class="line">sudo yum install openssl-devel libcurl-devel --downloadonly --downloaddir=r_deps</span><br><span class="line">sudo yum install *.rpm --downloadonly --downloaddir=r_deps</span><br><span class="line"><span class="comment"># install R, R-devel and R-java and deps</span></span><br><span class="line">sudo yum install -y r_deps/*.rpm</span><br><span class="line"><span class="comment"># remove R</span></span><br><span class="line">sudo rm -rf /usr/lib64/R</span><br><span class="line">sudo rm -rf /usr/bin/R</span><br><span class="line">sudo rm -rf /usr/bin/Rscript</span><br><span class="line"><span class="comment"># install MRO and MKL</span></span><br><span class="line">sudo yum install -y *.rpm</span><br><span class="line"></span><br><span class="line">sudo chown -R tester:tester /usr/lib64/microsoft-r/3.3/lib64/R</span><br><span class="line">sudo chmod -R 775 /usr/lib64/microsoft-r/3.3/lib64/R</span><br><span class="line"></span><br><span class="line"><span class="comment"># for offline installation</span></span><br><span class="line">sudo chown -R tester:tester r_deps</span><br><span class="line">mv r_deps ~/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 這裡下載preview版本，是為了可以直接有UI操作spark</span></span><br><span class="line">curl -v -j -k -L https://s3.amazonaws.com/rstudio-dailybuilds/rstudio-server-rhel-1.0.8-x86_64.rpm -o rstudio-server-rhel-1.0.8-x86_64.rpm</span><br><span class="line">sudo yum install --nogpgcheck rstudio-server-rhel-1.0.8-x86_64.rpm</span><br><span class="line"><span class="comment">## start the rstudio-server</span></span><br><span class="line">sudo rstudio-server start</span><br><span class="line"><span class="comment">## start rstudio-server on boot</span></span><br><span class="line">sudo cp /usr/lib/rstudio-server/extras/init.d/redhat/rstudio-server /etc/init.d/</span><br><span class="line">sudo chmod 755 /etc/init.d/rstudio-server</span><br><span class="line">sudo chkconfig --add rstudio-server</span><br></pre></td></tr></table></figure>

<p>為了測試，我先用scala在spark-shell上塞了一些資料進去</p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line">spark.stop()</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.net.<span class="type">InetAddress</span>._</span><br><span class="line"><span class="keyword">import</span> com.datastax.spark.connector._</span><br><span class="line"><span class="keyword">import</span> org.apache.spark.sql.&#123;<span class="type">SparkSession</span>, <span class="type">SaveMode</span>&#125;</span><br><span class="line"><span class="keyword">import</span> com.datastax.spark.connector.cql.&#123;<span class="type">CassandraConnector</span>, <span class="type">CassandraConnectorConf</span>&#125;</span><br><span class="line"><span class="keyword">import</span> org.apache.spark.sql.functions._</span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> cassIps = <span class="type">Set</span>(<span class="string">&quot;192.168.0.121&quot;</span>, <span class="string">&quot;192.168.0.122&quot;</span>, <span class="string">&quot;192.168.0.123&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> spark = <span class="type">SparkSession</span>.builder().appName(<span class="string">&quot;test&quot;</span>)</span><br><span class="line">  .config(<span class="string">&quot;spark.cassandra.connection.host&quot;</span>, cassIps.mkString(<span class="string">&quot;,&quot;</span>))</span><br><span class="line">  .config(<span class="string">&quot;spark.sql.warehouse.dir&quot;</span>, <span class="string">&quot;file:///home/tester&quot;</span>).getOrCreate()</span><br><span class="line">  </span><br><span class="line"><span class="keyword">import</span> spark.implicits._</span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> cassConf = <span class="keyword">new</span> <span class="type">CassandraConnectorConf</span>(cassIps.map(getByName(_)))</span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> exeRes = <span class="keyword">new</span> <span class="type">CassandraConnector</span>(cassConf).withSessionDo &#123; session =&gt;</span><br><span class="line">  session.execute(<span class="string">&quot;CREATE KEYSPACE IF NOT EXISTS test &quot;</span> +</span><br><span class="line">    <span class="string">&quot;WITH REPLICATION = &#123;&#x27;class&#x27;: &#x27;SimpleStrategy&#x27;, &#x27;replication_factor&#x27;: 3 &#125;&quot;</span>)</span><br><span class="line">  session.execute(<span class="string">&quot;DROP TABLE IF EXISTS test.kv2&quot;</span>)</span><br><span class="line">  session.execute(<span class="string">&quot;CREATE TABLE test.kv2 (var0 text, var1 text, var2 double, PRIMARY KEY(var0, var1))&quot;</span>)</span><br><span class="line">  session.execute(<span class="string">&quot;INSERT INTO test.kv2(var0, var1, var2) VALUES (&#x27;T&#x27;, &#x27;A&#x27;, 23.1)&quot;</span>)</span><br><span class="line">  session.execute(<span class="string">&quot;INSERT INTO test.kv2(var0, var1, var2) VALUES (&#x27;T&#x27;, &#x27;B&#x27;, 17.5)&quot;</span>)</span><br><span class="line">  session.execute(<span class="string">&quot;INSERT INTO test.kv2(var0, var1, var2) VALUES (&#x27;U&#x27;, &#x27;B&#x27;, 11.9)&quot;</span>)</span><br><span class="line">  session.execute(<span class="string">&quot;INSERT INTO test.kv2(var0, var1, var2) VALUES (&#x27;U&#x27;, &#x27;A&#x27;, 25.3)&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> collection = spark.sparkContext.parallelize(<span class="type">Seq</span>((<span class="string">&quot;T&quot;</span>, <span class="string">&quot;C&quot;</span>, <span class="number">17.0</span>), (<span class="string">&quot;U&quot;</span>, <span class="string">&quot;C&quot;</span>, <span class="number">5.0</span>)))</span><br><span class="line">collection.saveToCassandra(<span class="string">&quot;test&quot;</span>, <span class="string">&quot;kv2&quot;</span>, <span class="type">SomeColumns</span>(<span class="string">&quot;var0&quot;</span>, <span class="string">&quot;var1&quot;</span>, <span class="string">&quot;var2&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> cass_tbl = spark.read.format(<span class="string">&quot;org.apache.spark.sql.cassandra&quot;</span>)</span><br><span class="line">  .option(<span class="string">&quot;keyspace&quot;</span>, <span class="string">&quot;test&quot;</span>).option(<span class="string">&quot;table&quot;</span>, <span class="string">&quot;kv2&quot;</span>).load()</span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> concatMap = udf((maps: <span class="type">Seq</span>[<span class="type">Map</span>[<span class="type">String</span>, <span class="type">Double</span>]]) =&gt; maps.flatten.toMap)</span><br><span class="line"><span class="keyword">val</span> cass_tbl_agg = cass_tbl.withColumn(<span class="string">&quot;var2_map&quot;</span>, map($<span class="string">&quot;var1&quot;</span>, $<span class="string">&quot;var2&quot;</span>)).groupBy($<span class="string">&quot;var0&quot;</span>).agg(concatMap(collect_list($<span class="string">&quot;var2_map&quot;</span>)).alias(<span class="string">&quot;var2&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">  cass_tbl_agg.createCassandraTable(<span class="string">&quot;test&quot;</span>, <span class="string">&quot;kv2_trans&quot;</span>)</span><br><span class="line">&#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">  <span class="keyword">case</span> e1: com.datastax.driver.core.exceptions.<span class="type">AlreadyExistsException</span> =&gt; <span class="type">None</span></span><br><span class="line">  <span class="keyword">case</span> e2: <span class="type">Exception</span> =&gt; <span class="keyword">throw</span> e2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cass_tbl_agg.write.format(<span class="string">&quot;org.apache.spark.sql.cassandra&quot;</span>).options(<span class="type">Map</span>(<span class="string">&quot;table&quot;</span> -&gt; <span class="string">&quot;kv2_trans&quot;</span>, <span class="string">&quot;keyspace&quot;</span> -&gt; <span class="string">&quot;test&quot;</span>)).mode(<span class="type">SaveMode</span>.<span class="type">Append</span>).save()</span><br></pre></td></tr></table></figure>

<p>裡面的<code>test.kv2</code>會長下面這樣：</p>
<table>
<thead>
<tr>
<th>var0</th>
<th>var1</th>
<th>var2</th>
</tr>
</thead>
<tbody><tr>
<td>T</td>
<td>A</td>
<td>23.1</td>
</tr>
<tr>
<td>T</td>
<td>B</td>
<td>17.5</td>
</tr>
<tr>
<td>T</td>
<td>C</td>
<td>17</td>
</tr>
<tr>
<td>U</td>
<td>A</td>
<td>25.3</td>
</tr>
<tr>
<td>U</td>
<td>B</td>
<td>11.9</td>
</tr>
<tr>
<td>U</td>
<td>C</td>
<td>5</td>
</tr>
</tbody></table>
<p>裡面的<code>test.kv2_trans</code>會長下面這樣：</p>
<p>| var0 | var2                            |<br>|——+———————————|<br>|    T | {‘A’: 23.1, ‘B’: 17.5, ‘C’: 17} |<br>|    U |  {‘A’: 25.3, ‘B’: 11.9, ‘C’: 5} |</p>
<p>可以看到<code>test.kv2</code>是一般長相的table</p>
<p><code>test.kv2_trans</code>則是包含了Map這個資料格式</p>
<p>接下來安裝<code>sparklyr</code></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">install.packages(<span class="string">&quot;devtools&quot;</span>)</span><br><span class="line">devtools::install_github(<span class="string">&quot;rstudio/sparklyr&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>如果照我之前文章跟我設定一樣Spark的路徑的話</p>
<p>下面的R script就可以直接執行看到結果了：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 設定spark home的位置</span></span><br><span class="line">Sys.setenv(SPARK_HOME = <span class="string">&quot;/usr/local/bigdata/spark&quot;</span>)</span><br><span class="line"><span class="comment"># library sparklyr跟dplyr</span></span><br><span class="line"><span class="keyword">library</span>(sparklyr)</span><br><span class="line"><span class="keyword">library</span>(dplyr)</span><br><span class="line"></span><br><span class="line"><span class="comment"># library pipeR跟stringr</span></span><br><span class="line"><span class="keyword">library</span>(pipeR)</span><br><span class="line"><span class="keyword">library</span>(stringr)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 讀取spark的設定</span></span><br><span class="line">spark_settings &lt;- readLines(paste0(Sys.getenv(<span class="string">&quot;SPARK_HOME&quot;</span>), <span class="string">&quot;/conf/spark-defaults.conf&quot;</span>)) %&gt;&gt;%</span><br><span class="line">  `[`(!str_detect(., <span class="string">&quot;^#&quot;</span>)) %&gt;&gt;% `[`(nchar(.) &gt; <span class="number">0</span>) %&gt;&gt;% str_split(<span class="string">&quot;\\s&quot;</span>)</span><br><span class="line"><span class="comment"># 複製sparklyr的預設config檔案</span></span><br><span class="line">file.copy(system.file(file.path(<span class="string">&quot;conf&quot;</span>, <span class="string">&quot;config-template.yml&quot;</span>), </span><br><span class="line">          package = <span class="string">&quot;sparklyr&quot;</span>), <span class="string">&quot;config.yml&quot;</span>, <span class="literal">TRUE</span>)</span><br><span class="line"><span class="comment"># 把spark的設定寫進config去</span></span><br><span class="line">sink(<span class="string">&quot;config.yml&quot;</span>, <span class="literal">TRUE</span>)</span><br><span class="line">sapply(spark_settings %&gt;&gt;% sapply(paste, collapse = <span class="string">&quot;: &quot;</span>), </span><br><span class="line">       <span class="keyword">function</span>(x) cat(<span class="string">&quot; &quot;</span>, x, <span class="string">&quot;\n&quot;</span>)) %&gt;&gt;% invisible</span><br><span class="line">sink()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 開啟spark connection</span></span><br><span class="line">spark_master &lt;- <span class="string">&quot;mesos://zk://192.168.0.121:2181,192.168.0.122:2181,192.168.0.123:2181/mesos&quot;</span></span><br><span class="line">sc &lt;- spark_connect(master = spark_master, config = spark_config(<span class="string">&quot;config.yml&quot;</span>, <span class="literal">FALSE</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 開啟spark session</span></span><br><span class="line">sparkSession &lt;- invoke_static(sc2, <span class="string">&quot;org.apache.spark.sql.SparkSession&quot;</span>, <span class="string">&quot;builder&quot;</span>) %&gt;&gt;%</span><br><span class="line">  invoke(<span class="string">&quot;config&quot;</span>, <span class="string">&quot;spark.cassandra.connection.host&quot;</span>, </span><br><span class="line">         <span class="string">&quot;192.168.0.121,192.168.0.122,192.168.0.123&quot;</span>) %&gt;&gt;%</span><br><span class="line">  invoke(<span class="string">&quot;getOrCreate&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 讀取Cassandra table，可以看到讀進來是Dataset，還是一個java的物件</span></span><br><span class="line">cass_df &lt;- invoke(sparkSession, <span class="string">&quot;read&quot;</span>) %&gt;&gt;% </span><br><span class="line">  invoke(<span class="string">&quot;format&quot;</span>, <span class="string">&quot;org.apache.spark.sql.cassandra&quot;</span>) %&gt;&gt;%</span><br><span class="line">  invoke(<span class="string">&quot;option&quot;</span>, <span class="string">&quot;keyspace&quot;</span>, <span class="string">&quot;test&quot;</span>) %&gt;&gt;% invoke(<span class="string">&quot;option&quot;</span>, <span class="string">&quot;table&quot;</span>, <span class="string">&quot;kv2&quot;</span>) %&gt;&gt;%</span><br><span class="line">  invoke(<span class="string">&quot;load&quot;</span>) %&gt;&gt;% (~ print(cass_df))</span><br><span class="line"><span class="comment"># &lt;jobj[32]&gt;</span></span><br><span class="line"><span class="comment">#   class org.apache.spark.sql.Dataset</span></span><br><span class="line"><span class="comment">#   [var0: string, var1: string ... 1 more field]</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># register Spark dataframe，註冊後，就可以在R裡面看到部分資料，並且可以使用dplyr</span></span><br><span class="line">cass_df_tbl &lt;- sparklyr:::spark_partition_register_df(sc2, cass_df, <span class="string">&quot;test_kv2&quot;</span>, <span class="number">0</span>, <span class="literal">TRUE</span>)</span><br><span class="line">print(cass_df_tbl)</span><br><span class="line"><span class="comment"># Source:   query [?? x 3]</span></span><br><span class="line"><span class="comment"># Database: spark connection master=mesos://zk://192.168.0.121:2181,192.168.0.122:2181,192.168.0.123:2181/mesos app=sparklyr local=FALSE</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment">#    var0  var1  var2</span></span><br><span class="line"><span class="comment">#   &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt;</span></span><br><span class="line"><span class="comment"># 1     T     A  23.1</span></span><br><span class="line"><span class="comment"># 2     T     B  17.5</span></span><br><span class="line"><span class="comment"># 3     T     C  17.0</span></span><br><span class="line"><span class="comment"># 4     U     A  25.3</span></span><br><span class="line"><span class="comment"># 5     U     B  11.9</span></span><br><span class="line"><span class="comment"># 6     U     C   5.0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 測試一下filter，可以發現結果還 ?? x 3，因為dplyr這裡還是lazy，還沒做回收的動作</span></span><br><span class="line">cass_df_tbl %&gt;&gt;% filter(var2 &gt; <span class="number">5</span>)</span><br><span class="line"><span class="comment"># Source:   query [?? x 3]</span></span><br><span class="line"><span class="comment"># Database: spark connection master=mesos://zk://192.168.0.121:2181,192.168.0.122:2181,192.168.0.123:2181/mesos app=sparklyr local=FALSE</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment">#    var0  var1  var2</span></span><br><span class="line"><span class="comment">#   &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt;</span></span><br><span class="line"><span class="comment"># 1     T     A  23.1</span></span><br><span class="line"><span class="comment"># 2     T     B  17.5</span></span><br><span class="line"><span class="comment"># 3     T     C  17.0</span></span><br><span class="line"><span class="comment"># 4     U     A  25.3</span></span><br><span class="line"><span class="comment"># 5     U     B  11.9</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用as.data.frame就會變成local了</span></span><br><span class="line">cass_df_tbl %&gt;&gt;% filter(var2 &gt; <span class="number">5</span>) %&gt;&gt;% as.data.frame</span><br><span class="line"><span class="comment">#   var0 var1 var2</span></span><br><span class="line"><span class="comment"># 1    T    A 23.1</span></span><br><span class="line"><span class="comment"># 2    T    B 17.5</span></span><br><span class="line"><span class="comment"># 3    T    C 17.0</span></span><br><span class="line"><span class="comment"># 4    U    A 25.3</span></span><br><span class="line"><span class="comment"># 5    U    B 11.9</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 這裡也可以使用很多org.apache.spark.sql.functions中的函數</span></span><br><span class="line"><span class="comment"># 最簡單的如abs, min, max, sin, cos, sqrt等</span></span><br><span class="line"><span class="comment"># 到比較少見的如map, collect_list, unix_timestamp等</span></span><br><span class="line"><span class="comment"># 下面示範把column在spark裡面bind成map</span></span><br><span class="line">cass_df_tbl_agg &lt;- cass_df_tbl %&gt;&gt;% mutate(var2_map = map(var1, var2)) %&gt;&gt;% </span><br><span class="line">  group_by(var0) %&gt;&gt;% summarise(var2 = collect_list(var2_map)) %&gt;&gt;% as.data.frame</span><br><span class="line">  </span><br><span class="line"><span class="comment"># print data.frame，看不到map的key</span></span><br><span class="line">print(cass_df_tbl_agg)</span><br><span class="line"><span class="comment">#   var0             var2</span></span><br><span class="line"><span class="comment"># 1    T 23.1, 17.5, 17.0</span></span><br><span class="line"><span class="comment"># 2    U  25.3, 11.9, 5.0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 用str看，可以看到key還是有被留下來</span></span><br><span class="line"><span class="comment"># 只是要在R裡面再做一點處理而已，這部分就越過</span></span><br><span class="line">str(cass_df_tbl_agg)</span><br><span class="line"><span class="string">&#x27;data.frame&#x27;</span>:	<span class="number">2</span> obs. of  <span class="number">2</span> variables:</span><br><span class="line"> $ var0: chr  <span class="string">&quot;T&quot;</span> <span class="string">&quot;U&quot;</span></span><br><span class="line"> $ var2:List of <span class="number">2</span></span><br><span class="line">  ..$ :List of <span class="number">3</span></span><br><span class="line">  .. ..$ :List of <span class="number">1</span></span><br><span class="line">  .. .. ..$ A: num <span class="number">23.1</span></span><br><span class="line">  .. ..$ :List of <span class="number">1</span></span><br><span class="line">  .. .. ..$ B: num <span class="number">17.5</span></span><br><span class="line">  .. ..$ :List of <span class="number">1</span></span><br><span class="line">  .. .. ..$ C: num <span class="number">17</span></span><br><span class="line">  ..$ :List of <span class="number">3</span></span><br><span class="line">  .. ..$ :List of <span class="number">1</span></span><br><span class="line">  .. .. ..$ A: num <span class="number">25.3</span></span><br><span class="line">  .. ..$ :List of <span class="number">1</span></span><br><span class="line">  .. .. ..$ B: num <span class="number">11.9</span></span><br><span class="line">  .. ..$ :List of <span class="number">1</span></span><br><span class="line">  .. .. ..$ C: num <span class="number">5</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 再來是直接從Cassandra讀入那張含有map欄位的表，一樣是Dataset</span></span><br><span class="line">cass_df_2 &lt;- invoke(sparkSession, <span class="string">&quot;read&quot;</span>) %&gt;&gt;% </span><br><span class="line">  invoke(<span class="string">&quot;format&quot;</span>, <span class="string">&quot;org.apache.spark.sql.cassandra&quot;</span>) %&gt;&gt;%</span><br><span class="line">  invoke(<span class="string">&quot;option&quot;</span>, <span class="string">&quot;keyspace&quot;</span>, <span class="string">&quot;test&quot;</span>) %&gt;&gt;% invoke(<span class="string">&quot;option&quot;</span>, <span class="string">&quot;table&quot;</span>, <span class="string">&quot;kv2_trans&quot;</span>) %&gt;&gt;%</span><br><span class="line">  invoke(<span class="string">&quot;load&quot;</span>) %&gt;&gt;% (~print(.))</span><br><span class="line"><span class="comment"># &lt;jobj[51]&gt;</span></span><br><span class="line"><span class="comment">#   class org.apache.spark.sql.Dataset</span></span><br><span class="line"><span class="comment">#   [var0: string, var2: map&lt;string,double&gt;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 一樣做register的動作</span></span><br><span class="line">cass_df_tbl_2 &lt;- sparklyr:::spark_partition_register_df(sc2, cass_df_2, <span class="string">&quot;test_kv2_trans&quot;</span>, <span class="number">0</span>, <span class="literal">TRUE</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># print出來看看，是變成list了，只是不知道有沒有抓到key</span></span><br><span class="line">print(cass_df_tbl_2)</span><br><span class="line"><span class="comment"># Source:   query [?? x 2]</span></span><br><span class="line"><span class="comment"># Database: spark connection master=mesos://zk://192.168.0.121:2181,192.168.0.122:2181,192.168.0.123:2181/mesos app=sparklyr local=FALSE</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment">#    var0       var2</span></span><br><span class="line"><span class="comment">#   &lt;chr&gt;     &lt;list&gt;</span></span><br><span class="line"><span class="comment"># 1     T &lt;list [3]&gt;</span></span><br><span class="line"><span class="comment"># 2     U &lt;list [3]&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 拉回local瞧瞧，可以看到變成很漂亮的format</span></span><br><span class="line">as.data.frame(cass_df_tbl_2) %&gt;&gt;% str</span><br><span class="line"><span class="comment"># &#x27;data.frame&#x27;:	2 obs. of  2 variables:</span></span><br><span class="line"><span class="comment">#  $ var0: chr  &quot;T&quot; &quot;U&quot;</span></span><br><span class="line"><span class="comment">#  $ var2:List of 2</span></span><br><span class="line"><span class="comment">#   ..$ :List of 3</span></span><br><span class="line"><span class="comment">#   .. ..$ A: num 23.1</span></span><br><span class="line"><span class="comment">#   .. ..$ B: num 17.5</span></span><br><span class="line"><span class="comment">#   .. ..$ C: num 17</span></span><br><span class="line"><span class="comment">#   ..$ :List of 3</span></span><br><span class="line"><span class="comment">#   .. ..$ A: num 25.3</span></span><br><span class="line"><span class="comment">#   .. ..$ B: num 11.9</span></span><br><span class="line"><span class="comment">#   .. ..$ C: num 5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 這裡拉回local，用data.table稍微整一下就可以回到test.kv2的樣子了</span></span><br><span class="line">cass_df_tbl_2_r &lt;- as.data.frame(cass_df_tbl_2) %&gt;&gt;% data.table %&gt;&gt;%</span><br><span class="line">  `[`( , `:=`(var2_v = lapply(var2, unlist), var2_k = lapply(var2, names))) %&gt;&gt;%</span><br><span class="line">  `[`( , .(var2_value = unlist(var2_v), var2_key = unlist(var2_k)), by = <span class="string">&quot;var0&quot;</span>) %&gt;&gt;%</span><br><span class="line">  (~ print(.))</span><br><span class="line"><span class="comment">#    var0 var2_value var2_key</span></span><br><span class="line"><span class="comment"># 1:    T       23.1        A</span></span><br><span class="line"><span class="comment"># 2:    T       17.5        B</span></span><br><span class="line"><span class="comment"># 3:    T       17.0        C</span></span><br><span class="line"><span class="comment"># 4:    U       25.3        A</span></span><br><span class="line"><span class="comment"># 5:    U       11.9        B</span></span><br><span class="line"><span class="comment"># 6:    U        5.0        C</span></span><br></pre></td></tr></table></figure>

<p>以上是sparklyr的初探，並嘗試Cassandra的結果</p>
<p>一些小心得：</p>
<p>沒有辦法直接udf，無法直接套用R函數是致命傷</p>
<p>幾乎都要去翻spark.sql.functions的document</p>
<p>能用的操作少之又少，又懶得去寫extension</p>
<p>希望這部分能趕快有enhancement，滿期待這個出現<a href="https://github.com/rstudio/sparklyr/issues/191">Github issue</a></p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>BigData</tag>
        <tag>Cassandra</tag>
        <tag>Spark</tag>
        <tag>sparkly</tag>
      </tags>
  </entry>
  <entry>
    <title>SparkR初探</title>
    <url>/posts/201609/2016-09-09-sparkr.html</url>
    <content><![CDATA[<p>雖然順序有點反了，先介紹了sparklyr</p>
<p>這裡就簡單show一下怎麼用SparkR，並且去拉Cassandra的table</p>
<a id="more"></a>

<p>R跟rstudio server就不贅述了</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 讓R能夠找到SparkR套件</span></span><br><span class="line">Sys.setenv(SPARK_HOME = <span class="string">&quot;/usr/local/bigdata/spark&quot;</span>)</span><br><span class="line">.libPaths(c(.libPaths(), paste0(Sys.getenv(<span class="string">&quot;SPARK_HOME&quot;</span>), <span class="string">&quot;/R/lib&quot;</span>)))</span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(SparkR)</span><br><span class="line"><span class="keyword">library</span>(pipeR)</span><br><span class="line"><span class="keyword">library</span>(stringr)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 讀取spark設定</span></span><br><span class="line">spark_settings &lt;- readLines(paste0(Sys.getenv(<span class="string">&quot;SPARK_HOME&quot;</span>), <span class="string">&quot;/conf/spark-defaults.conf&quot;</span>)) %&gt;&gt;%</span><br><span class="line">  `[`(!str_detect(., <span class="string">&quot;^#&quot;</span>)) %&gt;&gt;% `[`(nchar(.) &gt; <span class="number">0</span>) %&gt;&gt;% str_split(<span class="string">&quot;\\s&quot;</span>) %&gt;&gt;% &#123;</span><br><span class="line">    `names&lt;-`(lapply(., `[`, <span class="number">2</span>), sapply(., `[`, <span class="number">1</span>))</span><br><span class="line">  &#125; %&gt;&gt;% c(list(spark.cassandra.connection.host = </span><br><span class="line">                  <span class="string">&quot;192.168.0.121,192.168.0.122,192.168.0.123&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 開spark session</span></span><br><span class="line">sc &lt;- sparkR.session(master = spark_master, </span><br><span class="line">                     sparkJars = spark_settings$spark.jars %&gt;&gt;% str_split(<span class="string">&quot;,&quot;</span>) %&gt;&gt;% `[[`(<span class="number">1</span>),</span><br><span class="line">                     sparkConfig = spark_settings)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 讀入Cassandra表</span></span><br><span class="line">cass_tbl &lt;- read.df(<span class="literal">NULL</span>, <span class="keyword">source</span> = <span class="string">&quot;org.apache.spark.sql.cassandra&quot;</span>,</span><br><span class="line">                 keyspace = <span class="string">&quot;test&quot;</span>, table = <span class="string">&quot;kv2&quot;</span>)</span><br><span class="line">                 </span><br><span class="line"><span class="comment"># 拉回local</span></span><br><span class="line">cass_tbl_r &lt;- as.data.frame(cass_tbl)</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>BigData</tag>
        <tag>Spark</tag>
        <tag>SparkR</tag>
      </tags>
  </entry>
  <entry>
    <title>simple file server in centos</title>
    <url>/posts/201609/2016-09-07-simple-file-server-centos.html</url>
    <content><![CDATA[<p>這篇主要是講在centos做一個簡單的file server</p>
<a id="more"></a>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安裝httpd</span></span><br><span class="line">sudo yum install httpd</span><br><span class="line"></span><br><span class="line"><span class="comment"># create sharing folder</span></span><br><span class="line">sudo mkdir /var/www/html/share</span><br><span class="line">sudo chown tester:tester /var/www/html/share</span><br><span class="line"></span><br><span class="line"><span class="comment"># link to ~/share</span></span><br><span class="line">ln -s /var/www/html/share /home/tester/share</span><br><span class="line"></span><br><span class="line"><span class="comment"># 啟動</span></span><br><span class="line">sudo service httpd start  </span><br></pre></td></tr></table></figure>

<p>接下來只要把檔案放進<code>/home/tester/html/share</code></p>
<p>然後連到那台電腦的IP下面的share就可以看到file server了</p>
<p>像我電腦就是連到<code>192.168.0.121:80/share</code></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>CentOS</tag>
        <tag>File Server</tag>
      </tags>
  </entry>
  <entry>
    <title>sparklyr extensions</title>
    <url>/posts/201609/2016-09-10-sparkrlyr-extensions.html</url>
    <content><![CDATA[<p>稍微介紹一下sparklyr的extension寫法</p>
<p>但是細節都還在研究，只是環境的配置跟使用官方的extension套件而已</p>
<a id="more"></a>

<p>環境只有一點要注意，sparklyr只會找下面三個地方有沒有<code>scala-2.10</code>或是<code>scala-2.11</code></p>
<ol>
<li>/opt/local/scala</li>
<li>/usr/local/scala</li>
<li>/opt/scala</li>
</ol>
<p>所以根據我之前的配置就需要重新做調整</p>
<p>使用下面的指令做調整的動作即可</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mkdir /usr/<span class="built_in">local</span>/scala</span><br><span class="line">sudo mv /usr/<span class="built_in">local</span>/bigdata/scala /usr/<span class="built_in">local</span>/scala/scala-2.11</span><br></pre></td></tr></table></figure>

<p>接著run下面的script</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(sparklyr)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下載sparkhello套件</span></span><br><span class="line"><span class="keyword">if</span> (!dir.exists(<span class="string">&quot;sparkhello&quot;</span>))</span><br><span class="line">  git2r::clone(<span class="string">&quot;https://github.com/jjallaire/sparkhello.git&quot;</span>, <span class="string">&quot;sparkhello&quot;</span>)</span><br><span class="line"><span class="comment"># 移除prebuild的jar檔</span></span><br><span class="line">file.remove(<span class="string">&quot;sparkhello/inst/java/sparkhello-1.6-2.10.jar&quot;</span>)</span><br><span class="line">file.remove(<span class="string">&quot;sparkhello/inst/java/sparkhello-2.0-2.11.jar&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 工作目錄設定在套件root</span></span><br><span class="line">setwd(<span class="string">&quot;sparkhello&quot;</span>)</span><br><span class="line"><span class="comment"># 指定jar名稱</span></span><br><span class="line">jar_name &lt;- sparklyr:::infer_active_package_name() %&gt;&gt;% paste0(<span class="string">&quot;-2.0-2.11.jar&quot;</span>)</span><br><span class="line"><span class="comment"># 編譯jar</span></span><br><span class="line">compile_package_jars(spark_version = <span class="string">&quot;2.0.0&quot;</span>, spark_home = Sys.getenv(<span class="string">&quot;SPARK_HOME&quot;</span>),</span><br><span class="line">                     scalac_path = find_scalac(<span class="string">&quot;2.11&quot;</span>), jar_name = jar_name)</span><br><span class="line"><span class="comment"># build套件</span></span><br><span class="line">devtools::build()</span><br><span class="line"><span class="comment"># install套件</span></span><br><span class="line">devtools::install()</span><br><span class="line"><span class="comment"># 工作目錄回到上一層</span></span><br><span class="line">setwd(<span class="string">&quot;..&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切斷之前的連線，這點很重要，不然用之前的連線的話</span></span><br><span class="line"><span class="comment"># 不會把套件中的jar檔load進去</span></span><br><span class="line">spark_disconnect_all()</span><br><span class="line"></span><br><span class="line"><span class="comment"># library套件</span></span><br><span class="line"><span class="keyword">library</span>(sparkhello)</span><br><span class="line"><span class="comment"># create spark connection</span></span><br><span class="line">spark_master &lt;- <span class="string">&quot;mesos://zk://192.168.0.121:2181,192.168.0.122:2181,192.168.0.123:2181/mesos&quot;</span></span><br><span class="line">sc &lt;- spark_connect(master = spark_master, config = spark_config(<span class="string">&quot;config.yml&quot;</span>, <span class="literal">FALSE</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 執行</span></span><br><span class="line">spark_hello(sc)</span><br><span class="line"><span class="comment"># [1] &quot;Hello, world! - From Scala&quot;</span></span><br></pre></td></tr></table></figure>

<p>以上就是sparklyr的extension部分</p>
<p>很可惜的是這個範例沒有講到怎麼傳參數到scala裡面</p>
<p>也不知道能不能設定一些函數，output到R裡面使用</p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>BigData</tag>
        <tag>Spark</tag>
        <tag>sparkly</tag>
      </tags>
  </entry>
  <entry>
    <title>使用python的套件supervisor監控程式 - 以Cassandra, Spark, Mesos為例</title>
    <url>/posts/201609/2016-09-14-python-supervisor-monitor.html</url>
    <content><![CDATA[<p>Python的supervisor是一套簡單、輕量的監控系統服務之工具</p>
<p>透過簡單的安裝跟些許的設定即可以達到想要的效果</p>
<a id="more"></a>

<p>先安裝supervisor:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum install python-setuptools</span><br><span class="line">sudo easy_install pip</span><br><span class="line">sudo pip install supervisor</span><br><span class="line"><span class="comment"># echo default config</span></span><br><span class="line">sudo mkdir /etc/supervisor</span><br><span class="line">sudo mkdir /var/<span class="built_in">log</span>/supervisor</span><br><span class="line">sudo bash -c <span class="string">&#x27;echo_supervisord_conf &gt; /etc/supervisor/supervisord.conf&#x27;</span></span><br></pre></td></tr></table></figure>

<p>使用<code>sudo vi /etc/supervisor/supervisord.conf</code>編輯，更動下面的設定(記得針對每一台的IP要做更改)：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[inet_http_server]         ; inet (TCP) server disabled by default</span><br><span class="line">port&#x3D;192.168.0.121:10088   ; (ip_address:port specifier, *:port for all iface)</span><br><span class="line">username&#x3D;tester            ; (default is no username (open server))</span><br><span class="line">password&#x3D;qscf12356         ; (default is no password (open server))</span><br><span class="line"></span><br><span class="line">[supervisorctl]</span><br><span class="line">serverurl&#x3D;unix:&#x2F;&#x2F;&#x2F;tmp&#x2F;supervisor.sock ; use a unix:&#x2F;&#x2F; URL  for a unix socket</span><br><span class="line">serverurl&#x3D;http:&#x2F;&#x2F;192.168.0.121:10088 ; use an http:&#x2F;&#x2F; url to specify an inet socket</span><br><span class="line">username&#x3D;tester              ; should be same as http_username if set</span><br><span class="line">password&#x3D;qscf12356          ; should be same as http_password if set</span><br><span class="line"></span><br><span class="line">[supervisord]</span><br><span class="line">environment&#x3D;</span><br><span class="line">  JAVA_HOME&#x3D;&#x2F;usr&#x2F;java&#x2F;jdk1.8.0_101,</span><br><span class="line">  SPARK_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;bigdata&#x2F;spark,</span><br><span class="line">  ZOOKEEPER_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;bigdata&#x2F;zookeeper,</span><br><span class="line">  CASSANDRA_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;bigdata&#x2F;cassandra</span><br></pre></td></tr></table></figure>

<p>如果之前有設定過自動啟動，先關掉：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl stop mesos-master</span><br><span class="line">sudo systemctl stop mesos-slave</span><br><span class="line">sudo systemctl <span class="built_in">disable</span> mesos-master</span><br><span class="line">sudo systemctl <span class="built_in">disable</span> mesos-slave</span><br><span class="line"></span><br><span class="line">sudo service cassandra stop</span><br><span class="line">sudo service zookeeper stop</span><br><span class="line">sudo service spark-shuffle stop</span><br><span class="line"></span><br><span class="line">sudo chkconfig --del cassandra</span><br><span class="line">sudo chkconfig --del zookeeper</span><br><span class="line">sudo chkconfig --del spark-shuffle </span><br><span class="line"></span><br><span class="line">sudo rm /etc/init.d/cassandra</span><br><span class="line">sudo rm /etc/init.d/spark-shuffle   </span><br><span class="line">sudo rm /etc/init.d/zookeeper</span><br></pre></td></tr></table></figure>

<p>最後是使用下面的script去配置supervisord：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo tee -a /etc/supervisor/supervisord.conf &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line"></span><br><span class="line">[program:cassandra]</span><br><span class="line"><span class="built_in">command</span>=/bin/bash -c <span class="string">&quot;<span class="variable">$CASSANDRA_HOME</span>/bin/cassandra -f&quot;</span></span><br><span class="line">stdout_logfile=/var/<span class="built_in">log</span>/supervisor/cassandra-stdout.out</span><br><span class="line">stderr_logfile=/var/<span class="built_in">log</span>/supervisor/cassandra-stderr.out</span><br><span class="line">autostart=<span class="literal">true</span></span><br><span class="line">startsecs=5</span><br><span class="line">priority=50</span><br><span class="line"></span><br><span class="line">[program:mesos-slave]</span><br><span class="line"><span class="built_in">command</span>=/bin/bash -c <span class="string">&quot;/usr/bin/mesos-init-wrapper slave&quot;</span></span><br><span class="line">stdout_logfile=/var/<span class="built_in">log</span>/supervisor/mesos-slave-stdout.out</span><br><span class="line">stderr_logfile=/var/<span class="built_in">log</span>/supervisor/mesos-slave-stderr.out</span><br><span class="line">autostart=<span class="literal">true</span></span><br><span class="line">startsecs=5</span><br><span class="line">priority=80</span><br><span class="line"></span><br><span class="line">[program:spark-mesos-shuffle]</span><br><span class="line"><span class="built_in">command</span>=/bin/bash -c <span class="string">&quot;<span class="variable">$SPARK_HOME</span>/bin/spark-submit --class org.apache.spark.deploy.mesos.MesosExternalShuffleService 1&quot;</span></span><br><span class="line">stdout_logfile=/var/<span class="built_in">log</span>/supervisor/spark-mesos-shuffle-stdout.out</span><br><span class="line">stderr_logfile=/var/<span class="built_in">log</span>/supervisor/spark-mesos-shuffle-stderr.out</span><br><span class="line">autostart=<span class="literal">true</span></span><br><span class="line">startsecs=5</span><br><span class="line">priority=90</span><br><span class="line"></span><br><span class="line">; 下面只有需要的node才要配置</span><br><span class="line">[program:zookeeper]</span><br><span class="line"><span class="built_in">command</span>=/bin/bash -c <span class="string">&quot;<span class="variable">$ZOOKEEPER_HOME</span>/bin/zkServer.sh start-foreground&quot;</span></span><br><span class="line">stdout_logfile=/var/<span class="built_in">log</span>/supervisor/zookeeper-stdout.out</span><br><span class="line">stderr_logfile=/var/<span class="built_in">log</span>/supervisor/zookeeper-stderr.out</span><br><span class="line">autostart=<span class="literal">true</span></span><br><span class="line">startsecs=10</span><br><span class="line">priority=50</span><br><span class="line"></span><br><span class="line">[program:mesos-master]</span><br><span class="line"><span class="built_in">command</span>=/bin/bash -c <span class="string">&quot;/usr/bin/mesos-init-wrapper master&quot;</span></span><br><span class="line">stdout_logfile=/var/<span class="built_in">log</span>/supervisor/mesos-master-stdout.out</span><br><span class="line">stderr_logfile=/var/<span class="built_in">log</span>/supervisor/mesos-master-stderr.out</span><br><span class="line">autostart=<span class="literal">true</span></span><br><span class="line">startsecs=5</span><br><span class="line">priority=60</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<p>再來是配置supervisor的自動啟動服務</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo tee -a /usr/lib/systemd/system/supervisor.service &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=supervisor</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/usr/bin/supervisord -c /etc/supervisor/supervisord.conf</span><br><span class="line">ExecStop=/usr/bin/supervisorctl <span class="variable">$OPTIONS</span> shutdown</span><br><span class="line">ExecReload=/usr/bin/supervisorctl <span class="variable">$OPTIONS</span> reload</span><br><span class="line">KillMode=process</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=42s</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl start supervisor.service</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> supervisor.service</span><br></pre></td></tr></table></figure>

<p>最後使用設定的IP跟PORT，連上該網址，像是我的設定是連<code>http://192.168.0.121:10088</code></p>
<p>就可以看到可以手動操作的部分了</p>
]]></content>
      <categories>
        <category>BigData</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BigData</tag>
        <tag>Cassandra</tag>
        <tag>Spark</tag>
        <tag>Mesos</tag>
        <tag>supervisor</tag>
        <tag>monitor</tag>
      </tags>
  </entry>
  <entry>
    <title>Spark assembly</title>
    <url>/posts/201609/2016-09-15-spark-assembly.html</url>
    <content><![CDATA[<p>之前一直配置失敗的Spark assembly</p>
<p>今天花了點時間GOOGLE，終於可以成功assembly了</p>
<p>也可以擺脫在Spark設定時候那些Jars檔了</p>
<a id="more"></a>

<p>在Intellij開啟專案後，在<code>build.sbt</code>新增如下：</p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Spark相關的記得都加上 % &quot;provided&quot; 因為cluster上已經會有對應的jar檔了</span></span><br><span class="line">libraryDependencies ++= <span class="type">Seq</span>(</span><br><span class="line">  <span class="string">&quot;com.datastax.spark&quot;</span> %% <span class="string">&quot;spark-cassandra-connector&quot;</span> % <span class="string">&quot;2.0.0-M1&quot;</span>,</span><br><span class="line">  <span class="string">&quot;org.apache.spark&quot;</span> %% <span class="string">&quot;spark-core&quot;</span> % <span class="string">&quot;2.0.0&quot;</span> % <span class="string">&quot;provided&quot;</span>,</span><br><span class="line">  <span class="string">&quot;org.apache.spark&quot;</span> %% <span class="string">&quot;spark-sql&quot;</span> % <span class="string">&quot;2.0.0&quot;</span> % <span class="string">&quot;provided&quot;</span>,</span><br><span class="line">  <span class="string">&quot;org.apache.spark&quot;</span> %% <span class="string">&quot;spark-mllib&quot;</span> % <span class="string">&quot;2.0.0&quot;</span> % <span class="string">&quot;provided&quot;</span>,</span><br><span class="line">  <span class="string">&quot;com.databricks&quot;</span> %% <span class="string">&quot;spark-csv&quot;</span> % <span class="string">&quot;1.5.0&quot;</span>,</span><br><span class="line">  <span class="string">&quot;com.github.nscala-time&quot;</span> % <span class="string">&quot;nscala-time_2.11&quot;</span> % <span class="string">&quot;2.14.0&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 避免重複納入，只merge第一個出現的檔案</span></span><br><span class="line">assemblyMergeStrategy in assembly := &#123;</span><br><span class="line">  <span class="keyword">case</span> <span class="type">PathList</span>(ps @ _*) <span class="keyword">if</span> ps.last endsWith <span class="string">&quot;.properties&quot;</span> =&gt; <span class="type">MergeStrategy</span>.first</span><br><span class="line">  <span class="keyword">case</span> x =&gt;</span><br><span class="line">    <span class="keyword">val</span> oldStrategy = (assemblyMergeStrategy in assembly).value</span><br><span class="line">    oldStrategy(x)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 避免出現com.google.guava版本低於1.6.1的錯誤</span></span><br><span class="line">assemblyShadeRules in assembly := <span class="type">Seq</span>(</span><br><span class="line">  <span class="type">ShadeRule</span>.rename(<span class="string">&quot;com.google.**&quot;</span> -&gt; <span class="string">&quot;shadeio.@1&quot;</span>).inAll</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<p>並在project下方新增一個檔案<code>assembly.sbt</code>，其內容是：</p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line">addSbtPlugin(<span class="string">&quot;com.eed3si9n&quot;</span> % <span class="string">&quot;sbt-assembly&quot;</span> % <span class="string">&quot;0.14.3&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>接著在src/main/scala-2.11裡面新增檔案<code>cassSpark.scala</code></p>
<p>程式內容如下：</p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.<span class="type">InetAddress</span>._</span><br><span class="line"><span class="keyword">import</span> com.datastax.spark.connector._</span><br><span class="line"><span class="keyword">import</span> org.apache.spark.sql.&#123;<span class="type">SparkSession</span>, <span class="type">SaveMode</span>&#125;</span><br><span class="line"><span class="keyword">import</span> com.datastax.spark.connector.cql.&#123;<span class="type">CassandraConnector</span>, <span class="type">CassandraConnectorConf</span>&#125;</span><br><span class="line"><span class="keyword">import</span> org.apache.spark.sql.functions._</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">cassSpark</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]) &#123;</span><br><span class="line">    <span class="keyword">val</span> cassIps = <span class="type">Set</span>(<span class="string">&quot;192.168.0.121&quot;</span>, <span class="string">&quot;192.168.0.122&quot;</span>, <span class="string">&quot;192.168.0.123&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> spark = <span class="type">SparkSession</span>.builder().appName(<span class="string">&quot;test&quot;</span>)</span><br><span class="line">      .config(<span class="string">&quot;spark.cassandra.connection.host&quot;</span>, cassIps.mkString(<span class="string">&quot;,&quot;</span>))</span><br><span class="line">      .config(<span class="string">&quot;spark.sql.warehouse.dir&quot;</span>, <span class="string">&quot;file:///home/tester&quot;</span>).getOrCreate()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">import</span> spark.implicits._</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> cassConf = <span class="keyword">new</span> <span class="type">CassandraConnectorConf</span>(cassIps.map(getByName(_)))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> exeRes = <span class="keyword">new</span> <span class="type">CassandraConnector</span>(cassConf).withSessionDo &#123; session =&gt;</span><br><span class="line">      session.execute(<span class="string">&quot;CREATE KEYSPACE IF NOT EXISTS test &quot;</span> +</span><br><span class="line">        <span class="string">&quot;WITH REPLICATION = &#123;&#x27;class&#x27;: &#x27;SimpleStrategy&#x27;, &#x27;replication_factor&#x27;: 3 &#125;&quot;</span>)</span><br><span class="line">      session.execute(<span class="string">&quot;DROP TABLE IF EXISTS test.testtbl&quot;</span>)</span><br><span class="line">      session.execute(<span class="string">&quot;CREATE TABLE test.testtbl (var0 text, var1 text, var2 double, PRIMARY KEY(var0, var1))&quot;</span>)</span><br><span class="line">      session.execute(<span class="string">&quot;INSERT INTO test.testtbl(var0, var1, var2) VALUES (&#x27;T&#x27;, &#x27;A&#x27;, 23.1)&quot;</span>)</span><br><span class="line">      session.execute(<span class="string">&quot;INSERT INTO test.testtbl(var0, var1, var2) VALUES (&#x27;T&#x27;, &#x27;B&#x27;, 17.5)&quot;</span>)</span><br><span class="line">      session.execute(<span class="string">&quot;INSERT INTO test.testtbl(var0, var1, var2) VALUES (&#x27;U&#x27;, &#x27;B&#x27;, 11.9)&quot;</span>)</span><br><span class="line">      session.execute(<span class="string">&quot;INSERT INTO test.testtbl(var0, var1, var2) VALUES (&#x27;U&#x27;, &#x27;A&#x27;, 25.3)&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> collection = spark.sparkContext.parallelize(<span class="type">Seq</span>((<span class="string">&quot;T&quot;</span>, <span class="string">&quot;C&quot;</span>, <span class="number">17.0</span>), (<span class="string">&quot;U&quot;</span>, <span class="string">&quot;C&quot;</span>, <span class="number">5.0</span>)))</span><br><span class="line">    collection.saveToCassandra(<span class="string">&quot;test&quot;</span>, <span class="string">&quot;testtbl&quot;</span>, <span class="type">SomeColumns</span>(<span class="string">&quot;var0&quot;</span>, <span class="string">&quot;var1&quot;</span>, <span class="string">&quot;var2&quot;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> cass_tbl = spark.read.format(<span class="string">&quot;org.apache.spark.sql.cassandra&quot;</span>)</span><br><span class="line">      .option(<span class="string">&quot;keyspace&quot;</span>, <span class="string">&quot;test&quot;</span>).option(<span class="string">&quot;table&quot;</span>, <span class="string">&quot;testtbl&quot;</span>).load()</span><br><span class="line"></span><br><span class="line">    cass_tbl.write.format(<span class="string">&quot;com.databricks.spark.csv&quot;</span>).option(<span class="string">&quot;header&quot;</span>, <span class="string">&quot;true&quot;</span>).save(<span class="string">&quot;file:///home/tester/test.csv&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> concatMap = udf((maps: <span class="type">Seq</span>[<span class="type">Map</span>[<span class="type">String</span>, <span class="type">Double</span>]]) =&gt; maps.flatten.toMap)</span><br><span class="line">    <span class="keyword">val</span> cass_tbl_agg = cass_tbl.withColumn(<span class="string">&quot;var2_map&quot;</span>, map($<span class="string">&quot;var1&quot;</span>, $<span class="string">&quot;var2&quot;</span>)).groupBy($<span class="string">&quot;var0&quot;</span>).agg(concatMap(collect_list($<span class="string">&quot;var2_map&quot;</span>)).alias(<span class="string">&quot;var2&quot;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      cass_tbl_agg.createCassandraTable(<span class="string">&quot;test&quot;</span>, <span class="string">&quot;testtbl_trans&quot;</span>)</span><br><span class="line">    &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">      <span class="keyword">case</span> e1: com.datastax.driver.core.exceptions.<span class="type">AlreadyExistsException</span> =&gt; <span class="type">None</span></span><br><span class="line">      <span class="keyword">case</span> e2: <span class="type">Exception</span> =&gt; <span class="keyword">throw</span> e2</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cass_tbl_agg.write.format(<span class="string">&quot;org.apache.spark.sql.cassandra&quot;</span>).options(<span class="type">Map</span>(<span class="string">&quot;table&quot;</span> -&gt; <span class="string">&quot;testtbl_trans&quot;</span>, <span class="string">&quot;keyspace&quot;</span> -&gt; <span class="string">&quot;test&quot;</span>)).mode(<span class="type">SaveMode</span>.<span class="type">Append</span>).save()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>最後，新增一個SBT Task，打assembly，然後執行就可以在<code>target/scala-2.11</code>下看到assembly的檔案了</p>
<p>再來是<code>$SPARK_HOME/conf/spark-default.conf</code>的設定</p>
<p>原本設定了<code>spark.jars</code>、<code>spark.executor.extraClassPath</code>、<code>spark.executor.extraLibraryPath</code></p>
<p><code>spark.driver.extraClassPath</code>以及<code>spark.driver.extraLibraryPath</code>就可以通通先拿掉</p>
<p>然後上傳<code>test_cassSpark-assembly-1.0.jar</code>，在console輸入下面的指令就可以執行了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">spark-submit --master mesos://zk://192.168.0.121:2181,192.168.0.122:2181,192.168.0.123:2181/mesos --class cassSpark test_cassSpark-assembly-1.0.jar</span><br></pre></td></tr></table></figure>

<p>最後就可以在<code>/home/tester/test.csv</code>看到產生的csv檔案了</p>
]]></content>
      <categories>
        <category>BigData</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>Spark</tag>
        <tag>assembly</tag>
      </tags>
  </entry>
  <entry>
    <title>Apache Hive and ACID</title>
    <url>/posts/201609/2016-09-21-apache-hive-ACID.html</url>
    <content><![CDATA[<p>Hive支援ACID，可以讓資料庫做transactions</p>
<p>其具備以下四種性質</p>
<ol>
<li>原子性(atomicity)：做就要做完，不做就全部都不做，不會做一半</li>
<li>一致性(consistency)：資料庫的資訊是完整的</li>
<li>隔離性(isolation)：可以同時讀寫多個transactions，讓讀寫不會互相影響</li>
<li>持久性(durability)：資料的修改是永久的，不會丟失</li>
</ol>
<p>那麼Hive支援這個有什麼好處？讓Hive能夠如同RMDB去做資料的UPDATE, DELETE</p>
<a id="more"></a>

<p>重新下載一個新的Hive做部署，MySQL那裏則跳過</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下載hive並部署</span></span><br><span class="line">curl -v -j -k -L http://apache.stu.edu.tw/hive/stable/apache-hive-1.2.1-bin.tar.gz -o apache-hive-1.2.1-bin.tar.gz</span><br><span class="line">tar zxvf apache-hive-1.2.1-bin.tar.gz</span><br><span class="line">mv apache-hive-1.2.1-bin /usr/<span class="built_in">local</span>/bigdata/hive</span><br><span class="line"><span class="comment"># 增加path</span></span><br><span class="line">sudo tee -a /etc/bashrc &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line"><span class="built_in">export</span> HIVE_HOME=/usr/<span class="built_in">local</span>/bigdata/hive</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$HIVE_HOME</span>/bin</span><br><span class="line">EOF</span><br><span class="line"><span class="built_in">source</span> /etc/bashrc</span><br><span class="line"><span class="comment"># 解壓縮mysql jdbc connector</span></span><br><span class="line">tar zxvf mysql-connector-java-5.1.39.tar.gz</span><br><span class="line">cp mysql-connector-java-5.1.39/mysql-connector-java-5.1.39-bin.jar <span class="variable">$HIVE_HOME</span>/lib</span><br><span class="line"><span class="comment"># 複製設定</span></span><br><span class="line">cp <span class="variable">$HIVE_HOME</span>/conf/hive-default.xml.template <span class="variable">$HIVE_HOME</span>/conf/hive-site.xml</span><br><span class="line"><span class="comment"># 新增hive所需的目錄</span></span><br><span class="line">sudo mkdir /tmp/tester</span><br><span class="line">sudo mkdir /tmp/tester/hive_resource</span><br><span class="line">sudo chown -R tester.tester /tmp/tester</span><br><span class="line"><span class="comment"># 初始化hive的schema</span></span><br><span class="line">schematool -initSchema -dbType mysql</span><br></pre></td></tr></table></figure>

<p>用<code>vi $HIVE_HOME/conf/hive-site.xml</code>去配置設定</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionURL<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">value</span>&gt;</span>jdbc:mysql://192.168.0.121:3306/hive?autoReconnect=true<span class="symbol">&amp;amp;</span>useSSL=true<span class="symbol">&amp;amp;</span>createDatabaseIfNotExist=true<span class="symbol">&amp;amp;</span>characterEncoding=utf8<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">description</span>&gt;</span>JDBC connection string used by Hive Metastore<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionDriverName<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">value</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">description</span>&gt;</span>JDBC Driver class<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionUserName<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">value</span>&gt;</span>hive<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">description</span>&gt;</span>Metastore database user name<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">property</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionPassword<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">value</span>&gt;</span>Qscf123%^<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">description</span>&gt;</span>Metastore database password<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.exec.local.scratchdir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">value</span>&gt;</span>/tmp/tester<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">description</span>&gt;</span>Local scratch space for Hive jobs<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.downloaded.resources.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">value</span>&gt;</span>/tmp/tester/hive_resource<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">description</span>&gt;</span>Temporary local directory for added resources in the remote file system.<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.compactor.initiator.on<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">description</span>&gt;</span></span><br><span class="line">     Whether to run the initiator and cleaner threads on this metastore instance or not.</span><br><span class="line">     Set this to true on one instance of the Thrift metastore service as part of turning</span><br><span class="line">     on Hive transactions. For a complete list of parameters required for turning on</span><br><span class="line">     transactions, see hive.txn.manager.</span><br><span class="line">   <span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.compactor.worker.threads<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">value</span>&gt;</span>2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">description</span>&gt;</span></span><br><span class="line">     How many compactor worker threads to run on this metastore instance. Set this to a</span><br><span class="line">     positive number on one or more instances of the Thrift metastore service as part of</span><br><span class="line">     turning on Hive transactions. For a complete list of parameters required for turning</span><br><span class="line">     on transactions, see hive.txn.manager.</span><br><span class="line">     Worker threads spawn MapReduce jobs to do compactions. They do not do the compactions</span><br><span class="line">     themselves. Increasing the number of worker threads will decrease the time it takes</span><br><span class="line">     tables or partitions to be compacted once they are determined to need compaction.</span><br><span class="line">     It will also increase the background load on the Hadoop cluster as more MapReduce jobs</span><br><span class="line">     will be running in the background.</span><br><span class="line">   <span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.support.concurrency<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">description</span>&gt;</span></span><br><span class="line">     Whether Hive supports concurrency control or not.</span><br><span class="line">     A ZooKeeper instance must be up and running when using zookeeper Hive lock manager</span><br><span class="line">   <span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.enforce.bucketing<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">description</span>&gt;</span>Whether bucketing is enforced. If true, while inserting into the table, bucketing is enforced.<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.exec.dynamic.partition<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">description</span>&gt;</span>Whether or not to allow dynamic partitions in DML/DDL.<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.exec.dynamic.partition.mode<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">value</span>&gt;</span>nonstrict<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">description</span>&gt;</span></span><br><span class="line">     In strict mode, the user must specify at least one static partition</span><br><span class="line">     in case the user accidentally overwrites all partitions.</span><br><span class="line">     In nonstrict mode all partitions are allowed to be dynamic.</span><br><span class="line">   <span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.txn.manager<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">value</span>&gt;</span>org.apache.hadoop.hive.ql.lockmgr.DummyTxnManager<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">description</span>&gt;</span></span><br><span class="line">     Set to org.apache.hadoop.hive.ql.lockmgr.DbTxnManager as part of turning on Hive</span><br><span class="line">     transactions, which also requires appropriate settings for hive.compactor.initiator.on,</span><br><span class="line">     hive.compactor.worker.threads, hive.support.concurrency (true), hive.enforce.bucketing</span><br><span class="line">     (true), and hive.exec.dynamic.partition.mode (nonstrict).</span><br><span class="line">     The default DummyTxnManager replicates pre-Hive-0.13 behavior and provides</span><br><span class="line">     no transactions.</span><br><span class="line">   <span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>測試：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 新增資料</span></span><br><span class="line">tee ~/test_df2.csv &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">id1,a,0.01991423</span><br><span class="line">id2,b,0.73282957</span><br><span class="line">id3,c,0.00552144</span><br><span class="line">id4,d,0.83103357</span><br><span class="line">id5,a,-0.79378789</span><br><span class="line">id6,b,-0.36969293</span><br><span class="line">id7,c,-1.66246829</span><br><span class="line">id8,d,-0.73893442</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 創一張表，先放資料</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> test_df2 (v1 <span class="keyword">STRING</span>, v2 <span class="keyword">STRING</span>, v3 <span class="keyword">DOUBLE</span>)</span><br><span class="line"><span class="keyword">ROW</span> <span class="keyword">FORMAT</span> <span class="keyword">DELIMITED</span></span><br><span class="line"><span class="keyword">FIELDS</span> <span class="keyword">TERMINATED</span> <span class="keyword">BY</span> <span class="string">&#x27;,&#x27;</span></span><br><span class="line"><span class="keyword">STORED</span> <span class="keyword">AS</span> TEXTFILE;</span><br><span class="line"><span class="comment">-- 讀入資料</span></span><br><span class="line"><span class="keyword">LOAD</span> <span class="keyword">DATA</span> <span class="keyword">LOCAL</span> INPATH <span class="string">&#x27;/home/tester/test_df2.csv&#x27;</span></span><br><span class="line">OVERWRITE <span class="keyword">INTO</span> <span class="keyword">TABLE</span> test_df2;</span><br><span class="line"><span class="comment">-- 創一張transaction表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> test_df2_transaction</span><br><span class="line">(v1 <span class="keyword">STRING</span>, v2 <span class="keyword">STRING</span>, v3 <span class="keyword">DOUBLE</span>) </span><br><span class="line">clustered <span class="keyword">by</span> (v1) <span class="keyword">into</span> <span class="number">3</span> buckets </span><br><span class="line"><span class="keyword">stored</span> <span class="keyword">as</span> orc TBLPROPERTIES (<span class="string">&#x27;transactional&#x27;</span>=<span class="string">&#x27;true&#x27;</span>);</span><br><span class="line"><span class="comment">-- 把資料加入transaction表</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> test_df2_transaction <span class="keyword">select</span> * <span class="keyword">from</span> test_df2;</span><br><span class="line"><span class="comment">-- 看資料</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> test_df2_transaction;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">id8     d       -0.73893442</span></span><br><span class="line"><span class="comment">id5     a       -0.79378789</span></span><br><span class="line"><span class="comment">id2     b       0.73282957</span></span><br><span class="line"><span class="comment">id6     b       -0.36969293</span></span><br><span class="line"><span class="comment">id3     c       0.00552144</span></span><br><span class="line"><span class="comment">id7     c       -1.66246829</span></span><br><span class="line"><span class="comment">id4     d       0.83103357</span></span><br><span class="line"><span class="comment">id1     a       0.01991423</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">-- 試試看update</span></span><br><span class="line"><span class="keyword">update</span> test_df2_transaction <span class="keyword">set</span> v2=<span class="string">&#x27;c&#x27;</span> <span class="keyword">where</span> v1=<span class="string">&#x27;id1&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> test_df2_transaction;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">id8     d       -0.73893442</span></span><br><span class="line"><span class="comment">id5     a       -0.79378789</span></span><br><span class="line"><span class="comment">id2     b       0.73282957</span></span><br><span class="line"><span class="comment">id11    a       2.001</span></span><br><span class="line"><span class="comment">id6     b       -0.36969293</span></span><br><span class="line"><span class="comment">id3     c       0.00552144</span></span><br><span class="line"><span class="comment">id9     b       2.001</span></span><br><span class="line"><span class="comment">id7     c       -1.66246829</span></span><br><span class="line"><span class="comment">id4     d       0.83103357</span></span><br><span class="line"><span class="comment">id1     c       2.001</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">-- 試試看delete</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> test_df2_transaction <span class="keyword">where</span> v1=<span class="string">&#x27;id1&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> test_df2_transaction;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">id8     d       -0.73893442</span></span><br><span class="line"><span class="comment">id5     a       -0.79378789</span></span><br><span class="line"><span class="comment">id2     b       0.73282957</span></span><br><span class="line"><span class="comment">id6     b       -0.36969293</span></span><br><span class="line"><span class="comment">id3     c       0.00552144</span></span><br><span class="line"><span class="comment">id7     c       -1.66246829</span></span><br><span class="line"><span class="comment">id4     d       0.83103357</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">-- 試試看insert</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">table</span> test_df2_transaction <span class="keyword">values</span> (<span class="string">&#x27;id9&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="number">2.001</span>),(<span class="string">&#x27;id1&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="number">2.001</span>),(<span class="string">&#x27;id11&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="number">2.001</span>);</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> test_df2_transaction;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">id8     d       -0.73893442</span></span><br><span class="line"><span class="comment">id5     a       -0.79378789</span></span><br><span class="line"><span class="comment">id2     b       0.73282957</span></span><br><span class="line"><span class="comment">id11    a       2.001</span></span><br><span class="line"><span class="comment">id6     b       -0.36969293</span></span><br><span class="line"><span class="comment">id3     c       0.00552144</span></span><br><span class="line"><span class="comment">id9     b       2.001</span></span><br><span class="line"><span class="comment">id7     c       -1.66246829</span></span><br><span class="line"><span class="comment">id4     d       0.83103357</span></span><br><span class="line"><span class="comment">id1     b       2.001</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<p>接下來用spark去測試</p>
<p>用<code>spark-shell mesos://zk://192.168.0.121:2181,192.168.0.122:2181,192.168.0.123:2181/mesos</code>開啟</p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.spark.sql.<span class="type">SparkSession</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> spark = <span class="type">SparkSession</span>.builder().appName(<span class="string">&quot;spark on hive&quot;</span>).</span><br><span class="line">  config(<span class="string">&quot;spark.sql.warehouse.dir&quot;</span>, <span class="string">&quot;hdfs://hc1/spark&quot;</span>).</span><br><span class="line">  enableHiveSupport().getOrCreate()</span><br><span class="line"></span><br><span class="line">spark.sql(<span class="string">&quot;update test_df2_transaction set v2=&#x27;c&#x27; where v1=&#x27;id1&#x27;&quot;</span>).show()</span><br><span class="line"># org.apache.spark.sql.catalyst.parser.<span class="type">ParseException</span></span><br><span class="line">spark.sql(<span class="string">&quot;delete from test_df2_transaction where v1=&#x27;id1&#x27;&quot;</span>).show()</span><br><span class="line"># org.apache.spark.sql.catalyst.parser.<span class="type">ParseException</span>  </span><br></pre></td></tr></table></figure>

<p>Spark SQL無法使用update或是delete的動作</p>
]]></content>
      <categories>
        <category>BigData</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>Hive</tag>
        <tag>ACID</tag>
      </tags>
  </entry>
  <entry>
    <title>Apache Drill</title>
    <url>/posts/201609/2016-09-20-apache-drill.html</url>
    <content><![CDATA[<p>SQL on Hadoop不外乎Apache Drill, Hive, Hive on Tez, Phoenix, </p>
<p>Cloudera Impala (正在孵化為Apache專案), Presto,</p>
<p>Pivotal HAWQ, IBM BigSQL, Apache Tajo, Apache Kylin等</p>
<p>在這麼多選擇中，我選擇用Drill，以下闡述我的原因</p>
<a id="more"></a>

<p>Drill是一套SQL on Hadoop的解決方案</p>
<p>一個Schema-free的data model，這意思代表說不在受限於data model限制而無法查詢</p>
<p>但是他不能用index，所以在有些查詢上會比有schema的data model來的慢</p>
<p>儘管如此，Drill在query的表現仍然相當優秀，勝過Hive with MapReduce, Hive on Tez,</p>
<p>Spark SQL, Presto，跟Impala互有上下 (<a href="http://allegro.tech/2015/06/fast-data-hackathon.html">reference 1</a>, <a href="https://www.mapr.com/blog/comparing-sql-functions-and-performance-apache-spark-and-apache-drill">reference 2</a>)</p>
<p>不過問題來了，Drill要base什麼去建立？ hdfs? hbase? hive? 還是其他nosql的架構？</p>
<p>這個就depends on每個人的需求了，因為我需要一個Loader去同步在Oracle的資料</p>
<p>而這loader最簡單的方式就是使用Spark SQL去做(因為Drill沒辦法直接讀寫hive, hbase等資料庫)</p>
<p>所以這裡我採用hive當做表格儲存的位置，能讓Spark SQL直接做table的存寫</p>
<p>而且Drill直接搜尋hive的速度相當快，不需要透過hive下的engine(mapredure, tez or spark)去處理</p>
<p>我原本傾向使用有schema的hbase跟hive，可以直接透過Spark SQL去存讀資料</p>
<p>但是又想到我需要一個Loader去同步在Oracle的資料，不過Drill無法提供直接使用DataFrame存寫的功能</p>
<p>做了一點功課之後，決定直接使用HDFS存JSON檔案</p>
<p>在Spark SQL可以透過JDBC接口直接使用Spark SQL去處理資料再存新的json回去</p>
<ol>
<li>下載檔案並部署</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -v -j -k -L http://apache.stu.edu.tw/drill/drill-1.8.0/apache-drill-1.8.0.tar.gz -o apache-drill-1.8.0.tar.gz</span><br><span class="line">tar -xzvf apache-drill-1.8.0.tar.gz</span><br><span class="line">mv apache-drill-1.8.0 /usr/<span class="built_in">local</span>/bigdata/drill</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>配置</li>
</ol>
<p>使用<code>vi /usr/local/bigdata/drill/conf/drill-override.conf</code>去configure Drill</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">drill.exec: &#123;</span><br><span class="line">  cluster-id: &quot;drillcluster&quot;,</span><br><span class="line">  zk.connect: &quot;192.168.0.121:2181,192.168.0.122:2181,192.168.0.123:2181&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如果記憶體不多的話建議下面配置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tee -a /usr/<span class="built_in">local</span>/bigdata/drill/conf/drill-env.sh &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line"><span class="comment"># 這一行一定要留著</span></span><br><span class="line">DRILL_MAX_DIRECT_MEMORY=<span class="string">&quot;2G&quot;</span></span><br><span class="line">DRILL_MAX_HEAP=<span class="string">&quot;1G&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> DRILL_JAVA_OPTS=<span class="string">&quot;-Xms1G -Xmx<span class="variable">$DRILL_MAX_HEAP</span> -XX:MaxDirectMemorySize=<span class="variable">$DRILL_MAX_DIRECT_MEMORY</span> -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=1G -ea&quot;</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<p>複製到各台node</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">scp -r &#x2F;usr&#x2F;local&#x2F;bigdata&#x2F;drill tester@cassSpark2:&#x2F;usr&#x2F;local&#x2F;bigdata</span><br><span class="line">scp -r &#x2F;usr&#x2F;local&#x2F;bigdata&#x2F;drill tester@cassSpark3:&#x2F;usr&#x2F;local&#x2F;bigdata</span><br></pre></td></tr></table></figure>

<p>使用<code>/usr/local/bigdata/drill/bin/drillbit.sh start</code>去啟動Drill</p>
<p>就可以用<code>http://192.168.0.121:8047/</code>連到Drill的web UI了</p>
<p>可以再Storage Page看到dfs的Option，按下Update即可更新(更新下面的值即可)：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&quot;connection&quot;: &quot;hdfs://hc1&quot;,</span><br><span class="line">&quot;workspaces&quot;: &#123;</span><br><span class="line">  &quot;root&quot;: &#123;</span><br><span class="line">    &quot;location&quot;: &quot;/drill&quot;,</span><br><span class="line">    &quot;writable&quot;: true,</span><br><span class="line">    &quot;defaultInputFormat&quot;: null</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;tmp&quot;: &#123;</span><br><span class="line">    &quot;location&quot;: &quot;/drill/tmp&quot;,</span><br><span class="line">    &quot;writable&quot;: true,</span><br><span class="line">    &quot;defaultInputFormat&quot;: null</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>按下Update，然後Close</p>
<p>再來是上傳一些資料吧</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tee ~/test_df.json &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">[&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;b&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;d&quot;</span>,<span class="string">&quot;v3&quot;</span>:0.01991423&#125;,&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;b&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;e&quot;</span>,<span class="string">&quot;v3&quot;</span>:0.73282957&#125;,&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;b&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;c&quot;</span>,<span class="string">&quot;v3&quot;</span>:0.00552144&#125;,</span><br><span class="line">&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;b&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;d&quot;</span>,<span class="string">&quot;v3&quot;</span>:0.83103357&#125;,&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;a&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;d&quot;</span>,<span class="string">&quot;v3&quot;</span>:-0.79378789&#125;,&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;a&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;e&quot;</span>,<span class="string">&quot;v3&quot;</span>:-0.36969293&#125;,</span><br><span class="line">&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;a&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;c&quot;</span>,<span class="string">&quot;v3&quot;</span>:-1.66246829&#125;,&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;b&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;c&quot;</span>,<span class="string">&quot;v3&quot;</span>:-0.73893442&#125;,&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;a&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;c&quot;</span>,<span class="string">&quot;v3&quot;</span>:-0.49832169&#125;,</span><br><span class="line">&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;b&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;e&quot;</span>,<span class="string">&quot;v3&quot;</span>:-0.83277815&#125;,&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;a&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;e&quot;</span>,<span class="string">&quot;v3&quot;</span>:-0.10230033&#125;,&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;a&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;c&quot;</span>,<span class="string">&quot;v3&quot;</span>:0.14617246&#125;,</span><br><span class="line">&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;a&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;d&quot;</span>,<span class="string">&quot;v3&quot;</span>:-0.50122879&#125;,&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;a&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;d&quot;</span>,<span class="string">&quot;v3&quot;</span>:-1.01900482&#125;,&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;b&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;e&quot;</span>,<span class="string">&quot;v3&quot;</span>:-0.08073591&#125;,</span><br><span class="line">&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;a&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;d&quot;</span>,<span class="string">&quot;v3&quot;</span>:-1.02780559&#125;,&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;b&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;d&quot;</span>,<span class="string">&quot;v3&quot;</span>:-1.28585578&#125;,&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;a&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;e&quot;</span>,<span class="string">&quot;v3&quot;</span>:2.19115715&#125;,</span><br><span class="line">&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;b&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;c&quot;</span>,<span class="string">&quot;v3&quot;</span>:0.22095974&#125;,&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;a&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;d&quot;</span>,<span class="string">&quot;v3&quot;</span>:0.98055576&#125;,&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;b&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;d&quot;</span>,<span class="string">&quot;v3&quot;</span>:0.92121262&#125;,</span><br><span class="line">&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;a&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;c&quot;</span>,<span class="string">&quot;v3&quot;</span>:0.43742128&#125;,&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;a&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;d&quot;</span>,<span class="string">&quot;v3&quot;</span>:0.1683678&#125;,&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;a&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;e&quot;</span>,<span class="string">&quot;v3&quot;</span>:-1.31987619&#125;,</span><br><span class="line">&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;b&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;c&quot;</span>,<span class="string">&quot;v3&quot;</span>:1.0675091&#125;,&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;b&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;e&quot;</span>,<span class="string">&quot;v3&quot;</span>:0.49024668&#125;,&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;a&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;e&quot;</span>,<span class="string">&quot;v3&quot;</span>:-1.65978632&#125;,</span><br><span class="line">&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;b&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;c&quot;</span>,<span class="string">&quot;v3&quot;</span>:-0.1294416&#125;,&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;b&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;c&quot;</span>,<span class="string">&quot;v3&quot;</span>:1.00880932&#125;,&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;a&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;d&quot;</span>,<span class="string">&quot;v3&quot;</span>:0.27295147&#125;,</span><br><span class="line">&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;b&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;d&quot;</span>,<span class="string">&quot;v3&quot;</span>:-0.1935518&#125;,&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;a&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;d&quot;</span>,<span class="string">&quot;v3&quot;</span>:0.92765404&#125;,&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;b&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;d&quot;</span>,<span class="string">&quot;v3&quot;</span>:-0.49652849&#125;,</span><br><span class="line">&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;b&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;c&quot;</span>,<span class="string">&quot;v3&quot;</span>:0.11603917&#125;,&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;a&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;d&quot;</span>,<span class="string">&quot;v3&quot;</span>:1.00496088&#125;,&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;a&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;e&quot;</span>,<span class="string">&quot;v3&quot;</span>:0.5742589&#125;,</span><br><span class="line">&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;a&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;c&quot;</span>,<span class="string">&quot;v3&quot;</span>:-0.07431593&#125;,&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;a&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;e&quot;</span>,<span class="string">&quot;v3&quot;</span>:1.91539019&#125;,&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;a&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;c&quot;</span>,<span class="string">&quot;v3&quot;</span>:0.07681478&#125;,</span><br><span class="line">&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;b&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;c&quot;</span>,<span class="string">&quot;v3&quot;</span>:0.69678599&#125;]</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">tee ~/test_widecol.json &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">[&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;b&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;d&quot;</span>,<span class="string">&quot;v3&quot;</span>:[0.01991423,0.83103357,-1.28585578,0.92121262,-0.1935518,-0.49652849]&#125;,</span><br><span class="line">&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;b&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;e&quot;</span>,<span class="string">&quot;v3&quot;</span>:[0.73282957,-0.83277815,-0.08073591,0.49024668]&#125;,</span><br><span class="line">&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;b&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;c&quot;</span>,<span class="string">&quot;v3&quot;</span>:[0.00552144,-0.73893442,0.22095974,1.0675091,-0.1294416,1.00880932,0.11603917,0.69678599]&#125;,</span><br><span class="line">&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;a&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;d&quot;</span>,<span class="string">&quot;v3&quot;</span>:[-0.79378789,-0.50122879,-1.01900482,-1.02780559,0.98055576,0.1683678,0.27295147,0.92765404,1.00496088]&#125;,</span><br><span class="line">&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;a&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;e&quot;</span>,<span class="string">&quot;v3&quot;</span>:[-0.36969293,-0.10230033,2.19115715,-1.31987619,-1.65978632,0.5742589,1.91539019]&#125;,</span><br><span class="line">&#123;<span class="string">&quot;v1&quot;</span>:<span class="string">&quot;a&quot;</span>,<span class="string">&quot;v2&quot;</span>:<span class="string">&quot;c&quot;</span>,<span class="string">&quot;v3&quot;</span>:[-1.66246829,-0.49832169,0.14617246,0.43742128,-0.07431593,0.07681478]&#125;]</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<p>上傳到hdfs去：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hdfs dfs -mkdir /drill</span><br><span class="line">hdfs dfs -mkdir /drill/tmp</span><br><span class="line">hdfs dfs -put ~/test_df.json /drill</span><br><span class="line">hdfs dfs -put ~/test_widecol.json /drill</span><br><span class="line"><span class="comment"># 確定資料有上去</span></span><br><span class="line">hdfs dfs -ls /drill</span><br><span class="line"><span class="comment"># Found 3 items</span></span><br><span class="line"><span class="comment"># -rw-r--r--   3 tester supergroup       1456 2016-09-19 23:49 /drill/test_df.json</span></span><br><span class="line"><span class="comment"># -rw-r--r--   3 tester supergroup        618 2016-09-19 23:49 /drill/test_widecol.json</span></span><br><span class="line"><span class="comment"># drwxr-xr-x   - tester supergroup          0 2016-09-19 23:46 /drill/tmp</span></span><br></pre></td></tr></table></figure>

<p>執行下面的SQL可以得到下圖的結果</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> dfs.<span class="string">`/drill/test_df.json`</span>;</span><br></pre></td></tr></table></figure>

<p><img src="/images/drill_test_df.png"></p>
<p>執行下面的SQL可以得到下圖的結果</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> dfs.<span class="string">`/drill/test_widecol.json`</span>;</span><br></pre></td></tr></table></figure>

<p><img src="/images/drill_test_widecol.png"></p>
<p>使用<a href="http://squirrel-sql.sourceforge.net/">SQuirreL SQL Client</a>透過JDBC去操作Drill</p>
<p>先點擊左邊的Driver按鈕，然後按下左上角藍色的+去新增Driver</p>
<p>其中Example URL填<code>jdbc:drill:zk=cassSpark1:2181</code></p>
<p>Extra Class Path新增Drill binary tar裡面<code>jars/jdbc-driver/drill-jdbc-all-1.8.0.jar</code></p>
<p>Driver就可以選<code>org.apache.drill.jdbc.Driver</code>了，如同下圖的設定</p>
<p><img src="/images/drill_jdbc_1.png"></p>
<p>接著點擊左邊的<code>Alias</code>，一樣按下藍色的+去新增，其中URL的填法如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">jdbc:drill:zk&#x3D;&lt;zookeeper_quorum&gt;&#x2F;&lt;drill_directory_in_zookeeper&gt;&#x2F;&lt;cluster_ID&gt;;schema&#x3D;&lt;schema_to_use_as_default&gt;</span><br></pre></td></tr></table></figure>

<p>像是我的是<code>jdbc:drill:zk=cassSpark1:2181/drill/drillcluster;schema=dfs</code></p>
<p><code>cassSpark1:2181</code>是我的zookeeper地址，<code>drillcluster</code>是我在conf裡面設定的cluster name</p>
<p>使用的預設schema就dfs (請看Drill網頁UI裡面的Storage那頁)，設定會如下圖：</p>
<p><img src="/images/drill_jdbc_2.png"></p>
<p>然後就可以連線了！如下圖：</p>
<p><img src="/images/drill_jdbc_3.png"></p>
<p><img src="/images/drill_jdbc_4.png"></p>
<p>再來是Drill的REST接口</p>
<p>這裡分別用linux的curl指令跟R httr套件的POST去做：</p>
<p><img src="/images/drill_rest_1.png"></p>
<p><img src="/images/drill_rest_2.png"></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(httr)</span><br><span class="line"></span><br><span class="line">POST(<span class="string">&quot;http://192.168.0.121:8047/query.json&quot;</span>, </span><br><span class="line">     body = list(queryType = <span class="string">&quot;SQL&quot;</span>, </span><br><span class="line">     query = <span class="string">&quot;SELECT v1,v2,v3 FROM dfs.`/drill/test_df.json`&quot;</span>),</span><br><span class="line">     encode = <span class="string">&quot;json&quot;</span>)</span><br></pre></td></tr></table></figure>


<p>另外，也可以用jdbc去連Oracle，先從Oracle官方網站下載到ojdbc7.jar</p>
<p>將ojdbc7.jar放到<code>/usr/local/bigdata/drill/lib/3party</code>裡面，然後重開drill (記得是每一台都要放)</p>
<p>(如果有用我之前Spark在Oracle的配置，可以直接下<code>cp $SPARK_HOME/extraClass/ojdbc7.jar /usr/local/bigdata/drill/jars/3rdparty/</code>)</p>
<p>然後在web UI的Storage增加一個New Storage Plugin，叫做oracle：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  type: &quot;jdbc&quot;,</span><br><span class="line">  enabled: true,</span><br><span class="line">  driver: &quot;oracle.jdbc.OracleDriver&quot;,</span><br><span class="line">  url:&quot;jdbc:oracle:thin:system/qscf12356@192.168.0.120:1521/orcl&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>就可以使用<code>select * from oracle.&lt;user_name&gt;.&lt;table_name&gt;</code>去做查詢了</p>
<p>最後附上supervisor的config</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo tee -a &#x2F;etc&#x2F;supervisor&#x2F;supervisord.conf &lt;&lt; &quot;EOF&quot;</span><br><span class="line">[program:drill]</span><br><span class="line">command&#x3D;&#x2F;bin&#x2F;bash -c &quot;&#x2F;usr&#x2F;local&#x2F;bigdata&#x2F;drill&#x2F;bin&#x2F;drillbit.sh run&quot;</span><br><span class="line">stdout_logfile&#x3D;&#x2F;var&#x2F;log&#x2F;supervisor&#x2F;drill-stdout.out</span><br><span class="line">stderr_logfile&#x3D;&#x2F;var&#x2F;log&#x2F;supervisor&#x2F;drill-stderr.out</span><br><span class="line">autostart&#x3D;true</span><br><span class="line">startsecs&#x3D;5</span><br><span class="line">priority&#x3D;95</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl restart supervisor</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>BigData</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>Drill</tag>
      </tags>
  </entry>
  <entry>
    <title>Apache Hive with Apache Drill</title>
    <url>/posts/201609/2016-09-21-apache-hive-with-apache-drill.html</url>
    <content><![CDATA[<p>前一篇的Apache Drill效能方面極佳</p>
<p>唯一可惜的點是不能直接存寫hive, hbase</p>
<p>但是如果只需要用到讀取資料</p>
<p>不做insert, update的話，Drill無疑是最佳的方案</p>
<a id="more"></a>

<p>這篇主要介紹怎麼建立Hive，Hive的建立相當麻煩</p>
<p>以前建立過一次，就不想在建立它，只是沒想到還是得用它</p>
<p>Hive有三種建立模式：</p>
<ol>
<li>localhost derby</li>
<li>localhost mysql</li>
<li>remote mysql</li>
</ol>
<p>以前是直接走localhost mysql，這次則採用remote mysql的方式建立</p>
<p>這樣的好處是，全部的cluster都共用一個metastore，不需要再各台都建立mysql</p>
<p>mysql也可以用其他資料庫代替，如Oracle, PostgreSQL以及MS SQL Server</p>
<p>不過在centos中最簡單取得的就是Mysql，而我這使用的是Oracle MySQL community server</p>
<p>請到下面網址去下載Red Hat Enterprise Linux 7 / Oracle Linux 7 (x86, 64-bit), RPM Bundle：</p>
<p><a href="http://dev.mysql.com/downloads/mysql/">http://dev.mysql.com/downloads/mysql/</a></p>
<p>並在 <a href="http://dev.mysql.com/downloads/connector/j/">http://dev.mysql.com/downloads/connector/j/</a> 下載mysql的jdbc連線用的jar檔</p>
<ol>
<li>安裝</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 開始部署</span></span><br><span class="line">tar xvf mysql-5.7.15-1.el7.x86_64.rpm-bundle.tar</span><br><span class="line">sudo yum remove mariadb-libs</span><br><span class="line">sudo yum install -y mysql-community-client-5.7.15-1.el7.x86_64.rpm mysql-community-common-5.7.15-1.el7.x86_64.rpm mysql-community-devel-5.7.15-1.el7.x86_64.rpm mysql-community-libs-5.7.15-1.el7.x86_64.rpm mysql-community-server-5.7.15-1.el7.x86_64.rpm mysql-community-test-5.7.15-1.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置mysql檔案</span></span><br><span class="line">tee -a /etc/my.cnf &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line"><span class="built_in">bind</span>-address=192.168.0.121</span><br><span class="line">skip_ssl</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 啟動mysql</span></span><br><span class="line">sudo systemctl start mysqld</span><br><span class="line"></span><br><span class="line"><span class="comment"># 抓取密碼</span></span><br><span class="line">sudo grep <span class="string">&#x27;temporary password&#x27;</span> /var/<span class="built_in">log</span>/mysqld.log <span class="comment"># find the password</span></span><br><span class="line"><span class="comment"># 登入mysql</span></span><br><span class="line">mysql -u root -p</span><br><span class="line"><span class="comment"># 修改密碼跟創新的user for hive</span></span><br><span class="line"><span class="comment"># mysql&gt; ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;Qscf123%^&#x27;;</span></span><br><span class="line"><span class="comment"># mysql&gt; create user &#x27;hive&#x27;@&#x27;%&#x27; identified by &#x27;Qscf123%^&#x27;;</span></span><br><span class="line"><span class="comment"># mysql&gt; create database hive DEFAULT CHARACTER SET utf8;</span></span><br><span class="line"><span class="comment"># mysql&gt; grant all PRIVILEGES on *.* TO &#x27;hive&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;Qscf123%^&#x27; WITH GRANT OPTION;</span></span><br><span class="line"><span class="comment"># 重啟mysql</span></span><br><span class="line">sudo systemctl restart mysqld</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下載hive並部署</span></span><br><span class="line">curl -v -j -k -L http://apache.stu.edu.tw/hive/stable/apache-hive-1.2.1-bin.tar.gz -o apache-hive-1.2.1-bin.tar.gz</span><br><span class="line">tar zxvf apache-hive-1.2.1-bin.tar.gz</span><br><span class="line">mv apache-hive-1.2.1-bin /usr/<span class="built_in">local</span>/bigdata/hive</span><br><span class="line"></span><br><span class="line"><span class="comment"># 增加path</span></span><br><span class="line">sudo tee -a /etc/bashrc &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line"><span class="built_in">export</span> HIVE_HOME=/usr/<span class="built_in">local</span>/bigdata/hive</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$HIVE_HOME</span>/bin</span><br><span class="line">EOF</span><br><span class="line"><span class="built_in">source</span> /etc/bashrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解壓縮mysql jdbc connector</span></span><br><span class="line">tar zxvf mysql-connector-java-5.1.39.tar.gz</span><br><span class="line">cp mysql-connector-java-5.1.39/mysql-connector-java-5.1.39-bin.jar <span class="variable">$HIVE_HOME</span>/lib</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置hive</span></span><br><span class="line">cp <span class="variable">$HIVE_HOME</span>/conf/hive-default.xml.template <span class="variable">$HIVE_HOME</span>/conf/hive-site.xml</span><br><span class="line">vi <span class="variable">$HIVE_HOME</span>/conf/hive-site.xml</span><br></pre></td></tr></table></figure>

<p>hive的配置項目：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionURL<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>jdbc:mysql://192.168.0.121:3306/hive?autoReconnect=true<span class="symbol">&amp;amp;</span>useSSL=true<span class="symbol">&amp;amp;</span>createDatabaseIfNotExist=true<span class="symbol">&amp;amp;</span>characterEncoding=utf8<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">description</span>&gt;</span>JDBC connection string used by Hive Metastore<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionDriverName<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">description</span>&gt;</span>JDBC Driver class<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionUserName<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>hive<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Metastore database user name<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionPassword<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>Qscf123%^<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Metastore database password<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.exec.local.scratchdir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>/tmp/tester<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">description</span>&gt;</span>Local scratch space for Hive jobs<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.downloaded.resources.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>/tmp/tester/hive_resources<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">description</span>&gt;</span>Temporary local directory for added resources in the remote file system.<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>配置完hive之後，就可以開始啟動了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 新增hive所需的目錄</span></span><br><span class="line">sudo mkdir /tmp/tester</span><br><span class="line">sudo mkdir /tmp/tester/hive_resource</span><br><span class="line">sudo chown -R tester.tester /tmp/tester</span><br><span class="line"><span class="comment"># 初始化hive的schema</span></span><br><span class="line">schematool -initSchema -dbType mysql</span><br><span class="line"><span class="comment"># 啟動hive</span></span><br><span class="line">hive </span><br><span class="line"><span class="comment"># 成功進去之後就可以用exit;離開了</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置hive的supervisord啟動方案</span></span><br><span class="line">sudo vi /etc/supervisor/supervisord.conf</span><br><span class="line"><span class="comment"># environmet</span></span><br><span class="line"><span class="comment"># HIVE_HOME=/usr/local/bigdata/hive</span></span><br><span class="line"></span><br><span class="line">sudo tee -a /etc/supervisor/supervisord.conf &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">[program:hive]</span><br><span class="line"><span class="built_in">command</span>=/bin/bash -c <span class="string">&quot;<span class="variable">$HIVE_HOME</span>/bin/hive --service metastore&quot;</span></span><br><span class="line">stdout_logfile=/var/<span class="built_in">log</span>/supervisor/hive-stdout.out</span><br><span class="line">stderr_logfile=/var/<span class="built_in">log</span>/supervisor/hive-stderr.out</span><br><span class="line">autostart=<span class="literal">true</span></span><br><span class="line">startsecs=5</span><br><span class="line">priority=90</span><br><span class="line">EOF</span><br><span class="line"><span class="comment"># 重啟supervisord</span></span><br><span class="line">sudo systemctl restart supervisor</span><br><span class="line"></span><br><span class="line"><span class="comment"># 複製到各台，其他台都連這台的mysql即可，複製過去配置PATH跟supervisord即可使用</span></span><br><span class="line">scp -r <span class="variable">$HIVE_HOME</span> tester@cassSpark2:/usr/<span class="built_in">local</span>/bigdata</span><br><span class="line">scp -r <span class="variable">$HIVE_HOME</span> tester@cassSpark3:/usr/<span class="built_in">local</span>/bigdata</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>測試：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tee ~/test_df.csv &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">b,d,0.01991423</span><br><span class="line">b,e,0.73282957</span><br><span class="line">b,c,0.00552144</span><br><span class="line">b,d,0.83103357</span><br><span class="line">a,d,-0.79378789</span><br><span class="line">a,e,-0.36969293</span><br><span class="line">a,c,-1.66246829</span><br><span class="line">b,c,-0.73893442</span><br><span class="line">a,c,-0.49832169</span><br><span class="line">b,e,-0.83277815</span><br><span class="line">a,e,-0.10230033</span><br><span class="line">a,c,0.14617246</span><br><span class="line">a,d,-0.50122879</span><br><span class="line">a,d,-1.01900482</span><br><span class="line">b,e,-0.08073591</span><br><span class="line">a,d,-1.02780559</span><br><span class="line">b,d,-1.28585578</span><br><span class="line">a,e,2.19115715</span><br><span class="line">b,c,0.22095974</span><br><span class="line">a,d,0.98055576</span><br><span class="line">b,d,0.92121262</span><br><span class="line">a,c,0.43742128</span><br><span class="line">a,d,0.1683678</span><br><span class="line">a,e,-1.31987619</span><br><span class="line">b,c,1.0675091</span><br><span class="line">b,e,0.49024668</span><br><span class="line">a,e,-1.65978632</span><br><span class="line">b,c,-0.1294416</span><br><span class="line">b,c,1.00880932</span><br><span class="line">a,d,0.27295147</span><br><span class="line">b,d,-0.1935518</span><br><span class="line">a,d,0.92765404</span><br><span class="line">b,d,-0.49652849</span><br><span class="line">b,c,0.11603917</span><br><span class="line">a,d,1.00496088</span><br><span class="line">a,e,0.5742589</span><br><span class="line">a,c,-0.07431593</span><br><span class="line">a,e,1.91539019</span><br><span class="line">a,c,0.07681478</span><br><span class="line">b,c,0.69678599</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> test_df (v1 <span class="keyword">STRING</span>, v2 <span class="keyword">STRING</span>, v3 <span class="keyword">DOUBLE</span>)</span><br><span class="line"><span class="keyword">ROW</span> <span class="keyword">FORMAT</span> <span class="keyword">DELIMITED</span></span><br><span class="line"><span class="keyword">FIELDS</span> <span class="keyword">TERMINATED</span> <span class="keyword">BY</span> <span class="string">&#x27;,&#x27;</span></span><br><span class="line"><span class="keyword">STORED</span> <span class="keyword">AS</span> TEXTFILE;</span><br><span class="line"></span><br><span class="line"><span class="keyword">LOAD</span> <span class="keyword">DATA</span> <span class="keyword">LOCAL</span> INPATH <span class="string">&#x27;/home/tester/test_df.csv&#x27;</span></span><br><span class="line">OVERWRITE <span class="keyword">INTO</span> <span class="keyword">TABLE</span> test_df;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> test_df; <span class="comment"># 40</span></span><br><span class="line"><span class="keyword">select</span> v1,v2,<span class="keyword">sum</span>(v3) <span class="keyword">from</span> test_df <span class="keyword">group</span> <span class="keyword">by</span> v1,v2; </span><br><span class="line"><span class="comment"># a       c       -1.57469739</span></span><br><span class="line"><span class="comment"># a       d       0.012662860000000276</span></span><br><span class="line"><span class="comment"># a       e       1.22915047</span></span><br><span class="line"><span class="comment"># b       c       2.24724874</span></span><br><span class="line"><span class="comment"># b       d       -0.2037756499999998</span></span><br><span class="line"><span class="comment"># b       e       0.30956219000000007</span></span><br></pre></td></tr></table></figure>

<p>附上成功執行畫面：</p>
<p><img src="/images/hive_mr.PNG"></p>
<p>可以看到它是透過hadoop的mapreduce去做的，執行時間是23.925秒</p>
<ol start="3">
<li>與Apache Drill共舞</li>
</ol>
<p>先修改Storage的hive，改成下方這樣：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;hive&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;enabled&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;configProps&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;hive.metastore.uris&quot;</span>: <span class="string">&quot;thrift://192.168.0.121:9083&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;hive.metastore.sasl.enabled&quot;</span>: <span class="string">&quot;false&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;fs.default.name&quot;</span>: <span class="string">&quot;hdfs://hc1/&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>到query去執行下方的查詢：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> v1,v2,<span class="keyword">avg</span>(v3) <span class="keyword">from</span> test_df <span class="keyword">group</span> <span class="keyword">by</span> v1,v2; </span><br></pre></td></tr></table></figure>

<p>可以在Profile那裏看到執行的細節：</p>
<p><img src="/images/hive_drill.PNG"></p>
<p>全部執行時間只有0.530s，整整比hive的mapreduce快上45倍</p>
<p>最後，也測試看看R直接用Drill的REST方式去query到hive的結果</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">library(httr)</span><br><span class="line">library(jsonlite)</span><br><span class="line"></span><br><span class="line">post_data &lt;- POST(&quot;http:&#x2F;&#x2F;192.168.0.121:8047&#x2F;query.json&quot;, </span><br><span class="line">     body &#x3D; list(queryType &#x3D; &quot;SQL&quot;, </span><br><span class="line">                 query &#x3D; &quot;SELECT v1,v2,avg(v3) v3_avg FROM hive_cassSpark1.test_df group by v1,v2&quot;),</span><br><span class="line">     encode &#x3D; &quot;json&quot;)</span><br><span class="line"></span><br><span class="line">content(post_data, type &#x3D; &quot;text&quot;) %&gt;&gt;% fromJSON %&gt;&gt;% &#96;[[&#96;(2)</span><br><span class="line"># No encoding supplied: defaulting to UTF-8.</span><br><span class="line">#                  v3_avg v1 v2</span><br><span class="line"># 1          -0.262449565  a  c</span><br><span class="line"># 2 0.0014069844444444442  a  d</span><br><span class="line"># 3   0.17559292428571424  a  e</span><br><span class="line"># 4   0.28090609250000004  b  c</span><br><span class="line"># 5  -0.03396260833333329  b  d</span><br><span class="line"># 6          0.0773905475  b  e</span><br><span class="line"></span><br><span class="line"># 這裡v3_avg會是字串，需要自己parse，但是如果很熟R的話，這一點應該不成問題</span><br><span class="line"># 用下面指令即可</span><br><span class="line">library(data.table)</span><br><span class="line">content(post_data, type &#x3D; &quot;text&quot;) %&gt;&gt;% fromJSON %&gt;&gt;% &#96;[[&#96;(2) %&gt;&gt;% </span><br><span class="line">  data.table %&gt;&gt;% &#96;[&#96;( , lapply(.SD, type.convert, as.is &#x3D; TRUE)) %&gt;&gt;% str</span><br><span class="line"># Classes ‘data.table’ and &#39;data.frame&#39;:	6 obs. of  3 variables:</span><br><span class="line">#  $ v3_avg: num  -0.26245 0.00141 0.17559 0.28091 -0.03396 ...</span><br><span class="line">#  $ v1    : chr  &quot;a&quot; &quot;a&quot; &quot;a&quot; &quot;b&quot; ...</span><br><span class="line">#  $ v2    : chr  &quot;c&quot; &quot;d&quot; &quot;e&quot; &quot;c&quot; ...</span><br><span class="line">#  - attr(*, &quot;.internal.selfref&quot;)&#x3D;&lt;externalptr&gt; </span><br></pre></td></tr></table></figure>

<ol start="4">
<li>將mysql納入supervisord</li>
</ol>
<p>執行下面的指令即可</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl stop mysqld</span><br><span class="line">sudo systemctl <span class="built_in">disable</span> mysqld</span><br><span class="line"></span><br><span class="line">sudo tee -a /etc/supervisor/supervisord.conf &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">[program:mysql]</span><br><span class="line"><span class="built_in">command</span>=/usr/bin/pidproxy /var/run/mysqld/mysqld.pid /usr/sbin/mysqld</span><br><span class="line">stdout_logfile=/var/<span class="built_in">log</span>/supervisor/mysql-stdout.out</span><br><span class="line">stderr_logfile=/var/<span class="built_in">log</span>/supervisor/mysql-stderr.out</span><br><span class="line">autostart=<span class="literal">true</span></span><br><span class="line">startsecs=5</span><br><span class="line">priority=80</span><br><span class="line">user=mysql</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl restart supervisor</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>BigData</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>Hive</tag>
        <tag>Drill</tag>
      </tags>
  </entry>
  <entry>
    <title>Apache Spark on Apache Hive</title>
    <url>/posts/201609/2016-09-22-spark-on-hive.html</url>
    <content><![CDATA[<p>這篇主要是用Spark去連接現存的Hive</p>
<p>可能有人會先好奇說為什麼不用Spark本身的Thrift Server</p>
<p>我稍微看了一下，Spark的Thrift Server只能跑Local</p>
<p>也就是說你的資料只能在一台電腦上跑，因此，這樣是有風險的</p>
<a id="more"></a>

<p>只是現在Hive的設定只在一台Mysql上，也是很有風險</p>
<p>但是Hive可以把Metastore移到Mysql Cluster上，這樣就可以避開這個風險了</p>
<p>不過這不是本篇的重點，本篇會專注在怎麼用Spark去連接現有的Hive</p>
<p>配置很簡單，只需要使用下面四個指令，以及修改一下Spark的<code>spark-default.conf</code>即可</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cp <span class="variable">$HADOOP_CONF_DIR</span>/core-site.xml <span class="variable">$SPARK_HOME</span>/conf/</span><br><span class="line">cp <span class="variable">$HADOOP_CONF_DIR</span>/hdfs-site.xml <span class="variable">$SPARK_HOME</span>/conf/</span><br><span class="line">cp <span class="variable">$HIVE_HOME</span>/conf/hive-site.xml <span class="variable">$SPARK_HOME</span>/conf/</span><br><span class="line">cp <span class="variable">$HIVE_HOME</span>/lib/mysql-connector-java-5.1.39-bin.jar <span class="variable">$SPARK_HOME</span>/extraClass/</span><br></pre></td></tr></table></figure>

<p><code>spark-default.conf</code>增加下面的東西：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">spark.driver.extraClassPath /usr/<span class="built_in">local</span>/bigdata/spark/extraClass/mysql-connector-java-5.1.39-bin.jar</span><br><span class="line">spark.executor.extraClassPath /usr/<span class="built_in">local</span>/bigdata/spark/extraClass/mysql-connector-java-5.1.39-bin.jar</span><br></pre></td></tr></table></figure>

<p>如果已經設定了，就用<code>,</code>去append即可</p>
<p>接下來就可以直接執行spark-shell了</p>
<p>執行<code>spark-shell mesos://zk://192.168.0.121:2181,192.168.0.122:2181,192.168.0.123:2181/mesos</code></p>
<p>script如下：</p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.spark.sql.<span class="type">SparkSession</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> spark = <span class="type">SparkSession</span>.builder().appName(<span class="string">&quot;spark on hive&quot;</span>).</span><br><span class="line">  config(<span class="string">&quot;spark.sql.warehouse.dir&quot;</span>, <span class="string">&quot;hdfs://hc1/spark&quot;</span>).</span><br><span class="line">  enableHiveSupport().getOrCreate()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 之前丟上去hive的test_df，沒有資料的話可以往前翻兩篇...</span></span><br><span class="line">spark.sql(<span class="string">&quot;select count(*) from vddata&quot;</span>).show()</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">+--------+</span></span><br><span class="line"><span class="comment">|count(1)|</span></span><br><span class="line"><span class="comment">+--------+</span></span><br><span class="line"><span class="comment">|      41|</span></span><br><span class="line"><span class="comment">+--------+</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">spark.sql(<span class="string">&quot;select v1,v2,sum(v3) from test_df group by v1,v2&quot;</span>).show()</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">+---+---+-------------------+</span></span><br><span class="line"><span class="comment">| v1| v2|            sum(v3)|</span></span><br><span class="line"><span class="comment">+---+---+-------------------+</span></span><br><span class="line"><span class="comment">|  b|  e| 1.1515786935289156|</span></span><br><span class="line"><span class="comment">|  a|  c| 2.1048099797195103|</span></span><br><span class="line"><span class="comment">|  b|  d| 0.5861563687201317|</span></span><br><span class="line"><span class="comment">|  a|  d|-0.4549045928741139|</span></span><br><span class="line"><span class="comment">|  b|  c| 2.0411431978258983|</span></span><br><span class="line"><span class="comment">|  a|  e| -4.942821584114654|</span></span><br><span class="line"><span class="comment">| v1| v2|               null|</span></span><br><span class="line"><span class="comment">+---+---+-------------------+</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>BigData</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>Hive</tag>
        <tag>Spark</tag>
      </tags>
  </entry>
  <entry>
    <title>library多個套件，並自動安裝沒安裝的套件</title>
    <url>/posts/201610/2016-10-04-library-R-packages-with-install-automatically.md.html</url>
    <content><![CDATA[<p>廢話不多說，直接上code</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(pipeR)</span><br><span class="line">library_mul &lt;- <span class="keyword">function</span>(<span class="keyword">...</span>, lib.loc = <span class="literal">NULL</span>, quietly = <span class="literal">FALSE</span>, warn.conflicts = <span class="literal">TRUE</span>)&#123;</span><br><span class="line">  pkgs &lt;- as.list(substitute(list(<span class="keyword">...</span>))) %&gt;&gt;% sapply(as.character) %&gt;&gt;% setdiff(<span class="string">&quot;list&quot;</span>)</span><br><span class="line">  <span class="keyword">if</span> (any(!pkgs %<span class="keyword">in</span>% installed.packages()))</span><br><span class="line">    install.packeges(pkgs[!pkgs %<span class="keyword">in</span>% installed.packages()])</span><br><span class="line">  sapply(pkgs, <span class="keyword">library</span>, character.only = <span class="literal">TRUE</span>, lib.loc = lib.loc, quietly = quietly) %&gt;&gt;% invisible</span><br><span class="line">&#125;</span><br><span class="line">library_mul(httr, pipeR, data.table)</span><br></pre></td></tr></table></figure>




]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>library</tag>
      </tags>
  </entry>
  <entry>
    <title>Apache Spark and Apache Hive</title>
    <url>/posts/201609/2016-09-26-spark-and-hive.html</url>
    <content><![CDATA[<p>關於Spark操作Hive資料庫的一些心得</p>
<a id="more"></a>

<ol>
<li>動態分割表</li>
</ol>
<p>建議在Hive setup的時候修改這個參數：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.exec.dynamic.partition.mode<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>nonstrict<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">description</span>&gt;</span></span><br><span class="line">    In strict mode, the user must specify at least one static partition</span><br><span class="line">    in case the user accidentally overwrites all partitions.</span><br><span class="line">    In nonstrict mode all partitions are allowed to be dynamic.</span><br><span class="line">  <span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>從Spark寫入Hive</li>
</ol>
<p><code>spark-shell mesos://zk://192.168.0.121:2181,192.168.0.122:2181,192.168.0.123:2181/mesos</code>開啟spark-shell</p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.spark.sql.<span class="type">SparkSession</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> spark = <span class="type">SparkSession</span>.builder().appName(<span class="string">&quot;spark on hive&quot;</span>).</span><br><span class="line">  config(<span class="string">&quot;spark.sql.warehouse.dir&quot;</span>, <span class="string">&quot;hdfs://hc1/spark&quot;</span>).</span><br><span class="line">  enableHiveSupport().getOrCreate()</span><br><span class="line">  </span><br><span class="line">spark.sql(<span class="string">&quot;CREATE TABLE test_df (v1 STRING, v2 STRING, v3 DOUBLE)&quot;</span> + </span><br><span class="line">  <span class="string">&quot;ROW FORMAT DELIMITED FIELDS TERMINATED BY &#x27;,&#x27; STORED AS TEXTFILE&quot;</span>)</span><br><span class="line">spark.sql(<span class="string">&quot;LOAD DATA LOCAL INPATH &#x27;/home/tester/test_df.csv&#x27; OVERWRITE INTO TABLE test_df&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> hiveDF = spark.sql(<span class="string">&quot;select * from test_df&quot;</span>)</span><br><span class="line">hiveDF.show(<span class="number">2</span>)</span><br><span class="line"># +-------------------+---+----+</span><br><span class="line"># |                 v1| v2|  v3|</span><br><span class="line"># +-------------------+---+----+</span><br><span class="line"># |<span class="number">-0.0170655635959667</span>|  e|<span class="literal">null</span>|</span><br><span class="line"># |  <span class="number">0.441907768470412</span>|  d|<span class="literal">null</span>|</span><br><span class="line"># +-------------------+---+----+</span><br><span class="line"># only showing top <span class="number">2</span> rows</span><br><span class="line"></span><br><span class="line"># 試著換欄位位置</span><br><span class="line"><span class="keyword">val</span> hiveDF2 = hiveDF.select($<span class="string">&quot;v3&quot;</span>, $<span class="string">&quot;v2&quot;</span>, $<span class="string">&quot;v1&quot;</span>)</span><br><span class="line">hiveDF2.show(<span class="number">2</span>)</span><br><span class="line"># +----+---+-------------------+</span><br><span class="line"># |  v3| v2|                 v1|</span><br><span class="line"># +----+---+-------------------+</span><br><span class="line"># |<span class="literal">null</span>|  e|<span class="number">-0.0170655635959667</span>|</span><br><span class="line"># |<span class="literal">null</span>|  d|  <span class="number">0.441907768470412</span>|</span><br><span class="line"># +----+---+-------------------+</span><br><span class="line"># only showing top <span class="number">2</span> rows</span><br><span class="line"></span><br><span class="line"># 寫進test_df</span><br><span class="line">hiveDF2.write.insertInto(<span class="string">&quot;test_df&quot;</span>)</span><br><span class="line"></span><br><span class="line">spark.sql(<span class="string">&quot;select * from test_df&quot;</span>).show(<span class="number">2</span>)</span><br><span class="line">#+-------------------+---+----+</span><br><span class="line">#|                 v1| v2|  v3|</span><br><span class="line">#+-------------------+---+----+</span><br><span class="line">#|<span class="number">-0.0170655635959667</span>|  e|<span class="literal">null</span>|</span><br><span class="line">#|  <span class="number">0.441907768470412</span>|  d|<span class="literal">null</span>|</span><br><span class="line">#+-------------------+---+----+</span><br><span class="line">#only showing top <span class="number">2</span> rows</span><br></pre></td></tr></table></figure>

<p>所以在寫入的時候要注意，欄位順序避免發生這種問題</p>
<p>利用<code>select</code>這個函數去調換column的位置以避免寫入問題</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">spark.sql(&quot;<span class="keyword">drop</span> <span class="keyword">table</span> test_df<span class="string">&quot;)</span></span><br><span class="line"><span class="string">spark.sql(&quot;</span><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> test_df (v1 <span class="keyword">STRING</span>, v2 <span class="keyword">STRING</span>, v3 <span class="keyword">DOUBLE</span>)<span class="string">&quot; + </span></span><br><span class="line"><span class="string">  &quot;</span><span class="keyword">ROW</span> <span class="keyword">FORMAT</span> <span class="keyword">DELIMITED</span> <span class="keyword">FIELDS</span> <span class="keyword">TERMINATED</span> <span class="keyword">BY</span> <span class="string">&#x27;,&#x27;</span> <span class="keyword">STORED</span> <span class="keyword">AS</span> TEXTFILE<span class="string">&quot;)</span></span><br><span class="line"><span class="string">spark.sql(&quot;</span><span class="keyword">LOAD</span> <span class="keyword">DATA</span> <span class="keyword">LOCAL</span> INPATH <span class="string">&#x27;/home/tester/test_df.csv&#x27;</span> OVERWRITE <span class="keyword">INTO</span> <span class="keyword">TABLE</span> test_df<span class="string">&quot;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">val hiveDF = spark.sql(&quot;</span><span class="keyword">select</span> * <span class="keyword">from</span> test_df<span class="string">&quot;)</span></span><br><span class="line"><span class="string">hiveDF.show(2)</span></span><br><span class="line"><span class="string"># +---+---+-------------------+</span></span><br><span class="line"><span class="string"># | v1| v2|                 v3|</span></span><br><span class="line"><span class="string"># +---+---+-------------------+</span></span><br><span class="line"><span class="string"># |  b|  e|-0.0170655635959667|</span></span><br><span class="line"><span class="string"># |  a|  d|  0.441907768470412|</span></span><br><span class="line"><span class="string"># +---+---+-------------------+</span></span><br><span class="line"><span class="string"># only showing top 2 rows</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">val cols_order = hiveDF.columns</span></span><br><span class="line"><span class="string">val hiveDF2 = hiveDF.select($&quot;</span>v3<span class="string">&quot;, $&quot;</span>v2<span class="string">&quot;, $&quot;</span>v1<span class="string">&quot;)</span></span><br><span class="line"><span class="string">hiveDF2.select(cols_order.head, cols_order.tail: _*).write.insertInto(&quot;</span>test_df<span class="string">&quot;)</span></span><br><span class="line"><span class="string">spark.sql(&quot;</span><span class="keyword">select</span> * <span class="keyword">from</span> test_df<span class="string">&quot;).show(2)</span></span><br><span class="line"><span class="string"># +---+---+-------------------+</span></span><br><span class="line"><span class="string"># | v1| v2|                 v3|</span></span><br><span class="line"><span class="string"># +---+---+-------------------+</span></span><br><span class="line"><span class="string"># |  b|  e|-0.0170655635959667|</span></span><br><span class="line"><span class="string"># |  a|  d|  0.441907768470412|</span></span><br><span class="line"><span class="string"># +---+---+-------------------+</span></span><br><span class="line"><span class="string"># only showing top 2 rows</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>BigData</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>Hive</tag>
        <tag>Spark</tag>
      </tags>
  </entry>
  <entry>
    <title>建置Mongodb Sharding Server</title>
    <url>/posts/201610/2016-10-14-buildup-mongodb-sharding-server.html</url>
    <content><![CDATA[<p>業務擴展到找尋適合的NoSQL server了</p>
<p>這篇來試Mongodb sharding server</p>
<a id="more"></a>

<p>基本上都是參考下面幾篇去建置的：</p>
<ol>
<li><p><a href="https://docs.mongodb.com/manual/tutorial/install-mongodb-on-red-hat/">Install MongoDB Community Edition on CentOS Linux</a></p>
</li>
<li><p><a href="http://cyrilwang.blogspot.tw/2012/06/mongodb-replica-set-in-centos-6x_05.html">MongoDB Replica Set in CentOS 6.x</a></p>
</li>
<li><p><a href="https://blog.toright.com/posts/4508/mongodb-replica-set-%E9%AB%98%E5%8F%AF%E7%94%A8%E6%80%A7%E6%9E%B6%E6%A7%8B%E6%90%AD%E5%BB%BA.html">MongoDB Replica Set 高可用性架構搭建</a></p>
</li>
<li><p><a href="https://blog.toright.com/posts/4552/mongodb-sharding-%E5%88%86%E6%95%A3%E5%BC%8F%E5%84%B2%E5%AD%98%E6%9E%B6%E6%A7%8B%E5%BB%BA%E7%BD%AE-%E6%A6%82%E5%BF%B5%E7%AF%87.html">MongoDB Sharding 分散式儲存架構建置 (概念篇)</a></p>
</li>
<li><p><a href="https://blog.toright.com/posts/4574/mongodb-sharding-%E5%88%86%E6%95%A3%E5%BC%8F%E5%84%B2%E5%AD%98%E6%9E%B6%E6%A7%8B%E5%BB%BA%E7%BD%AE-%E5%AF%A6%E4%BD%9C%E7%AF%87.html">MongoDB Sharding 分散式儲存架構建置 (實作篇)</a></p>
</li>
<li><p><a href="https://github.com/Azure/azure-quickstart-templates/blob/master/mongodb-sharding-centos">github scripts to create mongodb sharding</a></p>
</li>
</ol>
<p>我根據我的需求把第6點的scripts改成我要，可以在<a href="https://github.com/ChingChuan-Chen/create_mongodb_sharding_server">我的github</a>找到</p>
<p>我的伺服器分布規劃：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">replica set 1: 192.168.0.121 (primary), 192.168.0.122, 192.168.0.123</span><br><span class="line">replica set 2: 192.168.0.124 (primary), 192.168.0.125, 192.168.0.126</span><br><span class="line">config server: 192.168.0.127</span><br><span class="line">router: 192.168.0.128</span><br></pre></td></tr></table></figure>

<p>但是為了fit我的分布，我做了一些修改</p>
<ol>
<li><p>我刪掉<code>config_primary.sh</code>第82行，81行改成<code>config=&#123;_id: &quot;crepset&quot;, configsvr: true, members: [&#123;_id: 0, host: &quot;192.168.0.127:27019&quot;&#125;]&#125;</code></p>
</li>
<li><p><code>router1.sh</code>中的<code>crepset/192.168.0.127:27019,192.168.0.128:27019,192.168.0.129:2701</code>都取代成<code>crepset/192.168.0.127:27019</code></p>
</li>
<li><p><code>config_secondary.sh</code>跟<code>router2.sh</code>就沒跑了</p>
</li>
</ol>
<p>接下來就直接在各台先取得root權限(用<code>su</code>)，然後跑<code>./install_mongodb.sh 該台IP</code>安裝mongodb</p>
<p>PS: rpms可以在<a href="https://repo.mongodb.org/yum/redhat/7Server/mongodb-org/3.2/x86_64/RPMS/%E6%89%BE%E5%88%B0">https://repo.mongodb.org/yum/redhat/7Server/mongodb-org/3.2/x86_64/RPMS/找到</a></p>
<p>接著在<code>192.168.0.121</code>跟<code>192.168.0.124</code>跑<code>./replica_primary.sh set名稱 該台IP 使用者名稱</code></p>
<p>並同時在replica set secondary的電腦上跑``./replica_secondary.sh`</p>
<p>都完成之後，使用<code>config_primary.sh</code>部署config server</p>
<p>最後再用<code>router1.sh</code>部署router server</p>
<p>到此，mongodb sharding server就部署完畢了</p>
]]></content>
      <categories>
        <category>mongodb</category>
      </categories>
      <tags>
        <tag>CentOS</tag>
        <tag>mongodb</tag>
      </tags>
  </entry>
  <entry>
    <title>用R做Oracle跟mongodb的loader</title>
    <url>/posts/201610/2016-10-15-using-R-to-load-data-into-mongodb-from-oracle.html</url>
    <content><![CDATA[<p>這篇是用R做一個loader，把Oracle資料倒去Mongodb中</p>
<p>並且使用設定去將特定column改成list的方式做儲存</p>
<a id="more"></a>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(ROracle)</span><br><span class="line"><span class="keyword">library</span>(stringr)</span><br><span class="line"><span class="keyword">library</span>(data.table)</span><br><span class="line"><span class="keyword">library</span>(pipeR)</span><br><span class="line"><span class="keyword">library</span>(mongolite)</span><br><span class="line"></span><br><span class="line">Sys.setenv(TZ = <span class="string">&quot;Asia/Taipei&quot;</span>, ORA_SDTZ = <span class="string">&quot;Asia/Taipei&quot;</span>)</span><br><span class="line"></span><br><span class="line">numRows &lt;- <span class="number">5e7</span></span><br><span class="line"></span><br><span class="line">host &lt;- <span class="string">&quot;192.168.0.120&quot;</span></span><br><span class="line">port &lt;- <span class="number">1521</span></span><br><span class="line">sid &lt;- <span class="string">&quot;orcl&quot;</span></span><br><span class="line">connectString &lt;- paste0(<span class="string">&quot;(DESCRIPTION=&quot;</span>,</span><br><span class="line">  <span class="string">&quot;(ADDRESS=(PROTOCOL=TCP)(HOST=&quot;</span>, host, <span class="string">&quot;)(PORT=&quot;</span>, port, <span class="string">&quot;))&quot;</span>,</span><br><span class="line">  <span class="string">&quot;(CONNECT_DATA=(SID=&quot;</span>, sid, <span class="string">&quot;)))&quot;</span>)</span><br><span class="line">con &lt;- dbConnect(dbDriver(<span class="string">&quot;Oracle&quot;</span>), username = <span class="string">&quot;system&quot;</span>, </span><br><span class="line">                 password = <span class="string">&quot;qscf12356&quot;</span>, dbname = connectString)</span><br><span class="line"></span><br><span class="line"><span class="comment"># first commit</span></span><br><span class="line">diff_seconds_90days &lt;- difftime(Sys.time(), Sys.Date()-<span class="number">90</span>, units = <span class="string">&quot;secs&quot;</span>) %&gt;&gt;% as.integer</span><br><span class="line">sizePerGroup &lt;- sample(<span class="number">11</span>:<span class="number">2500</span>, ceiling(numRows / mean(<span class="number">1</span>:<span class="number">2500</span>)) * <span class="number">1.2</span>, <span class="literal">TRUE</span>) %&gt;&gt;% </span><br><span class="line">  `[`(. &gt; <span class="number">10</span>) %&gt;&gt;% `[`(<span class="number">1</span>:which(cumsum(.) &gt;= numRows)[<span class="number">1</span>])</span><br><span class="line">sizePerGroup[length(sizePerGroup)] &lt;- sizePerGroup[length(sizePerGroup)] + numRows - sum(sizePerGroup)</span><br><span class="line"></span><br><span class="line">var2 &lt;- sprintf(<span class="string">&quot;A%05i&quot;</span>, <span class="number">1</span>:length(sizePerGroup))</span><br><span class="line">var3 &lt;- sprintf(<span class="string">&quot;B%03i&quot;</span>, <span class="number">1</span>:<span class="number">800</span>)</span><br><span class="line">dat &lt;- mapply(<span class="keyword">function</span>(ss, v2value)&#123;</span><br><span class="line">  as.data.table(list(t = Sys.time() - sample(diff_seconds_90days, <span class="number">1</span>, <span class="literal">TRUE</span>), </span><br><span class="line">                     v2 = v2value, v3 = sample(var3, ss, <span class="literal">TRUE</span>), v4 = rnorm(ss)))</span><br><span class="line">&#125;, sizePerGroup, var2, SIMPLIFY = <span class="literal">FALSE</span>) %&gt;&gt;% rbindlist %&gt;&gt;%</span><br><span class="line">  setnames(toupper(names(.))) <span class="comment"># 記得全部欄位都要大寫</span></span><br><span class="line"></span><br><span class="line">st &lt;- proc.time()</span><br><span class="line"><span class="comment"># write data to Oracle</span></span><br><span class="line">dbWriteTable(con, <span class="string">&quot;TEST_BIG_TABLE&quot;</span>, dat)</span><br><span class="line">proc.time() - st</span><br><span class="line"><span class="comment">#   user  system elapsed </span></span><br><span class="line"><span class="comment">#  29.97    3.83 1138.38</span></span><br><span class="line"><span class="comment">## 需要19分鐘才能夠把資料都上傳完畢</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># check data size</span></span><br><span class="line">cntDF &lt;- dbGetQuery(con, <span class="string">&quot;SELECT COUNT(*) ROWCNT FROM TEST_BIG_TABLE&quot;</span>)</span><br><span class="line">cat(sprintf(<span class="string">&quot;%8i&quot;</span>, cntDF$ROWCNT))</span><br><span class="line"><span class="comment"># 50000000</span></span><br><span class="line"><span class="comment">## 確定是五千萬筆</span></span><br><span class="line">dbDisconnect(con)</span><br><span class="line"></span><br><span class="line">rm(dat, var2, var3, sizePerGroup)</span><br><span class="line">gc()</span><br><span class="line"></span><br><span class="line"><span class="comment">## 從oracle到mongodb</span></span><br><span class="line"><span class="comment"># 這裡上傳的想法是根據t, v3拆成小小的資料集來做</span></span><br><span class="line"><span class="comment"># 資料會取得v3部分子集(這裡設定一次200個)，t一個</span></span><br><span class="line"><span class="comment"># 舉例來說，v3會取得B001-B200，t1選2016-07-18</span></span><br><span class="line"><span class="comment"># 我就從Oracle拿出v3 in B001-B200的跟t是介在2016-07-18 00:00:00到2016-07-18 23:59:59的資料</span></span><br><span class="line"><span class="comment"># 然後根據t, v2的組合(一個t只會對應一個v2)去把v3,v4合併成一個array，並產生新的column</span></span><br><span class="line"><span class="comment"># 合併出來的一筆資料就會像：</span></span><br><span class="line"><span class="comment"># t: &#x27;2016-08-19 08:56:13&#x27;</span></span><br><span class="line"><span class="comment"># v2: &#x27;A0001&#x27;</span></span><br><span class="line"><span class="comment"># v3: [&#x27;B001&#x27;, &#x27;B096&#x27;, ...]</span></span><br><span class="line"><span class="comment"># v4: [-0.972354, 0.456785, ...]</span></span><br><span class="line"><span class="comment"># 再把這樣的資料傳到mongodb就大功告成了</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 取得分批的參數</span></span><br><span class="line">paras &lt;- list(sprintf(<span class="string">&quot;B%03i&quot;</span>, <span class="number">1</span>:<span class="number">800</span>), seq.Date(Sys.Date()-<span class="number">90</span>, Sys.Date(), <span class="string">&quot;days&quot;</span>) %&gt;&gt;% </span><br><span class="line">                format(<span class="string">&quot;&#x27;%Y-%m-%d %H:%M:%S&#x27;&quot;</span>))</span><br><span class="line">parasName &lt;- paste0(<span class="string">&quot;:para&quot;</span>, <span class="number">1</span>:length(paras))</span><br><span class="line"><span class="comment"># 分批的size</span></span><br><span class="line">batchSize &lt;- <span class="number">200</span></span><br><span class="line"><span class="comment"># group by 的變數</span></span><br><span class="line">groupbyVars &lt;- <span class="string">&quot;t,v2&quot;</span></span><br><span class="line"><span class="comment"># sql</span></span><br><span class="line">sql &lt;- paste(<span class="string">&quot;SELECT tbl.* FROM TEST_BIG_TABLE tbl WHERE tbl.v3 in :para1&quot;</span>,</span><br><span class="line">             <span class="string">&quot;AND tbl.t &gt;= to_date(:para2, &#x27;YYYY-MM-DD HH24:MI:SS&#x27;)&quot;</span>,</span><br><span class="line">             <span class="string">&quot;AND tbl.t &lt; to_date(:para2, &#x27;YYYY-MM-DD HH24:MI:SS&#x27;) + 1&quot;</span>, sep = <span class="string">&quot;\n&quot;</span>)</span><br><span class="line"><span class="comment"># check sql is valid</span></span><br><span class="line">stopifnot(all(unique(str_extract_all(sql, <span class="string">&quot;:para\\d&quot;</span>)[[<span class="number">1</span>]]) %<span class="keyword">in</span>% parasName))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分割出para1 set</span></span><br><span class="line">paras1_set &lt;- split(paras[[<span class="number">1</span>]], rep(<span class="number">1</span>:(ceiling(length(paras[[<span class="number">1</span>]]) / batchSize)), </span><br><span class="line">                                    each = batchSize, length = length(paras[[<span class="number">1</span>]]))) %&gt;&gt;%</span><br><span class="line">  sapply(<span class="keyword">function</span>(set) paste0(<span class="string">&quot;(&#x27;&quot;</span>, paste0(set, collapse = <span class="string">&quot;&#x27;,&#x27;&quot;</span>), <span class="string">&quot;&#x27;)&quot;</span>))</span><br><span class="line"><span class="comment"># control the upload progress</span></span><br><span class="line">loc &lt;- rep(<span class="number">1</span>, length(paras))</span><br><span class="line"></span><br><span class="line">st &lt;- proc.time()</span><br><span class="line">contUpload &lt;- <span class="literal">TRUE</span></span><br><span class="line"><span class="keyword">while</span>(contUpload)&#123;</span><br><span class="line">  message(sprintf(<span class="string">&quot;Now loc is %s ...&quot;</span>, paste0(loc, collapse = <span class="string">&quot;,&quot;</span>)))</span><br><span class="line">  </span><br><span class="line">  <span class="comment"># generate sql to query the subset</span></span><br><span class="line">  sql_implement &lt;- sql</span><br><span class="line">  <span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">2</span>:length(paras))</span><br><span class="line">    sql_implement &lt;- str_replace_all(sql_implement, paste0(<span class="string">&quot;:para&quot;</span>, i), paras[[i]][loc[i]])</span><br><span class="line">  sql_implement &lt;- str_replace_all(sql_implement, <span class="string">&quot;:para1&quot;</span>, paras1_set[loc[<span class="number">1</span>]])</span><br><span class="line">  </span><br><span class="line">  <span class="comment"># query data</span></span><br><span class="line">  con &lt;- dbConnect(dbDriver(<span class="string">&quot;Oracle&quot;</span>), username = <span class="string">&quot;system&quot;</span>, </span><br><span class="line">                   password = <span class="string">&quot;qscf12356&quot;</span>, dbname = connectString)</span><br><span class="line">  oraDT &lt;- dbGetQuery(con, sql_implement) %&gt;&gt;% data.table %&gt;&gt;% setnames(tolower(names(.)))</span><br><span class="line">  dbDisconnect(con)</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (nrow(oraDT) &gt; <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="comment"># binding variables</span></span><br><span class="line">    groupbyVarsSplit &lt;- str_split(groupbyVars, <span class="string">&quot;,&quot;</span>)[[<span class="number">1</span>]]</span><br><span class="line">    bindingVars &lt;- setdiff(names(oraDT), groupbyVarsSplit)</span><br><span class="line">    expr &lt;- paste(bindingVars, paste0(<span class="string">&quot;list(&quot;</span>, bindingVars, <span class="string">&quot;)&quot;</span>), sep = <span class="string">&quot;=&quot;</span>) %&gt;&gt;% </span><br><span class="line">      c(<span class="string">&quot;numRecords=.N&quot;</span>) %&gt;&gt;% paste(collapse = <span class="string">&quot;,&quot;</span>) %&gt;&gt;% (paste0(<span class="string">&quot;.(&quot;</span>, ., <span class="string">&quot;)&quot;</span>))</span><br><span class="line">    mongoDT &lt;- oraDT[ , eval(parse(text = expr)), by = groupbyVars]</span><br><span class="line">    rm(oraDT); gc()</span><br><span class="line">  </span><br><span class="line">    <span class="comment"># upload data to mongo</span></span><br><span class="line">    ignoreOutput &lt;- capture.output(mongoConn &lt;- mongo(<span class="string">&quot;test_big_table&quot;</span>, <span class="string">&quot;big_table&quot;</span>, </span><br><span class="line">                                                      <span class="string">&quot;mongodb://drill:drill@192.168.0.128:27017&quot;</span>))</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># check the data</span></span><br><span class="line">    timeClassNames &lt;- c(<span class="string">&quot;Date&quot;</span>, <span class="string">&quot;POSIXct&quot;</span>, <span class="string">&quot;POSIXt&quot;</span>, <span class="string">&quot;POSIXlt&quot;</span>)</span><br><span class="line">    timeCol &lt;- sapply(mongoDT, <span class="keyword">function</span>(x) any(class(x) %<span class="keyword">in</span>% timeClassNames)) %&gt;&gt;% (names(.[.]))</span><br><span class="line">    groupbyVars2 &lt;- setdiff(groupbyVarsSplit, timeCol)</span><br><span class="line">    fieldStr &lt;- sprintf(<span class="string">&#x27;&#123;&quot;_id&quot;: 0, &quot;numRecords&quot;: 1, %s&#125;&#x27;</span>, </span><br><span class="line">                        paste(sprintf(<span class="string">&#x27;&quot;%s&quot;: 1&#x27;</span>, groupbyVars2), collapse = <span class="string">&quot;,&quot;</span>))</span><br><span class="line">    groupbyVarSet &lt;- sapply(groupbyVars2, <span class="keyword">function</span>(x) unique(mongoDT[[x]]) %&gt;&gt;% </span><br><span class="line">                              (paste0(<span class="string">&quot;\&quot;&quot;</span>, ., <span class="string">&quot;\&quot;&quot;</span>)) %&gt;&gt;% paste(collapse = <span class="string">&quot;,&quot;</span>))</span><br><span class="line">    queryInfo &lt;- paste0(<span class="string">&quot;\&quot;&quot;</span>, groupbyVars2 ,<span class="string">&quot;\&quot;: &#123;\&quot;$in\&quot;: [&quot;</span>, groupbyVarSet, <span class="string">&quot;]&#125;&quot;</span>) %&gt;&gt;%</span><br><span class="line">      paste(collapse = <span class="string">&quot;,&quot;</span>) %&gt;&gt;% (paste0(<span class="string">&quot;&#123;&quot;</span>, ., <span class="string">&quot;&#125;&quot;</span>))</span><br><span class="line">    chkDT &lt;- mongoConn$find(queryInfo, fieldStr)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># filter the data not upload</span></span><br><span class="line">    <span class="keyword">if</span> (nrow(chkDT) &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      uploadDT &lt;- merge(mongoDT, chkDT, all.x = <span class="literal">TRUE</span>, by = groupbyVars2, suffixes = c(<span class="string">&quot;&quot;</span>, <span class="string">&quot;.chk&quot;</span>)) %&gt;&gt;%</span><br><span class="line">        `[`(numRecords != numRecords.chk | is.na(numRecords.chk)) %&gt;&gt;% `[`(j = numRecords.chk := <span class="literal">NULL</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      uploadDT &lt;- mongoDT</span><br><span class="line">    &#125;</span><br><span class="line">    rm(mongoDT); gc()</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># start to insert data</span></span><br><span class="line">    numFail &lt;- <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> (nrow(uploadDT) &gt; <span class="number">0</span>)&#123;</span><br><span class="line">      mapply(<span class="keyword">function</span>(i, j) paras[[i]][j], <span class="number">2</span>:length(paras), tail(loc, length(loc)-<span class="number">1</span>)) %&gt;&gt;%</span><br><span class="line">        paste(collapse = <span class="string">&quot;,&quot;</span>) %&gt;&gt;% (paste0(<span class="string">&quot;para1: \&quot;&quot;</span>, paras1_set[loc[<span class="number">1</span>]], <span class="string">&quot;\&quot;,&quot;</span>, .)) %&gt;&gt;%</span><br><span class="line">        sprintf(fmt = <span class="string">&quot;Now upload data with set: %s&quot;</span>) %&gt;&gt;% message</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">while</span> (numFail &lt;= <span class="number">10</span>) &#123;</span><br><span class="line">        uploadStatus &lt;- mongoConn$insert(uploadDT)</span><br><span class="line">        <span class="keyword">if</span> (uploadStatus)</span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        Sys.sleep(<span class="number">0.1</span>)</span><br><span class="line">        numFail &lt;- numFail + <span class="number">1</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (numFail &gt; <span class="number">10</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        mongoConn$drop()</span><br><span class="line">        write(sprintf(<span class="string">&quot;Fail to upload the data with sql:\n%s&quot;</span>, sql_implement), <span class="string">&#x27;fail_upload_DB&#x27;</span>, </span><br><span class="line">              append = file.exists(<span class="string">&#x27;fail_upload_DB&#x27;</span>))</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    rm(uploadDT); gc()</span><br><span class="line">    <span class="comment"># disconnect to mongo</span></span><br><span class="line">    remove(mongoConn)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  loc[<span class="number">1</span>] &lt;- loc[<span class="number">1</span>] + <span class="number">1</span></span><br><span class="line">  <span class="keyword">if</span> (loc[<span class="number">1</span>] &gt; length(paras1_set))&#123;</span><br><span class="line">    loc[<span class="number">1</span>] &lt;- <span class="number">1</span></span><br><span class="line">    loc[<span class="number">2</span>] &lt;- loc[<span class="number">2</span>] + <span class="number">1</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">2</span>:length(loc))&#123;</span><br><span class="line">    <span class="keyword">if</span> (loc[i] &gt; length(paras[[i]]))&#123;</span><br><span class="line">      loc[i] &lt;- <span class="number">1</span></span><br><span class="line">      <span class="keyword">if</span> (i == length(loc))&#123;</span><br><span class="line">        contUpload &lt;- <span class="literal">FALSE</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        loc[i+<span class="number">1</span>] &lt;- loc[i+<span class="number">1</span>] + <span class="number">1</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">proc.time() - st</span><br><span class="line"><span class="comment">#   user  system elapsed </span></span><br><span class="line"><span class="comment"># 253.87    5.33 2971.89</span></span><br><span class="line"><span class="comment">## 拆成360份，上傳大概是2.5倍的時間，50分鐘</span></span><br><span class="line"></span><br><span class="line">mongoConn &lt;- mongo(<span class="string">&quot;test_big_table&quot;</span>, <span class="string">&quot;big_table&quot;</span>, <span class="string">&quot;mongodb://drill:drill@192.168.0.128:27017&quot;</span>)</span><br><span class="line"><span class="comment"># count data size</span></span><br><span class="line">sprintf(<span class="string">&quot;%6i&quot;</span>, mongoConn$count()) <span class="comment"># 305174</span></span><br><span class="line"><span class="comment">## 最後資料量從5000萬降到剩下30.5萬</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># get data and convert to normal table</span></span><br><span class="line">outDT &lt;- mongoConn$find(limit = <span class="number">50</span>) %&gt;&gt;% data.table</span><br><span class="line">outDT_trans &lt;- outDT[ , .(v3 = unlist(v3), v4 = unlist(v4)), by = <span class="string">&quot;t,v2&quot;</span>]</span><br><span class="line"><span class="comment"># disconnect to mongo</span></span><br><span class="line">remove(mongoConn)</span><br></pre></td></tr></table></figure>

<p>因為我的mongodb router server跟config server都只有一台</p>
<p>所以上傳過程中兩個server都非常忙碌</p>
<p>如果能有夠多機器去分擔router server跟config server應該還可以提升資料上傳速度</p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>mongodb</tag>
        <tag>Oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>unnest in R data.table</title>
    <url>/posts/201610/2016-10-19-unnest-in-R-datatable.html</url>
    <content><![CDATA[<p>我們今天可能會遇到json parse出來的資料長下面這樣</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(data.table)</span><br><span class="line">DT &lt;- data.table(a = list(c(<span class="number">1</span>:<span class="number">5</span>), c(<span class="number">2</span>:<span class="number">4</span>), c(<span class="number">1</span>:<span class="number">5</span>)), b = <span class="number">1</span>:<span class="number">3</span>, </span><br><span class="line">                 c = list(c(<span class="number">0</span>:<span class="number">4</span>), c(<span class="number">6</span>:<span class="number">8</span>), c(<span class="number">7</span>:<span class="number">11</span>)),  d = <span class="number">2</span>:<span class="number">4</span>)</span><br><span class="line"><span class="comment">#            a b              c d</span></span><br><span class="line"><span class="comment"># 1: 1,2,3,4,5 1      0,1,2,3,4 2</span></span><br><span class="line"><span class="comment"># 2:     2,3,4 2          6,7,8 3</span></span><br><span class="line"><span class="comment"># 3: 1,2,3,4,5 3  7, 8, 9,10,11 4</span></span><br></pre></td></tr></table></figure>

<p>那在這種情況下，可以直接選擇用<code>tidyr</code>的<code>unnest</code>去做，如下面所示</p>
<a id="more"></a>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(tidyr)</span><br><span class="line">unnest(DT, a, c)</span><br><span class="line"><span class="comment">#     b d a  c</span></span><br><span class="line"><span class="comment">#  1: 1 2 1  0</span></span><br><span class="line"><span class="comment">#  2: 1 2 2  1</span></span><br><span class="line"><span class="comment">#  3: 1 2 3  2</span></span><br><span class="line"><span class="comment">#  4: 1 2 4  3</span></span><br><span class="line"><span class="comment">#  5: 1 2 5  4</span></span><br><span class="line"><span class="comment">#  6: 2 3 2  6</span></span><br><span class="line"><span class="comment">#  7: 2 3 3  7</span></span><br><span class="line"><span class="comment">#  8: 2 3 4  8</span></span><br><span class="line"><span class="comment">#  9: 3 4 1  7</span></span><br><span class="line"><span class="comment"># 10: 3 4 2  8</span></span><br><span class="line"><span class="comment"># 11: 3 4 3  9</span></span><br><span class="line"><span class="comment"># 12: 3 4 4 10</span></span><br><span class="line"><span class="comment"># 13: 3 4 5 11</span></span><br></pre></td></tr></table></figure>

<p>但是這時候我們很難的去自動解析這種表格，必須讓使用者自行處理</p>
<p>(PS: 其實這裡可以直接用<code>unnest_</code> + 下面的<code>autoFind</code>裡面的一部分就可以很輕易做到，下面會實做)</p>
<p>所以如果我們能用簡單的方式去自動辨別需要轉換就更好了</p>
<p>基於此，我就用data.table去開發了這樣想的程式，如下：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">extendTbl &lt;- <span class="keyword">function</span>(DT, unnestCols = <span class="literal">NULL</span>)&#123;</span><br><span class="line">  <span class="comment"># check the columns to unnest</span></span><br><span class="line">  <span class="keyword">if</span> (is.null(unnestCols)) &#123;</span><br><span class="line">    unnestCols &lt;- names(DT)[sapply(DT, <span class="keyword">function</span>(x) any(class(x) %<span class="keyword">in</span>% <span class="string">&quot;list&quot;</span>))]</span><br><span class="line">    message(<span class="string">&quot;Automatically recognize the nested columns: &quot;</span>, paste0(unnestCols, collapse = <span class="string">&quot;, &quot;</span>))</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment"># check unnestCols is in the DT</span></span><br><span class="line">  <span class="keyword">if</span> (any(!unnestCols %<span class="keyword">in</span>% names(DT)))</span><br><span class="line">    <span class="keyword">stop</span>(sprintf(<span class="string">&quot;The columns, %s, does not in the DT.&quot;</span>,</span><br><span class="line">                 paste0(unnestCols[!unnestCols %<span class="keyword">in</span>% names(DT)], collapse = <span class="string">&quot;, &quot;</span>)))</span><br><span class="line">  <span class="comment"># get the group by variable</span></span><br><span class="line">  groupbyVar &lt;- setdiff(names(DT), unnestCols)</span><br><span class="line">  <span class="comment"># generate the expression to remove group by variable</span></span><br><span class="line">  chkExpr &lt;- paste0(groupbyVar, <span class="string">&quot;=NULL&quot;</span>, collapse = <span class="string">&quot;,&quot;</span>) %&gt;&gt;% (paste0(<span class="string">&quot;`:=`(&quot;</span>, ., <span class="string">&quot;)&quot;</span>))</span><br><span class="line">  <span class="comment"># check the lengths of each cell in list-column are all the same</span></span><br><span class="line">  chkLenAllEqual &lt;- DT[ , lapply(.SD, <span class="keyword">function</span>(x) sapply(x, length)), by = groupbyVar] %&gt;&gt;%</span><br><span class="line">    `[`(j = eval(parse(text = chkExpr))) %&gt;&gt;% as.matrix %&gt;&gt;% apply(<span class="number">1</span>, diff) %&gt;&gt;% `==`(<span class="number">0</span>) %&gt;&gt;% all</span><br><span class="line">  <span class="keyword">if</span> (!chkLenAllEqual)</span><br><span class="line">    <span class="keyword">stop</span>(<span class="string">&quot;The length in each cell is not equal.&quot;</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment"># generate unnest expression</span></span><br><span class="line">  expr &lt;- unnestCols %&gt;&gt;% (paste0(., <span class="string">&quot;=unlist(&quot;</span>,  ., <span class="string">&quot;)&quot;</span>)) %&gt;&gt;%</span><br><span class="line">    paste0(collapse = <span class="string">&quot;,&quot;</span>) %&gt;&gt;% (paste0(<span class="string">&quot;.(&quot;</span>, ., <span class="string">&quot;)&quot;</span>))</span><br><span class="line">  <span class="comment"># return unnested data.table</span></span><br><span class="line">  <span class="keyword">return</span>(DT[ , eval(parse(text = expr)), by = groupbyVar])</span><br><span class="line">&#125;</span><br><span class="line">extendTbl(DT)</span><br><span class="line"><span class="comment">#     b d a  c</span></span><br><span class="line"><span class="comment">#  1: 1 2 1  0</span></span><br><span class="line"><span class="comment">#  2: 1 2 2  1</span></span><br><span class="line"><span class="comment">#  3: 1 2 3  2</span></span><br><span class="line"><span class="comment">#  4: 1 2 4  3</span></span><br><span class="line"><span class="comment">#  5: 1 2 5  4</span></span><br><span class="line"><span class="comment">#  6: 2 3 2  6</span></span><br><span class="line"><span class="comment">#  7: 2 3 3  7</span></span><br><span class="line"><span class="comment">#  8: 2 3 4  8</span></span><br><span class="line"><span class="comment">#  9: 3 4 1  7</span></span><br><span class="line"><span class="comment"># 10: 3 4 2  8</span></span><br><span class="line"><span class="comment"># 11: 3 4 3  9</span></span><br><span class="line"><span class="comment"># 12: 3 4 4 10</span></span><br><span class="line"><span class="comment"># 13: 3 4 5 11</span></span><br><span class="line">extendTbl(DT, c(<span class="string">&quot;b&quot;</span>, <span class="string">&quot;d&quot;</span>))</span><br><span class="line"><span class="comment">#     b d a  c</span></span><br><span class="line"><span class="comment">#  1: 1 2 1  0</span></span><br><span class="line"><span class="comment">#  2: 1 2 2  1</span></span><br><span class="line"><span class="comment">#  3: 1 2 3  2</span></span><br><span class="line"><span class="comment">#  4: 1 2 4  3</span></span><br><span class="line"><span class="comment">#  5: 1 2 5  4</span></span><br><span class="line"><span class="comment">#  6: 2 3 2  6</span></span><br><span class="line"><span class="comment">#  7: 2 3 3  7</span></span><br><span class="line"><span class="comment">#  8: 2 3 4  8</span></span><br><span class="line"><span class="comment">#  9: 3 4 1  7</span></span><br><span class="line"><span class="comment"># 10: 3 4 2  8</span></span><br><span class="line"><span class="comment"># 11: 3 4 3  9</span></span><br><span class="line"><span class="comment"># 12: 3 4 4 10</span></span><br><span class="line"><span class="comment"># 13: 3 4 5 11</span></span><br></pre></td></tr></table></figure>

<p>我們可以來比較一下<code>tidyr</code>跟<code>data.table</code>的速度</p>
<p>會要求速度最主要的原因是因為我遇到的資料都非常大</p>
<p>不用快一點的方法，真的會等很久</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(microbenchmark)</span><br><span class="line">N &lt;- <span class="number">1e5</span></span><br><span class="line">dbColsCnt &lt;- <span class="number">300</span></span><br><span class="line">arrColCnt &lt;- <span class="number">50</span></span><br><span class="line"></span><br><span class="line">sizePerRow &lt;- sapply(<span class="number">1</span>:N, <span class="keyword">function</span>(x) sample(<span class="number">2</span>:<span class="number">25</span>, <span class="number">1</span>))</span><br><span class="line">arrCols &lt;- replicate(arrColCnt, lapply(sizePerRow, rnorm)) %&gt;&gt;% </span><br><span class="line">  data.table %&gt;&gt;% setnames(paste0(<span class="string">&quot;V&quot;</span>, (dbColsCnt+<span class="number">1</span>):(dbColsCnt+arrColCnt)))</span><br><span class="line">DT &lt;- data.table(matrix(rnorm(dbColsCnt*N), N), arrCols)</span><br><span class="line"></span><br><span class="line">autoFind_unnest &lt;- <span class="keyword">function</span>(DT)&#123;</span><br><span class="line">  names(DT)[sapply(DT, <span class="keyword">function</span>(x) any(class(x) %<span class="keyword">in</span>% <span class="string">&quot;list&quot;</span>))]</span><br><span class="line">&#125;</span><br><span class="line">microbenchmark(unnest = unnest_(DT, autoFind_unnest(DT)),</span><br><span class="line">               datatable = extendTbl(DT), times = <span class="number">20L</span>)</span><br><span class="line">autoFind_unnest &lt;- <span class="keyword">function</span>(DT)&#123;</span><br><span class="line">  names(DT)[sapply(DT, <span class="keyword">function</span>(x) any(class(x) %<span class="keyword">in</span>% <span class="string">&quot;list&quot;</span>))]</span><br><span class="line">&#125;</span><br><span class="line">microbenchmark(unnest = unnest_(DT, autoFind_unnest(DT)),</span><br><span class="line">               datatable = extendTbl(DT), times = <span class="number">20L</span>)</span><br><span class="line"><span class="comment"># Unit: seconds</span></span><br><span class="line"><span class="comment">#      expr       min       lq     mean   median       uq     max neval</span></span><br><span class="line"><span class="comment">#    unnest 15.806110 16.29989 16.62312 16.75588 16.88089 17.4564    20</span></span><br><span class="line"><span class="comment"># datatable  9.362995 10.25902 10.82319 10.45128 10.94098 14.0597    20</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>data.table</tag>
        <tag>unnest</tag>
      </tags>
  </entry>
  <entry>
    <title>R web service with opencpu</title>
    <url>/posts/201610/2016-10-21-R-web-service-with-opencpu.html</url>
    <content><![CDATA[<p>昨天後來再google發現opencpu這個更強大的套件</p>
<p>昨天太累就沒試了XD</p>
<p>我把前幾天弄得<code>unnest</code>函數在配上opencpu</p>
<p>就可以輕鬆做到unnested json的轉換了</p>
<a id="more"></a>

<p>先列參考來源：</p>
<ol>
<li><a href="https://docs.google.com/presentation/d/1lz8W61Vihwm-BfbcGO60MkXUVOw-bTSdYi4YyystIp8">Taiwan R User Group - Opencpu sharing</a></li>
</ol>
<p>其實投影片講的非常清楚</p>
<p>照著做就可以出來只是路徑要看清楚XDD (因為路徑少打R/試了超久)</p>
<p>首先，安裝<code>opencpu</code>，然後安裝<code>devtools</code></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安裝我的套件</span></span><br><span class="line">devtools::install_github(<span class="string">&quot;ChingChuan-Chen/test.opencpu&quot;</span>)</span><br><span class="line"><span class="comment"># 啟動opencpu</span></span><br><span class="line"><span class="keyword">library</span>(opencpu) <span class="comment"># library之後會出現下面的訊息，http://localhost:8850/ocpu 就是你可以連過去做測試的網址</span></span><br><span class="line"><span class="comment"># Initiating OpenCPU server...</span></span><br><span class="line"><span class="comment"># Using config: C:/Users/Celest/Documents/.opencpu.conf</span></span><br><span class="line"><span class="comment"># OpenCPU started.</span></span><br><span class="line"><span class="comment"># [httpuv] http://localhost:8850/ocpu</span></span><br><span class="line"><span class="comment"># OpenCPU single-user server ready.</span></span><br></pre></td></tr></table></figure>

<p>我的測試檔案：<a href="https://github.com/ChingChuan-Chen/rfda/blob/master/inst/extdata/funcData.json">GitHub</a></p>
<p>原始資料長相：<img src="/images/opencpu1.PNG"></p>
<p>opencpu web UI操作POST：<img src="/images/opencpu3.PNG"></p>
<p>回傳的結果：<img src="/images/opencpu2.PNG"></p>
<p>但是這樣還不夠完美，所以可以透過回傳的內容有連結資訊</p>
<p>(由上角小框框裡面是POST回傳的結果)</p>
<p>來用R來取得，其程式碼就會像下面這樣：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(pipeR)</span><br><span class="line"><span class="keyword">library</span>(httr)</span><br><span class="line"><span class="keyword">library</span>(stringr)</span><br><span class="line"><span class="keyword">library</span>(jsonlite)</span><br><span class="line">POST(<span class="string">&quot;http://localhost:8850/ocpu/library/test.opencpu/R/convertJSON&quot;</span>, </span><br><span class="line">     body = list(input = upload_file(<span class="string">&quot;funcdata.json&quot;</span>)) %&gt;&gt;%</span><br><span class="line">  content(<span class="string">&quot;text&quot;</span>) %&gt;&gt;% str_split(<span class="string">&quot;\r\n&quot;</span>) %&gt;&gt;% `[[`(<span class="number">1</span>) %&gt;&gt;% `[`(<span class="number">1</span>) %&gt;&gt;% </span><br><span class="line">  str_c(<span class="string">&quot;/json&quot;</span>) %&gt;&gt;% sprintf(fmt=<span class="string">&quot;http://localhost:8850%s&quot;</span>) %&gt;&gt;% GET %&gt;&gt;% </span><br><span class="line">  content(<span class="string">&quot;text&quot;</span>) %&gt;&gt;% fromJSON</span><br><span class="line"><span class="comment">#    sampleID    t       y</span></span><br><span class="line"><span class="comment"># 1         1 9.37 -0.0515</span></span><br><span class="line"><span class="comment"># 2         1 4.06 -0.3743</span></span><br><span class="line"><span class="comment"># 3         1 8.92  1.2116</span></span><br><span class="line"><span class="comment"># 4         1 8.83  0.4139</span></span><br><span class="line"><span class="comment"># 5         1 1.27  1.7179</span></span><br><span class="line"><span class="comment"># 6         1 5.86 -1.3720</span></span><br><span class="line"><span class="comment"># 7         1 4.69 -2.4096</span></span><br><span class="line"><span class="comment"># 8         1 9.55 -0.7041</span></span><br><span class="line"><span class="comment"># 9         1 2.62  1.9196</span></span><br><span class="line"><span class="comment"># 10        1 7.93  1.5362</span></span><br><span class="line"><span class="comment"># 11        1 4.42 -0.1172</span></span><br><span class="line"><span class="comment"># 12        1 8.38  0.1368</span></span><br><span class="line"><span class="comment"># 13        1 9.19 -0.9449</span></span><br><span class="line"><span class="comment"># 14        1 4.33 -1.5905</span></span><br><span class="line"><span class="comment"># 15        1 9.73 -0.3867</span></span><br></pre></td></tr></table></figure>

<p>最後放一張完成圖：<img src="/images/opencpu2.PNG"></p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>CentOS</tag>
        <tag>opencpu</tag>
        <tag>Web Service</tag>
      </tags>
  </entry>
  <entry>
    <title>R web service</title>
    <url>/posts/201610/2016-10-20-R-web-service.html</url>
    <content><![CDATA[<p>R也可以開啟一個簡單的server</p>
<p>讓使用者透過PUT或是GET去query想要的資訊</p>
<p>以下是實作</p>
<p>使用RStudio的<code>httpuv</code>這個套件來做</p>
<a id="more"></a>

<p>先用一個給什麼Query都回成JSON的app</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(httpuv)</span><br><span class="line"><span class="keyword">library</span>(stringr)</span><br><span class="line"><span class="keyword">library</span>(RCurl)</span><br><span class="line"><span class="keyword">library</span>(httr)</span><br><span class="line"><span class="keyword">library</span>(pipeR)</span><br><span class="line"></span><br><span class="line">app &lt;- list(call = <span class="keyword">function</span>(request) &#123;</span><br><span class="line">  query &lt;- request$QUERY_STRING %&gt;&gt;% str_replace_all(<span class="string">&quot;^\\?&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">  output &lt;- httr:::parse_query(query) %&gt;&gt;% lapply(URLdecode) %&gt;&gt;% </span><br><span class="line">    `names&lt;-`(sapply(names(.), URLdecode)) %&gt;&gt;% toJSON</span><br><span class="line">  <span class="keyword">if</span> (query == <span class="string">&quot;&quot;</span> || !is.character(query)) &#123;</span><br><span class="line">    <span class="keyword">return</span>(list(status = <span class="number">200L</span>, headers = list(<span class="string">&#x27;Content-Type&#x27;</span> = <span class="string">&#x27;text/json&#x27;</span>), body = <span class="string">&quot;&quot;</span>))</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span>(list(status = <span class="number">200L</span>, headers = list(<span class="string">&#x27;Content-Type&#x27;</span> = <span class="string">&#x27;text/json&#x27;</span>), body = output))</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">openServer &lt;- <span class="keyword">function</span>(app)&#123;</span><br><span class="line">  <span class="keyword">tryCatch</span>(&#123;</span><br><span class="line">    server &lt;- startServer(<span class="string">&quot;127.0.0.1&quot;</span>, <span class="number">8988</span>, app=app)</span><br><span class="line">    on.exit(stopServer(server))</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">TRUE</span>) &#123;</span><br><span class="line">      service()</span><br><span class="line">      Sys.sleep(<span class="number">0.001</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line">openServer(app)</span><br></pre></td></tr></table></figure>

<p>在一個R跑上面這個script，然後再開一個R去跑下面的script就可以看到成果：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(httr)</span><br><span class="line"><span class="keyword">library</span>(pipeR)</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;http://127.0.0.1:8988/?hello=world&amp;hello2=celest&quot;</span> %&gt;&gt;% URLencode %&gt;&gt;% GET %&gt;&gt;% content(<span class="string">&quot;text&quot;</span>)</span><br><span class="line"><span class="comment"># text_content() deprecated. Use content(x, as = &#x27;text&#x27;)</span></span><br><span class="line"><span class="comment"># No encoding supplied: defaulting to UTF-8.</span></span><br><span class="line"><span class="comment"># [1] &quot;&#123;\&quot;hello\&quot;:[\&quot;world\&quot;],\&quot;hello2\&quot;:[\&quot;celest\&quot;]&#125;&quot;</span></span><br></pre></td></tr></table></figure>

<p>下面給一個或許可以用來拉資料的方案XD</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">app2 &lt;- list(call = <span class="keyword">function</span>(request) &#123;</span><br><span class="line">  query &lt;- request$QUERY_STRING %&gt;&gt;% str_replace_all(<span class="string">&quot;^\\?&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">  <span class="keyword">if</span> (str_detect(query, <span class="string">&quot;data=&quot;</span>)) &#123;</span><br><span class="line">    dataName &lt;- httr:::parse_query(query) %&gt;&gt;% `[[`(<span class="string">&quot;data&quot;</span>) %&gt;&gt;% URLdecode</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (query == <span class="string">&quot;&quot;</span> || !is.character(query)) &#123;</span><br><span class="line">    <span class="keyword">return</span>(list(status = <span class="number">200L</span>, headers = list(<span class="string">&#x27;Content-Type&#x27;</span> = <span class="string">&#x27;text/json&#x27;</span>), body = <span class="string">&quot;&quot;</span>))</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span>(list(status = <span class="number">200L</span>, headers = list(<span class="string">&#x27;Content-Type&#x27;</span> = <span class="string">&#x27;text/json&#x27;</span>), </span><br><span class="line">                body = toJSON(get(dataName))))</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line">openServer(app2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># test code</span></span><br><span class="line"><span class="keyword">library</span>(httr)</span><br><span class="line"><span class="keyword">library</span>(pipeR)</span><br><span class="line"><span class="keyword">library</span>(jsonlite)</span><br><span class="line"></span><br><span class="line">paste0(<span class="string">&quot;http://127.0.0.1:8988/?data=&quot;</span>, <span class="string">&quot;iris&quot;</span>) %&gt;&gt;% GET %&gt;&gt;% content(<span class="string">&quot;text&quot;</span>) %&gt;&gt;% fromJSON %&gt;&gt;% head</span><br><span class="line"><span class="comment">#   Sepal.Length Sepal.Width Petal.Length Petal.Width Species</span></span><br><span class="line"><span class="comment"># 1          5.1         3.5          1.4         0.2  setosa</span></span><br><span class="line"><span class="comment"># 2          4.9         3.0          1.4         0.2  setosa</span></span><br><span class="line"><span class="comment"># 3          4.7         3.2          1.3         0.2  setosa</span></span><br><span class="line"><span class="comment"># 4          4.6         3.1          1.5         0.2  setosa</span></span><br><span class="line"><span class="comment"># 5          5.0         3.6          1.4         0.2  setosa</span></span><br><span class="line"><span class="comment"># 6          5.4         3.9          1.7         0.4  setosa</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>CentOS</tag>
        <tag>Web Service</tag>
        <tag>httpuv</tag>
      </tags>
  </entry>
  <entry>
    <title>Installation of OpenCPU in centos</title>
    <url>/posts/201610/2016-10-25-installation-of-opencpu-in-centos.html</url>
    <content><![CDATA[<p>上次只是用R的<code>opencpu</code>套件小試一下</p>
<p>這次就直接在server上建立opencpu server</p>
<p>讓local的R可以去call server服務</p>
<a id="more"></a>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># install Microsoft R Open</span></span><br><span class="line">su -c <span class="string">&#x27;rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm&#x27;</span></span><br><span class="line">sudo yum update</span><br><span class="line">sudo yum install gcc-c++ R R-java libapreq2-devel R-devel libcurl-devel protobuf-devel openssl-devel libxml2-devel libicu-devel libssh2-devel</span><br><span class="line"></span><br><span class="line"><span class="comment">## remove R</span></span><br><span class="line">sudo rm -rf /usr/lib64/R</span><br><span class="line"></span><br><span class="line"><span class="comment"># install Microsoft R Open</span></span><br><span class="line">curl -v -j -k -L https://mran.microsoft.com/install/mro/3.3.1/microsoft-r-open-3.3.1.tar.gz -o microsoft-r-open-3.3.1.tar.gz</span><br><span class="line">tar zxvf microsoft-r-open-3.3.1.tar.gz</span><br><span class="line">sudo yum install -y microsoft-r-open/rpm/*</span><br><span class="line">sudo chmod -R 777 /usr/lib64/microsoft-r/3.3/lib64/R </span><br><span class="line"></span><br><span class="line"><span class="comment"># to use Microsoft R Open with opencpu</span></span><br><span class="line">sudo cp -r /usr/lib64/microsoft-r/3.3/lib64/R /usr/lib64</span><br><span class="line"></span><br><span class="line"><span class="comment"># install git</span></span><br><span class="line">sudo yum install git</span><br><span class="line"></span><br><span class="line"><span class="comment"># install opencpu</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/jeroenooms/opencpu-server.git</span><br><span class="line"></span><br><span class="line">chmod +rx ~/</span><br><span class="line">chmod +x opencpu-server/rpm/*.sh</span><br><span class="line">opencpu-server/rpm/buildscript.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最後會在rpmbuild/RPMS/x86_64/看到編譯好的rpm</span></span><br></pre></td></tr></table></figure>

<p>最後使用下面指令開port就可以順利在網頁上登入<code>http://&lt;your_ip_address&gt;/ocpu/test</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo iptables -I INPUT -p tcp --dport 80 -j ACCEPT</span><br><span class="line">sudo service iptables save</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>CentOS</tag>
        <tag>opencpu</tag>
        <tag>Web Service</tag>
      </tags>
  </entry>
  <entry>
    <title>GitLab Server與RStudio結合管理程式碼</title>
    <url>/posts/201610/2016-10-28-gitlab-with-rstudio.html</url>
    <content><![CDATA[<p>因為不想要用公開的程式碼管理</p>
<p>想要用local server做管理</p>
<p>又想要用類似github的功能</p>
<p>所以找了一下，發現gitlab又提供類似功能</p>
<p>而且RStudio可以直接使用</p>
<a id="more"></a>

<p>安裝的話，直接參考：<a href="https://about.gitlab.com/downloads/#centos7">https://about.gitlab.com/downloads/#centos7</a></p>
<p>那安裝完之後，可以先連去 <code>http://&lt;伺服器IP&gt;</code></p>
<p>一開始會先讓你改密碼，然後你就可以自己create一個新帳號了</p>
<p>進去會看到一片空白，上面有個狐狸頭</p>
<p><img src="/images/gitlab3.png"></p>
<p>我們可以先新創一個專案，叫做<code>my-first-project</code></p>
<p>這裡創專案可以用Group或是Individual的型式來建立，我們這用Individual來建立，如下圖：</p>
<p><img src="/images/gitlab4.png"></p>
<p>先在本機端裝好Git(<a href="https://git-scm.com/">官網</a>)，看是要下載Portable還是安裝版皆可</p>
<p>再來就可以打開RStudio了</p>
<p>先進到<code>Tools-&gt;Global Options...</code>裡面的’Git/SVN<code>的分頁，點選</code>Create RSA Key…`</p>
<p>建立之後，可以到使用者資料夾下的.ssh裡面看到自己的SSH key</p>
<p>在GitLab上設定SSH Key，之後Commit就不用輸入帳號密碼了</p>
<p>GitLab的設定在你登入後點右上方小圖案進去的<code>Profile Settings</code></p>
<p>裡面有一個<code>SSH Keys</code>的分頁，把你的<code>id_ras.pub</code>裡面</p>
<p>那串ssh-rsa開頭的文字貼到Key，並給個名字，然後Add即可</p>
<p><img src="/images/gitlab1.png"></p>
<p>最後，就是在本地端開一個資料夾</p>
<p>根據建立好的專案後面的指令做一次Clone，如下圖：</p>
<p><img src="/images/gitlab2.png"></p>
<p>PS: 我這裡把Hostname都換成IP了，因為我沒有設定Hostname…</p>
<p>最後，就可以在Rstudio開新的專案來使用Git管理專案，流程如下：</p>
<p><img src="/images/gitlab5.png"></p>
<p><img src="/images/gitlab6.png"></p>
<p>創好專案之後，切換到<code>Git</code>分頁，點<code>Commit</code>，就會跳出下面視窗</p>
<p>你可以勾選左邊有變更的檔案，然後輸入你要Commit的訊息就可以留下一個record了</p>
<p><img src="/images/gitlab7.png"></p>
<p>結束之後按下Push就會成功上傳到GitLab上了</p>
<p><img src="/images/gitlab8.png"></p>
<p>去網頁就可以看到你上傳的檔案</p>
<p><img src="/images/gitlab9.png"></p>
<p>PS: 建議不要用New Project裡面的Version Control會認不到，要去更改remote.url的設定</p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>GitLab</tag>
        <tag>Git</tag>
        <tag>private</tag>
      </tags>
  </entry>
  <entry>
    <title>plyr::ddply vs data.table::rbindlist</title>
    <url>/posts/201611/2016-11-05-ddply-vs-rbindlist.html</url>
    <content><![CDATA[<p>最近遇到在計算functinoal data的cross-covariance surface的時候</p>
<p>發現<code>plyr::ddply</code>裡面的<code>list_to_dataframe</code>有點慢</p>
<p>反而利用<code>plyr::dlply</code>加上<code>data.table</code>的<code>rbindlist</code>可以快上不少</p>
<p>而且<code>plyr::ddply</code>消耗的記憶體相對起<code>rbindlist</code>高上不少</p>
<p>會發現這些都要感謝rstudio新出的套件<code>profvis</code>提供了良好的performance視覺化</p>
<p>其中<code>profvis</code>可以在<a href="https://github.com/rstudio/profvis">github</a>找到</p>
<a id="more"></a>

<p>下面是Benchmark的R script:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(plyr)</span><br><span class="line"><span class="keyword">library</span>(data.table)</span><br><span class="line"><span class="keyword">library</span>(pipeR)</span><br><span class="line"></span><br><span class="line">N &lt;- <span class="number">2000</span></span><br><span class="line">nt &lt;- <span class="number">100</span></span><br><span class="line">p &lt;- <span class="number">4</span></span><br><span class="line">dataDT &lt;- data.table(subId = rep(<span class="number">1</span>:(N/nt), p, each = nt), variable = rep(<span class="number">1</span>:p, each = N), </span><br><span class="line">                     timePnt = rep(seq(<span class="number">0</span>, <span class="number">10</span>, length.out = nt), p*N/nt), value = rnorm(N*p))</span><br><span class="line"></span><br><span class="line">getRawCrCov1 &lt;- <span class="keyword">function</span>(demeanDataDT)&#123;</span><br><span class="line">  <span class="comment"># geneerate the all combinations of t1,t2 and varaibles</span></span><br><span class="line">  baseDT &lt;- demeanDataDT[ , .(t1 = rep(timePnt, length(timePnt)), t2 = rep(timePnt, each=length(timePnt)),</span><br><span class="line">                              value.var1 = rep(value, length(timePnt))), by = .(variable, subId)]</span><br><span class="line">  <span class="comment"># calculation of raw cross-covariance</span></span><br><span class="line">  rawCrCovDT &lt;- do.call(<span class="string">&quot;dlply&quot;</span>, list(demeanDataDT, <span class="string">&quot;variable&quot;</span>, <span class="keyword">function</span>(df)&#123;</span><br><span class="line">    merge(baseDT[variable &gt;= df$variable[<span class="number">1</span>]], df, suffixes = c(<span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>),</span><br><span class="line">          by.x = c(<span class="string">&quot;subId&quot;</span>, <span class="string">&quot;t2&quot;</span>), by.y = c(<span class="string">&quot;subId&quot;</span>, <span class="string">&quot;timePnt&quot;</span>))</span><br><span class="line">  &#125;)) %&gt;&gt;% rbindlist %&gt;&gt;% setnames(<span class="string">&quot;value&quot;</span>, <span class="string">&quot;value.var2&quot;</span>) %&gt;&gt;%</span><br><span class="line">    `[`(j = .(sse = sum(value.var1 * value.var2), cnt = .N), by = .(variable1, variable2, t1, t2)) %&gt;&gt;%</span><br><span class="line">    setorder(variable1, variable2, t1, t2) %&gt;&gt;% `[`(j = weight := <span class="number">1</span>)</span><br><span class="line">  <span class="keyword">return</span>(rawCrCovDT)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">getRawCrCov2 &lt;- <span class="keyword">function</span>(demeanDataDT)&#123;</span><br><span class="line">  <span class="comment"># geneerate the all combinations of t1,t2 and varaibles</span></span><br><span class="line">  baseDT &lt;- demeanDataDT[ , .(t1 = rep(timePnt, length(timePnt)), t2 = rep(timePnt, each=length(timePnt)),</span><br><span class="line">                              value.var1 = rep(value, length(timePnt))), by = .(variable, subId)]</span><br><span class="line">  <span class="comment"># calculation of raw cross-covariance</span></span><br><span class="line">  rawCrCovDT &lt;- do.call(<span class="string">&quot;ddply&quot;</span>, list(demeanDataDT, <span class="string">&quot;variable&quot;</span>, <span class="keyword">function</span>(df)&#123;</span><br><span class="line">    merge(baseDT[variable &gt;= df$variable[<span class="number">1</span>]], df, suffixes = c(<span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>),</span><br><span class="line">          by.x = c(<span class="string">&quot;subId&quot;</span>, <span class="string">&quot;t2&quot;</span>), by.y = c(<span class="string">&quot;subId&quot;</span>, <span class="string">&quot;timePnt&quot;</span>))</span><br><span class="line">  &#125;)) %&gt;&gt;% setDT %&gt;&gt;% `[`(j = variable := <span class="literal">NULL</span>) %&gt;&gt;% setnames(<span class="string">&quot;value&quot;</span>, <span class="string">&quot;value.var2&quot;</span>) %&gt;&gt;%</span><br><span class="line">    `[`(j = .(sse = sum(value.var1 * value.var2), cnt = .N), by = .(variable1, variable2, t1, t2)) %&gt;&gt;%</span><br><span class="line">    setorder(variable1, variable2, t1, t2) %&gt;&gt;% `[`(j = weight := <span class="number">1</span>)</span><br><span class="line">  <span class="keyword">return</span>(rawCrCovDT)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">getRawCrCov3 &lt;- <span class="keyword">function</span>(demeanDataDT)&#123;</span><br><span class="line">  <span class="comment"># geneerate the all combinations of t1,t2 and varaibles</span></span><br><span class="line">  baseDT &lt;- demeanDataDT[ , .(t1 = rep(timePnt, length(timePnt)), t2 = rep(timePnt, each=length(timePnt)),</span><br><span class="line">                              value.var1 = rep(value, length(timePnt))), by = .(variable, subId)]</span><br><span class="line">  <span class="comment"># calculation of raw cross-covariance</span></span><br><span class="line">  rawCrCovDT &lt;- do.call(<span class="string">&quot;llply&quot;</span>, list(split(demeanDataDT, by = <span class="string">&quot;variable&quot;</span>), <span class="keyword">function</span>(df)&#123;</span><br><span class="line">    merge(baseDT[variable &gt;= df$variable[<span class="number">1</span>]], df, suffixes = c(<span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>),</span><br><span class="line">          by.x = c(<span class="string">&quot;subId&quot;</span>, <span class="string">&quot;t2&quot;</span>), by.y = c(<span class="string">&quot;subId&quot;</span>, <span class="string">&quot;timePnt&quot;</span>))</span><br><span class="line">  &#125;)) %&gt;&gt;% rbindlist %&gt;&gt;% setnames(<span class="string">&quot;value&quot;</span>, <span class="string">&quot;value.var2&quot;</span>) %&gt;&gt;%</span><br><span class="line">    `[`(j = .(sse = sum(value.var1 * value.var2), cnt = .N), by = .(variable1, variable2, t1, t2)) %&gt;&gt;%</span><br><span class="line">    setorder(variable1, variable2, t1, t2) %&gt;&gt;% `[`(j = weight := <span class="number">1</span>)</span><br><span class="line">  <span class="keyword">return</span>(rawCrCovDT)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">getRawCrCov4 &lt;- <span class="keyword">function</span>(demeanDataDT)&#123;</span><br><span class="line">  <span class="comment"># geneerate the all combinations of t1,t2 and varaibles</span></span><br><span class="line">  baseDT &lt;- demeanDataDT[ , .(t1 = rep(timePnt, length(timePnt)), t2 = rep(timePnt, each=length(timePnt)),</span><br><span class="line">                              value.var1 = rep(value, length(timePnt))), by = .(variable, subId)]</span><br><span class="line">  <span class="comment"># set the keys of data.table</span></span><br><span class="line">  setkey(baseDT, <span class="string">&quot;subId&quot;</span>, <span class="string">&quot;t2&quot;</span>)</span><br><span class="line">  setkey(demeanDataDT, <span class="string">&quot;subId&quot;</span>, <span class="string">&quot;timePnt&quot;</span>)</span><br><span class="line">  <span class="comment"># calculation of raw cross-covariance</span></span><br><span class="line">  rawCrCovDT &lt;- do.call(<span class="string">&quot;llply&quot;</span>, list(split(demeanDataDT, by = <span class="string">&quot;variable&quot;</span>), <span class="keyword">function</span>(df)&#123;</span><br><span class="line">    merge(baseDT[variable &gt;= df$variable[<span class="number">1</span>]], df, suffixes = c(<span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>),</span><br><span class="line">          by.x = c(<span class="string">&quot;subId&quot;</span>, <span class="string">&quot;t2&quot;</span>), by.y = c(<span class="string">&quot;subId&quot;</span>, <span class="string">&quot;timePnt&quot;</span>))</span><br><span class="line">  &#125;)) %&gt;&gt;% rbindlist %&gt;&gt;% setnames(<span class="string">&quot;value&quot;</span>, <span class="string">&quot;value.var2&quot;</span>) %&gt;&gt;%</span><br><span class="line">    `[`(j = .(sse = sum(value.var1 * value.var2), cnt = .N), by = .(variable1, variable2, t1, t2)) %&gt;&gt;%</span><br><span class="line">    setorder(variable1, variable2, t1, t2) %&gt;&gt;% `[`(j = weight := <span class="number">1</span>)</span><br><span class="line">  <span class="keyword">return</span>(rawCrCovDT)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">x1 &lt;- getRawCrCov1(dataDT)</span><br><span class="line">x2 &lt;- getRawCrCov2(dataDT)</span><br><span class="line">x3 &lt;- getRawCrCov3(dataDT)</span><br><span class="line">x4 &lt;- getRawCrCov4(dataDT)</span><br><span class="line">all.equal(x1, x2) <span class="comment"># TRUE</span></span><br><span class="line">all.equal(x1, x3) <span class="comment"># TRUE</span></span><br><span class="line">all.equal(x1, x4) <span class="comment"># TRUE</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(microbenchmark)</span><br><span class="line">microbenchmark(rbindlist = getRawCrCov1(dataDT), ddply = getRawCrCov2(dataDT), </span><br><span class="line">               split.DT = getRawCrCov3(dataDT), setkey.first = getRawCrCov4(dataDT), times = <span class="number">50L</span>)</span><br><span class="line"><span class="comment"># Unit: milliseconds</span></span><br><span class="line"><span class="comment">#          expr       min        lq      mean    median        uq       max neval</span></span><br><span class="line"><span class="comment">#     rbindlist  657.1571  700.8676  726.3146  716.2397  741.4616  911.0223    50</span></span><br><span class="line"><span class="comment">#         ddply 2951.0253 3196.2281 3292.1848 3283.4185 3415.7735 3638.6447    50</span></span><br><span class="line"><span class="comment">#      split.DT  653.3183  699.5276  732.4667  720.5936  747.7091 1016.1446    50</span></span><br><span class="line"><span class="comment">#  setkey.first  496.7661  542.6954  562.4172  554.0295  584.7101  701.3526    50</span></span><br></pre></td></tr></table></figure>

<p>速度整整差了近5倍(3347 / 709 ~= 4.72)</p>
<p>因此，建議以後plyr系列，盡量避開<code>*dply</code>系列的函數</p>
<p>用到<code>plyr:::list_to_dataframe</code>這個函數的效能都不好</p>
<p>盡量去使用<code>data.table::rbindlist</code></p>
<p>用<code>dlply</code> + <code>rbindlist</code>跟用<code>split.data.table</code> + <code>llply</code> + <code>rbindlist</code></p>
<p>其實最後兩者速度差不多，時間並沒有太大的區別 (726ms vs 732ms)</p>
<p>其實我覺得可以直接都統一用<code>split.data.table</code> + <code>llply</code> + <code>rbindlist</code></p>
<p>統一減少使用<code>*dply</code>或是<code>d*ply</code></p>
<p>而在迴圈中做<code>merge</code>前，建議全部都先<code>setkey</code></p>
<p>這樣拆分之後的<code>data.table</code>，還是有key</p>
<p><code>merge</code>時就不用再建key了</p>
<p>而這一點也是透過<code>profvis</code>這個套件發現</p>
<p>多看幾次<code>profvis</code>套件出來的結果，可以對每個程式怎麼運作更加了解</p>
<p>就能因時因地制宜了，程式自然會更有效率</p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>data.table</tag>
        <tag>plyr</tag>
        <tag>list</tag>
        <tag>data.frame</tag>
      </tags>
  </entry>
  <entry>
    <title>A comparison for R parallel packages</title>
    <url>/posts/201611/2016-11-26-R-parallel-pkgs.html</url>
    <content><![CDATA[<p>有些程式不能全部靠RcppParallel加速</p>
<p>所以想說只能靠R的一些平行套件來解決</p>
<p>但是平行套件其實不少，那哪一個又有比較好的performance?</p>
<a id="more"></a>

<p>下面是Benchmark的R script:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">require</span>(doParallel)</span><br><span class="line"><span class="keyword">library</span>(foreach)</span><br><span class="line"><span class="keyword">require</span>(snowfall)</span><br><span class="line"><span class="keyword">library</span>(microbenchmark)</span><br><span class="line"></span><br><span class="line">sfInit(parallel = <span class="literal">TRUE</span>, cpus = <span class="number">6L</span>)</span><br><span class="line">cl &lt;- sfGetCluster()</span><br><span class="line">registerDoParallel(cl)</span><br><span class="line"></span><br><span class="line">a &lt;- rnorm(<span class="number">1e3</span>)</span><br><span class="line">b &lt;- rnorm(<span class="number">1e4</span>)</span><br><span class="line">d &lt;- <span class="number">0.5</span></span><br><span class="line">e &lt;- rnorm(<span class="number">1e5</span>) <span class="comment"># unused variables</span></span><br><span class="line"><span class="comment"># f is not a good method to get that result, it is just for benchmark</span></span><br><span class="line">f &lt;- <span class="keyword">function</span>(x) &#123;</span><br><span class="line">   sum &lt;- <span class="number">0</span></span><br><span class="line">   <span class="keyword">for</span> (i <span class="keyword">in</span> seq(<span class="number">1</span>, x)) sum &lt;- sum + (mean(a) - mean(b))*d*i</span><br><span class="line">   <span class="keyword">return</span>(sum)</span><br><span class="line">&#125;</span><br><span class="line">sfExport(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;d&quot;</span>)</span><br><span class="line">clusterExport(cl, c(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;d&quot;</span>))</span><br><span class="line"></span><br><span class="line">g1 &lt;- <span class="keyword">function</span>(x) &#123;</span><br><span class="line">  out1 &lt;- vector(<span class="string">&quot;numeric&quot;</span>, length = <span class="number">100</span>)</span><br><span class="line">  <span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span>:<span class="number">1000</span>) out1[[i]] &lt;- f(i)</span><br><span class="line">  <span class="keyword">return</span>(out1)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">g2 &lt;- <span class="keyword">function</span>(x) &#123;</span><br><span class="line">  out2 &lt;- sapply(<span class="number">1</span>:<span class="number">1000</span>, f)</span><br><span class="line">  <span class="keyword">return</span>(out2)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">g3 &lt;- <span class="keyword">function</span>(x) &#123;</span><br><span class="line">  out3 &lt;- sfSapply(<span class="number">1</span>:<span class="number">1000</span>, f)</span><br><span class="line">  <span class="keyword">return</span>(out3)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">g4 &lt;- <span class="keyword">function</span>(x) &#123;</span><br><span class="line">  out4 &lt;- parSapply(cl, <span class="number">1</span>:<span class="number">1000</span>, f)</span><br><span class="line">  <span class="keyword">return</span>(out4)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">g5 &lt;- <span class="keyword">function</span>(x) &#123;</span><br><span class="line">  out5 &lt;- foreach(i = <span class="number">1</span>:<span class="number">1000</span>, .combine = c, .export = <span class="string">&quot;f&quot;</span>) %dopar% f(i)</span><br><span class="line">  <span class="keyword">return</span>(out5)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">microbenchmark(g1(), g2(), g3(), g4(), g5(), times = <span class="number">20L</span>)</span><br><span class="line"><span class="comment"># Unit: seconds</span></span><br><span class="line"><span class="comment"># expr       min        lq      mean    median        uq       max neval</span></span><br><span class="line"><span class="comment"># g1() 12.197837 12.289874 12.364563 12.351551 12.460248 12.549038    20</span></span><br><span class="line"><span class="comment"># g2() 12.149057 12.213601 12.274867 12.262235 12.318187 12.548602    20</span></span><br><span class="line"><span class="comment"># g3()  3.846017  3.983526  4.065733  4.047937  4.075122  4.530810    20</span></span><br><span class="line"><span class="comment"># g4()  3.933617  3.973013  4.030316  4.016203  4.074077  4.224589    20</span></span><br><span class="line"><span class="comment"># g5()  2.764633  2.800048  2.861919  2.845468  2.914351  3.008172    20</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># find the main difference</span></span><br><span class="line"><span class="keyword">library</span>(profvis)</span><br><span class="line">profvis(g3()) <span class="comment"># using clusterApply</span></span><br><span class="line">profvis(g5()) <span class="comment"># using clusterApplyLB</span></span><br><span class="line"><span class="comment"># clusterApplyLB is a load balancing version of clusterApply. If the length p of seq is not greater </span></span><br><span class="line"><span class="comment"># than the number of nodes n, then a job is sent to p nodes. Otherwise the first n jobs are placed </span></span><br><span class="line"><span class="comment"># in order on the n nodes. When the first job completes, the next job is placed on the node that </span></span><br><span class="line"><span class="comment"># has become free; this continues until all jobs are complete. Using clusterApplyLB can result in </span></span><br><span class="line"><span class="comment"># better cluster utilization than using clusterApply, but increased communication can reduce performance. </span></span><br><span class="line"><span class="comment"># Furthermore, the node that executes a particular job is non-deterministic.</span></span><br><span class="line"></span><br><span class="line">g6 &lt;- <span class="keyword">function</span>(x) &#123;</span><br><span class="line">  out6 &lt;- clusterApplyLB(cl, <span class="number">1</span>:<span class="number">1000</span>, f)</span><br><span class="line">  <span class="keyword">return</span>(out6)</span><br><span class="line">&#125;</span><br><span class="line">g7 &lt;- <span class="keyword">function</span>(x) &#123;</span><br><span class="line">  out7 &lt;- parSapplyLB(cl, <span class="number">1</span>:<span class="number">1000</span>, f)</span><br><span class="line">  <span class="keyword">return</span>(out7)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">library</span>(plyr)</span><br><span class="line">g8 &lt;- <span class="keyword">function</span>(x) &#123;</span><br><span class="line">  out8 &lt;- laply(<span class="number">1</span>:<span class="number">1000</span>, f, .parallel = <span class="literal">TRUE</span>)</span><br><span class="line">  <span class="keyword">return</span>(out8)</span><br><span class="line">&#125;</span><br><span class="line">microbenchmark(g5(), g6(), g7(), g8(), times = <span class="number">20L</span>)</span><br><span class="line"><span class="comment"># Unit: seconds</span></span><br><span class="line"><span class="comment">#  expr      min       lq     mean   median       uq      max neval</span></span><br><span class="line"><span class="comment">#  g5() 2.811597 2.840651 2.899999 2.860215 2.925780 3.193207    20</span></span><br><span class="line"><span class="comment">#  g6() 2.627146 2.640597 2.692733 2.680902 2.734413 2.816154    20</span></span><br><span class="line"><span class="comment">#  g7() 3.949628 3.978429 4.045335 4.029595 4.068357 4.384041    20</span></span><br><span class="line"><span class="comment">#  g8() 2.866590 2.883808 2.927684 2.909651 2.957875 3.070483    20</span></span><br><span class="line"></span><br><span class="line">sfStop()</span><br><span class="line">rm(cl)</span><br></pre></td></tr></table></figure>

<p>結論，如果要用比較底層的parallel function</p>
<p>考慮使用有loading balancing的函數可能會gain到比較多平行的效果</p>
<p>但是也要考慮communication帶來的</p>
<p>因此，在某些場合下，寫起來可能就不是那麼方便了</p>
<p>不過也非一定要學<code>foreach</code>這個套件</p>
<p>基本上，Hadley的<code>plyr</code>已經把<code>foreach</code>直接包在裡面</p>
<p>只要register一個parallel cluster (or <code>multicore</code>) (<code>multicore</code>這個套件只能用在linux上)</p>
<p>並在<code>*ply</code>的函數後面加上<code>.parallel = TRUE</code>就可以直接享受<code>foreach</code>幫你自動調整的速度了</p>
<p>不過我手上沒有loading balancing帶來比較差效能的例子，未來遇上再補上</p>
<p>額外補充，<code>foreach</code>有可能遇到的雷：</p>
<p>如果input的長度是不一定的，有可能是1的話，會帶來一些麻煩</p>
<p>當output是向量的時候，<code>foreach</code>的<code>.combine</code>使用<code>cbind</code></p>
<p>會導致長度1的時候輸出的不是<code>matrix</code>，而是<code>vector</code></p>
<p>在使用<code>foreach</code>時，這一點要特別注意</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># without parallel</span></span><br><span class="line">f2 &lt;- <span class="keyword">function</span>(x) rnorm(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">o1 &lt;- foreach(i = <span class="number">1</span>:<span class="number">2</span>, .combine = cbind) %do% f2(i)</span><br><span class="line">o2 &lt;- sapply(cl, <span class="number">1</span>:<span class="number">2</span>, f2)</span><br><span class="line"></span><br><span class="line">o3 &lt;- foreach(i = <span class="number">1</span>, .combine = cbind) %do% f2(i)</span><br><span class="line">o4 &lt;- sapply(cl, <span class="number">1</span>, f2)</span><br><span class="line"></span><br><span class="line">class(o1)  <span class="comment"># &quot;matrix&quot;</span></span><br><span class="line">class(o2)  <span class="comment"># &quot;matrix&quot;</span></span><br><span class="line">class(o3)  <span class="comment"># &quot;matrix&quot;</span></span><br><span class="line">class(o4)  <span class="comment"># &quot;numeric&quot;</span></span><br></pre></td></tr></table></figure>

<p>2016/11/28補充：</p>
<p>後來發現一個整合還不錯的套件 - <code>parallelMap</code></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">require2(parallelMap)</span><br><span class="line">parallelStart(<span class="string">&quot;socket&quot;</span>, <span class="number">6L</span>)</span><br><span class="line"></span><br><span class="line">a &lt;- rnorm(<span class="number">1e3</span>)</span><br><span class="line">b &lt;- rnorm(<span class="number">1e4</span>)</span><br><span class="line">d &lt;- <span class="number">0.5</span></span><br><span class="line">e &lt;- rnorm(<span class="number">1e5</span>) <span class="comment"># unused variables</span></span><br><span class="line"><span class="comment"># f is not a good method to get that result, it is just for benchmark</span></span><br><span class="line">f &lt;- <span class="keyword">function</span>(x) &#123;</span><br><span class="line">  sum &lt;- <span class="number">0</span></span><br><span class="line">  <span class="keyword">for</span> (i <span class="keyword">in</span> seq(<span class="number">1</span>, x)) sum &lt;- sum + (mean(a) - mean(b))*d*i</span><br><span class="line">  <span class="keyword">return</span>(sum)</span><br><span class="line">&#125;</span><br><span class="line">parallelExport(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;d&quot;</span>)</span><br><span class="line"></span><br><span class="line">g9 &lt;- <span class="keyword">function</span>(x) &#123;</span><br><span class="line">  out9 &lt;- parallelSapply(<span class="number">1</span>:<span class="number">1000</span>, f)</span><br><span class="line">  <span class="keyword">return</span>(out9)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(microbenchmark)</span><br><span class="line">microbenchmark(g9(), times = <span class="number">20L</span>)</span><br><span class="line"><span class="comment"># Unit: seconds</span></span><br><span class="line"><span class="comment">#  expr      min       lq     mean   median    uq      max neval</span></span><br><span class="line"><span class="comment">#  g9() 2.921699 2.931741 3.002052 2.941502 3.018 3.317669    20</span></span><br><span class="line">parallelStop()</span><br></pre></td></tr></table></figure>

<p>表現也跟前面用loading balancing的函數差不多</p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>parallel</tag>
        <tag>snowfall</tag>
        <tag>foreach</tag>
      </tags>
  </entry>
  <entry>
    <title>Locally quantile regression in R</title>
    <url>/posts/201612/2016-12-10-locally-quantile-regression-in-R.html</url>
    <content><![CDATA[<p>最近稍微找了一下locally quantile regression的資訊</p>
<p>結果發現<a href="https://www.r-statistics.com/2010/04/quantile-loess-combining-a-moving-quantile-window-with-loess-r-function/">Quantile LOESS</a>這篇可以得到比quantreg更好的效果</p>
<p>不過這方法沒有直覺的方式去選擇bandwidth，所以我就自己加了一點東西進去</p>
<p>結合我開發套件中的<code>rfda</code>(<code>rfda</code>可以在<a href="https://github.com/ChingChuan-Chen/rfda">這裡</a>找到)裡面的<code>locPoly1d</code></p>
<p>就可以很自然使用bandwidth去調整線的平滑程度了，程式如下：</p>
<a id="more"></a>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">data(airquality)</span><br><span class="line"><span class="keyword">library</span>(quantreg)</span><br><span class="line"><span class="keyword">library</span>(ggplot2)</span><br><span class="line"><span class="keyword">library</span>(data.table)</span><br><span class="line"><span class="comment"># source Quantile LOESS</span></span><br><span class="line"><span class="keyword">source</span>(<span class="string">&quot;https://www.r-statistics.com/wp-content/uploads/2010/04/Quantile.loess_.r.txt&quot;</span>)</span><br><span class="line"></span><br><span class="line">airquality2 &lt;- na.omit(airquality[ , c(<span class="number">1</span>, <span class="number">4</span>)])</span><br><span class="line"></span><br><span class="line"><span class="comment"># quantreg::rq</span></span><br><span class="line">rq_fit &lt;- rq(Ozone ~ Temp, <span class="number">0.95</span>, airquality2)</span><br><span class="line">rq_fit_df &lt;- data.table(t(coef(rq_fit)))</span><br><span class="line">names(rq_fit_df) &lt;- c(<span class="string">&quot;intercept&quot;</span>, <span class="string">&quot;slope&quot;</span>)</span><br><span class="line"><span class="comment"># quantreg::lprq</span></span><br><span class="line">lprq_fit &lt;- lapply(<span class="number">1</span>:<span class="number">3</span>, <span class="keyword">function</span>(bw)&#123;</span><br><span class="line">  fit &lt;- lprq(airquality2$Temp, airquality2$Ozone, h = bw, tau = <span class="number">0.95</span>)</span><br><span class="line">  <span class="keyword">return</span>(data.table(x = fit$xx, y = fit$fv, bw = paste0(<span class="string">&quot;bw=&quot;</span>, bw), fit = <span class="string">&quot;quantreg::lprq&quot;</span>))</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment"># Quantile LOESS</span></span><br><span class="line">ql_fit &lt;- Quantile.loess(airquality2$Ozone, jitter(airquality2$Temp), window.size = <span class="number">10</span>,</span><br><span class="line">                         the.quant = <span class="number">.95</span>,  window.alignment = c(<span class="string">&quot;center&quot;</span>))</span><br><span class="line">ql_fit_df &lt;- data.table(x = ql_fit$x, y = ql_fit$y.loess, bw = <span class="string">&quot;bw=1&quot;</span>, fit = <span class="string">&quot;Quantile LOESS&quot;</span>)</span><br><span class="line"><span class="comment"># rfda::locQuantPoly1d</span></span><br><span class="line">xout &lt;- seq(min(airquality2$Temp), max(airquality2$Temp), length.out = <span class="number">30</span>)</span><br><span class="line">locQuantPoly1d_fit &lt;- lapply(<span class="number">1</span>:<span class="number">3</span>, <span class="keyword">function</span>(bw)&#123;</span><br><span class="line">  fit &lt;- rfda::locQuantPoly1d(bw, <span class="number">0.95</span>, airquality2$Temp, airquality2$Ozone, </span><br><span class="line">                              rep(<span class="number">1</span>, length(airquality2$Temp)), xout, <span class="string">&quot;gauss&quot;</span>, <span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">  <span class="keyword">return</span>(data.table(x = xout, y = fit, bw = paste0(<span class="string">&quot;bw=&quot;</span>, bw), fit = <span class="string">&quot;rfda::locQuantPoly1d&quot;</span>))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">graphDF &lt;- rbindlist(c(lprq_fit, list(ql_fit_df), locQuantPoly1d_fit))</span><br><span class="line"></span><br><span class="line">ggplot(airquality2, aes(Temp, Ozone)) + geom_point() +</span><br><span class="line">  labs(title = <span class="string">&quot;Predicting the 95% Ozone level according to Temperature&quot;</span>, </span><br><span class="line">       colour = <span class="string">&quot;Methods&quot;</span>, linetype = <span class="string">&quot;Bandwidth&quot;</span>) + </span><br><span class="line">  geom_abline(aes(intercept = intercept, slope = slope, colour =<span class="string">&quot;quantreg::rq&quot;</span>, </span><br><span class="line">                  linetype = <span class="string">&quot;bw=1&quot;</span>), rq_fit_df, show.legend = <span class="literal">TRUE</span>) +</span><br><span class="line">  geom_line(aes(x, y, colour = fit, linetype = bw), graphDF, show.legend = <span class="literal">TRUE</span>)</span><br></pre></td></tr></table></figure>

<p>結果圖：<img src="/images/localQuantileReg.png"></p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>Locally Quantile Regression</tag>
      </tags>
  </entry>
  <entry>
    <title>Differences between RcppEigen and RcppArmadillo</title>
    <url>/posts/201612/2016-12-31-Differences-between-RcppEigen-and-RcppArmadillo.html</url>
    <content><![CDATA[<p>R maillist有討論過這個問題，而且回的非常長</p>
<p>我稍微看了一下，發問者試了RcppArmadillo跟RcppEigen</p>
<p>發現RcppEigen的SVD decomposition不是那麼合用，而且不太好去做coding</p>
<p>RcppArmadillo比較好去coding</p>
<a id="more"></a>


<p>接下來的回文就是RcppEigen會快一點(我的文章也證實了這點)</p>
<p>而RcppEigen是用自己的BLAS and LAPACK，RcppArmadillo會使用R session所使用的</p>
<p>然後接下來就跳到RcppArmadillo的svd表現不好的問題：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(inline)</span><br><span class="line"><span class="keyword">library</span>(RcppArmadillo)</span><br><span class="line"><span class="keyword">library</span>(RcppEigen)</span><br><span class="line"></span><br><span class="line">arma_body &lt;- <span class="string">&#x27;using namespace arma; NumericMatrix Xr(Xs); </span></span><br><span class="line"><span class="string">mat X = Rcpp::as&lt;mat&gt;(Xr), U, V; </span></span><br><span class="line"><span class="string">vec s; svd(U, s, V, X); </span></span><br><span class="line"><span class="string">return wrap(s);&#x27;</span></span><br><span class="line">arma_svd &lt;- cxxfunction(signature(Xs = <span class="string">&quot;numeric&quot;</span>), body = arma_body, plugin = <span class="string">&quot;RcppArmadillo&quot;</span>)</span><br><span class="line">eigen_body &lt;- <span class="string">&#x27;using Eigen::MatrixXd; using Eigen::Map;</span></span><br><span class="line"><span class="string">Map&lt;MatrixXd&gt; x(Rcpp::as&lt;Map&lt;MatrixXd&gt; &gt;(Xs));</span></span><br><span class="line"><span class="string">Eigen::JacobiSVD&lt;MatrixXd&gt; svd(x, Eigen::ComputeThinU | Eigen::ComputeThinV);</span></span><br><span class="line"><span class="string">return wrap(svd.singularValues());&#x27;</span></span><br><span class="line">eigen_svd &lt;- cxxfunction(signature(Xs = <span class="string">&quot;numeric&quot;</span>), body = eigen_body, plugin = <span class="string">&quot;RcppEigen&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(microbenchmark)</span><br><span class="line">N &lt;- <span class="number">1000L</span></span><br><span class="line">A &lt;- matrix(rnorm(N^<span class="number">2</span>), N)</span><br><span class="line">microbenchmark(svd(A), arma_svd(A), eigen_svd(A), times = <span class="number">20L</span>)</span><br><span class="line"><span class="comment"># Unit: milliseconds</span></span><br><span class="line"><span class="comment">#          expr        min         lq       mean     median         uq        max neval</span></span><br><span class="line"><span class="comment">#        svd(A)   436.0527   441.6736   444.1783   443.7081   445.4228   454.5612    10</span></span><br><span class="line"><span class="comment">#   arma_svd(A)   354.7630   359.3738   365.7064   365.5194   367.7162   383.8402    10</span></span><br><span class="line"><span class="comment">#  eigen_svd(A) 56648.3330 56700.3132 57499.2423 57345.0418 58318.3001 58883.5604    10</span></span><br></pre></td></tr></table></figure>

<p>我在我電腦(<a href="mailto:&#x69;&#x37;&#x2d;&#x33;&#x37;&#55;&#48;&#75;&#64;&#52;&#46;&#x32;&#71;&#x48;&#122;">&#x69;&#x37;&#x2d;&#x33;&#x37;&#55;&#48;&#75;&#64;&#52;&#46;&#x32;&#71;&#x48;&#122;</a> with MRO 3.3.1)上測試</p>
<p>其實RcppArmadillo是最快的</p>
<p>不知道是不是Armadillo做了一些改進</p>
<p>因為討論中提到R只有算sigular values沒算U跟V，而Armadillo有</p>
<p>這造就了底層的LAPACK用的函數就不同了，所以performance會差很多</p>
<p>而RcppEigen因為用自帶的LAPACK比我R用的MKL慢不少，所以performance很差</p>
<p>再來，我也測試看看兩個套件中fastLmPure的表現</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">n &lt;- <span class="number">3e3</span></span><br><span class="line">p &lt;- <span class="number">250</span></span><br><span class="line">X &lt;- matrix(rnorm(n * p), n , p)</span><br><span class="line">beta &lt;- rnorm(p)</span><br><span class="line">y &lt;- <span class="number">3</span> + X %*% beta + rnorm(n)</span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(microbenchmark)</span><br><span class="line">microbenchmark(</span><br><span class="line">eigen_colPivQR = RcppEigen::fastLmPure(X, y, method = <span class="number">0L</span>),</span><br><span class="line">    eigen_HHQR = RcppEigen::fastLmPure(X, y, method = <span class="number">1L</span>),</span><br><span class="line">     eigen_LLT = RcppEigen::fastLmPure(X, y, method = <span class="number">2L</span>),</span><br><span class="line">    eigen_LLDT = RcppEigen::fastLmPure(X, y, method = <span class="number">3L</span>),</span><br><span class="line">     eigen_SVD = RcppEigen::fastLmPure(X, y, method = <span class="number">4L</span>),</span><br><span class="line">     eigen_eig = RcppEigen::fastLmPure(X, y, method = <span class="number">5L</span>),</span><br><span class="line">     armadillo = RcppArmadillo::fastLmPure(X, y),</span><br><span class="line">         times = <span class="number">30L</span></span><br><span class="line">)</span><br><span class="line"><span class="comment"># Unit: milliseconds</span></span><br><span class="line"><span class="comment">#            expr        min         lq       mean     median         uq        max neval</span></span><br><span class="line"><span class="comment">#  eigen_colPivQR   77.37665   78.46618   85.91465   82.41118   89.88866  120.38286    30</span></span><br><span class="line"><span class="comment">#      eigen_HHQR   47.47491   47.83243   52.40245   48.70604   54.42752   70.18852    30</span></span><br><span class="line"><span class="comment">#       eigen_LLT   17.68025   18.07902   37.30092   18.50793   21.12671  544.98383    30</span></span><br><span class="line"><span class="comment">#      eigen_LDLT   19.52899   19.95702   22.62692   20.12774   26.57289   36.44651    30</span></span><br><span class="line"><span class="comment">#       eigen_SVD 1019.39032 1051.11184 1072.05842 1061.67417 1080.98286 1201.88356    30</span></span><br><span class="line"><span class="comment">#       eigen_eig   62.97932   63.51531   71.18810   64.34445   79.16513   99.23830    30</span></span><br><span class="line"><span class="comment">#            arma   47.26046   48.48105   50.61176   49.99042   51.71892   57.41407    30</span></span><br></pre></td></tr></table></figure>

<p>這裡也可以看出來RcppArmadillo的performace平平，RcppEigen的llt, ldlt速度真的很快，比RcppArmadillo快上不少</p>
<p>可是這裡沒辦法加weights，所以我也測試了一下WLS，RcppArmadillo就快上不少，可以看一下我今天發的其他篇文章</p>
<p>看了兩個Benchmark之後，總結一下：</p>
<p>RcppEigen有自己的LAPACK，在某些case下可以比RcppArmadillo快</p>
<p>而SVD方面的表現卻是不盡人意，非常的慢</p>
<p>再來是連結到我的文章，WLS的計算上RcppArmadillo快(<a href="http://chingchuan-chen.github.io/posts/2016/12/31/weighted-least-square-algorithm">連結</a>，LOOCV with RcppParallel/OpenMP則是RcppEigen快(<a href="http://chingchuan-chen.github.io/posts/2016/12/31/RcppEigen-Work-With-RcppParall">連結</a></p>
<p>所以求速度的話，使用RcppEigen基本上沒錯，只是svd的performance真的很差，這部分需要謹記(其他雷目前未知)</p>
<p>但是RcppArmadillo有不少方便的功能</p>
<p>submatrix view可以支援用uword vector拉出</p>
<p>element-wise, column/row-wise的操作也相較起RcppEigen來的強大 </p>
<p>舉例來說，<code>mat m = p.each_col() % v</code>，其中<code>v</code>是vector，<code>m</code>, <code>p</code>都是矩陣</p>
<p>而這個在RcppEigen就要用迴圈來處理了，但是performance還是RcppEigen快一些</p>
<p>所以求coding方便性，希望有很多簡單的方式去處理資料，使用RcppArmadillo就好</p>
<p>延伸閱讀：</p>
<ol>
<li><a href="http://chingchuan-chen.github.io/posts/2017/01/01/kernal-matrix-computation-in-Rcpp">kernal matrix computation in Rcpp</a></li>
<li><a href="http://chingchuan-chen.github.io/posts/2017/01/01/kernal-matrix-computation-in-Rcpp-continued">kernal matrix computation in Rcpp (continued)</a></li>
<li><a href="http://chingchuan-chen.github.io/posts/2017/01/02/update-RcppEigen-to-3-3-1">pdate RcppEigen to 3.3.1</a></li>
</ol>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>RcppArmadillo</tag>
        <tag>RcppEigen</tag>
      </tags>
  </entry>
  <entry>
    <title>RcppEigen Work with RcppParallel</title>
    <url>/posts/201612/2016-12-31-RcppEigen-Work-With-RcppParall.html</url>
    <content><![CDATA[<p>最近在比較RcppEigen跟RcppArmadillo，比較的結果寫到下一篇好了</p>
<p>就想說也來試試看RcppEigen跟RcppParallel結合看看有什麼火花</p>
<p>這裡是改之前的RcppArmadillo with RcppParallel的程式 - fastLOOCV</p>
<p>順便也把RcppEigen vs RcppArmadillo 跟 Openmp vs RcppParallel 一起放入混合比較一下</p>
<a id="more"></a>

<p>R code: </p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">Rcpp::sourceCpp(<span class="string">&quot;RcppLOOCV.cpp&quot;</span>)</span><br><span class="line"> </span><br><span class="line">N &lt;- <span class="number">600L</span></span><br><span class="line">p &lt;- <span class="number">150L</span></span><br><span class="line">X &lt;- matrix(rnorm(N*p), N)</span><br><span class="line">b &lt;- rnorm(p, rnorm(<span class="number">2L</span>), rgamma(<span class="number">2L</span>,<span class="number">3</span>,<span class="number">7</span>))</span><br><span class="line">y &lt;- <span class="number">1.5</span> + as.vector(X %*% b) + rnorm(N)</span><br><span class="line"> </span><br><span class="line">system.time(&#123;</span><br><span class="line">  out &lt;- sapply(<span class="number">1L</span>:N, <span class="keyword">function</span>(i)&#123;</span><br><span class="line">    idx &lt;- setdiff(<span class="number">1L</span>:N, i)</span><br><span class="line">    b &lt;- coef(lm(y[idx] ~ X[idx , ]))</span><br><span class="line">    <span class="keyword">return</span>((y[i] - crossprod(c(<span class="number">1</span>, X[i, ]), b))**<span class="number">2</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">#  user  system elapsed</span></span><br><span class="line"><span class="comment">#  8.83    0.28    9.20</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># check results</span></span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1L</span>:<span class="number">5L</span>) stopifnot(abs(mean(out) - arma_fastLOOCV1(y, X)) &lt; <span class="number">1e-8</span>)</span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1L</span>:<span class="number">5L</span>) stopifnot(abs(mean(out) - arma_fastLOOCV2(y, X)) &lt; <span class="number">1e-8</span>)</span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1L</span>:<span class="number">5L</span>) stopifnot(abs(mean(out) - eigen_fastLOOCV1(y, X)) &lt; <span class="number">1e-8</span>)</span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1L</span>:<span class="number">5L</span>) stopifnot(abs(mean(out) - eigen_fastLOOCV2(y, X)) &lt; <span class="number">1e-8</span>)</span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1L</span>:<span class="number">5L</span>) stopifnot(abs(mean(out) - eigen_fastLOOCV3(y, X)) &lt; <span class="number">1e-8</span>)</span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1L</span>:<span class="number">5L</span>) stopifnot(abs(mean(out) - eigen_fastLOOCV4(y, X)) &lt; <span class="number">1e-8</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">library</span>(microbenchmark)</span><br><span class="line">microbenchmark(</span><br><span class="line">  arma_fastLOOCV1(y, X),  <span class="comment"># RcppArmadillo with RcppPrallel</span></span><br><span class="line">  arma_fastLOOCV2(y, X),  <span class="comment"># RcppArmadillo with openmp</span></span><br><span class="line">  eigen_fastLOOCV1(y, X), <span class="comment"># RcppEigen with RcppPrallel (Reduce)</span></span><br><span class="line">  eigen_fastLOOCV2(y, X), <span class="comment"># RcppEigen with RcppPrallel (For)</span></span><br><span class="line">  eigen_fastLOOCV3(y, X), <span class="comment"># RcppEigen with openmp</span></span><br><span class="line">  eigen_fastLOOCV4(y, X), <span class="comment"># RcppEigen without parallism</span></span><br><span class="line">  times = <span class="number">30L</span></span><br><span class="line">)</span><br><span class="line"><span class="comment"># Unit: milliseconds</span></span><br><span class="line"><span class="comment">#                    expr       min        lq      mean    median        uq       max neval</span></span><br><span class="line"><span class="comment">#   arma_fastLOOCV1(y, X) 1009.9239 1037.4614 1052.9272 1045.9733 1068.5668 1101.5399    30</span></span><br><span class="line"><span class="comment">#   arma_fastLOOCV2(y, X) 1020.5068 1033.6180 1051.7171 1046.8751 1064.4512 1139.6371    30</span></span><br><span class="line"><span class="comment">#  eigen_fastLOOCV1(y, X)  623.7900  628.0837  639.1062  635.0657  644.8178  716.8571    30</span></span><br><span class="line"><span class="comment">#  eigen_fastLOOCV2(y, X)  620.1337  624.2227  634.4193  630.3217  641.1066  682.0993    30</span></span><br><span class="line"><span class="comment">#  eigen_fastLOOCV3(y, X)  620.0021  630.6396  643.2877  638.7085  655.9284  706.5759    30</span></span><br><span class="line"><span class="comment">#  eigen_fastLOOCV4(y, X) 2627.1159 2648.5870 2657.8932 2654.8032 2663.2681 2707.9168    30</span></span><br></pre></td></tr></table></figure>

<p>C++ code:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// [[Rcpp::depends(RcppArmadillo, RcppEigen, RcppParallel)]]</span></span><br><span class="line"><span class="comment">// [[Rcpp::plugins(openmp)]]</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;RcppArmadillo.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;RcppEigen.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;omp.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;RcppParallel.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> arma::mat;</span><br><span class="line"><span class="keyword">using</span> arma::vec;</span><br><span class="line"><span class="keyword">using</span> arma::uvec;</span><br><span class="line"><span class="keyword">using</span> arma::uword;</span><br><span class="line"><span class="keyword">using</span> Eigen::Map;</span><br><span class="line"><span class="keyword">using</span> Eigen::MatrixXd;</span><br><span class="line"><span class="keyword">using</span> Eigen::VectorXd;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">arma_MSE_Compute</span>:</span> <span class="keyword">public</span> RcppParallel::Worker &#123;</span><br><span class="line">  <span class="keyword">const</span> mat&amp; X;</span><br><span class="line">  <span class="keyword">const</span> vec&amp; y;</span><br><span class="line">  <span class="keyword">const</span> uvec&amp; index;</span><br><span class="line">  <span class="keyword">double</span> mse;</span><br><span class="line"> </span><br><span class="line">  arma_MSE_Compute(<span class="keyword">const</span> mat&amp; X, <span class="keyword">const</span> vec&amp; y, <span class="keyword">const</span> uvec&amp; index):</span><br><span class="line">    X(X), y(y), index(index), mse(<span class="number">0.0</span>) &#123;&#125;</span><br><span class="line"> </span><br><span class="line">  arma_MSE_Compute(<span class="keyword">const</span> arma_MSE_Compute&amp; arma_MSE_worker, RcppParallel::Split):</span><br><span class="line">    X(arma_MSE_worker.X), y(arma_MSE_worker.y), index(arma_MSE_worker.index), mse(<span class="number">0.0</span>) &#123;&#125;</span><br><span class="line"> </span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="built_in">std</span>::<span class="keyword">size_t</span> <span class="built_in">begin</span>, <span class="built_in">std</span>::<span class="keyword">size_t</span> <span class="built_in">end</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (uword i = <span class="built_in">begin</span>; i &lt; <span class="built_in">end</span>; ++i) &#123;</span><br><span class="line">      uvec idx = arma::<span class="built_in">find</span>(index != i);</span><br><span class="line">      mse += <span class="built_in">pow</span>(y(i) - arma::dot(X.row(i), arma::solve(X.rows(idx), y.elem(idx))), <span class="number">2.0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">join</span><span class="params">(<span class="keyword">const</span> arma_MSE_Compute&amp; rhs)</span> </span>&#123;</span><br><span class="line">    mse += rhs.mse;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// [[Rcpp::export]]</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">arma_fastLOOCV1</span><span class="params">(<span class="keyword">const</span> arma::vec&amp; y, <span class="keyword">const</span> arma::mat&amp; X)</span> </span>&#123;</span><br><span class="line">  mat X_with_ones = arma::join_rows(arma::ones&lt;vec&gt;(X.n_rows), X);</span><br><span class="line">  uvec index = arma::linspace&lt;uvec&gt;(<span class="number">0</span>, y.n_elem - <span class="number">1</span>, y.n_elem);</span><br><span class="line"> </span><br><span class="line">  <span class="function">arma_MSE_Compute <span class="title">mseResults</span><span class="params">(X_with_ones, y, index)</span></span>;</span><br><span class="line">  RcppParallel::parallelReduce(<span class="number">0</span>, y.n_elem, mseResults);</span><br><span class="line">  <span class="keyword">return</span> mseResults.mse / y.n_elem;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// [[Rcpp::export]]</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">arma_fastLOOCV2</span><span class="params">(<span class="keyword">const</span> arma::vec&amp; y, <span class="keyword">const</span> arma::mat&amp; X)</span> </span>&#123;</span><br><span class="line">  mat X_with_ones = arma::join_rows(arma::ones&lt;vec&gt;(X.n_rows), X);</span><br><span class="line">  uvec index = arma::linspace&lt;uvec&gt;(<span class="number">0</span>, y.n_elem - <span class="number">1</span>, y.n_elem);</span><br><span class="line">  vec mse = arma::zeros&lt;vec&gt;(y.n_elem);</span><br><span class="line"> </span><br><span class="line">  uword i = <span class="number">0</span>;</span><br><span class="line">  <span class="meta">#<span class="meta-keyword">pragma</span> omp parallel for private(i)</span></span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; y.n_elem; ++i) &#123;</span><br><span class="line">    uvec idx = arma::<span class="built_in">find</span>(index != i);</span><br><span class="line">    mse(i) = <span class="built_in">pow</span>(y(i) - arma::dot(X_with_ones.row(i), arma::solve(X_with_ones.rows(idx), y.elem(idx))), <span class="number">2.0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> mean(mse);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">eigen_MSE_Compute</span>:</span> <span class="keyword">public</span> RcppParallel::Worker &#123;</span><br><span class="line">  MatrixXd X;</span><br><span class="line">  VectorXd y;</span><br><span class="line">  <span class="keyword">double</span> mse;</span><br><span class="line"> </span><br><span class="line">  eigen_MSE_Compute(MatrixXd X, VectorXd y):</span><br><span class="line">    X(X), y(y), mse(<span class="number">0.0</span>) &#123;&#125;</span><br><span class="line"> </span><br><span class="line">  eigen_MSE_Compute(<span class="keyword">const</span> eigen_MSE_Compute&amp; eigen_MSE_worker, RcppParallel::Split):</span><br><span class="line">    X(eigen_MSE_worker.X), y(eigen_MSE_worker.y), mse(<span class="number">0.0</span>) &#123;&#125;</span><br><span class="line"> </span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="built_in">std</span>::<span class="keyword">size_t</span> <span class="built_in">begin</span>, <span class="built_in">std</span>::<span class="keyword">size_t</span> <span class="built_in">end</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">unsigned</span> <span class="keyword">int</span> i = <span class="built_in">begin</span>; i &lt; <span class="built_in">end</span>; ++i) &#123;</span><br><span class="line">      <span class="function">MatrixXd <span class="title">tmpX</span><span class="params">(X.rows() - <span class="number">1</span>, X.cols())</span></span>;</span><br><span class="line">      <span class="function">VectorXd <span class="title">tmpY</span><span class="params">(y.<span class="built_in">size</span>() - <span class="number">1</span>)</span></span>;</span><br><span class="line">      <span class="keyword">if</span> (i == <span class="number">0</span>) &#123;</span><br><span class="line">        tmpX = X.bottomRows(X.rows() - <span class="number">1</span>);</span><br><span class="line">        tmpY = y.tail(y.<span class="built_in">size</span>() - <span class="number">1</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (i == X.rows() - <span class="number">1</span>) &#123;</span><br><span class="line">        tmpX = X.topRows(X.rows() - <span class="number">1</span>);</span><br><span class="line">        tmpY = y.head(y.<span class="built_in">size</span>() - <span class="number">1</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        tmpX &lt;&lt; X.topRows(i),</span><br><span class="line">                X.bottomRows(X.rows() - i - <span class="number">1</span>);</span><br><span class="line">        tmpY &lt;&lt; y.head(i),</span><br><span class="line">                y.tail(y.<span class="built_in">size</span>() - i - <span class="number">1</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      mse += <span class="built_in">pow</span>(y(i) - (tmpX.colPivHouseholderQr().solve(tmpY)).dot(X.row(i)), <span class="number">2.0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">join</span><span class="params">(<span class="keyword">const</span> eigen_MSE_Compute&amp; rhs)</span> </span>&#123;</span><br><span class="line">    mse += rhs.mse;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// [[Rcpp::export]]</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">eigen_fastLOOCV1</span><span class="params">(<span class="keyword">const</span> Eigen::Map&lt;VectorXd&gt;&amp; y,</span></span></span><br><span class="line"><span class="function"><span class="params">                        <span class="keyword">const</span> Eigen::Map&lt;MatrixXd&gt;&amp; X)</span> </span>&#123;</span><br><span class="line">  <span class="function">MatrixXd <span class="title">X_with_ones</span><span class="params">(X.rows(), X.cols() + <span class="number">1</span>)</span></span>;</span><br><span class="line">  X_with_ones &lt;&lt; MatrixXd::Ones(X.rows(), <span class="number">1</span>), X;</span><br><span class="line"> </span><br><span class="line">  <span class="function">eigen_MSE_Compute <span class="title">mseResults</span><span class="params">(X_with_ones, y)</span></span>;</span><br><span class="line">  RcppParallel::parallelReduce(<span class="number">0</span>, y.<span class="built_in">size</span>(), mseResults);</span><br><span class="line">  <span class="keyword">return</span> mseResults.mse / y.<span class="built_in">size</span>();</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">eigen_MSE_Compute2</span>:</span> <span class="keyword">public</span> RcppParallel::Worker &#123;</span><br><span class="line">  <span class="keyword">const</span> MatrixXd&amp; X;</span><br><span class="line">  <span class="keyword">const</span> VectorXd&amp; y;</span><br><span class="line">  VectorXd&amp; mse;</span><br><span class="line"> </span><br><span class="line">  eigen_MSE_Compute2(<span class="keyword">const</span> MatrixXd&amp; X, <span class="keyword">const</span> VectorXd&amp; y, VectorXd&amp; mse):</span><br><span class="line">    X(X), y(y), mse(mse) &#123;&#125;</span><br><span class="line"> </span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="built_in">std</span>::<span class="keyword">size_t</span> <span class="built_in">begin</span>, <span class="built_in">std</span>::<span class="keyword">size_t</span> <span class="built_in">end</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">unsigned</span> <span class="keyword">int</span> i = <span class="built_in">begin</span>; i &lt; <span class="built_in">end</span>; ++i) &#123;</span><br><span class="line">      <span class="function">MatrixXd <span class="title">tmpX</span><span class="params">(X.rows() - <span class="number">1</span>, X.cols())</span></span>;</span><br><span class="line">      <span class="function">VectorXd <span class="title">tmpY</span><span class="params">(y.<span class="built_in">size</span>() - <span class="number">1</span>)</span></span>;</span><br><span class="line">      <span class="keyword">if</span> (i == <span class="number">0</span>) &#123;</span><br><span class="line">        tmpX = X.bottomRows(X.rows() - <span class="number">1</span>);</span><br><span class="line">        tmpY = y.tail(y.<span class="built_in">size</span>() - <span class="number">1</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (i == X.rows() - <span class="number">1</span>) &#123;</span><br><span class="line">        tmpX = X.topRows(X.rows() - <span class="number">1</span>);</span><br><span class="line">        tmpY = y.head(y.<span class="built_in">size</span>() - <span class="number">1</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        tmpX &lt;&lt; X.topRows(i),</span><br><span class="line">                X.bottomRows(X.rows() - i - <span class="number">1</span>);</span><br><span class="line">        tmpY &lt;&lt; y.head(i),</span><br><span class="line">                y.tail(y.<span class="built_in">size</span>() - i - <span class="number">1</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      mse(i) = <span class="built_in">pow</span>(y(i) - (tmpX.colPivHouseholderQr().solve(tmpY)).dot(X.row(i)), <span class="number">2.0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// [[Rcpp::export]]</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">eigen_fastLOOCV2</span><span class="params">(Rcpp::NumericVector yin,</span></span></span><br><span class="line"><span class="function"><span class="params">                        <span class="keyword">const</span> Eigen::Map&lt;MatrixXd&gt;&amp; X)</span> </span>&#123;</span><br><span class="line">  <span class="comment">// Eigen::Map&lt;VectorXd&gt;&amp; object in RcppParall::Worker would cause crash</span></span><br><span class="line">  <span class="comment">// but we can input Rcpp::NumericVector, and use VectorXd::Map to convert to VectorXd</span></span><br><span class="line">  VectorXd y = VectorXd::Map(yin.<span class="built_in">begin</span>(), yin.<span class="built_in">size</span>());</span><br><span class="line">  <span class="function">MatrixXd <span class="title">X_with_ones</span><span class="params">(X.rows(), X.cols() + <span class="number">1</span>)</span></span>;</span><br><span class="line">  X_with_ones &lt;&lt; MatrixXd::Ones(X.rows(), <span class="number">1</span>), X;</span><br><span class="line">  VectorXd mse = VectorXd::Zero(y.<span class="built_in">size</span>());</span><br><span class="line"> </span><br><span class="line">  <span class="function">eigen_MSE_Compute2 <span class="title">mseResults</span><span class="params">(X_with_ones, y, mse)</span></span>;</span><br><span class="line">  RcppParallel::parallelFor(<span class="number">0</span>, y.<span class="built_in">size</span>(), mseResults);</span><br><span class="line">  <span class="keyword">return</span> mse.mean();</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// [[Rcpp::export]]</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">eigen_fastLOOCV3</span><span class="params">(<span class="keyword">const</span> Eigen::Map&lt;VectorXd&gt;&amp; y,</span></span></span><br><span class="line"><span class="function"><span class="params">                        <span class="keyword">const</span> Eigen::Map&lt;MatrixXd&gt;&amp; X)</span> </span>&#123;</span><br><span class="line">  <span class="function">MatrixXd <span class="title">X_with_ones</span><span class="params">(X.rows(), X.cols() + <span class="number">1</span>)</span></span>;</span><br><span class="line">  X_with_ones &lt;&lt; MatrixXd::Ones(X.rows(), <span class="number">1</span>), X;</span><br><span class="line"> </span><br><span class="line">  VectorXd mse = VectorXd::Zero(y.<span class="built_in">size</span>());</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">  <span class="meta">#<span class="meta-keyword">pragma</span> omp parallel for private(i)</span></span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; X.rows(); ++i) &#123;</span><br><span class="line">    <span class="function">MatrixXd <span class="title">tmpX</span><span class="params">(X.rows() - <span class="number">1</span>, X_with_ones.cols())</span></span>;</span><br><span class="line">    <span class="function">VectorXd <span class="title">tmpY</span><span class="params">(y.<span class="built_in">size</span>() - <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">if</span> (i == <span class="number">0</span>) &#123;</span><br><span class="line">      tmpX = X_with_ones.bottomRows(X_with_ones.rows() - <span class="number">1</span>);</span><br><span class="line">      tmpY = y.tail(y.<span class="built_in">size</span>() - <span class="number">1</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (i == X_with_ones.rows() - <span class="number">1</span>) &#123;</span><br><span class="line">      tmpX = X_with_ones.topRows(X_with_ones.rows() - <span class="number">1</span>);</span><br><span class="line">      tmpY = y.head(y.<span class="built_in">size</span>() - <span class="number">1</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      tmpX &lt;&lt; X_with_ones.topRows(i),</span><br><span class="line">              X_with_ones.bottomRows(X_with_ones.rows() - i - <span class="number">1</span>);</span><br><span class="line">      tmpY &lt;&lt; y.head(i),</span><br><span class="line">              y.tail(y.<span class="built_in">size</span>() - i - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    mse(i) = <span class="built_in">pow</span>(y(i) - (tmpX.colPivHouseholderQr().solve(tmpY)).dot(X_with_ones.row(i)), <span class="number">2.0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> mse.mean();</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// [[Rcpp::export]]</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">eigen_fastLOOCV4</span><span class="params">(<span class="keyword">const</span> Eigen::Map&lt;VectorXd&gt;&amp; y,</span></span></span><br><span class="line"><span class="function"><span class="params">                        <span class="keyword">const</span> Eigen::Map&lt;MatrixXd&gt;&amp; X)</span> </span>&#123;</span><br><span class="line">  <span class="function">MatrixXd <span class="title">X_with_ones</span><span class="params">(X.rows(), X.cols() + <span class="number">1</span>)</span></span>;</span><br><span class="line">  X_with_ones &lt;&lt; MatrixXd::Ones(X.rows(), <span class="number">1</span>), X;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">double</span> mse = <span class="number">0.0</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">unsigned</span> <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; X.rows(); ++i) &#123;</span><br><span class="line">    <span class="function">MatrixXd <span class="title">tmpX</span><span class="params">(X.rows() - <span class="number">1</span>, X_with_ones.cols())</span></span>;</span><br><span class="line">    <span class="function">VectorXd <span class="title">tmpY</span><span class="params">(y.<span class="built_in">size</span>() - <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">if</span> (i == <span class="number">0</span>) &#123;</span><br><span class="line">      tmpX = X_with_ones.bottomRows(X_with_ones.rows() - <span class="number">1</span>);</span><br><span class="line">      tmpY = y.tail(y.<span class="built_in">size</span>() - <span class="number">1</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (i == X_with_ones.rows() - <span class="number">1</span>) &#123;</span><br><span class="line">      tmpX = X_with_ones.topRows(X_with_ones.rows() - <span class="number">1</span>);</span><br><span class="line">      tmpY = y.head(y.<span class="built_in">size</span>() - <span class="number">1</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      tmpX &lt;&lt; X_with_ones.topRows(i),</span><br><span class="line">              X_with_ones.bottomRows(X_with_ones.rows() - i - <span class="number">1</span>);</span><br><span class="line">      tmpY &lt;&lt; y.head(i),</span><br><span class="line">              y.tail(y.<span class="built_in">size</span>() - i - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    mse += <span class="built_in">pow</span>(y(i) - (tmpX.colPivHouseholderQr().solve(tmpY)).dot(X_with_ones.row(i)), <span class="number">2.0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> mse / y.<span class="built_in">size</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>結論：</p>
<p>Armadillo的程式雖然簡短漂亮，但是Performance真的不如Eigen來的好</p>
<p>至於Openmp與RcppParallel這裡比起來根本沒什麼差異</p>
<p>回到這篇的重點，<code>Eigen::Map&lt;VectorXd&gt;</code>這個的背後還是Rcpp::NumericVector或是R的SEXP</p>
<p>在input進去RcppParallel的時候，會出問題，所以都必須確定轉成<code>Eigen::VectorXd</code>才行</p>
<p>不然R會crash或是得到錯誤的答案，我為了測試這個花了好多心力Orz</p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>RcppParallel</tag>
        <tag>RcppEigen</tag>
      </tags>
  </entry>
  <entry>
    <title>RcppEigen Work with RcppParallel (Part 2)</title>
    <url>/posts/201612/2016-12-31-RcppEigen-Work-With-RcppParall-part-2.html</url>
    <content><![CDATA[<p>我在把RcppEigen跟RcppParallel合體的時候</p>
<p>看了下面這篇的程式：</p>
<p><a href="https://gist.github.com/JWiley/d9cba55603471f75d438">C++ code</a>，<a href="https://gist.github.com/JWiley/8fe93ae105b1fb244f93">R code</a></p>
<p>我也有發現他在R mail群裡面回答說這個程式時不時會crash</p>
<p>我就想到我第一部分提到的Rcpp::NumericVector會在RcppParallel會crash的問題</p>
<p>那我就修改了一下，發現程式就穩定了，我也把我修改後的程式放上來 (稍微改的漂亮一些)</p>
<a id="more"></a>

<p>R code:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">Rcpp::sourceCpp(<span class="string">&quot;parallel_boot_lm.cpp&quot;</span>)  <span class="comment"># could be found at http://pastebin.com/Xir4LYei</span></span><br><span class="line"> </span><br><span class="line">set.seed(<span class="number">1234</span>)</span><br><span class="line">N &lt;- <span class="number">1e3L</span></span><br><span class="line">p &lt;- <span class="number">50L</span></span><br><span class="line">R &lt;- <span class="number">500L</span></span><br><span class="line">dmat &lt;- cbind(<span class="number">1</span>, matrix(rnorm(N * p), ncol = p))</span><br><span class="line">beta &lt;- c(<span class="number">2</span>, runif(p))</span><br><span class="line">yvec &lt;- as.vector(dmat %*% beta + rnorm(N, sd = <span class="number">3</span>))</span><br><span class="line">dall &lt;- cbind(y = yvec, as.data.frame(dmat[,-<span class="number">1</span>]))</span><br><span class="line">myindex &lt;- matrix(sample(<span class="number">0</span>:(N - <span class="number">1</span>), N * R, <span class="literal">TRUE</span>), ncol = R)</span><br><span class="line"> </span><br><span class="line">system.time(res1 &lt;- parallelFit(dmat, yvec, myindex))</span><br><span class="line"><span class="comment">#  user  system elapsed</span></span><br><span class="line"><span class="comment">#  1.00    0.00    0.14</span></span><br><span class="line">system.time(res2 &lt;- apply(myindex, <span class="number">2</span>, <span class="keyword">function</span>(i) coef(lm(y ~ ., data = dall[i+<span class="number">1</span>, ]))))</span><br><span class="line"><span class="comment">#  user  system elapsed</span></span><br><span class="line"><span class="comment">#  4.59    0.00    4.59</span></span><br><span class="line"> </span><br><span class="line">stopifnot(all(abs(res1 - res2) &lt; <span class="number">1e-8</span>))</span><br></pre></td></tr></table></figure>

<p>C++ code:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// [[Rcpp::depends(RcppParallel)]]</span></span><br><span class="line"><span class="comment">// [[Rcpp::depends(RcppEigen)]]</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Rcpp.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;RcppEigen.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;RcppParallel.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> Rcpp;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> RcppParallel;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">using</span> Eigen::Map;</span><br><span class="line"><span class="keyword">using</span> Eigen::MatrixXd;</span><br><span class="line"><span class="keyword">using</span> Eigen::VectorXd;</span><br><span class="line"><span class="keyword">using</span> Eigen::MatrixXi;</span><br><span class="line"><span class="keyword">using</span> Eigen::VectorXi;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> Derived&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> MatrixXd <span class="title">matIdx</span><span class="params">(<span class="keyword">const</span> Eigen::MatrixBase&lt;Derived&gt;&amp; X, <span class="keyword">const</span> VectorXi&amp; index)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="function">MatrixXd <span class="title">X2</span><span class="params">(index.<span class="built_in">size</span>(), X.cols())</span></span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">unsigned</span> <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; index.<span class="built_in">size</span>(); ++i)</span><br><span class="line">    X2.row(i) = X.row(index(i));</span><br><span class="line">  <span class="keyword">return</span> X2;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">CVLM</span> :</span> <span class="keyword">public</span> Worker</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">// design matrix and outcome</span></span><br><span class="line">  <span class="keyword">const</span> MatrixXd&amp; X;</span><br><span class="line">  <span class="keyword">const</span> VectorXd&amp; y;</span><br><span class="line">  <span class="keyword">const</span> MatrixXi&amp; index;</span><br><span class="line"> </span><br><span class="line">  <span class="comment">// output</span></span><br><span class="line">  MatrixXd&amp; betamat;</span><br><span class="line"> </span><br><span class="line">  <span class="comment">// initialize with input and output</span></span><br><span class="line">  CVLM(<span class="keyword">const</span> MatrixXd&amp; X, <span class="keyword">const</span> VectorXd&amp; y, <span class="keyword">const</span> MatrixXi&amp; index, MatrixXd&amp; betamat)</span><br><span class="line">    : X(X), y(y), index(index), betamat(betamat) &#123;&#125;</span><br><span class="line"> </span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="built_in">std</span>::<span class="keyword">size_t</span> <span class="built_in">begin</span>, <span class="built_in">std</span>::<span class="keyword">size_t</span> <span class="built_in">end</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">unsigned</span> <span class="keyword">int</span> i = <span class="built_in">begin</span>; i &lt; <span class="built_in">end</span>; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">      MatrixXd Xi = matIdx(X, index.col(i));</span><br><span class="line">      VectorXd yi = matIdx(y, index.col(i));</span><br><span class="line">      betamat.col(i) = Xi.colPivHouseholderQr().solve(yi);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// [[Rcpp::export]]</span></span><br><span class="line"><span class="function">Eigen::MatrixXd <span class="title">parallelFit</span><span class="params">(Rcpp::NumericMatrix xr,</span></span></span><br><span class="line"><span class="function"><span class="params">                            Rcpp::NumericVector dvr,</span></span></span><br><span class="line"><span class="function"><span class="params">                            Rcpp::IntegerMatrix indexr)</span> </span>&#123;</span><br><span class="line">  MatrixXd x = MatrixXd::Map(xr.<span class="built_in">begin</span>(), xr.nrow(), xr.ncol());</span><br><span class="line">  VectorXd dv = VectorXd::Map(dvr.<span class="built_in">begin</span>(), dvr.<span class="built_in">size</span>());</span><br><span class="line">  MatrixXi index = MatrixXi::Map(indexr.<span class="built_in">begin</span>(), indexr.nrow(), indexr.ncol());</span><br><span class="line"> </span><br><span class="line">  <span class="comment">// allocate the output matrix</span></span><br><span class="line">  MatrixXd betamat = MatrixXd::Zero(x.cols(), index.cols());</span><br><span class="line"> </span><br><span class="line">  <span class="comment">// pass input and output</span></span><br><span class="line">  <span class="function">CVLM <span class="title">cvLM</span><span class="params">(x, dv, index, betamat)</span></span>;</span><br><span class="line"> </span><br><span class="line">  <span class="comment">// parallelFor to do it</span></span><br><span class="line">  parallelFor(<span class="number">0</span>, index.cols(), cvLM);</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">return</span> betamat;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>RcppParallel</tag>
        <tag>RcppEigen</tag>
      </tags>
  </entry>
  <entry>
    <title>Weighted Least-Square Algorithm</title>
    <url>/posts/201612/2016-12-31-weighted-least-square-algorithm.html</url>
    <content><![CDATA[<p>最近一直work on locally weighted least-square</p>
<p>結果發現使用<code>gausvar</code>這個kernel的時候，weight會出現負的</p>
<p>我原本的解法是直接在input跟output都乘上根號的weight</p>
<p>結果這招就行不通了</p>
<p>另外還有再一些case下，解不是穩健的，有可能跑出虛數，但是虛數的係數其實很小…</p>
<p>所以就下定決心來研究一下各種WLS的解法</p>
<a id="more"></a>


<p>稍微GOOGLE了一下，發現不外乎下面四種解法：</p>
<ol>
<li>直接解，就是利用<code>(X^T * W * X)^(-1) * X^T * W * y</code>去解出迴歸係數</li>
<li>再來就是把inverse部分用pseudo inverse代替，以避免rank不足的問題出現</li>
<li>Cholesky Decomposition (LDL Decomposition)</li>
<li>QR Decomposition</li>
</ol>
<p>效率的話，<code>4 &gt; 3 &gt; 1 &gt; 2</code>，但是QR在一些情況下會跑出虛數</p>
<p>所以我這裡會偏向以3為主</p>
<p>下面是用程式去實作各種解法：</p>
<p>R code:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">Rcpp::sourceCpp(<span class="string">&quot;wls.cpp&quot;</span>)</span><br><span class="line">n &lt;- <span class="number">500</span></span><br><span class="line">p &lt;- <span class="number">150</span></span><br><span class="line">X &lt;- matrix(rnorm(n * p), n , p)</span><br><span class="line">beta &lt;- rnorm(p)</span><br><span class="line">w &lt;- sqrt(rowMeans(X**<span class="number">2</span>) - (n / (n-<span class="number">1</span>)) * rowMeans(X)**<span class="number">2</span>)</span><br><span class="line">y &lt;- <span class="number">3</span> + X %*% beta + rnorm(n)</span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(microbenchmark)</span><br><span class="line">microbenchmark(</span><br><span class="line">  eigen_llt = eigen_llt(X, w, y),</span><br><span class="line">  eigen_ldlt = eigen_ldlt(X, w, y),</span><br><span class="line">  eigen_fullLU = eigen_fullLU(X, w, y),</span><br><span class="line">  eigen_HHQR = eigen_HHQR(X, w, y),</span><br><span class="line">  eigen_colPivHHQR = eigen_colPivHHQR(X, w, y),</span><br><span class="line">  eigen_fullPivHHQR = eigen_fullPivHHQR(X, w, y),</span><br><span class="line">  eigen_chol_llt1 = eigen_chol_llt1(X, w, y),</span><br><span class="line">  eigen_chol_llt2 = eigen_chol_llt2(X, w, y),</span><br><span class="line">  eigen_chol_llt3 = eigen_chol_llt3(X, w, y),</span><br><span class="line">  arma_qr = arma_qr(X, w, y), <span class="comment"># can&#x27;t run if n is too big</span></span><br><span class="line">  arma_pinv = arma_pinv(X, w, y),</span><br><span class="line">  arma_chol1 = arma_chol1(X, w, y),</span><br><span class="line">  arma_chol2 = arma_chol2(X, w, y),</span><br><span class="line">  arma_direct1 = arma_direct1(X, w, y),</span><br><span class="line">  arma_direct2 = arma_direct2(X, w, y),</span><br><span class="line">  r_lm = coef(lm(y ~ -<span class="number">1</span> + X, weights = w)),</span><br><span class="line">  times = <span class="number">30L</span></span><br><span class="line">)</span><br><span class="line"><span class="comment"># Unit: microseconds</span></span><br><span class="line"><span class="comment">#               expr      min       lq       mean    median       uq        max neval</span></span><br><span class="line"><span class="comment">#          eigen_llt 1787.601 1814.225  2341.2993 2287.1645 2889.126   2912.239    30</span></span><br><span class="line"><span class="comment">#         eigen_ldlt 1812.763 1846.408  2292.7815 2089.9725 2928.916   3020.197    30</span></span><br><span class="line"><span class="comment">#       eigen_fullLU 3112.649 3133.129  3673.1350 3242.1115 4610.021   4725.294    30</span></span><br><span class="line"><span class="comment">#         eigen_HHQR 2334.999 2401.120  3095.5537 3073.1525 3820.669   3920.142    30</span></span><br><span class="line"><span class="comment">#   eigen_colPivHHQR 2411.945 2423.941  2969.3488 2691.4950 3756.888   4029.855    30</span></span><br><span class="line"><span class="comment">#  eigen_fullPivHHQR 3449.397 3477.776  4179.7097 3585.0035 5282.639   5363.389    30</span></span><br><span class="line"><span class="comment">#    eigen_chol_llt1 3302.234 3359.286  4111.7262 3828.5675 5297.852   5362.510    30</span></span><br><span class="line"><span class="comment">#    eigen_chol_llt2 3268.004 3308.379  4065.1882 3418.3850 5253.674   5296.390    30</span></span><br><span class="line"><span class="comment">#    eigen_chol_llt3 3354.020 3397.027  4130.9969 3857.0925 4929.800   5425.121    30</span></span><br><span class="line"><span class="comment">#            arma_qr 1868.936 2167.357  2330.0549 2316.5675 2419.552   2829.442    30</span></span><br><span class="line"><span class="comment">#          arma_pinv 4137.229 4723.245  5024.8460 4877.1375 5474.272   5722.957    30</span></span><br><span class="line"><span class="comment">#         arma_chol1  702.167  959.337  1042.1535 1041.1100 1147.167   1291.404    30</span></span><br><span class="line"><span class="comment">#         arma_chol2  780.869 1046.523  1121.4886 1125.5160 1234.645   1423.645    30</span></span><br><span class="line"><span class="comment">#       arma_direct1 4473.977 4636.645  4956.8919 4701.4490 5481.294   5867.193    30</span></span><br><span class="line"><span class="comment">#       arma_direct2  676.129  898.482   963.5788  965.4805 1060.565   1184.615    30</span></span><br><span class="line"><span class="comment">#               r_lm 6257.189 6817.459 11962.0246 8113.9820 9301.084 123398.876    30</span></span><br></pre></td></tr></table></figure>

<p>C++ code:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// [[Rcpp::depends(RcppArmadillo, RcppEigen)]]</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;RcppArmadillo.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;RcppEigen.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> arma;</span><br><span class="line"></span><br><span class="line"><span class="comment">// [[Rcpp::export]]</span></span><br><span class="line"><span class="function">Eigen::VectorXd <span class="title">eigen_fullPivHHQR</span><span class="params">(<span class="keyword">const</span> Eigen::Map&lt;Eigen::MatrixXd&gt; &amp; X,</span></span></span><br><span class="line"><span class="function"><span class="params">                                  <span class="keyword">const</span> Eigen::Map&lt;Eigen::VectorXd&gt; &amp; w,</span></span></span><br><span class="line"><span class="function"><span class="params">                                  <span class="keyword">const</span> Eigen::Map&lt;Eigen::VectorXd&gt; &amp; y)</span> </span>&#123;</span><br><span class="line">  Eigen::VectorXd beta = (X.transpose() * w.asDiagonal() * X).fullPivHouseholderQr().solve(X.transpose() * w.asDiagonal() * y);;</span><br><span class="line">  <span class="keyword">return</span> beta;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// [[Rcpp::export]]</span></span><br><span class="line"><span class="function">Eigen::VectorXd <span class="title">eigen_colPivHHQR</span><span class="params">(<span class="keyword">const</span> Eigen::Map&lt;Eigen::MatrixXd&gt; &amp; X,</span></span></span><br><span class="line"><span class="function"><span class="params">                                 <span class="keyword">const</span> Eigen::Map&lt;Eigen::VectorXd&gt; &amp; w,</span></span></span><br><span class="line"><span class="function"><span class="params">                                 <span class="keyword">const</span> Eigen::Map&lt;Eigen::VectorXd&gt; &amp; y)</span> </span>&#123;</span><br><span class="line">  Eigen::VectorXd beta = (X.transpose() * w.asDiagonal() * X).colPivHouseholderQr().solve(X.transpose() * w.asDiagonal() * y);;</span><br><span class="line">  <span class="keyword">return</span> beta;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// [[Rcpp::export]]</span></span><br><span class="line"><span class="function">Eigen::VectorXd <span class="title">eigen_HHQR</span><span class="params">(<span class="keyword">const</span> Eigen::Map&lt;Eigen::MatrixXd&gt; &amp; X,</span></span></span><br><span class="line"><span class="function"><span class="params">                           <span class="keyword">const</span> Eigen::Map&lt;Eigen::VectorXd&gt; &amp; w,</span></span></span><br><span class="line"><span class="function"><span class="params">                           <span class="keyword">const</span> Eigen::Map&lt;Eigen::VectorXd&gt; &amp; y)</span> </span>&#123;</span><br><span class="line">  Eigen::VectorXd beta = (X.transpose() * w.asDiagonal() * X).householderQr().solve(X.transpose() * w.asDiagonal() * y);</span><br><span class="line">  <span class="keyword">return</span> beta;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// [[Rcpp::export]]</span></span><br><span class="line"><span class="function">Eigen::VectorXd <span class="title">eigen_fullLU</span><span class="params">(<span class="keyword">const</span> Eigen::Map&lt;Eigen::MatrixXd&gt; &amp; X, </span></span></span><br><span class="line"><span class="function"><span class="params">                             <span class="keyword">const</span> Eigen::Map&lt;Eigen::VectorXd&gt; &amp; w, </span></span></span><br><span class="line"><span class="function"><span class="params">                             <span class="keyword">const</span> Eigen::Map&lt;Eigen::VectorXd&gt; &amp; y)</span> </span>&#123;</span><br><span class="line">  Eigen::VectorXd beta = (X.transpose() * w.asDiagonal() * X).fullPivLu().solve(X.transpose() * w.asDiagonal() * y);</span><br><span class="line">  <span class="keyword">return</span> beta;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="comment">// [[Rcpp::export]]</span></span><br><span class="line"><span class="function">Eigen::VectorXd <span class="title">eigen_llt</span><span class="params">(<span class="keyword">const</span> Eigen::Map&lt;Eigen::MatrixXd&gt; &amp; X, </span></span></span><br><span class="line"><span class="function"><span class="params">                          <span class="keyword">const</span> Eigen::Map&lt;Eigen::VectorXd&gt; &amp; w, </span></span></span><br><span class="line"><span class="function"><span class="params">                          <span class="keyword">const</span> Eigen::Map&lt;Eigen::VectorXd&gt; &amp; y)</span> </span>&#123;</span><br><span class="line">  Eigen::VectorXd beta = (X.transpose() * w.asDiagonal() * X).llt().solve(X.transpose() * w.asDiagonal() * y);</span><br><span class="line">  <span class="keyword">return</span> beta;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// [[Rcpp::export]]</span></span><br><span class="line"><span class="function">Eigen::VectorXd <span class="title">eigen_ldlt</span><span class="params">(<span class="keyword">const</span> Eigen::Map&lt;Eigen::MatrixXd&gt; &amp; X, </span></span></span><br><span class="line"><span class="function"><span class="params">                           <span class="keyword">const</span> Eigen::Map&lt;Eigen::VectorXd&gt; &amp; w, </span></span></span><br><span class="line"><span class="function"><span class="params">                           <span class="keyword">const</span> Eigen::Map&lt;Eigen::VectorXd&gt; &amp; y)</span> </span>&#123;</span><br><span class="line">  Eigen::VectorXd beta = (X.transpose() * w.asDiagonal() * X).ldlt().solve(X.transpose() * w.asDiagonal() * y);</span><br><span class="line">  <span class="keyword">return</span> beta;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// [[Rcpp::export]]</span></span><br><span class="line"><span class="function">Eigen::VectorXd <span class="title">eigen_chol_llt1</span><span class="params">(<span class="keyword">const</span> Eigen::Map&lt;Eigen::MatrixXd&gt; &amp; X,</span></span></span><br><span class="line"><span class="function"><span class="params">                                <span class="keyword">const</span> Eigen::Map&lt;Eigen::VectorXd&gt; &amp; w,</span></span></span><br><span class="line"><span class="function"><span class="params">                                <span class="keyword">const</span> Eigen::Map&lt;Eigen::VectorXd&gt; &amp; y)</span> </span>&#123;</span><br><span class="line">  Eigen::MatrixXd XWX = X.transpose() * w.asDiagonal() * X;</span><br><span class="line">  Eigen::MatrixXd R = XWX.llt().matrixU();</span><br><span class="line">  Eigen::VectorXd XWY = X.transpose() * (w.<span class="built_in">array</span>() * y.<span class="built_in">array</span>()).matrix();</span><br><span class="line">  Eigen::VectorXd beta = R.householderQr().solve(R.transpose().householderQr().solve(XWY));</span><br><span class="line">  <span class="keyword">return</span> beta;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// [[Rcpp::export]]</span></span><br><span class="line"><span class="function">Eigen::VectorXd <span class="title">eigen_chol_llt2</span><span class="params">(<span class="keyword">const</span> Eigen::Map&lt;Eigen::MatrixXd&gt; &amp; X,</span></span></span><br><span class="line"><span class="function"><span class="params">                                <span class="keyword">const</span> Eigen::Map&lt;Eigen::VectorXd&gt; &amp; w,</span></span></span><br><span class="line"><span class="function"><span class="params">                                <span class="keyword">const</span> Eigen::Map&lt;Eigen::VectorXd&gt; &amp; y)</span> </span>&#123;</span><br><span class="line">  Eigen::MatrixXd XW = X.transpose() * w.asDiagonal();</span><br><span class="line">  Eigen::MatrixXd R = (XW * X).llt().matrixU();</span><br><span class="line">  Eigen::VectorXd beta = R.householderQr().solve(R.transpose().householderQr().solve(XW * y));</span><br><span class="line">  <span class="keyword">return</span> beta;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// [[Rcpp::export]]</span></span><br><span class="line"><span class="function">Eigen::VectorXd <span class="title">eigen_chol_llt3</span><span class="params">(<span class="keyword">const</span> Eigen::Map&lt;Eigen::MatrixXd&gt; &amp; X,</span></span></span><br><span class="line"><span class="function"><span class="params">                                <span class="keyword">const</span> Eigen::Map&lt;Eigen::VectorXd&gt; &amp; w,</span></span></span><br><span class="line"><span class="function"><span class="params">                                <span class="keyword">const</span> Eigen::Map&lt;Eigen::VectorXd&gt; &amp; y)</span> </span>&#123;</span><br><span class="line">  <span class="function">Eigen::MatrixXd <span class="title">XW</span><span class="params">(X.cols(), X.rows())</span></span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">unsigned</span> <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; X.cols(); ++i)</span><br><span class="line">    XW.row(i) = X.col(i).<span class="built_in">array</span>() * w.<span class="built_in">array</span>();</span><br><span class="line">  Eigen::MatrixXd R = (XW * X).llt().matrixU();</span><br><span class="line">  Eigen::VectorXd beta = R.householderQr().solve(R.transpose().householderQr().solve(XW * y));</span><br><span class="line">  <span class="keyword">return</span> beta;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// [[Rcpp::export]]</span></span><br><span class="line"><span class="function">Eigen::VectorXd <span class="title">eigen_colPivHHQR2</span><span class="params">(<span class="keyword">const</span> Eigen::Map&lt;Eigen::MatrixXd&gt; &amp; X,</span></span></span><br><span class="line"><span class="function"><span class="params">                                  <span class="keyword">const</span> Eigen::Map&lt;Eigen::VectorXd&gt; &amp; w,</span></span></span><br><span class="line"><span class="function"><span class="params">                                  <span class="keyword">const</span> Eigen::Map&lt;Eigen::VectorXd&gt; &amp; y)</span> </span>&#123;</span><br><span class="line">  Eigen::VectorXd sw = w.cwiseSqrt();</span><br><span class="line">  <span class="function">Eigen::MatrixXd <span class="title">XW</span><span class="params">(X.rows(), X.cols())</span></span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">unsigned</span> <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; X.cols(); ++i)</span><br><span class="line">    XW.col(i) = X.col(i).<span class="built_in">array</span>() * sw.<span class="built_in">array</span>();</span><br><span class="line">  Eigen::VectorXd beta = XW.colPivHouseholderQr().solve(y.cwiseProduct(sw));</span><br><span class="line">  <span class="keyword">return</span> beta;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// [[Rcpp::export]]</span></span><br><span class="line"><span class="function">arma::vec <span class="title">arma_qr</span><span class="params">(<span class="keyword">const</span> arma::mat&amp; X, <span class="keyword">const</span> arma::vec&amp; w, <span class="keyword">const</span> arma::vec&amp; y)</span> </span>&#123;</span><br><span class="line">  mat Q, R;</span><br><span class="line">  arma::qr_econ(Q, R, X.each_col() % <span class="built_in">sqrt</span>(w));</span><br><span class="line">  vec p = solve(R, Q.t() * (y % <span class="built_in">sqrt</span>(w)));</span><br><span class="line">  <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// [[Rcpp::export]]</span></span><br><span class="line"><span class="function">arma::vec <span class="title">arma_pinv</span><span class="params">(<span class="keyword">const</span> arma::mat&amp; X, <span class="keyword">const</span> arma::vec&amp; w, <span class="keyword">const</span> arma::vec&amp; y)</span> </span>&#123;</span><br><span class="line">  vec p = pinv(X.t() * (repmat(w, <span class="number">1</span>, X.n_cols) % X)) * X.t() * (w % y);</span><br><span class="line">  <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// [[Rcpp::export]]</span></span><br><span class="line"><span class="function">arma::vec <span class="title">arma_chol1</span><span class="params">(<span class="keyword">const</span> arma::mat&amp; X, <span class="keyword">const</span> arma::vec&amp; w, <span class="keyword">const</span> arma::vec&amp; y)</span> </span>&#123;</span><br><span class="line">  mat R = chol((X.each_col() % w).t() * X);</span><br><span class="line">  vec p = solve(R, solve(R.t(), X.t() * (w % y), solve_opts::fast), solve_opts::fast);</span><br><span class="line">  <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// [[Rcpp::export]]</span></span><br><span class="line"><span class="function">arma::vec <span class="title">arma_chol2</span><span class="params">(<span class="keyword">const</span> arma::mat&amp; X, <span class="keyword">const</span> arma::vec&amp; w, <span class="keyword">const</span> arma::vec&amp; y)</span> </span>&#123;</span><br><span class="line">  mat XW = (X.each_col() % w).t();</span><br><span class="line">  mat R = chol(XW * X);</span><br><span class="line">  vec p = solve(R, solve(R.t(), XW * y, solve_opts::fast), solve_opts::fast);</span><br><span class="line">  <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// [[Rcpp::export]]</span></span><br><span class="line"><span class="function">arma::vec <span class="title">arma_direct1</span><span class="params">(<span class="keyword">const</span> arma::mat&amp; X, <span class="keyword">const</span> arma::vec&amp; w, <span class="keyword">const</span> arma::vec&amp; y)</span> </span>&#123;</span><br><span class="line">  vec sw = <span class="built_in">sqrt</span>(w);</span><br><span class="line">  vec p = solve(X.each_col() % sw, y % sw);</span><br><span class="line">  <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// [[Rcpp::export]]</span></span><br><span class="line"><span class="function">arma::vec <span class="title">arma_direct2</span><span class="params">(<span class="keyword">const</span> arma::mat&amp; X, <span class="keyword">const</span> arma::vec&amp; w, <span class="keyword">const</span> arma::vec&amp; y)</span> </span>&#123;</span><br><span class="line">  vec p = solve((X.each_col() % w).t() * X, X.t() * (w % y));</span><br><span class="line">  <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>這裡的QR解得很慢，我不知道要怎麼樣讓armadillo只輸出跟rank一樣多的Q，R矩陣就好</p>
<p>而直接解會是最快的，我猜這原因是裡面某部分有被優化過了…</p>
<p>不然以程式來看，Cholesky Decomposition的performance是最好的</p>
<p>只是我也不解的是Eigen也用一樣的方法去做</p>
<p>卻比Armadillo手動去寫慢了好幾倍 (eigen_chol_llt vs arma_chol)</p>
<p>不確定是不是Eigen在solve linear system時用不一樣的LAPACK函數</p>
<p>或是Eigen在這做了比較多check</p>
<p>這裡就留給後人慢慢玩賞QQ</p>
<p>2017/4/20補充：</p>
<p>我後來試了一些簡單的case</p>
<p>發現其實在p不大(大概小於80)，n也不大(小於200)的情況</p>
<p>RcppEigen擁有比較好的performance，我的猜測是SSE指令集帶來的好處</p>
<p><img src="/images/wls_performace_comparison1.png"><br><img src="/images/wls_performace_comparison2.png"></p>
<p>測試script如下：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(iterators)</span><br><span class="line"><span class="keyword">library</span>(foreach)</span><br><span class="line"><span class="keyword">library</span>(data.table)</span><br><span class="line"><span class="keyword">library</span>(pipeR)</span><br><span class="line"><span class="keyword">library</span>(Rcpp)</span><br><span class="line"><span class="keyword">library</span>(RcppArmadillo)</span><br><span class="line"><span class="keyword">library</span>(RcppEigen)</span><br><span class="line"><span class="keyword">library</span>(microbenchmark)</span><br><span class="line"></span><br><span class="line">Rcpp::sourceCpp(<span class="string">&quot;wls.cpp&quot;</span>)</span><br><span class="line"></span><br><span class="line">trainFunc &lt;- <span class="keyword">function</span>(n, p)&#123;</span><br><span class="line">  X &lt;- matrix(rnorm(n * p), n , p)</span><br><span class="line">  beta &lt;- rnorm(p)</span><br><span class="line">  w &lt;- rgamma(nrow(X), <span class="number">2</span>, <span class="number">0.5</span>)</span><br><span class="line">  y &lt;- <span class="number">3</span> + X %*% beta + rnorm(n)</span><br><span class="line">  </span><br><span class="line">  microRes &lt;- microbenchmark(</span><br><span class="line">    eigen_llt = eigen_llt(X, w, y),</span><br><span class="line">    eigen_ldlt = eigen_ldlt(X, w, y),</span><br><span class="line">    eigen_chol_llt1 = eigen_chol_llt1(X, w, y),</span><br><span class="line">    eigen_chol_llt2 = eigen_chol_llt2(X, w, y),</span><br><span class="line">    eigen_chol_llt3 = eigen_chol_llt3(X, w, y),</span><br><span class="line">    arma_chol1 = arma_chol1(X, w, y),</span><br><span class="line">    arma_chol2 = arma_chol2(X, w, y),</span><br><span class="line">    arma_direct1 = arma_direct1(X, w, y),</span><br><span class="line">    arma_direct2 = arma_direct2(X, w, y),</span><br><span class="line">    r_lm = coef(lm(y ~ -<span class="number">1</span> + X, weights = w)),</span><br><span class="line">    times = <span class="number">30L</span></span><br><span class="line">  )</span><br><span class="line">  m &lt;- tapply(microRes$time, microRes$expr, median) / <span class="number">1000</span></span><br><span class="line">  <span class="keyword">return</span>(data.table(n = n, p = p, method = names(m), median_time = m))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">paraList &lt;- CJ(p = c(<span class="number">1</span>:<span class="number">20</span>, seq(<span class="number">25</span>, <span class="number">100</span>, <span class="number">5</span>)), n = c(<span class="number">20</span>, <span class="number">30</span>, <span class="number">50</span>, <span class="number">75</span>, <span class="number">100</span>, <span class="number">200</span>)) %&gt;&gt;% `[`(n &gt; p)</span><br><span class="line">paraResDT &lt;- foreach(v = iter(paraList, by = <span class="string">&quot;row&quot;</span>), .final = rbindlist) %do% trainFunc(v$n, v$p)</span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(lattice)</span><br><span class="line"></span><br><span class="line">xyplot(median_time ~ p | factor(n, c(<span class="number">20</span>, <span class="number">30</span>, <span class="number">50</span>, <span class="number">75</span>, <span class="number">100</span>, <span class="number">200</span>)), paraResDT, groups = method, type = <span class="string">&quot;o&quot;</span>, </span><br><span class="line">       auto.key = list(points = <span class="literal">TRUE</span>, columns = <span class="number">3</span>), </span><br><span class="line">       scales = list(x = list(relation = <span class="string">&quot;free&quot;</span>), y = list(relation = <span class="string">&quot;free&quot;</span>)))</span><br><span class="line"></span><br><span class="line">xyplot(median_time ~ p | factor(n, c(<span class="number">20</span>, <span class="number">30</span>, <span class="number">50</span>, <span class="number">75</span>, <span class="number">100</span>, <span class="number">200</span>)), </span><br><span class="line">       paraResDT[!method %<span class="keyword">in</span>% c(<span class="string">&quot;r_lm&quot;</span>, <span class="string">&quot;arma_direct1&quot;</span>, <span class="string">&quot;eigen_chol_llt1&quot;</span>,</span><br><span class="line">                                <span class="string">&quot;eigen_chol_llt2&quot;</span>, <span class="string">&quot;eigen_chol_llt3&quot;</span>)], </span><br><span class="line">       groups = method, type = <span class="string">&quot;o&quot;</span>, auto.key = list(points = <span class="literal">TRUE</span>, columns = <span class="number">3</span>), </span><br><span class="line">       scales = list(x = list(relation = <span class="string">&quot;free&quot;</span>), y = list(relation = <span class="string">&quot;free&quot;</span>)))</span><br></pre></td></tr></table></figure>

<p>基於上面的結論，所以我會建議這樣去寫wls的solver:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; [[Rcpp::depends(RcppArmadillo, RcppEigen)]]</span><br><span class="line">#include &lt;RcppArmadillo.h&gt;</span><br><span class="line">#include &lt;RcppEigen.h&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; [[Rcpp::export]]</span><br><span class="line">arma::vec fastSolve(arma::mat X, arma::vec w, arma::vec y) &#123;</span><br><span class="line">  if (X.n_rows * X.n_cols &lt;&#x3D; 6000) &#123;</span><br><span class="line">    Eigen::MatrixXd X2 &#x3D; Eigen::MatrixXd::Map(X.memptr(), X.n_rows, X.n_cols);</span><br><span class="line">    Eigen::VectorXd w2 &#x3D; Eigen::VectorXd::Map(w.memptr(), w.size());</span><br><span class="line">    Eigen::VectorXd y2 &#x3D; Eigen::VectorXd::Map(y.memptr(), y.size());</span><br><span class="line">    Eigen::VectorXd out &#x3D; (X2.transpose() * w2.asDiagonal() * X2).llt().solve(X2.transpose() * w2.asDiagonal() * y2);</span><br><span class="line">    arma::vec p(out.data(), out.rows(), false);</span><br><span class="line">    return p;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    return arma::solve((X.each_col() % w).t() * X, X.t() * (w % y));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>RcppArmadillo</tag>
        <tag>RcppEigen</tag>
        <tag>WLS</tag>
        <tag>Least-Square</tag>
      </tags>
  </entry>
  <entry>
    <title>Rcpp call F77 blas/lapack (continued)</title>
    <url>/posts/201701/2017-01-01-Rcpp-call-F77-blas-lapack-continued.html</url>
    <content><![CDATA[<p>想一想還是繼續把上一篇補完</p>
<p>所以這次就活用了LAPACK查詢，去得到the optimal sizes of the WORK array and IWORK array</p>
<p>R code沒什麼更動，只是多了一些check results的動作</p>
<p>也試試看第2,3個input得到的結果是否正確</p>
<a id="more"></a>

<p>R code:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">Sys.setenv(<span class="string">&quot;PKG_LIBS&quot;</span> = <span class="string">&quot;$(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS)&quot;</span>)</span><br><span class="line">Rcpp::sourceCpp(<span class="string">&quot;eigen_sym_cpp.cpp&quot;</span>)</span><br><span class="line"></span><br><span class="line">n_row &lt;- <span class="number">1e4L</span></span><br><span class="line">n_col &lt;- <span class="number">1e1L</span></span><br><span class="line">A &lt;- matrix(rnorm(n_row * n_col), n_row, n_col)</span><br><span class="line">S &lt;- cov(A)</span><br><span class="line"></span><br><span class="line">eig_res_cpp1 &lt;- eigen_sym_cpp(S)</span><br><span class="line">eig_res_cpp2 &lt;- eigen_sym_cpp(S, <span class="number">5L</span>)</span><br><span class="line">eig_res_cpp3 &lt;- eigen_sym_cpp(S, -<span class="number">1L</span>, <span class="literal">TRUE</span>)</span><br><span class="line"></span><br><span class="line">eig_res_r &lt;- eigen(S)</span><br><span class="line"></span><br><span class="line"><span class="comment"># check eigenvalues</span></span><br><span class="line">all.equal(eig_res_cpp1$values, eig_res_r$values) <span class="comment"># TRUE</span></span><br><span class="line">all.equal(eig_res_cpp2$values, eig_res_r$values[<span class="number">1L</span>:<span class="number">5L</span>]) <span class="comment"># TRUE</span></span><br><span class="line">all.equal(eig_res_cpp3$values, eig_res_r$values) <span class="comment"># TRUE</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># check eigenvectors</span></span><br><span class="line">sign_vectors_cpp1 &lt;- colSums(eig_res_r$vectors * eig_res_cpp1$vectors)</span><br><span class="line">eig_res_cpp1$vectors &lt;- sweep(eig_res_cpp1$vectors, <span class="number">2</span>, sign_vectors_cpp1, <span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">all.equal(eig_res_cpp1$vectors, eig_res_r$vectors) <span class="comment"># TRUE</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># check eigenvectors</span></span><br><span class="line">sign_vectors_cpp2 &lt;- colSums(eig_res_r$vectors[ , <span class="number">1L</span>:<span class="number">5L</span>] * eig_res_cpp2$vectors)</span><br><span class="line">eig_res_cpp2$vectors &lt;- sweep(eig_res_cpp2$vectors, <span class="number">2</span>, sign_vectors_cpp2, <span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">all.equal(eig_res_cpp2$vectors, eig_res_r$vectors[ , <span class="number">1L</span>:<span class="number">5L</span>]) <span class="comment"># TRUE</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(microbenchmark)</span><br><span class="line">microbenchmark(</span><br><span class="line">  Rcpp_BLAS = eigen_sym_cpp(S),</span><br><span class="line">  R = eigen(S),</span><br><span class="line">  times = <span class="number">100L</span></span><br><span class="line">)</span><br><span class="line"><span class="comment"># Unit: microseconds</span></span><br><span class="line"><span class="comment">#       expr      min       lq      mean    median       uq      max neval</span></span><br><span class="line"><span class="comment">#  Rcpp_BLAS  788.180  852.546  872.9262  860.4455  874.196 1000.293   100</span></span><br><span class="line"><span class="comment">#          R 1203.336 1271.505 1363.7922 1281.4520 1391.457 2432.417   100</span></span><br></pre></td></tr></table></figure>

<p>C++程式部分採用了RcppEigen做一些輔助的動作</p>
<p>然後加上註解讓整個程式比較容易被讀懂</p>
<p>再來是，增加上面提到的查詢，然後再使用查詢結果去計算eigenvalues跟eigenvectors</p>
<p>並且簡化掉一些不會用到的參數，ex: <code>lda</code>, <code>ldz</code>, <code>iu</code>等</p>
<p>C++ code:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// [[Rcpp::depends(RcppEigen)]]</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;RcppEigen.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;R_ext/Lapack.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;R_ext/BLAS.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> Eigen::Map;</span><br><span class="line"><span class="keyword">using</span> Eigen::MatrixXd;</span><br><span class="line"><span class="keyword">using</span> Eigen::VectorXd;</span><br><span class="line"><span class="keyword">using</span> Eigen::VectorXi;</span><br><span class="line"></span><br><span class="line"><span class="comment">//[[Rcpp::export]]</span></span><br><span class="line"><span class="function">Rcpp::List <span class="title">eigen_sym_cpp</span><span class="params">(Rcpp::NumericMatrix xr, <span class="keyword">int</span> num_eig = <span class="number">-1</span>, <span class="keyword">bool</span> eigenvalues_only = <span class="literal">false</span>, <span class="keyword">double</span> tol = <span class="number">1.5e-8</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  MatrixXd A = MatrixXd::Map(xr.<span class="built_in">begin</span>(), xr.nrow(), xr.ncol());</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// settings</span></span><br><span class="line">  <span class="keyword">char</span> jobz = eigenvalues_only ? <span class="string">&#x27;N&#x27;</span> : <span class="string">&#x27;V&#x27;</span>, range = (num_eig == <span class="number">-1</span>) ? <span class="string">&#x27;A&#x27;</span> : <span class="string">&#x27;I&#x27;</span>, uplo = <span class="string">&#x27;U&#x27;</span>;</span><br><span class="line">  <span class="keyword">int</span> N = A.rows(), info = <span class="number">0</span>;</span><br><span class="line">  <span class="comment">// deside the number of eigenvalues</span></span><br><span class="line">  <span class="keyword">int</span> il = (num_eig == <span class="number">-1</span>) ? <span class="number">1</span> : (N - num_eig + <span class="number">1</span>), M = N - il + <span class="number">1</span>;</span><br><span class="line">  <span class="comment">// the tolerance and not used arguments vl, vu</span></span><br><span class="line">  <span class="keyword">double</span> abstol = tol, vl = <span class="number">0.0</span>, vu = <span class="number">0.0</span>;</span><br><span class="line">  <span class="comment">// query the optimal size of the WORK array and IWORK array</span></span><br><span class="line">  <span class="keyword">int</span> lwork = <span class="number">-1</span>, liwork = <span class="number">-1</span>, iwork_query;</span><br><span class="line">  </span><br><span class="line">  <span class="function">VectorXi <span class="title">isuppz</span><span class="params">(<span class="number">2</span> * M)</span></span>;</span><br><span class="line">  <span class="function">VectorXd <span class="title">W</span><span class="params">(M)</span></span>;</span><br><span class="line">  <span class="function">MatrixXd <span class="title">Z</span><span class="params">(N, M)</span></span>;</span><br><span class="line">  <span class="comment">// perform dsyerv and get the optimal size of the WORK array and IWORK array</span></span><br><span class="line">  <span class="keyword">double</span> work_qeury;</span><br><span class="line">  F77_CALL(dsyevr)(&amp;jobz, &amp;range, &amp;uplo, &amp;N, A.data(), &amp;N, &amp;vl, &amp;vu, </span><br><span class="line">           &amp;il, &amp;N, &amp;abstol, &amp;M, W.data(), Z.data(), &amp;N, isuppz.data(), </span><br><span class="line">           &amp;work_qeury, &amp;lwork, &amp;iwork_query, &amp;liwork, &amp;info);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// get the optimal sizeㄋ of the WORK array and IWORK array</span></span><br><span class="line">  lwork = (<span class="keyword">int</span>) work_qeury;</span><br><span class="line">  liwork = iwork_query;</span><br><span class="line">  <span class="function">VectorXd <span class="title">work</span><span class="params">(lwork)</span></span>;</span><br><span class="line">  <span class="function">VectorXi <span class="title">iwork</span><span class="params">(liwork)</span></span>;</span><br><span class="line">  <span class="comment">// perform dsyerv and get the results of eigen decomposition</span></span><br><span class="line">  F77_CALL(dsyevr)(&amp;jobz, &amp;range, &amp;uplo, &amp;N, A.data(), &amp;N, &amp;vl, &amp;vu, </span><br><span class="line">           &amp;il, &amp;N, &amp;abstol, &amp;M, W.data(), Z.data(), &amp;N, isuppz.data(), </span><br><span class="line">           work.data(), &amp;lwork, iwork.data(), &amp;liwork, &amp;info);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// reverse the eigenvalues to sort in the descending order</span></span><br><span class="line">  W.reverseInPlace();</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// return eigenvalues only</span></span><br><span class="line">  <span class="keyword">if</span> (eigenvalues_only)</span><br><span class="line">    <span class="keyword">return</span> Rcpp::List::create(</span><br><span class="line">      Rcpp::Named(<span class="string">&quot;LAPACK_info&quot;</span>) = info,</span><br><span class="line">      Rcpp::Named(<span class="string">&quot;values&quot;</span>) = W</span><br><span class="line">    );</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// reverse the eigenvectors to sort in the order of eigenvalues</span></span><br><span class="line">  MatrixXd Z2 = Z.rowwise().reverse();</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// reutrn eigenvalues and eigenvectors</span></span><br><span class="line">  <span class="keyword">return</span> Rcpp::List::create(</span><br><span class="line">    Rcpp::Named(<span class="string">&quot;LAPACK_info&quot;</span>) = info,</span><br><span class="line">    Rcpp::Named(<span class="string">&quot;vectors&quot;</span>) = Z2,</span><br><span class="line">    Rcpp::Named(<span class="string">&quot;values&quot;</span>) = W</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>這樣整個就算完工了~~</p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>Rcpp</tag>
        <tag>BLAS</tag>
        <tag>LAPACK</tag>
      </tags>
  </entry>
  <entry>
    <title>kernal matrix computation in Rcpp (continued)</title>
    <url>/posts/201701/2017-01-01-kernal-matrix-computation-in-Rcpp-continued.html</url>
    <content><![CDATA[<p>kernal matrix computation這個主題不只被我用了一次</p>
<p>其實我在PTT分享RcppParallel也是用了這個當例子，<a href="https://www.ptt.cc/bbs/R_Language/M.1438914924.A.0B0.html">文章連結</a></p>
<p>那這裡就延續上篇的程式把RcppParallel一起拉進來比較一下吧</p>
<p>因為我已經知道p大的時候，我每一個都逐一算其實很慢</p>
<p>那我這裡的RcppParallel就改變一下做法</p>
<p>讓RcppParallel不會因為p改變而使得計算效率改變</p>
<a id="more"></a>

<p>這裡新增三個cpp檔案，分別是：RcppArmadillo</p>
<p>1.RcppArmadillo with RcppParallel</p>
<ol>
<li>RcppEigen with RcppParallel</li>
<li>RcppEigen and OpenMP with RcppParallel</li>
</ol>
<p>其他三個就在前一篇都有了，這裡就不重複貼了</p>
<p>R code:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(kernlab)</span><br><span class="line">Rcpp::sourceCpp(<span class="string">&quot;kernel_matrix_arma.cpp&quot;</span>)</span><br><span class="line">Rcpp::sourceCpp(<span class="string">&quot;kernel_matrix_eigen1.cpp&quot;</span>)</span><br><span class="line">Rcpp::sourceCpp(<span class="string">&quot;kernel_matrix_eigen2.cpp&quot;</span>)</span><br><span class="line">Rcpp::sourceCpp(<span class="string">&quot;kernel_matrix_arma_para.cpp&quot;</span>)</span><br><span class="line">Rcpp::sourceCpp(<span class="string">&quot;kernel_matrix_eigen_para1.cpp&quot;</span>)</span><br><span class="line">Rcpp::sourceCpp(<span class="string">&quot;kernel_matrix_eigen_para2.cpp&quot;</span>)</span><br><span class="line"> </span><br><span class="line">N &lt;- <span class="number">5000L</span></span><br><span class="line">p &lt;- <span class="number">1000L</span></span><br><span class="line">b &lt;- <span class="number">500L</span></span><br><span class="line">X &lt;- matrix(rnorm(N*p), ncol = p)</span><br><span class="line">center &lt;- X[sample(N, b),]</span><br><span class="line">sigma &lt;- <span class="number">2.5</span></span><br><span class="line"></span><br><span class="line">kernelMatrix_R &lt;- <span class="keyword">function</span>(X, center, sigma)&#123;</span><br><span class="line">  exp(sweep(sweep(X %*% t(center), <span class="number">1</span>,</span><br><span class="line">                  rowSums(X**<span class="number">2</span>)/<span class="number">2</span>), <span class="number">2</span>, rowSums(center**<span class="number">2</span>)/<span class="number">2</span>) / (sigma**<span class="number">2</span>))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">res_kernlab &lt;- kernelMatrix(rbfdot(sigma=<span class="number">1</span>/(<span class="number">2</span>*sigma^<span class="number">2</span>)), X, center)@.Data</span><br><span class="line"></span><br><span class="line"><span class="comment"># check results with kernlab::kernelMatrix</span></span><br><span class="line">all.equal(kernelMatrix_R(X, center, sigma), res_kernlab)             <span class="comment"># TRUE</span></span><br><span class="line">all.equal(kernelMatrix_arma_cpp(X, center, sigma), res_kernlab)      <span class="comment"># TRUE</span></span><br><span class="line">all.equal(kernelMatrix_eigen_cpp(X, center, sigma), res_kernlab)     <span class="comment"># TRUE</span></span><br><span class="line">all.equal(kernelMatrix_eigen_omp_cpp(X, center, sigma), res_kernlab) <span class="comment"># TRUE</span></span><br><span class="line">all.equal(kernelMatrix_arma_para_cpp(X, center, sigma), res_kernlab) <span class="comment"># TRUE</span></span><br><span class="line">all.equal(kernelMatrix_eigen_para_cpp(X, center, sigma), res_kernlab) <span class="comment"># TRUE</span></span><br><span class="line">all.equal(kernelMatrix_eigen_para_omp_cpp(X, center, sigma), res_kernlab) <span class="comment"># TRUE</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(microbenchmark)</span><br><span class="line">microbenchmark(</span><br><span class="line">  Rfun = kernelMatrix_R(X, center, sigma),</span><br><span class="line">  kernlab = kernelMatrix(rbfdot(sigma=<span class="number">1</span>/(<span class="number">2</span>*sigma^<span class="number">2</span>)), X, center),</span><br><span class="line">  RcppArmadillo = kernelMatrix_arma_cpp(X, center, sigma),</span><br><span class="line">  RcppEigen = kernelMatrix_eigen_cpp(X, center, sigma),</span><br><span class="line">  RcppEigen_Openmp = kernelMatrix_eigen_omp_cpp(X, center, sigma),</span><br><span class="line">  RcppArmadillo_RcppParallel = kernelMatrix_arma_cpp(X, center, sigma),</span><br><span class="line">  RcppEigen_RcppParallel = kernelMatrix_eigen_para_cpp(X, center, sigma),</span><br><span class="line">  RcppEigen_RcppParallel_Openmp = kernelMatrix_eigen_para_omp_cpp(X, center, sigma),</span><br><span class="line">  times = <span class="number">30L</span></span><br><span class="line">)</span><br><span class="line"><span class="comment"># Unit: milliseconds</span></span><br><span class="line"><span class="comment">#                           expr      min       lq     mean   median       uq      max neval</span></span><br><span class="line"><span class="comment">#                           Rfun 238.5369 255.9128 273.9832 268.1477 284.9538 348.0322    30</span></span><br><span class="line"><span class="comment">#                        kernlab 226.1284 248.5015 267.4762 261.4748 275.2627 372.2815    30</span></span><br><span class="line"><span class="comment">#                  RcppArmadillo 173.2054 188.7308 199.1266 193.7259 207.7513 284.9052    30</span></span><br><span class="line"><span class="comment">#                      RcppEigen 416.1434 419.6085 425.7891 422.5549 429.4397 456.2896    30</span></span><br><span class="line"><span class="comment">#               RcppEigen_Openmp 204.2332 210.2853 225.0568 214.8849 224.6437 324.5009    30</span></span><br><span class="line"><span class="comment">#     RcppArmadillo_RcppParallel 170.5573 196.8640 204.4135 207.8597 212.0638 224.6665    30</span></span><br><span class="line"><span class="comment">#         RcppEigen_RcppParallel 411.3365 416.3367 425.0875 419.2989 429.4684 459.8628    30</span></span><br><span class="line"><span class="comment">#  RcppEigen_RcppParallel_Openmp 203.5772 211.5603 246.5694 224.0399 277.4804 377.0851    30</span></span><br></pre></td></tr></table></figure>

<p>kernel_matrix_arma_para.cpp:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// [[Rcpp::depends(RcppArmadillo, RcppParallel)]]</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;RcppArmadillo.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;RcppParallel.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> arma::mat;</span><br><span class="line"><span class="keyword">using</span> arma::vec;</span><br><span class="line"><span class="keyword">using</span> arma::rowvec;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">KernelComputeWorker</span>:</span> <span class="keyword">public</span> RcppParallel::Worker &#123;</span><br><span class="line">  <span class="keyword">const</span> vec&amp; x_square_sum;</span><br><span class="line">  <span class="keyword">const</span> rowvec&amp; center_square_sum;</span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">double</span>&amp; sigma2;</span><br><span class="line">  mat&amp; kernelMat;</span><br><span class="line">  </span><br><span class="line">  KernelComputeWorker(<span class="keyword">const</span> vec&amp; x_square_sum, <span class="keyword">const</span> rowvec&amp; center_square_sum, </span><br><span class="line">                      <span class="keyword">const</span> <span class="keyword">double</span>&amp; sigma2, mat&amp; kernelMat):</span><br><span class="line">    x_square_sum(x_square_sum), center_square_sum(center_square_sum), </span><br><span class="line">    sigma2(sigma2), kernelMat(kernelMat) &#123;&#125;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="built_in">std</span>::<span class="keyword">size_t</span> <span class="built_in">begin</span>, <span class="built_in">std</span>::<span class="keyword">size_t</span> <span class="built_in">end</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = (<span class="keyword">int</span>) <span class="built_in">begin</span>; k &lt; (<span class="keyword">int</span>) <span class="built_in">end</span>; ++k) &#123;</span><br><span class="line">      <span class="keyword">int</span> j = k / kernelMat.n_rows;</span><br><span class="line">      <span class="keyword">int</span> i = k - j * kernelMat.n_rows;</span><br><span class="line">      kernelMat(i, j) -= (x_square_sum(i) + center_square_sum(j));</span><br><span class="line">      kernelMat(i, j) = <span class="built_in">exp</span>(kernelMat(i, j) / sigma2);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// [[Rcpp::export]]</span></span><br><span class="line"><span class="function">mat <span class="title">kernelMatrix_arma_para_cpp</span><span class="params">(mat x, mat center, <span class="keyword">double</span> sigma)</span> </span>&#123;</span><br><span class="line">  <span class="function">mat <span class="title">kernelMat</span><span class="params">(x * center.t())</span></span>;</span><br><span class="line">  vec x_square_sum = sum(square(x), <span class="number">1</span>) / <span class="number">2.0</span>;</span><br><span class="line">  rowvec center_square_sum = (sum(square(center), <span class="number">1</span>)).t() / <span class="number">2.0</span>;</span><br><span class="line">  <span class="keyword">double</span> sigma2 = <span class="built_in">pow</span>(sigma, <span class="number">2.0</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="function">KernelComputeWorker <span class="title">worker_kc</span><span class="params">(x_square_sum, center_square_sum, sigma2, kernelMat)</span></span>;</span><br><span class="line">  RcppParallel::parallelFor(<span class="number">0</span>, kernelMat.n_elem, worker_kc);</span><br><span class="line">  <span class="keyword">return</span> kernelMat;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>kernel_matrix_eigen_para1.cpp:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// [[Rcpp::depends(RcppEigen, RcppParallel)]]</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;RcppEigen.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;RcppParallel.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> Eigen::MatrixXd;</span><br><span class="line"><span class="keyword">using</span> Eigen::VectorXd;</span><br><span class="line"><span class="keyword">using</span> Eigen::VectorXi;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">KernelComputeWorker</span>:</span> <span class="keyword">public</span> RcppParallel::Worker &#123;</span><br><span class="line">  <span class="keyword">const</span> VectorXd&amp; x_square_sum;</span><br><span class="line">  <span class="keyword">const</span> VectorXd&amp; center_square_sum;</span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">double</span>&amp; sigma2;</span><br><span class="line">  MatrixXd&amp; kernelMat;</span><br><span class="line">  </span><br><span class="line">  KernelComputeWorker(<span class="keyword">const</span> VectorXd&amp; x_square_sum, <span class="keyword">const</span> VectorXd&amp; center_square_sum, </span><br><span class="line">                      <span class="keyword">const</span> <span class="keyword">double</span>&amp; sigma2, MatrixXd&amp; kernelMat):</span><br><span class="line">    x_square_sum(x_square_sum), center_square_sum(center_square_sum), </span><br><span class="line">    sigma2(sigma2), kernelMat(kernelMat) &#123;&#125;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="built_in">std</span>::<span class="keyword">size_t</span> <span class="built_in">begin</span>, <span class="built_in">std</span>::<span class="keyword">size_t</span> <span class="built_in">end</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = (<span class="keyword">int</span>) <span class="built_in">begin</span>; k &lt; (<span class="keyword">int</span>) <span class="built_in">end</span>; ++k) &#123;</span><br><span class="line">      <span class="keyword">int</span> j = k / kernelMat.rows();</span><br><span class="line">      <span class="keyword">int</span> i = k - j * kernelMat.rows();</span><br><span class="line">      kernelMat(i, j) -= (x_square_sum(i) + center_square_sum(j));</span><br><span class="line">      kernelMat(i, j) = <span class="built_in">exp</span>(kernelMat(i, j) / sigma2);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// [[Rcpp::export]]</span></span><br><span class="line"><span class="function">MatrixXd <span class="title">kernelMatrix_eigen_para_cpp</span><span class="params">(MatrixXd x, MatrixXd center, <span class="keyword">double</span> sigma)</span> </span>&#123;</span><br><span class="line">  MatrixXd kernelMat = x * center.transpose();</span><br><span class="line">  VectorXd x_square_sum = x.<span class="built_in">array</span>().<span class="built_in">pow</span>(<span class="number">2.0</span>).rowwise().sum() / <span class="number">2.0</span>;</span><br><span class="line">  VectorXd center_square_sum = center.<span class="built_in">array</span>().<span class="built_in">pow</span>(<span class="number">2.0</span>).rowwise().sum()  / <span class="number">2.0</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">double</span> sigma2 = <span class="built_in">pow</span>(sigma, <span class="number">2.0</span>);</span><br><span class="line">  <span class="function">KernelComputeWorker <span class="title">worker_kc</span><span class="params">(x_square_sum, center_square_sum, sigma2, kernelMat)</span></span>;</span><br><span class="line">  RcppParallel::parallelFor(<span class="number">0</span>, kernelMat.<span class="built_in">size</span>(), worker_kc);</span><br><span class="line">  <span class="keyword">return</span> kernelMat;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>kernel_matrix_eigen_para2.cpp:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// [[Rcpp::depends(RcppEigen, RcppParallel)]]</span></span><br><span class="line"><span class="comment">// [[Rcpp::plugins(openmp)]]</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;RcppEigen.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;omp.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;RcppParallel.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> Eigen::MatrixXd;</span><br><span class="line"><span class="keyword">using</span> Eigen::VectorXd;</span><br><span class="line"><span class="keyword">using</span> Eigen::VectorXi;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">KernelComputeWorker</span>:</span> <span class="keyword">public</span> RcppParallel::Worker &#123;</span><br><span class="line">  <span class="keyword">const</span> VectorXd&amp; x_square_sum;</span><br><span class="line">  <span class="keyword">const</span> VectorXd&amp; center_square_sum;</span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">double</span>&amp; sigma2;</span><br><span class="line">  MatrixXd&amp; kernelMat;</span><br><span class="line">  </span><br><span class="line">  KernelComputeWorker(<span class="keyword">const</span> VectorXd&amp; x_square_sum, <span class="keyword">const</span> VectorXd&amp; center_square_sum, </span><br><span class="line">                      <span class="keyword">const</span> <span class="keyword">double</span>&amp; sigma2, MatrixXd&amp; kernelMat):</span><br><span class="line">    x_square_sum(x_square_sum), center_square_sum(center_square_sum), </span><br><span class="line">    sigma2(sigma2), kernelMat(kernelMat) &#123;&#125;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="built_in">std</span>::<span class="keyword">size_t</span> <span class="built_in">begin</span>, <span class="built_in">std</span>::<span class="keyword">size_t</span> <span class="built_in">end</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = (<span class="keyword">int</span>) <span class="built_in">begin</span>; k &lt; (<span class="keyword">int</span>) <span class="built_in">end</span>; ++k) &#123;</span><br><span class="line">      <span class="keyword">int</span> j = k / kernelMat.rows();</span><br><span class="line">      <span class="keyword">int</span> i = k - j * kernelMat.rows();</span><br><span class="line">      kernelMat(i, j) -= (x_square_sum(i) + center_square_sum(j));</span><br><span class="line">      kernelMat(i, j) = <span class="built_in">exp</span>(kernelMat(i, j) / sigma2);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// [[Rcpp::export]]</span></span><br><span class="line"><span class="function">MatrixXd <span class="title">kernelMatrix_eigen_para_omp_cpp</span><span class="params">(MatrixXd x, MatrixXd center, <span class="keyword">double</span> sigma)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n = omp_get_max_threads();</span><br><span class="line">  omp_set_num_threads(n);</span><br><span class="line">  Eigen::setNbThreads(n);</span><br><span class="line">  Eigen::initParallel();</span><br><span class="line">  MatrixXd kernelMat = x * center.transpose();</span><br><span class="line">  VectorXd x_square_sum = x.<span class="built_in">array</span>().<span class="built_in">pow</span>(<span class="number">2.0</span>).rowwise().sum() / <span class="number">2.0</span>;</span><br><span class="line">  VectorXd center_square_sum = center.<span class="built_in">array</span>().<span class="built_in">pow</span>(<span class="number">2.0</span>).rowwise().sum()  / <span class="number">2.0</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">double</span> sigma2 = <span class="built_in">pow</span>(sigma, <span class="number">2.0</span>);</span><br><span class="line">  <span class="function">KernelComputeWorker <span class="title">worker_kc</span><span class="params">(x_square_sum, center_square_sum, sigma2, kernelMat)</span></span>;</span><br><span class="line">  RcppParallel::parallelFor(<span class="number">0</span>, kernelMat.<span class="built_in">size</span>(), worker_kc);</span><br><span class="line">  <span class="keyword">return</span> kernelMat;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>這個結果可以看出幾件事情：</p>
<ol>
<li>直接用Multi-threaded BLAS的RcppArmadillo在這個問題上，用了RcppParallel還是略輸一籌，BLAS還是比較強大XD</li>
<li>相較RcppEigen_RcppParallel跟RcppEigen_RcppParallel_Openmp來看，因為沒平行的部分只剩下一開始計算<code>kernelMat</code>、<code>x_square_sum</code>以及<code>center_square_sum</code>，所以這裡RcppEigen用它本身的BLAS庫來做乘除就慢上了不少，而後面的計算其實也是用colwise, rowwise以及element-wise的操作，那邊已經被平行做掉了，還是跟只單用RcppEigen差不多快，所以其實element-wise, colwise以及rowwise這幾個操作應該不至於造成瓶頸，因此，最大的瓶頸是在大矩陣的乘法，需要openmp使用multi-thread來加速</li>
<li>RcppEigen_RcppParallel_Openmp還是比RcppEigen_Openmp比，所以其實後段的處理是白費的，用原本的方法比較快 (RcppArmadillo的部分同理)</li>
</ol>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>Rcpp</tag>
        <tag>RcppArmadillo</tag>
        <tag>RcppParallel</tag>
        <tag>RcppEigen</tag>
        <tag>Kernel Matrix</tag>
      </tags>
  </entry>
  <entry>
    <title>Rcpp call F77 blas/lapack</title>
    <url>/posts/201701/2017-01-01-Rcpp-call-F77-blas-lapack.html</url>
    <content><![CDATA[<p>剛好有點時間來研究一下Rcpp怎樣直接使用底層Fortran 77的BLAS跟LAPACK函數</p>
<p>我覺得最難的還是要去讀BLAS或LAPACK的文件，然後配置適當的input餵進去</p>
<p>我這裡就簡單demo一下怎麼樣用LAPACK的dsyevr去計算symmetric matrix的eigenvalues跟eigenvectors</p>
<p>(BLAS部分其實很接近，有興趣的人可以自己改成用BLAS的函數去做，一樣用F77_CALL即可)</p>
<p>裡面還是有不少配置，我沒有好好活用，不過我覺得就先這樣吧，等到有需要再慢慢深入去寫</p>
<p>畢竟我現在直接使用BLAS/LAPACK的場合真的不多，寫那麼底層對我真的有點困難Orz</p>
<p>我還是乖乖去用RcppEigen跟RcppArmadillo好了<del>“</del></p>
<p>不過直接用BLAS，可以gain到一些performance，也有比較多flexible的設定</p>
<p>深入去玩的話，我覺得對程式效能改進有一定幫助</p>
<a id="more"></a>

<p>R code:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">Sys.setenv(<span class="string">&quot;PKG_LIBS&quot;</span> = <span class="string">&quot;$(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS)&quot;</span>)</span><br><span class="line">Rcpp::sourceCpp(<span class="string">&quot;eigen_sym_cpp.cpp&quot;</span>)</span><br><span class="line"></span><br><span class="line">n_row &lt;- <span class="number">1e4L</span></span><br><span class="line">n_col &lt;- <span class="number">5e1L</span></span><br><span class="line">A &lt;- matrix(rnorm(n_row * n_col), n_row, n_col)</span><br><span class="line">S &lt;- cov(A)</span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(microbenchmark)</span><br><span class="line">microbenchmark(</span><br><span class="line">  Rcpp_BLAS = eigen_sym_cpp(S),</span><br><span class="line">  R = eigen(S),</span><br><span class="line">  times = <span class="number">100L</span>)</span><br><span class="line"><span class="comment"># Unit: microseconds</span></span><br><span class="line"><span class="comment">#      expr      min       lq      mean    median       uq      max neval</span></span><br><span class="line"><span class="comment"># Rcpp_BLAS  789.644  874.196  904.5647  891.4575  943.974 1545.057   100</span></span><br><span class="line"><span class="comment">#         R 1194.267 1344.793 1444.1375 1404.7695 1516.385 3655.062   100</span></span><br></pre></td></tr></table></figure>

<p>C++ code:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Rcpp.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;R_ext/Lapack.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;R_ext/BLAS.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//[[Rcpp::export]]</span></span><br><span class="line"><span class="function">Rcpp::List <span class="title">eigen_sym_cpp</span><span class="params">(Rcpp::NumericMatrix X, <span class="keyword">int</span> num_eig = <span class="number">-1</span>, <span class="keyword">bool</span> eigenvalues_only = <span class="literal">false</span>, <span class="keyword">double</span> tol = <span class="number">1.5e-8</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  Rcpp::NumericMatrix A = Rcpp::clone(X); <span class="comment">// perform deep copy of input</span></span><br><span class="line">  <span class="keyword">char</span> jobz = eigenvalues_only?<span class="string">&#x27;N&#x27;</span>:<span class="string">&#x27;V&#x27;</span>, range = (num_eig == <span class="number">-1</span>)?<span class="string">&#x27;A&#x27;</span>:<span class="string">&#x27;I&#x27;</span>, uplo = <span class="string">&#x27;U&#x27;</span>;</span><br><span class="line">  <span class="keyword">int</span> N = A.nrow(), lda = <span class="built_in">std</span>::<span class="built_in">max</span>(<span class="number">1</span>, N), il = <span class="number">1</span>, iu = (num_eig == <span class="number">-1</span>)?N:num_eig;</span><br><span class="line">  <span class="keyword">int</span> m = (range == <span class="string">&#x27;A&#x27;</span>)?N:(iu-il+<span class="number">1</span>), ldz = <span class="built_in">std</span>::<span class="built_in">max</span>(<span class="number">1</span>, N), lwork = <span class="built_in">std</span>::<span class="built_in">max</span>(<span class="number">1</span>, <span class="number">26</span>*N), liwork = <span class="built_in">std</span>::<span class="built_in">max</span>(<span class="number">1</span>, <span class="number">10</span>*N), info = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">double</span> abstol = tol, vl = <span class="number">0.0</span>, vu = <span class="number">0.0</span>;</span><br><span class="line">  Rcpp::IntegerVector isuppz(2 * std::max(1, m)), iwork(std::max(1, lwork));</span><br><span class="line">  Rcpp::NumericVector work(std::max(1, lwork)), W(N);</span><br><span class="line">  <span class="function">Rcpp::NumericMatrix <span class="title">Z</span><span class="params">(ldz, <span class="built_in">std</span>::<span class="built_in">max</span>(<span class="number">1</span>, m))</span></span>;</span><br><span class="line">  F77_CALL(dsyevr)(&amp;jobz, &amp;range, &amp;uplo, &amp;N, A.<span class="built_in">begin</span>(), &amp;lda, &amp;vl, &amp;vu, &amp;il, &amp;iu, &amp;abstol,</span><br><span class="line">           &amp;m, W.<span class="built_in">begin</span>(), Z.<span class="built_in">begin</span>(), &amp;ldz, isuppz.<span class="built_in">begin</span>(), work.<span class="built_in">begin</span>(), &amp;lwork, iwork.<span class="built_in">begin</span>(), &amp;liwork, &amp;info);</span><br><span class="line">  <span class="keyword">return</span> Rcpp::List::create(Rcpp::Named(<span class="string">&quot;info&quot;</span>) = info,</span><br><span class="line">                            Rcpp::Named(<span class="string">&quot;vectors&quot;</span>) = Z,</span><br><span class="line">                            Rcpp::Named(<span class="string">&quot;values&quot;</span>) = W);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>後記：歡迎留言，我最近才剛把DISQUS，改成可以guest留言，加上不用審查</p>
<p>之前設定錯誤，造成一些問題，害我PTT信箱收了不少信Orz</p>
<p>希望大家新的一年，能夠善用DISQUS留言，不要再塞爆我信箱了XDD</p>
<p>新的一年第一篇部落格，請大家多多指教</p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>Rcpp</tag>
        <tag>BLAS</tag>
        <tag>LAPACK</tag>
      </tags>
  </entry>
  <entry>
    <title>kernal matrix computation in Rcpp</title>
    <url>/posts/201701/2017-01-01-kernal-matrix-computation-in-Rcpp.html</url>
    <content><![CDATA[<p>會有這篇是剛好想到之前在PTT PO的文章</p>
<p><a href="https://www.ptt.cc/bbs/R_Language/M.1429191476.A.F82.html">文章1</a>，<a href="https://www.ptt.cc/bbs/C_and_CPP/M.1392479791.A.222.html">文章2</a></p>
<p>就想說順便來把這兩個拿來比較一下，於是就有了這一篇的誕生</p>
<p>這篇剛好也是我試到一個RcppEigen比較慢的例子</p>
<p>當做之前的RcppArmadillo vs RcppEigen的延伸</p>
<p>我這次也觀察到一個現象是RcppArmadillo在這個計算上會使用BLAS</p>
<p>所以它這裡會用我R的Multi-threaded MKL BLAS去算</p>
<p>而RcppEigen機制不太確定，但是有趣的事情是Eigen還可以透過include omp配上<code>Eigen::initParallel</code>來加速</p>
<p>但是這裡RcppArmadillo毫無疑問的直接打趴RcppEigen(攤手</p>
<p>下一篇會再把RcppParallel拉進來一起玩</p>
<a id="more"></a>

<p>R code:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(kernlab)</span><br><span class="line">Rcpp::sourceCpp(<span class="string">&quot;kernel_matrix_arma.cpp&quot;</span>)</span><br><span class="line">Rcpp::sourceCpp(<span class="string">&quot;kernel_matrix_eigen1.cpp&quot;</span>)</span><br><span class="line">Rcpp::sourceCpp(<span class="string">&quot;kernel_matrix_eigen2.cpp&quot;</span>)</span><br><span class="line"> </span><br><span class="line">N &lt;- <span class="number">5000L</span></span><br><span class="line">p &lt;- <span class="number">1000L</span></span><br><span class="line">b &lt;- <span class="number">500L</span></span><br><span class="line">X &lt;- matrix(rnorm(N*p), ncol = p)</span><br><span class="line">center &lt;- X[sample(N, b),]</span><br><span class="line">sigma &lt;- <span class="number">2.5</span></span><br><span class="line"></span><br><span class="line">kernelMatrix_R &lt;- <span class="keyword">function</span>(X, center, sigma)&#123;</span><br><span class="line">  exp(sweep(sweep(X %*% t(center), <span class="number">1</span>,</span><br><span class="line">                  rowSums(X**<span class="number">2</span>)/<span class="number">2</span>), <span class="number">2</span>, rowSums(center**<span class="number">2</span>)/<span class="number">2</span>) / (sigma**<span class="number">2</span>))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">res_kernlab &lt;- kernelMatrix(rbfdot(sigma=<span class="number">1</span>/(<span class="number">2</span>*sigma^<span class="number">2</span>)), X, center)@.Data</span><br><span class="line"></span><br><span class="line"><span class="comment"># check results with kernlab::kernelMatrix</span></span><br><span class="line">all.equal(kernelMatrix_R(X, center, sigma), res_kernlab)             <span class="comment"># TRUE</span></span><br><span class="line">all.equal(kernelMatrix_arma_cpp(X, center, sigma), res_kernlab)      <span class="comment"># TRUE</span></span><br><span class="line">all.equal(kernelMatrix_eigen_cpp(X, center, sigma), res_kernlab)     <span class="comment"># TRUE</span></span><br><span class="line">all.equal(kernelMatrix_eigen_omp_cpp(X, center, sigma), res_kernlab) <span class="comment"># TRUE</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(microbenchmark)</span><br><span class="line">microbenchmark(</span><br><span class="line">  Rfun = kernelMatrix_R(X, center, sigma),</span><br><span class="line">  kernlab = kernelMatrix(rbfdot(sigma=<span class="number">1</span>/(<span class="number">2</span>*sigma^<span class="number">2</span>)), X, center),</span><br><span class="line">  RcppArmadillo = kernelMatrix_arma_cpp(X, center, sigma),</span><br><span class="line">  RcppEigen = kernelMatrix_eigen_cpp(X, center, sigma),</span><br><span class="line">  RcppEigen_Openmp = kernelMatrix_eigen_omp_cpp(X, center, sigma),</span><br><span class="line">  times = <span class="number">30L</span></span><br><span class="line">)</span><br><span class="line"><span class="comment"># Unit: milliseconds</span></span><br><span class="line"><span class="comment">#              expr      min       lq     mean   median       uq      max neval</span></span><br><span class="line"><span class="comment">#              Rfun 224.3423 245.0635 258.5608 256.1671 267.4266 324.6571    30</span></span><br><span class="line"><span class="comment">#           kernlab 229.4637 239.9462 265.5297 265.6573 282.5231 348.2940    30</span></span><br><span class="line"><span class="comment">#     RcppArmadillo 165.3531 174.5219 188.2199 184.6343 200.6425 226.9207    30</span></span><br><span class="line"><span class="comment">#         RcppEigen 416.0304 417.4070 424.4944 418.7338 426.4974 464.8256    30</span></span><br><span class="line"><span class="comment">#  RcppEigen_Openmp 202.4775 208.1299 248.6041 229.6451 290.2074 333.7440    30</span></span><br></pre></td></tr></table></figure>

<p>kernel_matrix_arma.cpp:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// [[Rcpp::depends(RcppArmadillo)]]</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;RcppArmadillo.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> arma::mat;</span><br><span class="line"><span class="keyword">using</span> arma::vec;</span><br><span class="line"><span class="keyword">using</span> arma::rowvec;</span><br><span class="line"></span><br><span class="line"><span class="comment">// [[Rcpp::export]]</span></span><br><span class="line"><span class="function">mat <span class="title">kernelMatrix_arma_cpp</span><span class="params">(mat x, mat center, <span class="keyword">double</span> sigma)</span> </span>&#123;</span><br><span class="line">  <span class="function">mat <span class="title">kernelMat</span><span class="params">(x * center.t())</span></span>;</span><br><span class="line">  vec x_square_sum = sum(square(x), <span class="number">1</span>) / <span class="number">2.0</span>;</span><br><span class="line">  rowvec center_square_sum = (sum(square(center), <span class="number">1</span>)).t() / <span class="number">2.0</span>;</span><br><span class="line">  kernelMat.each_row() -= center_square_sum;</span><br><span class="line">  kernelMat.each_col() -= x_square_sum;</span><br><span class="line">  kernelMat /= <span class="built_in">pow</span>(sigma, <span class="number">2.0</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">exp</span>(kernelMat);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>kernel_matrix_eigen1.cpp:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// [[Rcpp::depends(RcppEigen)]]</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;RcppEigen.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> Eigen::MatrixXd;</span><br><span class="line"><span class="keyword">using</span> Eigen::VectorXd;</span><br><span class="line"><span class="keyword">using</span> Eigen::VectorXi;</span><br><span class="line"></span><br><span class="line"><span class="comment">// [[Rcpp::export]]</span></span><br><span class="line"><span class="function">MatrixXd <span class="title">kernelMatrix_eigen_cpp</span><span class="params">(MatrixXd x, MatrixXd center, <span class="keyword">double</span> sigma)</span> </span>&#123;</span><br><span class="line">  MatrixXd kernelMat = x * center.transpose();</span><br><span class="line">  VectorXd x_square_sum = x.<span class="built_in">array</span>().<span class="built_in">pow</span>(<span class="number">2.0</span>).rowwise().sum() / <span class="number">2.0</span>;</span><br><span class="line">  VectorXd center_square_sum = center.<span class="built_in">array</span>().<span class="built_in">pow</span>(<span class="number">2.0</span>).rowwise().sum()  / <span class="number">2.0</span>;</span><br><span class="line">  kernelMat.rowwise() -= center_square_sum.transpose();</span><br><span class="line">  kernelMat.colwise() -= x_square_sum;</span><br><span class="line">  kernelMat /=  <span class="built_in">pow</span>(sigma, <span class="number">2.0</span>);</span><br><span class="line">  <span class="keyword">return</span> kernelMat.<span class="built_in">array</span>().<span class="built_in">exp</span>().matrix();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>kernel_matrix_eigen2.cpp:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// [[Rcpp::depends(RcppEigen)]]</span></span><br><span class="line"><span class="comment">// [[Rcpp::plugins(openmp, cpp11)]]</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;RcppEigen.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;omp.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> Eigen::MatrixXd;</span><br><span class="line"><span class="keyword">using</span> Eigen::VectorXd;</span><br><span class="line"><span class="keyword">using</span> Eigen::VectorXi;</span><br><span class="line"></span><br><span class="line"><span class="comment">// [[Rcpp::export]]</span></span><br><span class="line"><span class="function">MatrixXd <span class="title">kernelMatrix_eigen_omp_cpp</span><span class="params">(MatrixXd x, MatrixXd center, <span class="keyword">double</span> sigma)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n = omp_get_max_threads();</span><br><span class="line">  omp_set_num_threads(n);</span><br><span class="line">  Eigen::setNbThreads(n);</span><br><span class="line">  Eigen::initParallel();</span><br><span class="line">  MatrixXd kernelMat = x * center.transpose();</span><br><span class="line">  VectorXd x_square_sum = x.<span class="built_in">array</span>().<span class="built_in">pow</span>(<span class="number">2.0</span>).rowwise().sum() / <span class="number">2.0</span>;</span><br><span class="line">  VectorXd center_square_sum = center.<span class="built_in">array</span>().<span class="built_in">pow</span>(<span class="number">2.0</span>).rowwise().sum()  / <span class="number">2.0</span>;</span><br><span class="line">  kernelMat.rowwise() -= center_square_sum.transpose();</span><br><span class="line">  kernelMat.colwise() -= x_square_sum;</span><br><span class="line">  kernelMat /=  <span class="built_in">pow</span>(sigma, <span class="number">2.0</span>);</span><br><span class="line">  <span class="keyword">return</span> kernelMat.<span class="built_in">array</span>().<span class="built_in">exp</span>().matrix();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>Rcpp</tag>
        <tag>RcppArmadillo</tag>
        <tag>RcppParallel</tag>
        <tag>RcppEigen</tag>
        <tag>Kernel Matrix</tag>
      </tags>
  </entry>
  <entry>
    <title>Rcpp Link Blaze (part 2)</title>
    <url>/posts/201701/2017-01-02-Rcpp-link-blaze-part-2.html</url>
    <content><![CDATA[<p>如果include <code>blaze/Blaze.h</code>會發現出了好幾個錯誤，這裡提供一些解法：</p>
<a id="more"></a>

<ol>
<li>改<code>blaze/util/Time.h</code></li>
</ol>
<p>原本的43行~55行改成下面這樣：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">if</span> defined(_MSC_VER)</span></span><br><span class="line"><span class="meta">#  <span class="meta-keyword">ifndef</span> NOMINMAX</span></span><br><span class="line"><span class="meta">#    <span class="meta-keyword">define</span> NOMINMAX</span></span><br><span class="line"><span class="meta">#  <span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="meta">#  <span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#  <span class="meta-keyword">include</span> <span class="meta-string">&lt;winsock.h&gt;</span></span></span><br><span class="line"><span class="meta">#  <span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#  <span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/timeb.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> defined(__MINGW32__)</span></span><br><span class="line"><span class="meta">#  <span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#  <span class="meta-keyword">include</span> <span class="meta-string">&lt;winsock.h&gt;</span></span></span><br><span class="line"><span class="meta">#  <span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#  <span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/timeb.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta">#  <span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/resource.h&gt;</span></span></span><br><span class="line"><span class="meta">#  <span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/time.h&gt;</span></span></span><br><span class="line"><span class="meta">#  <span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>在pre-processor中efine 三個變數</li>
</ol>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STRICT_R_HEADERS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BOOST_ERROR_CODE_HEADER_ONLY</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RCPP_HAS_LONG_LONG_TYPES</span></span><br></pre></td></tr></table></figure>

<p>第一個只是避免掉C++11的編譯錯誤，第二個則是避免去linking boost::system</p>
<p><code>RCPP_HAS_LONG_LONG_TYPES</code>是為了讓Blaze可以輸出<code>unsigned long long int</code>的維度</p>
<ol start="3">
<li>不要使用<code>boost::thread</code></li>
</ol>
<p>可以在pre-processor中加入下面幾行，提醒自己：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">if</span> defined(BLAZE_USE_BOOST_THREADS)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">error</span> <span class="meta-string">&quot;Boost threads could not be used!&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>

<p>設定完之後，我們測試看看：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">Sys.setenv(<span class="string">&quot;PKG_CXXFLAGS&quot;</span> = sprintf(<span class="string">&#x27;-I&quot;%s&quot;&#x27;</span>, normalizePath(<span class="string">&quot;.&quot;</span>, winslash = <span class="string">&quot;/&quot;</span>)))</span><br><span class="line">Rcpp::sourceCpp(code = <span class="string">&#x27;</span></span><br><span class="line"><span class="string">#define STRICT_R_HEADERS</span></span><br><span class="line"><span class="string">#define BOOST_ERROR_CODE_HEADER_ONLY</span></span><br><span class="line"><span class="string">// [[Rcpp::depends(BH)]]</span></span><br><span class="line"><span class="string">// [[Rcpp::plugins(cpp11)]]</span></span><br><span class="line"><span class="string">#include &lt;Rcpp.h&gt;</span></span><br><span class="line"><span class="string">#include &lt;blaze/Blaze.h&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">using blaze::unaligned; </span></span><br><span class="line"><span class="string">using blaze::unpadded;</span></span><br><span class="line"><span class="string">using blaze::columnMajor;</span></span><br><span class="line"><span class="string">using blaze::CustomMatrix;</span></span><br><span class="line"><span class="string">using blaze::CustomVector;</span></span><br><span class="line"><span class="string">using blaze::DynamicVector;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">//[[Rcpp::export]]</span></span><br><span class="line"><span class="string">Rcpp::NumericVector blaze_mv(Rcpp::NumericMatrix X, Rcpp::NumericVector Y) &#123;</span></span><br><span class="line"><span class="string">  // input cheching</span></span><br><span class="line"><span class="string">  if (X.ncol() != Y.size())</span></span><br><span class="line"><span class="string">    Rcpp::stop(&quot;The size of Y must be equal to the number of columns of X.&quot;);</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">  // map and perform matrix-vector multiplication</span></span><br><span class="line"><span class="string">  CustomMatrix&lt;double, unaligned, unpadded, columnMajor&gt; a(&amp;X[0], X.nrow(), X.ncol());</span></span><br><span class="line"><span class="string">  CustomVector&lt;double, unaligned, unpadded&gt; b(&amp;Y[0], Y.size());</span></span><br><span class="line"><span class="string">  DynamicVector&lt;double&gt; c = a * b;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  // output</span></span><br><span class="line"><span class="string">  Rcpp::NumericVector out(c.size());</span></span><br><span class="line"><span class="string">  for (auto i = 0; i &lt; c.size(); ++i) out[i] = c[i];</span></span><br><span class="line"><span class="string">  return out;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(microbenchmark)</span><br><span class="line">N &lt;- <span class="number">5000L</span></span><br><span class="line">X &lt;- matrix(rnorm(N**<span class="number">2</span>), N, N)</span><br><span class="line">y &lt;- rnorm(N)</span><br><span class="line">microbenchmark(</span><br><span class="line">  blaze_mv = blaze_mv(X, y),</span><br><span class="line">      R_mv = as.vector(X %*% y),</span><br><span class="line">     times = <span class="number">50L</span></span><br><span class="line">)</span><br><span class="line"><span class="comment"># Unit: milliseconds</span></span><br><span class="line"><span class="comment">#      expr      min       lq     mean   median       uq      max neval</span></span><br><span class="line"><span class="comment">#  blaze_mv 10.09042 10.32564 11.70235 10.93375 12.88094 15.67995    50</span></span><br><span class="line"><span class="comment">#      R_mv 32.24726 33.52491 35.97026 35.66461 37.98600 42.05827    50</span></span><br></pre></td></tr></table></figure>

<p>矩陣乘法快了三倍呢！</p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>Rcpp</tag>
        <tag>Blaze</tag>
      </tags>
  </entry>
  <entry>
    <title>Rcpp Link Blaze</title>
    <url>/posts/201701/2017-01-02-Rcpp-link-blaze.html</url>
    <content><![CDATA[<p>補充：我把程式放到GitHub，可以到這下載來玩：<a href="https://github.com/ChingChuan-Chen/rcpp_link_blaze">Link</a></p>
<p>Blaze claim it is fast. <a href="https://bitbucket.org/blaze-lib/blaze/wiki/Benchmarks">Link</a></p>
<p>所以我就來試試看Rcpp去link玩玩看</p>
<a id="more"></a>

<p>看看有沒有大神會把它弄成一個套件，叫做RcppBlaze之類</p>
<p>我試了一下blaze-3.0，怎樣都無法編譯Orz (後來有找到要用<code>-std=c++1y</code>才能編譯成功)</p>
<p>我就改用上一版的blaze-2.6，不過還是有些地方需要更動</p>
<p>要變動的地方有兩個，一個是<code>blaze/util/Memory.h</code>，另一個是<code>blaze/math/adaptors/hermitianmatrix/HermitianValue.h</code></p>
<p>Memory.h:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 在57行增加下面幾行</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __MINGW32__ </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _aligned_malloc __mingw_aligned_malloc </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _aligned_free  __mingw_aligned_free </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 84行跟112行原本是#if defined(_MSC_VER)改成：</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> defined(_MSC_VER) || defined(__MINGW32__)</span></span><br></pre></td></tr></table></figure>

<p>HermitianValue.h: (blaze-3.0不用改)</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 279, 299, 323, 347, 371, 395, 513行原本是 pos_-&gt;index() == index改成：</span></span><br><span class="line">pos_-&gt;index() == index_</span><br></pre></td></tr></table></figure>

<p>然後就可以快樂的開始玩blaze了</p>
<p>(Note: 其實還有一些要改才能完整使用Blaze，請參考<a href="http://chingchuan-chen.github.io/posts/2017/01/02/Rcpp-link-blaze-part-2">下一篇文章</a>)</p>
<p>R code:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">useBlaze26 &lt;- <span class="literal">FALSE</span></span><br><span class="line"><span class="keyword">if</span> (useBlaze26 &amp;&amp; dir.exists(<span class="string">&quot;blaze26&quot;</span>)) &#123;</span><br><span class="line">  file.rename(<span class="string">&quot;blaze&quot;</span>, <span class="string">&quot;blaze3&quot;</span>)</span><br><span class="line">  file.rename(<span class="string">&quot;blaze26&quot;</span>, <span class="string">&quot;blaze&quot;</span>)</span><br><span class="line">  Sys.setenv(<span class="string">&quot;PKG_CXXFLAGS&quot;</span> = <span class="string">&#x27;-I.&#x27;</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (!useBlaze26 &amp;&amp; dir.exists(<span class="string">&quot;blaze3&quot;</span>)) &#123;</span><br><span class="line">  file.rename(<span class="string">&quot;blaze&quot;</span>, <span class="string">&quot;blaze26&quot;</span>)</span><br><span class="line">  file.rename(<span class="string">&quot;blaze3&quot;</span>, <span class="string">&quot;blaze&quot;</span>)</span><br><span class="line">  Sys.setenv(<span class="string">&quot;PKG_CXXFLAGS&quot;</span> = <span class="string">&quot;-I. -DUSE_BLAZE3&quot;</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="keyword">stop</span>(<span class="string">&quot;Please use correct tag!&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">Rcpp::sourceCpp(<span class="string">&quot;test_blaze.cpp&quot;</span>, rebuild = <span class="literal">TRUE</span>)</span><br><span class="line"></span><br><span class="line">test_blaze1(<span class="number">1</span>:<span class="number">5</span>)</span><br><span class="line">test_blaze1(rnorm(<span class="number">5</span>))</span><br><span class="line"></span><br><span class="line">test_blaze2(matrix(<span class="number">1</span>:<span class="number">9</span>, <span class="number">3</span>, <span class="number">3</span>))</span><br><span class="line">test_blaze2(matrix(rnorm(<span class="number">9</span>), <span class="number">3</span>, <span class="number">3</span>))</span><br><span class="line"></span><br><span class="line">X &lt;- matrix(rnorm(<span class="number">9</span>), <span class="number">3</span>, <span class="number">3</span>)</span><br><span class="line">y &lt;- rnorm(<span class="number">3</span>)</span><br><span class="line">all.equal(test_blaze3(X, y), as.vector(X %*% y)) <span class="comment"># TRUE</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(microbenchmark)</span><br><span class="line">M &lt;- <span class="number">6e3L</span></span><br><span class="line">N &lt;- <span class="number">3e4L</span></span><br><span class="line">X &lt;- matrix(rnorm(M * N), M, N)</span><br><span class="line">y &lt;- rnorm(N)</span><br><span class="line">microbenchmark(</span><br><span class="line">  blaze = test_blaze3(X, y),</span><br><span class="line">  R = as.vector(X %*% y),</span><br><span class="line">  times = <span class="number">50L</span></span><br><span class="line">)</span><br><span class="line"><span class="comment"># Unit: microseconds</span></span><br><span class="line"><span class="comment">#   expr     min      lq     mean  median      uq      max neval</span></span><br><span class="line"><span class="comment">#  blaze 168.228 169.983 195.6315 173.640 202.750  312.172    30</span></span><br><span class="line"><span class="comment">#      R 554.126 559.099 632.9047 562.757 660.328 1506.730    30</span></span><br></pre></td></tr></table></figure>

<p>test_blaze.cpp:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// [[Rcpp::depends(BH)]]</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> USE_BLAZE3</span></span><br><span class="line"><span class="comment">// [[Rcpp::plugins(cpp14)]]</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="comment">// [[Rcpp::plugins(cpp11)]]</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Rcpp.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;blaze/Math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//[[Rcpp::export]]</span></span><br><span class="line"><span class="function">Rcpp::NumericVector <span class="title">test_blaze1</span><span class="params">(Rcpp::NumericVector X)</span></span>&#123;</span><br><span class="line">  blaze::CustomVector&lt;double, blaze::unaligned, blaze::unpadded&gt; v( &amp;X[0], X.size() );</span><br><span class="line">  Rcpp::Rcout &lt;&lt; v[<span class="number">0</span>] &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">  Rcpp::Rcout &lt;&lt; v[<span class="number">1</span>] &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">  Rcpp::Rcout &lt;&lt; v[<span class="number">2</span>] &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">  Rcpp::Rcout &lt;&lt; v[<span class="number">3</span>] &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">  Rcpp::Rcout &lt;&lt; v[<span class="number">4</span>] &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">  <span class="keyword">return</span> X;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//[[Rcpp::export]]</span></span><br><span class="line"><span class="function">Rcpp::NumericMatrix <span class="title">test_blaze2</span><span class="params">(Rcpp::NumericMatrix X)</span></span>&#123;</span><br><span class="line">  blaze::CustomMatrix&lt;double, blaze::unaligned, blaze::unpadded, blaze::columnMajor&gt; v( &amp;X[0], X.nrow(), X.ncol() );</span><br><span class="line">  Rcpp::Rcout &lt;&lt; v(<span class="number">0</span>, <span class="number">0</span>) &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">  Rcpp::Rcout &lt;&lt; v(<span class="number">0</span>, <span class="number">1</span>) &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">  Rcpp::Rcout &lt;&lt; v(<span class="number">0</span>, <span class="number">2</span>) &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">  Rcpp::Rcout &lt;&lt; v(<span class="number">1</span>, <span class="number">0</span>) &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">  Rcpp::Rcout &lt;&lt; v(<span class="number">1</span>, <span class="number">1</span>) &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">  Rcpp::Rcout &lt;&lt; v(<span class="number">1</span>, <span class="number">2</span>) &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">  <span class="keyword">return</span> X;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//[[Rcpp::export]]</span></span><br><span class="line"><span class="function">Rcpp::NumericVector <span class="title">test_blaze3</span><span class="params">(Rcpp::NumericMatrix X, Rcpp::NumericVector y)</span></span>&#123;</span><br><span class="line">  blaze::CustomMatrix&lt;double, blaze::unaligned, blaze::unpadded, blaze::columnMajor&gt; a( &amp;X[0], X.nrow(), X.ncol() );</span><br><span class="line">  blaze::CustomVector&lt;double, blaze::unaligned, blaze::unpadded&gt; b( &amp;y[0], y.size() );</span><br><span class="line">  </span><br><span class="line">  blaze::DynamicVector&lt;<span class="keyword">double</span>&gt; c = a * b;</span><br><span class="line">  <span class="function">Rcpp::NumericVector <span class="title">out</span><span class="params">(c.<span class="built_in">size</span>())</span></span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">auto</span> i = <span class="number">0</span>; i &lt; c.<span class="built_in">size</span>(); ++i) </span><br><span class="line">    out[i] = c[i];</span><br><span class="line">  <span class="keyword">return</span> out;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>後記：</p>
<p>blaze-3.0的話，其實只要改好<code>blaze/util/Memory.h</code></p>
<p>然後在cpp file中使用<code>// [[Rcpp::plugins(cpp14)]]</code>即可 </p>
<p>Note: 其實還有<code>cpp1y</code> for C++14 and C++17 standard under development</p>
<p>Rcpp的plugins可以看<a href="https://github.com/RcppCore/Rcpp/issues/524">GitHub Rcpp Issue Link</a></p>
<p>我這裡測試是blaze-3.0跟blaze-2.6效能滿接近的</p>
<p>個人是覺得因為R的Policy問題，所以還是用2.6就好</p>
<p>用太新的C++ std通常都會吃土</p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>Rcpp</tag>
        <tag>Blaze</tag>
      </tags>
  </entry>
  <entry>
    <title>Update RcppEigen to 3.3.1</title>
    <url>/posts/201701/2017-01-02-update-RcppEigen-to-3-3-1.html</url>
    <content><![CDATA[<p>我花了一點時間把RcppEigen升級到3.3.1，然後我發現一件滿有趣的事情(細節請看 <a href="https://eigen.tuxfamily.org/dox-devel/TopicUsingBlasLapack.html">Using BLAS/LAPACK from Eigen</a>)</p>
<p>因為是我手動升級的，檔案放在我的github: <a href="https://github.com/ChingChuan-Chen/RcppEigen">連結請點我</a></p>
<p>就是<code>#define EIGEN_USE_BLAS</code>可以用了，設定之後，RcppEigen會使用R的BLAS去做計算</p>
<p>如此一來，之前講到的RcppEigen的慢就可以被改善了</p>
<a id="more"></a>

<p>拿前一篇kernel matrix computation來測試看看</p>
<p>新增兩個cpp檔案，其他之前幾篇就有，不再附上</p>
<p>R code:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(kernlab)</span><br><span class="line">Rcpp::sourceCpp(<span class="string">&quot;kernel_matrix_arma.cpp&quot;</span>)</span><br><span class="line">Rcpp::sourceCpp(<span class="string">&quot;kernel_matrix_eigen1.cpp&quot;</span>)</span><br><span class="line">Rcpp::sourceCpp(<span class="string">&quot;kernel_matrix_eigen2.cpp&quot;</span>)</span><br><span class="line">Rcpp::sourceCpp(<span class="string">&quot;kernel_matrix_arma_para.cpp&quot;</span>)</span><br><span class="line">Rcpp::sourceCpp(<span class="string">&quot;kernel_matrix_eigen_para1.cpp&quot;</span>)</span><br><span class="line">Rcpp::sourceCpp(<span class="string">&quot;kernel_matrix_eigen_para2.cpp&quot;</span>)</span><br><span class="line"></span><br><span class="line">Sys.setenv(<span class="string">&quot;PKG_LIBS&quot;</span> = <span class="string">&quot;$(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS)&quot;</span>)</span><br><span class="line">Rcpp::sourceCpp(<span class="string">&quot;kernel_matrix_eigen3.cpp&quot;</span>)</span><br><span class="line">Rcpp::sourceCpp(<span class="string">&quot;kernel_matrix_eigen_para3.cpp&quot;</span>)</span><br><span class="line"> </span><br><span class="line">N &lt;- <span class="number">5000L</span></span><br><span class="line">p &lt;- <span class="number">1000L</span></span><br><span class="line">b &lt;- <span class="number">500L</span></span><br><span class="line">X &lt;- matrix(rnorm(N*p), ncol = p)</span><br><span class="line">center &lt;- X[sample(N, b),]</span><br><span class="line">sigma &lt;- <span class="number">2.5</span></span><br><span class="line"></span><br><span class="line">kernelMatrix_R &lt;- <span class="keyword">function</span>(X, center, sigma)&#123;</span><br><span class="line">  exp(sweep(sweep(X %*% t(center), <span class="number">1</span>,</span><br><span class="line">                  rowSums(X**<span class="number">2</span>)/<span class="number">2</span>), <span class="number">2</span>, rowSums(center**<span class="number">2</span>)/<span class="number">2</span>) / (sigma**<span class="number">2</span>))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">res_kernlab &lt;- kernelMatrix(rbfdot(sigma=<span class="number">1</span>/(<span class="number">2</span>*sigma^<span class="number">2</span>)), X, center)@.Data</span><br><span class="line"></span><br><span class="line"><span class="comment"># check results with kernlab::kernelMatrix</span></span><br><span class="line">all.equal(kernelMatrix_R(X, center, sigma), res_kernlab)             <span class="comment"># TRUE</span></span><br><span class="line">all.equal(kernelMatrix_arma_cpp(X, center, sigma), res_kernlab)      <span class="comment"># TRUE</span></span><br><span class="line">all.equal(kernelMatrix_eigen_cpp(X, center, sigma), res_kernlab)     <span class="comment"># TRUE</span></span><br><span class="line">all.equal(kernelMatrix_eigen_omp_cpp(X, center, sigma), res_kernlab) <span class="comment"># TRUE</span></span><br><span class="line">all.equal(kernelMatrix_eigen_cpp2(X, center, sigma), res_kernlab)    <span class="comment"># TRUE</span></span><br><span class="line">all.equal(kernelMatrix_arma_para_cpp(X, center, sigma), res_kernlab) <span class="comment"># TRUE</span></span><br><span class="line">all.equal(kernelMatrix_eigen_para_cpp(X, center, sigma), res_kernlab) <span class="comment"># TRUE</span></span><br><span class="line">all.equal(kernelMatrix_eigen_para_omp_cpp(X, center, sigma), res_kernlab) <span class="comment"># TRUE</span></span><br><span class="line">all.equal(kernelMatrix_eigen_para_cpp2(X, center, sigma), res_kernlab) <span class="comment"># TRUE</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(microbenchmark)</span><br><span class="line">microbenchmark(</span><br><span class="line">  Rfun = kernelMatrix_R(X, center, sigma),</span><br><span class="line">  kernlab = kernelMatrix(rbfdot(sigma=<span class="number">1</span>/(<span class="number">2</span>*sigma^<span class="number">2</span>)), X, center),</span><br><span class="line">  RcppArmadillo = kernelMatrix_arma_cpp(X, center, sigma),</span><br><span class="line">  RcppEigen = kernelMatrix_eigen_cpp(X, center, sigma),</span><br><span class="line">  RcppEigen_Openmp = kernelMatrix_eigen_omp_cpp(X, center, sigma),</span><br><span class="line">  RcppEigen2 = kernelMatrix_eigen_cpp2(X, center, sigma),</span><br><span class="line">  RcppArmadillo_RcppParallel = kernelMatrix_arma_cpp(X, center, sigma),</span><br><span class="line">  RcppEigen_RcppParallel = kernelMatrix_eigen_para_cpp(X, center, sigma),</span><br><span class="line">  RcppEigen_RcppParallel_Openmp = kernelMatrix_eigen_para_omp_cpp(X, center, sigma),</span><br><span class="line">  RcppEigen_RcppParallel2 = kernelMatrix_eigen_para_cpp2(X, center, sigma),</span><br><span class="line">  times = <span class="number">30L</span></span><br><span class="line">)</span><br><span class="line"><span class="comment"># Unit: milliseconds</span></span><br><span class="line"><span class="comment">#                           expr      min       lq     mean   median       uq      max neval</span></span><br><span class="line"><span class="comment">#                           Rfun 215.8470 241.8069 272.6916 264.2367 302.9716 335.1085    30</span></span><br><span class="line"><span class="comment">#                        kernlab 224.6712 245.8116 278.1123 264.4116 314.4725 351.3037    30</span></span><br><span class="line"><span class="comment">#                  RcppArmadillo 162.1123 167.2791 185.8838 172.7111 199.5971 257.8169    30</span></span><br><span class="line"><span class="comment">#                      RcppEigen 414.0345 416.6387 424.3981 418.9367 426.3183 489.0802    30</span></span><br><span class="line"><span class="comment">#               RcppEigen_Openmp 193.6153 195.3303 218.5779 200.1698 236.1647 313.2402    30</span></span><br><span class="line"><span class="comment">#                     RcppEigen2 136.9555 140.3265 148.6040 144.2964 150.6931 203.9994    30</span></span><br><span class="line"><span class="comment">#     RcppArmadillo_RcppParallel 164.3119 171.0287 187.1966 182.7915 197.8019 251.6530    30</span></span><br><span class="line"><span class="comment">#         RcppEigen_RcppParallel 408.2332 410.5831 415.1298 412.5009 415.5977 447.3581    30</span></span><br><span class="line"><span class="comment">#  RcppEigen_RcppParallel_Openmp 188.2270 191.7382 241.4736 237.4829 271.3958 337.3198    30</span></span><br><span class="line"><span class="comment">#        RcppEigen_RcppParallel2 129.1949 135.4055 151.7909 148.0432 160.7522 193.2683    30</span></span><br></pre></td></tr></table></figure>

<p>kernel_matrix_eigen3.cpp:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EIGEN_USE_BLAS</span></span><br><span class="line"><span class="comment">// [[Rcpp::depends(RcppEigen)]]</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;RcppEigen.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> Eigen::MatrixXd;</span><br><span class="line"><span class="keyword">using</span> Eigen::VectorXd;</span><br><span class="line"><span class="keyword">using</span> Eigen::VectorXi;</span><br><span class="line"></span><br><span class="line"><span class="comment">// [[Rcpp::export]]</span></span><br><span class="line"><span class="function">MatrixXd <span class="title">kernelMatrix_eigen_cpp2</span><span class="params">(MatrixXd x, MatrixXd center, <span class="keyword">double</span> sigma)</span> </span>&#123;</span><br><span class="line">  MatrixXd kernelMat = x * center.transpose();</span><br><span class="line">  VectorXd x_square_sum = x.<span class="built_in">array</span>().<span class="built_in">pow</span>(<span class="number">2.0</span>).rowwise().sum() / <span class="number">2.0</span>;</span><br><span class="line">  VectorXd center_square_sum = center.<span class="built_in">array</span>().<span class="built_in">pow</span>(<span class="number">2.0</span>).rowwise().sum()  / <span class="number">2.0</span>;</span><br><span class="line">  kernelMat.rowwise() -= center_square_sum.transpose();</span><br><span class="line">  kernelMat.colwise() -= x_square_sum;</span><br><span class="line">  kernelMat /=  <span class="built_in">pow</span>(sigma, <span class="number">2.0</span>);</span><br><span class="line">  <span class="keyword">return</span> kernelMat.<span class="built_in">array</span>().<span class="built_in">exp</span>().matrix();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>kernel_matrix_eigen_para3.cpp:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EIGEN_USE_BLAS</span></span><br><span class="line"><span class="comment">// [[Rcpp::depends(RcppEigen, RcppParallel)]]</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;RcppEigen.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;RcppParallel.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> Eigen::MatrixXd;</span><br><span class="line"><span class="keyword">using</span> Eigen::VectorXd;</span><br><span class="line"><span class="keyword">using</span> Eigen::VectorXi;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">KernelComputeWorker</span>:</span> <span class="keyword">public</span> RcppParallel::Worker &#123;</span><br><span class="line">  <span class="keyword">const</span> VectorXd&amp; x_square_sum;</span><br><span class="line">  <span class="keyword">const</span> VectorXd&amp; center_square_sum;</span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">double</span>&amp; sigma2;</span><br><span class="line">  MatrixXd&amp; kernelMat;</span><br><span class="line">  </span><br><span class="line">  KernelComputeWorker(<span class="keyword">const</span> VectorXd&amp; x_square_sum, <span class="keyword">const</span> VectorXd&amp; center_square_sum, </span><br><span class="line">                      <span class="keyword">const</span> <span class="keyword">double</span>&amp; sigma2, MatrixXd&amp; kernelMat):</span><br><span class="line">    x_square_sum(x_square_sum), center_square_sum(center_square_sum), </span><br><span class="line">    sigma2(sigma2), kernelMat(kernelMat) &#123;&#125;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="built_in">std</span>::<span class="keyword">size_t</span> <span class="built_in">begin</span>, <span class="built_in">std</span>::<span class="keyword">size_t</span> <span class="built_in">end</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = (<span class="keyword">int</span>) <span class="built_in">begin</span>; k &lt; (<span class="keyword">int</span>) <span class="built_in">end</span>; ++k) &#123;</span><br><span class="line">      <span class="keyword">int</span> j = k / kernelMat.rows();</span><br><span class="line">      <span class="keyword">int</span> i = k - j * kernelMat.rows();</span><br><span class="line">      kernelMat(i, j) -= (x_square_sum(i) + center_square_sum(j));</span><br><span class="line">      kernelMat(i, j) = <span class="built_in">exp</span>(kernelMat(i, j) / sigma2);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// [[Rcpp::export]]</span></span><br><span class="line"><span class="function">MatrixXd <span class="title">kernelMatrix_eigen_para_cpp2</span><span class="params">(MatrixXd x, MatrixXd center, <span class="keyword">double</span> sigma)</span> </span>&#123;</span><br><span class="line">  MatrixXd kernelMat = x * center.transpose();</span><br><span class="line">  VectorXd x_square_sum = x.<span class="built_in">array</span>().<span class="built_in">pow</span>(<span class="number">2.0</span>).rowwise().sum() / <span class="number">2.0</span>;</span><br><span class="line">  VectorXd center_square_sum = center.<span class="built_in">array</span>().<span class="built_in">pow</span>(<span class="number">2.0</span>).rowwise().sum()  / <span class="number">2.0</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">double</span> sigma2 = <span class="built_in">pow</span>(sigma, <span class="number">2.0</span>);</span><br><span class="line">  <span class="function">KernelComputeWorker <span class="title">worker_kc</span><span class="params">(x_square_sum, center_square_sum, sigma2, kernelMat)</span></span>;</span><br><span class="line">  RcppParallel::parallelFor(<span class="number">0</span>, kernelMat.<span class="built_in">size</span>(), worker_kc);</span><br><span class="line">  <span class="keyword">return</span> kernelMat;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以看到用了multi-threaded BLAS之後的Eigen更加強大</p>
<p>直接從原本的平均424.3981 ms表現衝到平均只要148.6040 ms</p>
<p>果然用對了武器就是不一樣啊(茶</p>
<p>至於<code>#define EIGEN_USE_LAPACKE</code>是無效的，畢竟R用的是<code>Lapack.h</code>不是<code>lapacke.h</code>(攤手</p>
<p>(LAPACK與LAPACKE的差異請看<a href="http://stackoverflow.com/questions/26875415/difference-between-lapacke-and-lapack">stackoverflow</a>的解釋)</p>
<p>也許需要有人去更改Eigen的include file，讓Eigen能用RLAPACK的函數去處理~~</p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>Rcpp</tag>
        <tag>BLAS</tag>
        <tag>RcppEigen</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Ambari server與HDP repo快速部署Hadoop Cluster</title>
    <url>/posts/201702/2017-02-15-use-ambari-and-hdp-deploy-hadoop-cluster.html</url>
    <content><![CDATA[<p>本篇會從頭開始介紹怎麼使用Ambari server跟HDP repository來快速部署Hadoop Cluster</p>
<a id="more"></a>

<ol start="0">
<li>安裝CentOS以及基本部署</li>
</ol>
<p>我使用VMware建立三台CentOS 7的電腦</p>
<p>三台的hostname分別為<code>ambaritest01</code>, <code>ambaritest02</code> and <code>ambaritest03</code></p>
<p>此處建議都用<code>root</code>帳號安裝，不然ambari有一個地方要額外設定</p>
<p>a. 網路</p>
<p>ambaritest01的網路設定(/etc/sysconfig/ifcfg-XXXXXX, XXXXXX是網路卡的名稱)：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">TYPE&#x3D;Ethernet</span><br><span class="line">BOOTPROTO&#x3D;none</span><br><span class="line">DEFROUTE&#x3D;yes</span><br><span class="line">IPV4_FAILURE_FATAL&#x3D;no</span><br><span class="line">IPV6INIT&#x3D;no</span><br><span class="line">IPV6_AUTOCONF&#x3D;yes</span><br><span class="line">IPV6_DEFROUTE&#x3D;yes</span><br><span class="line">IPV6_PEERDNS&#x3D;yes</span><br><span class="line">IPV6_PEERROUTES&#x3D;yes</span><br><span class="line">IPV6_FAILURE_FATAL&#x3D;no</span><br><span class="line">IPV6_ADDR_GEN_MODE&#x3D;stable-privacy</span><br><span class="line">NAME&#x3D;ens33</span><br><span class="line">UUID&#x3D;faa2688c-6d77-4e38-8c71-d65c67823dd5</span><br><span class="line">DEVICE&#x3D;ens33</span><br><span class="line">ONBOOT&#x3D;yes</span><br><span class="line">DNS1&#x3D;192.168.0.1</span><br><span class="line">DNS2&#x3D;8.8.8.8</span><br><span class="line">IPADDR&#x3D;192.168.0.121</span><br><span class="line">PREFIX&#x3D;24</span><br><span class="line">GATEWAY&#x3D;192.168.0.1</span><br></pre></td></tr></table></figure>

<p><code>ambaritest02</code>跟<code>ambaritest03</code>的網路設定只需要改IPADDR即可</p>
<p>b. 對時</p>
<p>下面直接使用網路對時，如果是local LAN請在一台建立可以對時的server (建立方法請google)</p>
<p>然後修改<code>/etc/ntp.conf</code>讓全部機器都去自動與那台對時</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y ntp ntpdate ntp-doc</span><br><span class="line">ntpdate pool.ntp.org</span><br><span class="line">systemctl start ntpd</span><br><span class="line">systemctl <span class="built_in">enable</span> ntpd</span><br></pre></td></tr></table></figure>

<p>對時很重要，有時候Hadoop的問題就來自時間的不一致</p>
<p>c. 關閉SELinux</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;s/^SELINUX=.*/SELINUX=disabled/&#x27;</span> /etc/sysconfig/selinux</span><br><span class="line">sed -i <span class="string">&#x27;s/^SELINUX=.*/SELINUX=disabled/&#x27;</span> /etc/selinux/config</span><br><span class="line">setenforce 0</span><br></pre></td></tr></table></figure>

<p>d. 關閉防火牆</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br></pre></td></tr></table></figure>

<p>e. enable SSH連線</p>
<p>每一台都要先跑下面命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -P <span class="string">&quot;&quot;</span></span><br><span class="line">cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</span><br><span class="line">chmod 700 ~/</span><br><span class="line">chmod 700 ~/.ssh</span><br><span class="line">chmod 644 ~/.ssh/authorized_keys</span><br><span class="line">chmod 600 ~/.ssh/id_rsa</span><br><span class="line">systemctl restart sshd </span><br><span class="line"></span><br><span class="line">tee -a /etc/hosts &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">192.168.0.121 ambaritest01</span><br><span class="line">192.168.0.122 ambaritest02</span><br><span class="line">192.168.0.123 ambaritest03</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<p>在你要安裝ambari server那台執行，假設安裝在ambaritest01：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-copy-id -i ~/.ssh/id_rsa.pub ambaritest01</span><br><span class="line">ssh-copy-id -i ~/.ssh/id_rsa.pub ambaritest02</span><br><span class="line">ssh-copy-id -i ~/.ssh/id_rsa.pub ambaritest03</span><br></pre></td></tr></table></figure>

<p>然後測試一下，確定都可以用<code>ssh</code>直接相連</p>
<p>f. 安裝Oracle Java</p>
<p>個人不愛用openjdk，會遇到一些奇怪的bug，所以我都安裝Oracle JAVA</p>
<p>這裡<code>JAVA_HOME</code>很重要，後面會用到</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -v -j -k -L -H &quot;Cookie: oraclelicense&#x3D;accept-securebackup-cookie&quot; http:&#x2F;&#x2F;download.oracle.com&#x2F;otn-pub&#x2F;java&#x2F;jdk&#x2F;8u112-b15&#x2F;jdk-8u112-linux-x64.rpm -o jdk-8u112-linux-x64.rpm</span><br><span class="line">yum install -y jdk-8u112-linux-x64.rpm</span><br><span class="line"></span><br><span class="line">scp jdk-8u112-linux-x64.rpm ambaritest02:~&#x2F;</span><br><span class="line">ssh ambaritest02 yum install -y jdk-8u112-linux-x64.rpm</span><br><span class="line">scp jdk-8u112-linux-x64.rpm ambaritest03:~&#x2F;</span><br><span class="line">ssh ambaritest03 yum install -y jdk-8u112-linux-x64.rpm</span><br><span class="line"></span><br><span class="line">tee -a &#x2F;etc&#x2F;bashrc &lt;&lt; &quot;EOF&quot;</span><br><span class="line">export JAVA_HOME&#x3D;&#x2F;usr&#x2F;java&#x2F;jdk1.8.0_112</span><br><span class="line">export PATH&#x3D;$PATH:$JAVA_HOME&#x2F;bin</span><br><span class="line">EOF</span><br><span class="line">scp &#x2F;etc&#x2F;bashrc ambaritest02:&#x2F;etc</span><br><span class="line">scp &#x2F;etc&#x2F;bashrc ambaritest03:&#x2F;etc</span><br><span class="line">source &#x2F;etc&#x2F;bashrc</span><br></pre></td></tr></table></figure>

<p>h. 安裝gcc-5.3, R(非必要)</p>
<p>因為我自己會用到R，之後也想要在Apache Zeppline上使用，所以順便一些紀錄</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># install R from EPEL (default BLAS is openblas)</span><br><span class="line">yum install wget</span><br><span class="line">wget https:&#x2F;&#x2F;dl.fedoraproject.org&#x2F;pub&#x2F;epel&#x2F;epel-release-latest-7.noarch.rpm</span><br><span class="line">yum install -y epel-release-latest-7.noarch.rpm</span><br><span class="line">yum install -y R R-devel R-java libxml2-devel libxml2-static tcl tcl-devel tk tk-devel libtiff-static libtiff-devel libjpeg-turbo-devel libpng12-devel cairo-tools libicu-devel openssl-devel libcurl-devel freeglut readline-static readline-devel cyrus-sasl-devel</span><br><span class="line"></span><br><span class="line"># install microsoft R open (default BLAS is MKL)</span><br><span class="line">wget https:&#x2F;&#x2F;mran.microsoft.com&#x2F;install&#x2F;mro&#x2F;3.3.2&#x2F;microsoft-r-open-3.3.2.tar.gz</span><br><span class="line">tar zxvf microsoft-r-open-3.3.2.tar.gz</span><br><span class="line">yum install -y microsoft-r-open&#x2F;rpm&#x2F;microsoft-r-open-*</span><br><span class="line"></span><br><span class="line"># remove R from EPEL, and use microsoft R open</span><br><span class="line">rm -rf &#x2F;usr&#x2F;lib64&#x2F;R</span><br><span class="line">cp -r &#x2F;usr&#x2F;lib64&#x2F;microsoft-r&#x2F;3.3&#x2F;lib64&#x2F;R &#x2F;usr&#x2F;lib64</span><br><span class="line"># let user access library dir (not to use personal library)</span><br><span class="line">chmod -R 777 &#x2F;usr&#x2F;lib64&#x2F;R&#x2F;library</span><br><span class="line"></span><br><span class="line"># change default repos</span><br><span class="line">tee -a &#x2F;usr&#x2F;lib64&#x2F;R&#x2F;etc&#x2F;Rprofile.site &lt;&lt; EOF</span><br><span class="line">options(repos &#x3D; &quot;https:&#x2F;&#x2F;cloud.r-project.org&#x2F;&quot;)</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"># remove openjdk</span><br><span class="line">yum remove -y openjdk-*</span><br><span class="line"></span><br><span class="line"># config R-Java</span><br><span class="line">R CMD javareconf</span><br><span class="line">Rscript -e &quot;install.packages(&#39;rJava&#39;)&quot;</span><br><span class="line"># enable C++11 for microsoft R open</span><br><span class="line">sudo sed -i -e &#39;s&#x2F;CXX1X &#x3D;&#x2F;CXX1X &#x3D; g++&#x2F;g&#39; &#x2F;usr&#x2F;lib64&#x2F;R&#x2F;etc&#x2F;Makeconf</span><br><span class="line">sudo sed -i -e &#39;s&#x2F;CXX1XFLAGS &#x3D;&#x2F;CXX1XFLAGS &#x3D; -DU_STATIC_IMPLEMENTATIN -O2 -g&#x2F;g&#39; &#x2F;usr&#x2F;lib64&#x2F;R&#x2F;etc&#x2F;Makeconf</span><br><span class="line">sudo sed -i -e &#39;s&#x2F;CXX1XPICFLAGS &#x3D;&#x2F;CXX1XPICFLAGS &#x3D; -fpic&#x2F;g&#39; &#x2F;usr&#x2F;lib64&#x2F;R&#x2F;etc&#x2F;Makeconf</span><br><span class="line">sudo sed -i -e &#39;s&#x2F;CXX1XSTD &#x3D;&#x2F;CXX1XSTD &#x3D; -std&#x3D;c++11&#x2F;g&#39; &#x2F;usr&#x2F;lib64&#x2F;R&#x2F;etc&#x2F;Makeconf</span><br><span class="line"></span><br><span class="line"># install rstudio server</span><br><span class="line">wget https:&#x2F;&#x2F;download2.rstudio.org&#x2F;rstudio-server-rhel-1.0.136-x86_64.rpm</span><br><span class="line">sudo yum install -y --nogpgcheck rstudio-server-rhel-1.0.136-x86_64.rpm</span><br><span class="line"></span><br><span class="line"># let user not to use personal library</span><br><span class="line">sudo tee -a &#x2F;etc&#x2F;rstudio&#x2F;rsession.conf &lt;&lt; EOF</span><br><span class="line">r-libs-user&#x3D;&#x2F;usr&#x2F;lib64&#x2F;R&#x2F;library</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"># start rstudio-server</span><br><span class="line">sudo systemctl enable rstudio-server</span><br><span class="line">sudo systemctl start rstudio-server</span><br><span class="line"></span><br><span class="line"># user for rstudio server</span><br><span class="line">useradd rstudio</span><br><span class="line">passwd rstudio</span><br></pre></td></tr></table></figure>

<ol>
<li>install ambari-server</li>
</ol>
<p>每台都要新增repo資料:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget http://public-repo-1.hortonworks.com/ambari/centos7/2.x/updates/2.4.2.0/ambari.repo -O /etc/yum.repos.d/ambari.repo</span><br><span class="line">wget http://public-repo-1.hortonworks.com/HDP/centos7/2.x/updates/2.5.3.0/hdp.repo -O /etc/yum.repos.d/hdp.repo</span><br></pre></td></tr></table></figure>

<p>在ambaritest01安裝ambari-server:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install ambari-server</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>start ambari-server</li>
</ol>
<p>先跑<code>ambari-server setup</code>，基本上選不用Customize</p>
<p>然後選Custom JDK，JAVA_HOME用上面設定的<code>/usr/java/jdk1.8.0_112</code></p>
<p>再使用<code>ambari-server start</code>啟動即可</p>
<p>也要記得使用<code>systemctl enable ambari-server</code>讓電腦自動開啟ambari-server</p>
<ol start="3">
<li>Install, configure and deploy an HDP cluster</li>
</ol>
<p>在我電腦用瀏覽器登入<code>http://192.168.0.121:8080</code>就可以看到登入畫面，預設帳密為admin/admin</p>
<p>登入之後就可以看到下面的畫面：</p>
<p><img src="/images/ambari-setup.PNG"></p>
<p>接下來就是按下<code>Launch Install Wizard</code>開始安裝就好</p>
<p>步驟基本上照著<a href="https://docs.hortonworks.com/HDPDocuments/Ambari-2.4.1.0/bk_ambari-installation/content/log_in_to_apache_ambari.html">官網手冊</a>手就好</p>
<p>我只說明第五步，<code>Target Hosts</code>寫<code>ambaritest[01-03]</code>，<code>Host Registration Information</code>部分則用<code>cat ~/.ssh/ id_rsa</code>印出的資訊</p>
<p>接著第六步就會開始安裝ambari-agent，然後安裝完還會跑一個check，安裝以及check成功的畫面如下：</p>
<p><img src="/images/ambari-install.PNG"></p>
<p>再下一頁就是選擇服務安裝了，其中Log Search跟SmartSense是Hortonworks的軟體，是要授權碼的，其他都是apache license</p>
<p><img src="/images/ambari-choose-service.PNG"></p>
<p>license相關資訊請查詢<a href="http://hortonworks.com/licenses/">這裡</a></p>
<p>成功之後就可以看到cluster畫面： (我有些service沒裝成功，可能還要看一下原因)</p>
<p><img src="/images/ambari-success.PNG"></p>
]]></content>
      <categories>
        <category>BigData</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>Hadoop</tag>
        <tag>Ambari</tag>
        <tag>HDP</tag>
      </tags>
  </entry>
  <entry>
    <title>Using gcc 5.3 with R in CentOS 7</title>
    <url>/posts/201701/2017-01-04-using-gcc-5.3-with-R-in-centos-7.html</url>
    <content><![CDATA[<p>只是記錄一下，方便日後check</p>
<a id="more"></a>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># install devtoolset-4 to get gcc-5.3</span></span><br><span class="line">yum install centos-release-scl</span><br><span class="line">yum-config-manager --<span class="built_in">enable</span> rhel-server-rhscl-7-rpms</span><br><span class="line">yum install -y devtoolset-4 --exclude=devtoolset-4-4.1-3.el7,devtoolset-4-ide-4.1-3.el7</span><br><span class="line">yum update -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># enable usage of gcc-5.3</span></span><br><span class="line">tee -a /etc/bashrc &lt;&lt; EOF</span><br><span class="line"><span class="built_in">source</span> /opt/rh/devtoolset-4/<span class="built_in">enable</span></span><br><span class="line">EOF</span><br><span class="line"><span class="built_in">source</span> /etc/bashrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># install R from EPEL (default BLAS is openblas)</span></span><br><span class="line">wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span><br><span class="line">yum install -y epel-release-latest-7.noarch.rpm</span><br><span class="line">yum install -y R R-devel R-java libxml2-devel libxml2-static tcl tcl-devel tk tk-devel libtiff-static libtiff-devel libjpeg-turbo-devel libpng12-devel cairo-tools libicu-devel openssl-devel libcurl-devel freeglut readline-static readline-devel cyrus-sasl-devel</span><br><span class="line"></span><br><span class="line"><span class="comment"># install microsoft R open (default BLAS is MKL)</span></span><br><span class="line">wget https://mran.microsoft.com/install/mro/3.3.2/microsoft-r-open-3.3.2.tar.gz</span><br><span class="line">tar zxvf microsoft-r-open-3.3.2.tar.gz</span><br><span class="line">yum install -y microsoft-r-open/rpm/microsoft-r-open-*</span><br><span class="line"></span><br><span class="line"><span class="comment"># install Oracle Java</span></span><br><span class="line">curl -v -j -k -L -H <span class="string">&quot;Cookie: oraclelicense=accept-securebackup-cookie&quot;</span> http://download.oracle.com/otn-pub/java/jdk/8u112-b15/jdk-8u112-linux-x64.rpm -o jdk-8u112-linux-x64.rpm</span><br><span class="line">yum install -y jdk-8u112-linux-x64.rpm</span><br><span class="line">tee -a /etc/bashrc &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/java/jdk1.8.0_112</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin</span><br><span class="line">EOF</span><br><span class="line"><span class="built_in">source</span> /etc/bashrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># remove R from EPEL, and use microsoft R open</span></span><br><span class="line">rm -rf /usr/lib64/R</span><br><span class="line">cp -r /usr/lib64/microsoft-r/3.3/lib64/R /usr/lib64</span><br><span class="line"><span class="comment"># let user access library dir (not to use personal library)</span></span><br><span class="line">chmod -R 777 /usr/lib64/R/library</span><br><span class="line"></span><br><span class="line"><span class="comment"># config R java env</span></span><br><span class="line">R CMD javareconf</span><br><span class="line"><span class="comment"># check Java and g++ work well</span></span><br><span class="line"><span class="comment"># (fail installation indicate configuration of java/g++ is wrong)</span></span><br><span class="line">Rscript -e <span class="string">&quot;install.packages(c(&#x27;rJava&#x27;, &#x27;Rcpp&#x27;))&quot;</span></span><br><span class="line">Rscript -e <span class="string">&quot;library(rJava); library(Rcpp)&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># make C++11 enable</span></span><br><span class="line">sed -i -e <span class="string">&#x27;s/CXX1X =/CXX1X = g++/g&#x27;</span> /usr/lib64/R/etc/Makeconf</span><br><span class="line">sed -i -e <span class="string">&#x27;s/CXX1XFLAGS =/CXX1XFLAGS = -DU_STATIC_IMPLEMENTATIN -O2 -g/g&#x27;</span> /usr/lib64/R/etc/Makeconf</span><br><span class="line">sed -i -e <span class="string">&#x27;s/CXX1XPICFLAGS =/CXX1XPICFLAGS = -fpic/g&#x27;</span> /usr/lib64/R/etc/Makeconf</span><br><span class="line">sed -i -e <span class="string">&#x27;s/CXX1XSTD =/CXX1XSTD = -std=c++11/g&#x27;</span> /usr/lib64/R/etc/Makeconf</span><br><span class="line"><span class="comment"># check g++ with CXX1X work well</span></span><br><span class="line"><span class="comment"># (fail installation indicate configuration of g++ with CXX1X is wrong)</span></span><br><span class="line">Rscript -e <span class="string">&quot;install.packages(&#x27;RcppMLPACK&#x27;)&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## install rstudio-server</span></span><br><span class="line">wget https://download2.rstudio.org/rstudio-server-rhel-1.0.136-x86_64.rpm</span><br><span class="line">yum install -y --nogpgcheck rstudio-server-rhel-1.0.136-x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># let user not to use personal library</span></span><br><span class="line">tee -a /etc/rstudio/rsession.conf &lt;&lt; EOF</span><br><span class="line">r-libs-user=/usr/lib64/R/library</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># let rstudio-server uses gcc-5.3</span></span><br><span class="line">tee -a /usr/lib/rstudio-server/R/ServerOptions.R &lt;&lt; EOF</span><br><span class="line">Sys.setenv(PATH = <span class="string">&quot;/opt/rh/devtoolset-4/root/usr/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin&quot;</span>,</span><br><span class="line">LD_LIBRARY_PATH = <span class="string">&quot;/opt/rh/devtoolset-4/root/usr/lib64:/opt/rh/devtoolset-4/root/usr/lib:/usr/lib64/R/lib::/lib:/builddir/vendor/build/lib:/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.131-3.b12.el7_3.x86_64/jre/lib/amd64/server&quot;</span>)</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># start rstudio-server</span></span><br><span class="line">systemctl <span class="built_in">enable</span> rstudio-server</span><br><span class="line">systemctl start rstudio-server</span><br><span class="line"></span><br><span class="line"><span class="comment"># open firewall</span></span><br><span class="line">firewall-cmd --zone=public --add-port=8787/tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure>

<p>後來看到文章說，直接編譯安裝是比較快的方法：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install libmpc-devel mpfr-devel gmp-devel zlib-devel gcc gcc-c++ gcc-gfortran glibc-devel</span><br><span class="line">wget ftp://ftp.mirrorservice.org/sites/sourceware.org/pub/gcc/releases/gcc-5.4.0/gcc-5.4.0.tar.gz</span><br><span class="line">tar zxvf gcc-5.4.0.tar.gz</span><br><span class="line"><span class="built_in">cd</span> gcc-5.4.0</span><br><span class="line">./configure --prefix=/usr --with-system-zlib --<span class="built_in">disable</span>-multilib --<span class="built_in">enable</span>-languages=c,c++,fortran</span><br><span class="line">make -j 8</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>CentOS</tag>
        <tag>gcc</tag>
      </tags>
  </entry>
  <entry>
    <title>wrapr範例</title>
    <url>/posts/201703/2017-03-10-wrapr-examples.html</url>
    <content><![CDATA[<p>原文是我在PTT回的一篇文章<a href="https://www.ptt.cc/bbs/R_Language/M.1489058786.A.745.html">連結</a></p>
<p>其實是有人來問怎麼將character verctor放入函數中執行對應的動作</p>
<p>好讓函數變得簡單使用跟操作，那我提供了下面幾個解法：</p>
<a id="more"></a>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(dplyr)</span><br><span class="line"><span class="keyword">library</span>(pipeR)</span><br><span class="line"><span class="keyword">library</span>(ggplot2)</span><br><span class="line"><span class="keyword">library</span>(data.table)</span><br><span class="line"></span><br><span class="line">data(<span class="string">&quot;diamonds&quot;</span>, package = <span class="string">&quot;ggplot2&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一般寫法 (dplyr)</span></span><br><span class="line">df_group_fn &lt;- <span class="keyword">function</span>(df, meanCol, col_1, col_2)&#123;</span><br><span class="line">  df %&gt;&gt;% group_by_(.dots = c(col_1, col_2)) %&gt;&gt;%</span><br><span class="line">    summarise_(.dots = c(n = <span class="string">&quot;n()&quot;</span>,</span><br><span class="line">                         mean = paste0(<span class="string">&quot;mean(&quot;</span>, meanCol, <span class="string">&quot;)&quot;</span>))) %&gt;&gt;%</span><br><span class="line">    &#123;ggplot(., aes(mean,n)) + geom_point()&#125;</span><br><span class="line">&#125;</span><br><span class="line">df_group_fn(diamonds, <span class="string">&quot;price&quot;</span>, <span class="string">&quot;cut&quot;</span>, <span class="string">&quot;color&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一般寫法 (data.table)</span></span><br><span class="line">dt_group_fn &lt;- <span class="keyword">function</span>(dt, meanCol, col_1, col_2)&#123;</span><br><span class="line">  dt[ , .(n = .N, mean = eval(parse(text = paste0(<span class="string">&quot;mean(&quot;</span>, meanCol, <span class="string">&quot;)&quot;</span>)))),</span><br><span class="line">     by = c(col_1, col_2)] %&gt;&gt;%</span><br><span class="line">  &#123;ggplot(., aes(mean,n)) + geom_point()&#125;</span><br><span class="line">&#125;</span><br><span class="line">dt_group_fn(data.table(diamonds), <span class="string">&quot;price&quot;</span>, <span class="string">&quot;cut&quot;</span>, <span class="string">&quot;color&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># wrapr + dplyr</span></span><br><span class="line"><span class="keyword">library</span>(wrapr)</span><br><span class="line">df_group_fn2 &lt;- <span class="keyword">function</span>(df, meanCol, col_1, col_2)&#123;</span><br><span class="line">  let(list(y = meanCol, c1 = col_1, c2 = col_2), &#123;</span><br><span class="line">    df %&gt;&gt;% group_by(c1, c2) %&gt;&gt;% summarise(n = n(), mean = mean(y))</span><br><span class="line">  &#125;) %&gt;&gt;% &#123;ggplot(., aes(mean,n)) + geom_point()&#125;</span><br><span class="line">&#125;</span><br><span class="line">df_group_fn2(diamonds, <span class="string">&quot;price&quot;</span>, <span class="string">&quot;cut&quot;</span>, <span class="string">&quot;color&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># wrapr + data.table</span></span><br><span class="line">dt_group_fn2 &lt;- <span class="keyword">function</span>(dt, meanCol, col_1, col_2)&#123;</span><br><span class="line">  let(list(y = meanCol, c1 = col_1, c2 = col_2), &#123;</span><br><span class="line">    dt[ , .(n = .N, mean = mean(y)), by = .(c1, c2)]</span><br><span class="line">  &#125;) %&gt;&gt;% &#123;ggplot(., aes(mean,n)) + geom_point()&#125;</span><br><span class="line">&#125;</span><br><span class="line">dt_group_fn2(data.table(diamonds), <span class="string">&quot;price&quot;</span>, <span class="string">&quot;cut&quot;</span>, <span class="string">&quot;color&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 進階，不把欄位給死的方法：</span></span><br><span class="line"><span class="comment"># dplyr</span></span><br><span class="line">df_group_fn3 &lt;- <span class="keyword">function</span>(df, meanCol, groupByCols)&#123;</span><br><span class="line">  let(list(y = meanCol), &#123;</span><br><span class="line">    df %&gt;&gt;% group_by_(.dots = groupByCols) %&gt;&gt;%</span><br><span class="line">      summarise(n = n(), mean = mean(y))</span><br><span class="line">  &#125;) %&gt;&gt;%</span><br><span class="line">  &#123;ggplot(., aes(mean,n)) + geom_point()&#125;</span><br><span class="line">&#125;</span><br><span class="line">df_group_fn3(diamonds, <span class="string">&quot;price&quot;</span>, c(<span class="string">&quot;cut&quot;</span>, <span class="string">&quot;color&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># data.table</span></span><br><span class="line">dt_group_fn3 &lt;- <span class="keyword">function</span>(dt, meanCol, groupByCols)&#123;</span><br><span class="line">  let(list(y = meanCol), &#123;</span><br><span class="line">    dt[ , .(n = .N, mean = mean(y)), by = groupByCols]</span><br><span class="line">  &#125;) %&gt;&gt;% &#123;ggplot(., aes(mean,n)) + geom_point()&#125;</span><br><span class="line">&#125;</span><br><span class="line">dt_group_fn3(data.table(diamonds), <span class="string">&quot;price&quot;</span>, c(<span class="string">&quot;cut&quot;</span>, <span class="string">&quot;color&quot;</span>))</span><br></pre></td></tr></table></figure>

<p>但是最漂亮的寫法應該是下面這樣：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># data.table + ... + substitute</span></span><br><span class="line">dt_group_fn3 &lt;- <span class="keyword">function</span>(dt, meanCol, <span class="keyword">...</span>)&#123;</span><br><span class="line">  groupByCols &lt;- as.character(as.list(substitute(list(<span class="keyword">...</span>)))[-<span class="number">1L</span>])</span><br><span class="line">  y &lt;- substitute(meanCol)</span><br><span class="line">  dt[ , .(n = .N, mean = mean(y)), by = groupByCols] %&gt;&gt;%</span><br><span class="line">    &#123;ggplot(., aes(mean,n)) + geom_point()&#125;</span><br><span class="line">&#125;</span><br><span class="line">dt_group_fn3(data.table(diamonds), price, cut, color)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>wrapr</tag>
      </tags>
  </entry>
  <entry>
    <title>在Windows環境下安裝GPU版本的mxnet</title>
    <url>/posts/201703/2017-03-11-installation-mxnet-gpu-version-in-windows.html</url>
    <content><![CDATA[<p>需要的components有：</p>
<ol>
<li><a href="https://developer.nvidia.com/cuda-toolkit">CUDA Toolkit 8.0</a> 下載安裝</li>
<li><a href="https://github.com/yajiedesign/mxnet/releases">mxnet gpu prebuild</a> 下載<code>20170310_mxnet_x64_vc14_gpu.7z</code>跟<code>vc14 base package</code></li>
<li><a href="https://github.com/dmlc/mxnet/releases">mxnet release zip</a> </li>
</ol>
<a id="more"></a>

<p>為了說明，我就在D槽開一個資料夾，叫做mxnet</p>
<p>先把整個mxnet repository clone到<code>D:\mxnet\mxnet</code>，解壓縮mxnet release的zip，其路徑應該是<code>D:\mxnet\mxnet-版本</code></p>
<p>然後把<code>20170310_mxnet_x64_vc14_gpu.7z</code>跟<code>prebuildbase_win10_x64_vc14.7z</code>解壓縮到<code>D:\mxnet\prebuild</code>裡面</p>
<p>再來把<code>D:\mxnet\prebuild\3rdparty</code>裡面11個dll複製到<code>D:\mxnet\mxnet-版本\R-package\inst\libs\x64</code>(沒有資料夾就自己create)</p>
<p>另外要再建一個``D:\mxnet\mxnet-版本\R-package\inst\include`資料夾</p>
<p>把<code>D:\mxnet\nnvm\nnvm\include\nnvm</code>, <code>D:\mxnet\include\mxnet</code>, <code>D:\mxnet\dmlc-core\include\dlmc</code>以及<code>D:\mxnet\include\mshadow</code>複製到裡面</p>
<p>最後，新增一個bat檔案</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> import(Rcpp) &gt; R-package/NAMESPACE</span><br><span class="line"><span class="built_in">echo</span> import(methods) &gt;&gt; R-package/NAMESPACE</span><br><span class="line">R CMD INSTALL R-package</span><br><span class="line">Rscript -e <span class="string">&quot;require(mxnet); mxnet:::mxnet.export(\&quot;R-package\&quot;)&quot;</span></span><br><span class="line">rm -rf R-package/NAMESPACE</span><br><span class="line">Rscript -e <span class="string">&quot;require(roxygen2); roxygen2::roxygenise(\&quot;R-package\&quot;)&quot;</span></span><br><span class="line">R CMD INSTALL R-package</span><br></pre></td></tr></table></figure>

<p>然後執行這個bat檔案就安裝完了 (roxygen2 0.6.1會有問題，請用舊版的roxygen2)</p>
<p>接下來就可以跑看看gpu可不可以用了(修改至mxnet/example/image-classfication裡面的R檔)：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(mxnet)</span><br><span class="line"></span><br><span class="line">download_ &lt;- <span class="keyword">function</span>(data_dir) &#123;</span><br><span class="line">  dir.create(data_dir, showWarnings = <span class="literal">FALSE</span>)</span><br><span class="line">  setwd(data_dir)</span><br><span class="line">  <span class="keyword">if</span> ((!file.exists(<span class="string">&#x27;train-images-idx3-ubyte&#x27;</span>)) ||</span><br><span class="line">      (!file.exists(<span class="string">&#x27;train-labels-idx1-ubyte&#x27;</span>)) ||</span><br><span class="line">      (!file.exists(<span class="string">&#x27;t10k-images-idx3-ubyte&#x27;</span>)) ||</span><br><span class="line">      (!file.exists(<span class="string">&#x27;t10k-labels-idx1-ubyte&#x27;</span>))) &#123;</span><br><span class="line">    download.file(url=<span class="string">&#x27;http://data.mxnet.io/mxnet/data/mnist.zip&#x27;</span>,</span><br><span class="line">                  destfile=<span class="string">&#x27;mnist.zip&#x27;</span>)</span><br><span class="line">    unzip(<span class="string">&quot;mnist.zip&quot;</span>)</span><br><span class="line">    file.remove(<span class="string">&quot;mnist.zip&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  setwd(<span class="string">&quot;..&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">get_iterator &lt;- <span class="keyword">function</span>(data_shape) &#123;</span><br><span class="line">  get_iterator_impl &lt;- <span class="keyword">function</span>() &#123;</span><br><span class="line">    data_dir = <span class="string">&#x27;mnist/&#x27;</span></span><br><span class="line">    flat &lt;- <span class="literal">TRUE</span></span><br><span class="line">    <span class="keyword">if</span> (length(data_shape) == <span class="number">3</span>) flat &lt;- <span class="literal">FALSE</span></span><br><span class="line">    </span><br><span class="line">    train           = mx.io.MNISTIter(</span><br><span class="line">      image       = paste0(data_dir, <span class="string">&quot;train-images-idx3-ubyte&quot;</span>),</span><br><span class="line">      label       = paste0(data_dir, <span class="string">&quot;train-labels-idx1-ubyte&quot;</span>),</span><br><span class="line">      input_shape = data_shape,</span><br><span class="line">      batch_size  = <span class="number">128</span>,</span><br><span class="line">      shuffle     = <span class="literal">TRUE</span>,</span><br><span class="line">      flat        = flat)</span><br><span class="line">    </span><br><span class="line">    val = mx.io.MNISTIter(</span><br><span class="line">      image       = paste0(data_dir, <span class="string">&quot;t10k-images-idx3-ubyte&quot;</span>),</span><br><span class="line">      label       = paste0(data_dir, <span class="string">&quot;t10k-labels-idx1-ubyte&quot;</span>),</span><br><span class="line">      input_shape = data_shape,</span><br><span class="line">      batch_size  = <span class="number">128</span>,</span><br><span class="line">      flat        = flat)</span><br><span class="line">    </span><br><span class="line">    ret = list(train=train, value=val)</span><br><span class="line">  &#125;</span><br><span class="line">  get_iterator_impl</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># multi-layer perceptron</span></span><br><span class="line">get_mlp &lt;- <span class="keyword">function</span>() &#123;</span><br><span class="line">  data &lt;- mx.symbol.Variable(<span class="string">&#x27;data&#x27;</span>)</span><br><span class="line">  fc1  &lt;- mx.symbol.FullyConnected(data = data, name=<span class="string">&#x27;fc1&#x27;</span>, num_hidden=<span class="number">128</span>)</span><br><span class="line">  act1 &lt;- mx.symbol.Activation(data = fc1, name=<span class="string">&#x27;relu1&#x27;</span>, act_type=<span class="string">&quot;relu&quot;</span>)</span><br><span class="line">  fc2  &lt;- mx.symbol.FullyConnected(data = act1, name = <span class="string">&#x27;fc2&#x27;</span>, num_hidden = <span class="number">64</span>)</span><br><span class="line">  act2 &lt;- mx.symbol.Activation(data = fc2, name=<span class="string">&#x27;relu2&#x27;</span>, act_type=<span class="string">&quot;relu&quot;</span>)</span><br><span class="line">  fc3  &lt;- mx.symbol.FullyConnected(data = act2, name=<span class="string">&#x27;fc3&#x27;</span>, num_hidden=<span class="number">10</span>)</span><br><span class="line">  mlp  &lt;- mx.symbol.SoftmaxOutput(data = fc3, name = <span class="string">&#x27;softmax&#x27;</span>)</span><br><span class="line">  mlp</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">get_lenet &lt;- <span class="keyword">function</span>() &#123;</span><br><span class="line">  data &lt;- mx.symbol.Variable(<span class="string">&#x27;data&#x27;</span>)</span><br><span class="line">  <span class="comment"># first conv</span></span><br><span class="line">  conv1 &lt;- mx.symbol.Convolution(data=data, kernel=c(<span class="number">5</span>,<span class="number">5</span>), num_filter=<span class="number">20</span>)</span><br><span class="line">  tanh1 &lt;- mx.symbol.Activation(data=conv1, act_type=<span class="string">&quot;tanh&quot;</span>)</span><br><span class="line">  pool1 &lt;- mx.symbol.Pooling(data=tanh1, pool_type=<span class="string">&quot;max&quot;</span>,</span><br><span class="line">                             kernel=c(<span class="number">2</span>,<span class="number">2</span>), stride=c(<span class="number">2</span>,<span class="number">2</span>))</span><br><span class="line">  <span class="comment"># second conv</span></span><br><span class="line">  conv2 &lt;- mx.symbol.Convolution(data=pool1, kernel=c(<span class="number">5</span>,<span class="number">5</span>), num_filter=<span class="number">50</span>)</span><br><span class="line">  tanh2 &lt;- mx.symbol.Activation(data=conv2, act_type=<span class="string">&quot;tanh&quot;</span>)</span><br><span class="line">  pool2 &lt;- mx.symbol.Pooling(data=tanh2, pool_type=<span class="string">&quot;max&quot;</span>,</span><br><span class="line">                             kernel=c(<span class="number">2</span>,<span class="number">2</span>), stride=c(<span class="number">2</span>,<span class="number">2</span>))</span><br><span class="line">  <span class="comment"># first fullc</span></span><br><span class="line">  flatten &lt;- mx.symbol.Flatten(data=pool2)</span><br><span class="line">  fc1 &lt;- mx.symbol.FullyConnected(data=flatten, num_hidden=<span class="number">500</span>)</span><br><span class="line">  tanh3 &lt;- mx.symbol.Activation(data=fc1, act_type=<span class="string">&quot;tanh&quot;</span>)</span><br><span class="line">  <span class="comment"># second fullc</span></span><br><span class="line">  fc2 &lt;- mx.symbol.FullyConnected(data=tanh3, num_hidden=<span class="number">10</span>)</span><br><span class="line">  <span class="comment"># loss</span></span><br><span class="line">  lenet &lt;- mx.symbol.SoftmaxOutput(data=fc2, name=<span class="string">&#x27;softmax&#x27;</span>)</span><br><span class="line">  lenet</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">data_loader &lt;- get_iterator(c(<span class="number">28</span>, <span class="number">28</span>, <span class="number">1</span>))</span><br><span class="line">download_(<span class="string">&#x27;mnist/&#x27;</span>)</span><br><span class="line">net &lt;- get_lenet()</span><br><span class="line">data &lt;- data_loader()</span><br><span class="line">train &lt;- data$train</span><br><span class="line">val &lt;- data$value  </span><br><span class="line">devs &lt;- mx.gpu(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">model &lt;- mx.model.FeedForward.create(</span><br><span class="line">  X                  = train,</span><br><span class="line">  eval.data          = val,</span><br><span class="line">  ctx                = devs,</span><br><span class="line">  symbol             = net,</span><br><span class="line">  begin.round        = <span class="number">0</span>,</span><br><span class="line">  eval.metric        = mx.metric.top_k_accuracy,</span><br><span class="line">  num.round          = <span class="number">10</span>,</span><br><span class="line">  learning.rate      = <span class="number">0.05</span>,</span><br><span class="line">  array.batch.size   = <span class="number">128</span>,</span><br><span class="line">  optimizer          = <span class="string">&quot;sgd&quot;</span>,</span><br><span class="line">  initializer        = mx.init.Xavier(factor_type=<span class="string">&quot;in&quot;</span>, magnitude=<span class="number">2</span>),</span><br><span class="line">  batch.end.callback = mx.callback.log.train.metric(<span class="number">50</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>MxNet</category>
      </categories>
      <tags>
        <tag>GPU</tag>
        <tag>MxNet</tag>
        <tag>Windows</tag>
        <tag>Deep Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Rcpp object checking</title>
    <url>/posts/201703/2017-03-31-Rcpp-object-check.html</url>
    <content><![CDATA[<p>自己在編寫套件的時候，會想要把錯誤發生可能降到最低</p>
<p>所以常常做很多事前check，結果發現寫來寫去都是一樣的code在複製</p>
<p>所以終於下定決心來寫一個general的code去做這個</p>
<p>這樣C++就可以直接把所有輸入都改成用SEXP輸入做check</p>
<p>最後再轉成需要的class去做後續</p>
<a id="more"></a>

<p>C++ code如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Rcpp.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="built_in">std</span>::<span class="built_in">string</span> <span class="title">num2str</span><span class="params">(T Number)</span> </span>&#123;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">ostringstream</span> ss;</span><br><span class="line">  ss &lt;&lt; Number;</span><br><span class="line">  <span class="keyword">return</span> ss.str();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// [[Rcpp::export]]</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">checkValue</span><span class="params">(SEXP x, <span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span> varName = <span class="string">&quot;x&quot;</span>, <span class="keyword">const</span> <span class="keyword">int</span> RTYPE = <span class="number">14</span>, <span class="keyword">const</span> <span class="keyword">int</span> len = <span class="number">1</span>)</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n = LENGTH(x);</span><br><span class="line">  <span class="keyword">if</span> (len &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (n != len)</span><br><span class="line">      Rcpp::<span class="built_in">stop</span>(<span class="string">&quot;The length of &quot;</span> + varName + <span class="string">&quot; must be &quot;</span> + num2str(len) + <span class="string">&quot;!\n&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (TYPEOF(x) != RTYPE) &#123;</span><br><span class="line">    <span class="keyword">switch</span>(RTYPE) &#123;</span><br><span class="line">    <span class="keyword">case</span> LGLSXP:</span><br><span class="line">      Rcpp::<span class="built_in">stop</span>(varName + <span class="string">&quot; must be logical type!\n&quot;</span>);</span><br><span class="line">    <span class="keyword">case</span> INTSXP:</span><br><span class="line">      Rcpp::<span class="built_in">stop</span>(varName + <span class="string">&quot; must be integer type!\n&quot;</span>);</span><br><span class="line">    <span class="keyword">case</span> REALSXP:</span><br><span class="line">      Rcpp::<span class="built_in">stop</span>(varName + <span class="string">&quot; must be double type!\n&quot;</span>);</span><br><span class="line">    <span class="keyword">case</span> STRSXP:</span><br><span class="line">      Rcpp::<span class="built_in">stop</span>(varName + <span class="string">&quot; must be string type!\n&quot;</span>);</span><br><span class="line">    <span class="keyword">case</span> CPLXSXP:</span><br><span class="line">      Rcpp::<span class="built_in">stop</span>(varName + <span class="string">&quot; must be complex type!\n&quot;</span>);</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      Rcpp::<span class="built_in">stop</span>(<span class="string">&quot;Not supported type!\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">    <span class="keyword">switch</span>(TYPEOF(x)) &#123;</span><br><span class="line">    <span class="keyword">case</span> LGLSXP:</span><br><span class="line">      <span class="keyword">if</span> (LOGICAL(x)[i] == NA_LOGICAL)</span><br><span class="line">        Rcpp::<span class="built_in">stop</span>(varName + <span class="string">&quot; must not contain NA!\n&quot;</span>);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> INTSXP:</span><br><span class="line">      <span class="keyword">if</span> (INTEGER(x)[i] == NA_INTEGER)</span><br><span class="line">        Rcpp::<span class="built_in">stop</span>(varName + <span class="string">&quot; must not contain NA!\n&quot;</span>);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> REALSXP:</span><br><span class="line">      <span class="keyword">if</span> (ISNA(REAL(x)[i]) || ISNAN(REAL(x)[i]) || !R_FINITE(REAL(x)[i]))</span><br><span class="line">        Rcpp::<span class="built_in">stop</span>(varName + <span class="string">&quot; must not contain NA, NaN or Inf!\n&quot;</span>);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> STRSXP:</span><br><span class="line">      <span class="keyword">if</span> (STRING_ELT(x, i) == NA_STRING)</span><br><span class="line">        Rcpp::<span class="built_in">stop</span>(varName + <span class="string">&quot; must not contain NA!\n&quot;</span>);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> CPLXSXP:</span><br><span class="line">      <span class="keyword">if</span> (ISNA(COMPLEX(x)[i].r) || ISNAN(COMPLEX(x)[i].r) || !R_FINITE(COMPLEX(x)[i].r) || </span><br><span class="line">          ISNA(COMPLEX(x)[i].i) || ISNAN(COMPLEX(x)[i].i) || !R_FINITE(COMPLEX(x)[i].i))</span><br><span class="line">        Rcpp::<span class="built_in">stop</span>(varName + <span class="string">&quot; must not contain NA, NaN or Inf!\n&quot;</span>);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      Rcpp::<span class="built_in">stop</span>(<span class="string">&quot;Not supported type!\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// [[Rcpp::export]]</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">testFunc</span><span class="params">(SEXP x)</span></span>&#123;</span><br><span class="line">  <span class="keyword">switch</span>(TYPEOF(x)) &#123;</span><br><span class="line">  <span class="keyword">case</span> INTSXP:</span><br><span class="line">    checkValue(x, <span class="string">&quot;x&quot;</span>, INTSXP, <span class="number">-1</span>); <span class="comment">// len &lt; 0 to skip checking length</span></span><br><span class="line">    <span class="keyword">return</span>(sum(Rcpp::as&lt;Rcpp::IntegerVector&gt;(x)));</span><br><span class="line">  <span class="keyword">case</span> REALSXP:</span><br><span class="line">    checkValue(x, <span class="string">&quot;x&quot;</span>, REALSXP, <span class="number">-1</span>); <span class="comment">// len &lt; 0 to skip checking length</span></span><br><span class="line">    <span class="keyword">return</span>(sum(Rcpp::as&lt;Rcpp::NumericVector&gt;(x)));</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line">    Rcpp::<span class="built_in">stop</span>(<span class="string">&quot;Not supported type!\n&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>我們也create一個testFunc，去做對double/integer的vector做總和</p>
<p>那我們就在input時做一個checking</p>
<p>至於其他case，為了方便測試，我們這裡就用R來測試</p>
<p>但別忘了這個函數真正要用地方是在C++，測試的code如下：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">Rcpp::sourceCpp(<span class="string">&quot;checkValue.cpp&quot;</span>)</span><br><span class="line">testFunc(sample.int(<span class="number">10</span>, <span class="number">5</span>)) <span class="comment"># pass</span></span><br><span class="line">testFunc(rnorm(<span class="number">5</span>)) <span class="comment"># pass</span></span><br><span class="line"><span class="comment"># check type</span></span><br><span class="line">expect_error(testFunc(c(<span class="literal">TRUE</span>, <span class="literal">FALSE</span>)), <span class="string">&quot;Not supported type!&quot;</span>)</span><br><span class="line"><span class="comment"># cehck NA</span></span><br><span class="line">expect_error(testFunc(c(sample.int(<span class="number">10</span>, <span class="number">3</span>), <span class="literal">NA_integer_</span>)), <span class="string">&quot;x must not contain NA!&quot;</span>)</span><br><span class="line"><span class="comment"># check NA, NaN, Inf, -Inf</span></span><br><span class="line">expect_error(testFunc(c(rnorm(<span class="number">3</span>), <span class="literal">NA_real_</span>)), <span class="string">&quot;x must not contain NA, NaN or Inf!&quot;</span>)</span><br><span class="line">expect_error(testFunc(c(rnorm(<span class="number">3</span>), <span class="literal">NaN</span>)), <span class="string">&quot;x must not contain NA, NaN or Inf!&quot;</span>)</span><br><span class="line">expect_error(testFunc(c(rnorm(<span class="number">3</span>), <span class="literal">Inf</span>)), <span class="string">&quot;x must not contain NA, NaN or Inf!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(testthat)</span><br><span class="line"><span class="comment"># values for RTYPE</span></span><br><span class="line"><span class="comment"># LGLSXP        10  # logical variables</span></span><br><span class="line"><span class="comment"># INTSXP        13  # integer variables</span></span><br><span class="line"><span class="comment"># REALSXP       14  # real variables</span></span><br><span class="line"><span class="comment"># CPLXSXP       15  # complex variables</span></span><br><span class="line"><span class="comment"># STRSXP        16  # string variables</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># pass</span></span><br><span class="line">checkValue(c(<span class="number">1</span>, <span class="number">2</span>), <span class="string">&quot;x&quot;</span>, <span class="number">14</span>, <span class="number">2</span>)</span><br><span class="line">checkValue(c(<span class="number">1L</span>, <span class="number">2L</span>), <span class="string">&quot;x&quot;</span>, <span class="number">13</span>, <span class="number">2</span>)</span><br><span class="line">checkValue(c(<span class="literal">TRUE</span>, <span class="literal">FALSE</span>), <span class="string">&quot;x&quot;</span>, <span class="number">10</span>, <span class="number">2</span>)</span><br><span class="line">checkValue(c(<span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>), <span class="string">&quot;x&quot;</span>, <span class="number">16</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># check length</span></span><br><span class="line">expect_error(checkValue(c(<span class="number">1</span>, <span class="number">2</span>), <span class="string">&quot;x&quot;</span>, <span class="number">14</span>, <span class="number">1</span>), <span class="string">&quot;The length of x must be 1!&quot;</span>)</span><br><span class="line">expect_error(checkValue(c(<span class="number">1</span>, <span class="number">2</span>), <span class="string">&quot;x&quot;</span>, <span class="number">14</span>, <span class="number">3</span>), <span class="string">&quot;The length of x must be 3!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># check type</span></span><br><span class="line">expect_error(checkValue(c(<span class="number">1</span>, <span class="number">2</span>), <span class="string">&quot;x&quot;</span>, <span class="number">13</span>, <span class="number">2</span>), <span class="string">&quot;x must be integer type!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># check NA, NaN, Inf, -Inf</span></span><br><span class="line">expect_error(checkValue(c(<span class="number">1</span>, <span class="literal">NA_real_</span>), <span class="string">&quot;x&quot;</span>, <span class="number">14</span>, <span class="number">2</span>), <span class="string">&quot;x must not contain NA, NaN or Inf!&quot;</span>)</span><br><span class="line">expect_error(checkValue(c(<span class="number">1</span>, <span class="literal">NaN</span>), <span class="string">&quot;x&quot;</span>, <span class="number">14</span>, <span class="number">2</span>), <span class="string">&quot;x must not contain NA, NaN or Inf!&quot;</span>)</span><br><span class="line">expect_error(checkValue(c(<span class="number">1</span>, <span class="literal">Inf</span>), <span class="string">&quot;x&quot;</span>, <span class="number">14</span>, <span class="number">2</span>), <span class="string">&quot;x must not contain NA, NaN or Inf!&quot;</span>)</span><br><span class="line">expect_error(checkValue(c(<span class="number">1</span>, -<span class="literal">Inf</span>), <span class="string">&quot;x&quot;</span>, <span class="number">14</span>, <span class="number">2</span>), <span class="string">&quot;x must not contain NA, NaN or Inf!&quot;</span>)</span><br><span class="line">  </span><br><span class="line"><span class="comment"># check NA (NaN =&gt; NA, Inf =&gt; NA for integer type, so it is not necessary to check int with NaN or Inf.)</span></span><br><span class="line">expect_error(checkValue(c(<span class="literal">TRUE</span>, <span class="literal">NA</span>), <span class="string">&quot;x&quot;</span>, <span class="number">10</span>, <span class="number">2</span>), <span class="string">&quot;x must not contain NA.&quot;</span>)</span><br><span class="line">expect_error(checkValue(c(<span class="number">1L</span>, <span class="literal">NA_integer_</span>), <span class="string">&quot;x&quot;</span>, <span class="number">13</span>, <span class="number">2</span>), <span class="string">&quot;x must not contain NA.&quot;</span>)</span><br><span class="line">expect_error(checkValue(c(<span class="string">&quot;1&quot;</span>, <span class="literal">NA_character_</span>), <span class="string">&quot;x&quot;</span>, <span class="number">16</span>, <span class="number">2</span>), <span class="string">&quot;x must not contain NA.&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># check complex</span></span><br><span class="line">expect_error(checkValue(complex(<span class="number">2</span>, <span class="number">1</span>:<span class="number">2</span>, <span class="number">0</span>:<span class="number">1</span>), <span class="string">&quot;x&quot;</span>, <span class="number">14</span>, <span class="number">2</span>), <span class="string">&quot;x must be double type!&quot;</span>)</span><br><span class="line">expect_error(checkValue(complex(<span class="number">2</span>, c(<span class="number">1</span>, <span class="literal">NA</span>), <span class="number">0</span>:<span class="number">1</span>), <span class="string">&quot;x&quot;</span>, <span class="number">15</span>, <span class="number">2</span>), <span class="string">&quot;x must not contain NA, NaN or Inf!&quot;</span>)</span><br><span class="line">expect_error(checkValue(complex(<span class="number">2</span>, c(<span class="number">1</span>, <span class="literal">NaN</span>), <span class="number">0</span>:<span class="number">1</span>), <span class="string">&quot;x&quot;</span>, <span class="number">15</span>, <span class="number">2</span>), <span class="string">&quot;x must not contain NA, NaN or Inf!&quot;</span>)</span><br><span class="line">expect_error(checkValue(complex(<span class="number">2</span>, c(<span class="number">1</span>, <span class="literal">Inf</span>), <span class="number">0</span>:<span class="number">1</span>), <span class="string">&quot;x&quot;</span>, <span class="number">15</span>, <span class="number">2</span>), <span class="string">&quot;x must not contain NA, NaN or Inf!&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>包成一個R函數for R check R object用：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(testthat)</span><br><span class="line">checkValueR &lt;- <span class="keyword">function</span>(x, type, length = -<span class="number">1L</span>, verbose = <span class="literal">FALSE</span>)&#123;</span><br><span class="line">  stopifnot(type %<span class="keyword">in</span>% c(<span class="string">&quot;logical&quot;</span>, <span class="string">&quot;integer&quot;</span>, <span class="string">&quot;double&quot;</span>, <span class="string">&quot;complex&quot;</span>, <span class="string">&quot;character&quot;</span>))</span><br><span class="line">  funcCall &lt;- match.call()</span><br><span class="line">  RTYPE &lt;- <span class="keyword">switch</span>(type, <span class="string">&quot;logical&quot;</span> = <span class="number">10L</span>, <span class="string">&quot;integer&quot;</span> = <span class="number">13L</span>, <span class="string">&quot;double&quot;</span> = <span class="number">14L</span>,</span><br><span class="line">                  <span class="string">&quot;complex&quot;</span> = <span class="number">15L</span>, <span class="string">&quot;character&quot;</span> = <span class="number">16L</span>)</span><br><span class="line">  varName &lt;- as.character(funcCall$x)</span><br><span class="line">  <span class="keyword">if</span> (length(varName) &gt; <span class="number">1L</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (verbose)</span><br><span class="line">      message(<span class="string">&quot;x input is not a variable name instead function call, so use x as variable name.&quot;</span>)</span><br><span class="line">    varName &lt;- <span class="string">&quot;x&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">  checkValue(x, varName, RTYPE, length)</span><br><span class="line">  invisible(<span class="literal">NULL</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># check length</span></span><br><span class="line">expect_error(checkValueR(c(<span class="number">1</span>, <span class="number">2</span>), <span class="string">&quot;double&quot;</span>, <span class="number">1</span>), <span class="string">&quot;The length of x must be 1!&quot;</span>)</span><br><span class="line">expect_error(checkValueR(c(<span class="number">1</span>, <span class="number">2</span>), <span class="string">&quot;double&quot;</span>, <span class="number">3</span>), <span class="string">&quot;The length of x must be 3!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># check type</span></span><br><span class="line">expect_error(checkValueR(c(<span class="number">1</span>, <span class="number">2</span>), <span class="string">&quot;integer&quot;</span>, <span class="number">2</span>), <span class="string">&quot;x must be integer type!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># check NA, NaN, Inf, -Inf</span></span><br><span class="line">expect_error(checkValueR(c(<span class="number">1</span>, <span class="literal">NA</span>), <span class="string">&quot;double&quot;</span>, <span class="number">2</span>), <span class="string">&quot;x must not contain NA, NaN or Inf!&quot;</span>)</span><br><span class="line">expect_error(checkValueR(c(<span class="number">1</span>, <span class="literal">NaN</span>), <span class="string">&quot;double&quot;</span>, <span class="number">2</span>), <span class="string">&quot;x must not contain NA, NaN or Inf!&quot;</span>)</span><br><span class="line">expect_error(checkValueR(c(<span class="number">1</span>, <span class="literal">Inf</span>), <span class="string">&quot;double&quot;</span>, <span class="number">2</span>), <span class="string">&quot;x must not contain NA, NaN or Inf!&quot;</span>)</span><br><span class="line">expect_error(checkValueR(c(<span class="number">1</span>, -<span class="literal">Inf</span>), <span class="string">&quot;double&quot;</span>, <span class="number">2</span>), <span class="string">&quot;x must not contain NA, NaN or Inf!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># check NA</span></span><br><span class="line">expect_error(checkValueR(c(<span class="literal">TRUE</span>, <span class="literal">NA</span>), <span class="string">&quot;logical&quot;</span>, <span class="number">2</span>), <span class="string">&quot;x must not contain NA.&quot;</span>)</span><br><span class="line">expect_error(checkValueR(c(<span class="number">1L</span>, <span class="literal">NA_integer_</span>), <span class="string">&quot;integer&quot;</span>, <span class="number">2</span>), <span class="string">&quot;x must not contain NA.&quot;</span>)</span><br><span class="line">expect_error(checkValueR(c(<span class="string">&quot;1&quot;</span>, <span class="literal">NA_character_</span>), <span class="string">&quot;character&quot;</span>, <span class="number">2</span>), <span class="string">&quot;x must not contain NA.&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># check complex</span></span><br><span class="line">expect_error(checkValueR(complex(<span class="number">2</span>, <span class="number">1</span>:<span class="number">2</span>, <span class="number">0</span>:<span class="number">1</span>), <span class="string">&quot;double&quot;</span>, <span class="number">2</span>), <span class="string">&quot;x must be double type!&quot;</span>)</span><br><span class="line">expect_error(checkValueR(complex(<span class="number">2</span>, c(<span class="number">1</span>, <span class="literal">NA</span>), <span class="number">0</span>:<span class="number">1</span>), <span class="string">&quot;complex&quot;</span>, <span class="number">2</span>), <span class="string">&quot;x must not contain NA, NaN or Inf!&quot;</span>)</span><br><span class="line">expect_error(checkValueR(complex(<span class="number">2</span>, c(<span class="number">1</span>, <span class="literal">NaN</span>), <span class="number">0</span>:<span class="number">1</span>), <span class="string">&quot;complex&quot;</span>, <span class="number">2</span>), <span class="string">&quot;x must not contain NA, NaN or Inf!&quot;</span>)</span><br><span class="line">expect_error(checkValueR(complex(<span class="number">2</span>, c(<span class="number">1</span>, <span class="literal">Inf</span>), <span class="number">0</span>:<span class="number">1</span>), <span class="string">&quot;complex&quot;</span>, <span class="number">2</span>), <span class="string">&quot;x must not contain NA, NaN or Inf!&quot;</span>)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>Rcpp</tag>
        <tag>Type checking</tag>
      </tags>
  </entry>
  <entry>
    <title>Grid search in data.table</title>
    <url>/posts/201704/2017-04-10-grid-search-in-data.table.html</url>
    <content><![CDATA[<p>有人傳了一篇用<code>tidyverse</code>做grid search的blogger給我看 (<a href="https://www.r-bloggers.com/grid-search-in-the-tidyverse/">Grid search in the tidyverse</a>)</p>
<p>我想說那我來寫一篇for <code>data.table</code>的吧</p>
<a id="more"></a>

<p>code如下：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(data.table)</span><br><span class="line"><span class="keyword">library</span>(pipeR)</span><br><span class="line"><span class="keyword">library</span>(rpart)</span><br><span class="line"></span><br><span class="line">set.seed(<span class="number">245</span>)</span><br><span class="line">dataDT &lt;- data.table(mtcars) %&gt;&gt;% `[`(j = am := factor(am, labels = c(<span class="string">&quot;Automatic&quot;</span>, <span class="string">&quot;Manual&quot;</span>)))</span><br><span class="line">dataDT[ , trainFlag := !is.na(match(.I, sample.int(nrow(mtcars), floor(<span class="number">.8</span> * nrow(mtcars)))))]</span><br><span class="line"></span><br><span class="line">buildMdl &lt;- <span class="keyword">function</span>(s, d) &#123;</span><br><span class="line">  rpart(am ~ hp + mpg, dataDT[trainFlag == <span class="literal">TRUE</span>], control = rpart.control(minsplit = s, maxdepth = d))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">gs &lt;- CJ(minsplit = c(<span class="number">2</span>, <span class="number">5</span>, <span class="number">10</span>), maxdepth = c(<span class="number">1</span>, <span class="number">3</span>, <span class="number">8</span>))</span><br><span class="line">gs[ , mod := list(mapply(buildMdl, minsplit, maxdepth, SIMPLIFY = <span class="literal">FALSE</span>))]</span><br><span class="line">print(gs)</span><br><span class="line"><span class="comment">#    minsplit maxdepth     mod</span></span><br><span class="line"><span class="comment"># 1:        2        1 &lt;rpart&gt;</span></span><br><span class="line"><span class="comment"># 2:        2        3 &lt;rpart&gt;</span></span><br><span class="line"><span class="comment"># 3:        2        8 &lt;rpart&gt;</span></span><br><span class="line"><span class="comment"># 4:        5        1 &lt;rpart&gt;</span></span><br><span class="line"><span class="comment"># 5:        5        3 &lt;rpart&gt;</span></span><br><span class="line"><span class="comment"># 6:        5        8 &lt;rpart&gt;</span></span><br><span class="line"><span class="comment"># 7:       10        1 &lt;rpart&gt;</span></span><br><span class="line"><span class="comment"># 8:       10        3 &lt;rpart&gt;</span></span><br><span class="line"><span class="comment"># 9:       10        8 &lt;rpart&gt;</span></span><br><span class="line"></span><br><span class="line">calAccu &lt;- <span class="keyword">function</span>(mod, testData, testLabel) &#123;</span><br><span class="line">  mean(predict(mod, testData, type = <span class="string">&quot;class&quot;</span>) == testLabel)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">gs[ , `:=`(trainAccu = mapply(<span class="keyword">function</span>(m) dataDT[trainFlag == <span class="literal">TRUE</span>] %&gt;&gt;% &#123;calAccu(m, ., .$am)&#125;, mod),</span><br><span class="line">           testAccu = mapply(<span class="keyword">function</span>(m) dataDT[trainFlag == <span class="literal">FALSE</span>] %&gt;&gt;% &#123;calAccu(m, ., .$am)&#125;, mod))]</span><br><span class="line">setorder(gs, -testAccu, -trainAccu)</span><br><span class="line">print(gs)</span><br><span class="line"><span class="comment">#    minsplit maxdepth     mod trainAccu  testAccu</span></span><br><span class="line"><span class="comment"># 1:        2        8 &lt;rpart&gt;      1.00 0.8571429</span></span><br><span class="line"><span class="comment"># 2:        2        3 &lt;rpart&gt;      0.92 0.8571429</span></span><br><span class="line"><span class="comment"># 3:        5        3 &lt;rpart&gt;      0.88 0.8571429</span></span><br><span class="line"><span class="comment"># 4:        5        8 &lt;rpart&gt;      0.88 0.8571429</span></span><br><span class="line"><span class="comment"># 5:        2        1 &lt;rpart&gt;      0.84 0.7142857</span></span><br><span class="line"><span class="comment"># 6:        5        1 &lt;rpart&gt;      0.84 0.7142857</span></span><br><span class="line"><span class="comment"># 7:       10        1 &lt;rpart&gt;      0.84 0.7142857</span></span><br><span class="line"><span class="comment"># 8:       10        3 &lt;rpart&gt;      0.84 0.7142857</span></span><br><span class="line"><span class="comment"># 9:       10        8 &lt;rpart&gt;      0.84 0.7142857</span></span><br></pre></td></tr></table></figure>

<p>我是覺得寫起來有點麻煩XD，改成用<code>foreach</code> + <code>iterators</code>我覺得會好很多，code如下：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(data.table)</span><br><span class="line"><span class="keyword">library</span>(pipeR)</span><br><span class="line"><span class="keyword">library</span>(rpart)</span><br><span class="line"><span class="keyword">library</span>(foreach)</span><br><span class="line"><span class="keyword">library</span>(iterators)</span><br><span class="line"></span><br><span class="line">set.seed(<span class="number">245</span>)</span><br><span class="line">dataDT &lt;- data.table(mtcars) %&gt;&gt;% `[`(j = am := factor(am, labels = c(<span class="string">&quot;Automatic&quot;</span>, <span class="string">&quot;Manual&quot;</span>)))</span><br><span class="line">dataDT[ , trainFlag := !is.na(match(.I, sample.int(nrow(mtcars), floor(<span class="number">.8</span> * nrow(mtcars)))))]</span><br><span class="line"></span><br><span class="line">resDT &lt;- CJ(minsplit = c(<span class="number">2</span>, <span class="number">5</span>, <span class="number">10</span>), maxdepth = c(<span class="number">1</span>, <span class="number">3</span>, <span class="number">8</span>)) %&gt;&gt;%</span><br><span class="line">  &#123;</span><br><span class="line">    foreach(i = isplit(., as.list(.)), .final = rbindlist) %do% </span><br><span class="line">    &#123;</span><br><span class="line">      mod &lt;- rpart(am ~ hp + mpg, dataDT[trainFlag == <span class="literal">TRUE</span>], </span><br><span class="line">                   control = do.call(rpart.control, i$value))</span><br><span class="line">      trainAccu &lt;- dataDT[trainFlag == <span class="literal">TRUE</span>] %&gt;&gt;% &#123;mean(predict(mod, ., type = <span class="string">&quot;class&quot;</span>) == .$am)&#125;</span><br><span class="line">      testAccu &lt;- dataDT[trainFlag == <span class="literal">FALSE</span>] %&gt;&gt;% &#123;mean(predict(mod, ., type = <span class="string">&quot;class&quot;</span>) == .$am)&#125;</span><br><span class="line">      <span class="keyword">return</span>(cbind(i$value, data.table(mod = list(mod), trainAccu = trainAccu, testAccu = testAccu)))</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; %&gt;&gt;% setorder(-testAccu, -trainAccu)</span><br><span class="line">print(resDT)</span><br><span class="line"><span class="comment">#    minsplit maxdepth     mod trainAccu  testAccu</span></span><br><span class="line"><span class="comment"># 1:        2        8 &lt;rpart&gt;      1.00 0.8571429</span></span><br><span class="line"><span class="comment"># 2:        2        3 &lt;rpart&gt;      0.92 0.8571429</span></span><br><span class="line"><span class="comment"># 3:        5        3 &lt;rpart&gt;      0.88 0.8571429</span></span><br><span class="line"><span class="comment"># 4:        5        8 &lt;rpart&gt;      0.88 0.8571429</span></span><br><span class="line"><span class="comment"># 5:        2        1 &lt;rpart&gt;      0.84 0.7142857</span></span><br><span class="line"><span class="comment"># 6:        5        1 &lt;rpart&gt;      0.84 0.7142857</span></span><br><span class="line"><span class="comment"># 7:       10        1 &lt;rpart&gt;      0.84 0.7142857</span></span><br><span class="line"><span class="comment"># 8:       10        3 &lt;rpart&gt;      0.84 0.7142857</span></span><br><span class="line"><span class="comment"># 9:       10        8 &lt;rpart&gt;      0.84 0.7142857</span></span><br></pre></td></tr></table></figure>

<p><code>isplit</code>那裏是shadow copy，所以應該不會造成什麼問題</p>
<p>這樣寫會比用<code>tidyverse</code>或是直接<code>data.table</code> + <code>mapply</code>來的直覺，而且程式會相對精簡很多</p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>data.table</tag>
        <tag>Grid Search</tag>
      </tags>
  </entry>
  <entry>
    <title>Rcpp一些type轉換心得</title>
    <url>/posts/201703/2017-03-12-Rcpp-type-template.html</url>
    <content><![CDATA[<p>最近把RcppBlaze推上CRAN了</p>
<p>寫一下在做RcppBlaze::blaze_wrap學到的東西XD</p>
<a id="more"></a>

<p>主要是<code>Rcpp::traits::r_sexptype_traits</code>跟<code>Rcpp::traits::storage_type</code>的應用</p>
<p>先show一個<code>Rcpp::traits::r_sexptype_traits</code>簡單的例子</p>
<p>做兩個向量的相乘，在過程中轉成armadillo的column vector去做</p>
<p>因為Rcpp Export不能是一個template function</p>
<p>所以雖然你可以創一個像是eleMultiBase這樣的函數</p>
<p>可是沒辦法export它，所以只能另外在寫兩個函數去包裹…</p>
<p>然後在R裡面才判斷型別做輸出</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;RcppArmadillo.h&gt;</span></span></span><br><span class="line"><span class="comment">// [[Rcpp::depends(RcppArmadillo)]]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">int</span> RTYPE, <span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy</span><span class="params">(Rcpp::Vector&lt;RTYPE&gt;&amp; x, arma::Col&lt;T&gt;&amp; y)</span> </span>&#123;</span><br><span class="line">  y.set_size(x.<span class="built_in">size</span>());</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; x.<span class="built_in">size</span>(); ++i)</span><br><span class="line">    y[i] = x[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">int</span> RTYPE, <span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function">SEXP <span class="title">eleMultiBase</span><span class="params">(Rcpp::Vector&lt;RTYPE&gt;&amp; x, Rcpp::Vector&lt;RTYPE&gt;&amp; y)</span> </span>&#123;</span><br><span class="line">  arma::Col&lt;T&gt; x2, y2;</span><br><span class="line">  copy&lt;RTYPE, T&gt;(x, x2);</span><br><span class="line">  copy&lt;RTYPE, T&gt;(y, y2);</span><br><span class="line">  <span class="comment">/* or use following lines</span></span><br><span class="line"><span class="comment">  arma::Col&lt;T&gt; x2 = Rcpp::as&lt; arma::Col&lt;T&gt; &gt;(x), </span></span><br><span class="line"><span class="comment">    y2 = Rcpp::as&lt; arma::Col&lt;T&gt; &gt;(y);</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  <span class="keyword">return</span> Rcpp::wrap(x2 % y2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// [[Rcpp::export]]</span></span><br><span class="line"><span class="function">SEXP <span class="title">eleMulti_double</span><span class="params">(Rcpp::NumericVector x, Rcpp::NumericVector y)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">typedef</span> <span class="keyword">typename</span> Rcpp::NumericVector::stored_type valueType;</span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">int</span> RTYPE = Rcpp::traits::r_sexptype_traits&lt; valueType &gt;::rtype;</span><br><span class="line">  <span class="keyword">return</span> eleMultiBase&lt;RTYPE, valueType&gt;(x, y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// [[Rcpp::export]]</span></span><br><span class="line"><span class="function">SEXP <span class="title">eleMulti_int</span><span class="params">(Rcpp::IntegerVector x, Rcpp::IntegerVector y)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">typedef</span> <span class="keyword">typename</span> Rcpp::IntegerVector::stored_type valueType;</span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">int</span> RTYPE = Rcpp::traits::r_sexptype_traits&lt; valueType &gt;::rtype;</span><br><span class="line">  <span class="keyword">return</span> eleMultiBase&lt;RTYPE, valueType&gt;(x, y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** R</span></span><br><span class="line"><span class="comment">  eleMulti &lt;- function(x, y)&#123;</span></span><br><span class="line"><span class="comment">    if (typeof(x) == &quot;integer&quot;) &#123;</span></span><br><span class="line"><span class="comment">      return(eleMulti_int(1L:5L, 2L:6L))</span></span><br><span class="line"><span class="comment">    &#125; else if (typeof(x) == &quot;double&quot;)&#123;</span></span><br><span class="line"><span class="comment">      return(eleMulti_double(1L:5L, 2L:6L))</span></span><br><span class="line"><span class="comment">    &#125; else &#123;</span></span><br><span class="line"><span class="comment">      stop(&quot;Non-supported type!&quot;)</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">  &#125;</span></span><br><span class="line"><span class="comment">  eleMulti(1:5, 2:6)</span></span><br><span class="line"><span class="comment">  eleMulti(1L:5L, 2L:6L)</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<p>而<code>Rcpp::traits::storage_type</code>其實在寫套件的時候比較方便</p>
<p>我這想不到一個實際例子用在R上面的</p>
<p>不過在處理<code>RComplex</code>的時候就很方便</p>
<p>如果<code>y</code>是<code>Rcpp::ComplexVector</code>，要轉到<code>std::vector&lt;std::complex&gt;</code>這個型別的話，做法如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Rcpp.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;complex&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// [[Rcpp::export]]</span></span><br><span class="line"><span class="function"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt; <span class="built_in">std</span>::<span class="built_in">complex</span>&lt;<span class="keyword">double</span>&gt; &gt; <span class="title">complexVec</span><span class="params">(Rcpp::ComplexVector y)</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt; <span class="built_in">std</span>::<span class="built_in">complex</span>&lt;<span class="keyword">double</span>&gt; &gt; <span class="title">x</span><span class="params">(y.<span class="built_in">size</span>())</span></span>;</span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">int</span> RTYPE = Rcpp::traits::r_sexptype_traits&lt; <span class="built_in">std</span>::<span class="built_in">complex</span>&lt;<span class="keyword">double</span>&gt; &gt;::rtype;</span><br><span class="line">  <span class="keyword">for</span>( <span class="keyword">size_t</span> i=<span class="number">0U</span>L; i&lt;(<span class="keyword">size_t</span>)y.<span class="built_in">size</span>(); ++i )</span><br><span class="line">    x[i] = Rcpp::internal::caster&lt; <span class="keyword">typename</span> Rcpp::traits::storage_type&lt;RTYPE&gt;::type, <span class="built_in">std</span>::<span class="built_in">complex</span>&lt;<span class="keyword">double</span>&gt; &gt;( y[i] );</span><br><span class="line">  <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** R</span></span><br><span class="line"><span class="comment">  len &lt;- 5L</span></span><br><span class="line"><span class="comment">  y &lt;- complex(len, rnorm(len), rnorm(len))</span></span><br><span class="line"><span class="comment">  complexVec(y)</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<p>因為<code>RComplex</code>不是型別，所以只能透過<code>caster</code>跟<code>storage_type</code>去做適當轉換</p>
<p>想當初這個卡了我好久QQ，最後是爬RcppEigen的解法，才寫出對應的解決方法…</p>
<p>這篇分享到這，有任何疑問歡迎留言XD</p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>Rcpp</tag>
        <tag>RcppBlaze</tag>
        <tag>Rcpp Types</tag>
      </tags>
  </entry>
  <entry>
    <title>Transform Variables of R data.frame</title>
    <url>/posts/201704/2017-04-14-transform-variables-of-data-frame.html</url>
    <content><![CDATA[<p>有人在PTT問說，怎樣轉換R data.frame的多行column，連結：<a href="https://www.ptt.cc/bbs/R_Language/M.1492142292.A.C75.html">PTT文章</a></p>
<a id="more"></a>

<p>提醒：下面程式沒有判斷factor，如有factor請自行加入判斷式</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># data.table做法：</span></span><br><span class="line"><span class="keyword">library</span>(data.table)</span><br><span class="line">DT[ , lapply(.SD, <span class="keyword">function</span>(x)iconv(x,<span class="string">&quot;UTF8&quot;</span>, <span class="string">&quot;BIG5&quot;</span>))]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 如果有numeric或是integer column的話：</span></span><br><span class="line">DT[ , lapply(.SD, <span class="keyword">function</span>(x)&#123;</span><br><span class="line">  <span class="keyword">if</span> (is.character(x))</span><br><span class="line">    iconv(x,<span class="string">&quot;UTF8&quot;</span>, <span class="string">&quot;BIG5&quot;</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">return</span>(x)&#125;)]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># dplyr做法：</span></span><br><span class="line"><span class="keyword">library</span>(dplyr)</span><br><span class="line">DF %&gt;% mutate_each(funs(iconv(., <span class="string">&quot;UTF8&quot;</span>, <span class="string">&quot;BIG5&quot;</span>)))</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 如果有numeric或是integer column的話：</span></span><br><span class="line">DF %&gt;% mutate_if(is.character, funs(iconv(., <span class="string">&quot;UTF8&quot;</span>, <span class="string">&quot;BIG5&quot;</span>)))    </span><br><span class="line"> </span><br><span class="line"><span class="comment"># base函數解法：</span></span><br><span class="line">evalExpr &lt;- lapply(names(DF), <span class="keyword">function</span>(x)&#123;</span><br><span class="line">  bquote(iconv(.(as.symbol(x)), <span class="string">&quot;UTF8&quot;</span>,  <span class="string">&quot;BIG5&quot;</span>))</span><br><span class="line">&#125;)</span><br><span class="line">do.call(<span class="keyword">function</span>(<span class="keyword">...</span>) transform(DF, <span class="keyword">...</span>), evalExpr)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 如果有numeric或是integer column的話：</span></span><br><span class="line">evalExpr &lt;- lapply(names(DF)[sapply(DF, is.character)],</span><br><span class="line">                   <span class="keyword">function</span>(x) bquote(iconv(.(as.symbol(x)), <span class="string">&quot;UTF8&quot;</span>,  <span class="string">&quot;BIG5&quot;</span>)))</span><br><span class="line">do.call(<span class="keyword">function</span>(<span class="keyword">...</span>) transform(DF, <span class="keyword">...</span>), evalExpr)</span><br></pre></td></tr></table></figure>

<p>當然也可以直接用column name帶入去做轉換：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">lapply(names(DF), <span class="keyword">function</span>(x)&#123;</span><br><span class="line">   iconv(DF[[x]], <span class="string">&quot;UTF8&quot;</span>,  <span class="string">&quot;BIG5&quot;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或是</span></span><br><span class="line"></span><br><span class="line">lapply(names(DF)[sapply(DF, is.character)], <span class="keyword">function</span>(x)&#123;</span><br><span class="line">   iconv(DF[[x]], <span class="string">&quot;UTF8&quot;</span>,  <span class="string">&quot;BIG5&quot;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>只是除了要多轉一次data.frame之外，第二個還要把numeric, integer column併回去  </p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>data.frame</tag>
        <tag>variable transformation</tag>
      </tags>
  </entry>
  <entry>
    <title>Using caret to tune the model parameters</title>
    <url>/posts/201703/2017-03-14-using-caret-to-tune-model-parameters.html</url>
    <content><![CDATA[<p>看到陳景翔老師在社團PO了caret這個套件(<a href="https://www.facebook.com/groups/1210634969026548/permalink/1276150242475020/">原文</a>)，興起就去玩了一下</p>
<p>這套件東西滿多的，一時半會也沒辦法全部看懂</p>
<p>不過就以repeated cv方式tuning的方式，大概不會跳脫下面示範的範疇</p>
<a id="more"></a>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(caret)</span><br><span class="line">checkInstall(<span class="string">&quot;xgboost&quot;</span>) <span class="comment"># check xgboost is installed!</span></span><br><span class="line"></span><br><span class="line">numCV &lt;- <span class="number">3L</span></span><br><span class="line">cvFold &lt;- <span class="number">10L</span></span><br><span class="line">ratioTrain &lt;- <span class="number">0.6</span></span><br><span class="line"><span class="comment"># 30 tuning model and 1 final model</span></span><br><span class="line">numSeeds &lt;- <span class="number">4L</span> * numCV</span><br><span class="line"><span class="comment"># 4 is (tuneLength + 1L), where tuneLength is the parameter of train with default value 3</span></span><br><span class="line">set.seed(<span class="number">1</span>)</span><br><span class="line">seeds &lt;- replicate(numCV * cvFold + <span class="number">1L</span>, sample.int(<span class="number">2</span>^<span class="number">31</span>-<span class="number">1</span>, numSeeds), simplify = <span class="literal">FALSE</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># split training / testing set</span></span><br><span class="line">trIndex &lt;- createDataPartition(iris$Species, <span class="number">1L</span>, ratioTrain, <span class="literal">FALSE</span>)</span><br><span class="line">irisTrain &lt;- iris[trIndex, ]</span><br><span class="line">irisTest &lt;- iris[setdiff(<span class="number">1L</span>:nrow(iris), trIndex), ]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 10-fold and repeat 3 times with seeds</span></span><br><span class="line">ctrl &lt;- trainControl(<span class="string">&quot;repeatedcv&quot;</span>, cvFold, numCV, seeds = seeds)</span><br><span class="line"></span><br><span class="line"><span class="comment">#### auto-tuning ####</span></span><br><span class="line">xgFit1 &lt;- train(Species ~ ., data = irisTrain, trControl = ctrl,</span><br><span class="line">                method = <span class="string">&quot;xgbTree&quot;</span>, num_class = nlevels(iris$Species))</span><br><span class="line">xgFit1</span><br><span class="line"></span><br><span class="line"><span class="comment"># training result (auto-tuning)</span></span><br><span class="line">confusionMatrix(iris.Train$Species, predict(xgFit1, iris.Train))</span><br><span class="line"><span class="comment"># testing result (auto-tuning)</span></span><br><span class="line">confusionMatrix(iris.Test$Species, predict(xgFit1, iris.Test))</span><br><span class="line"></span><br><span class="line"><span class="comment">#### specific grid ####</span></span><br><span class="line"><span class="comment"># check the model parameters</span></span><br><span class="line">modelLookup(<span class="string">&quot;xgbTree&quot;</span>)</span><br><span class="line"><span class="comment"># expand training grid</span></span><br><span class="line">trGrid &lt;- expand.grid(nrounds = c(<span class="number">50</span>, <span class="number">100</span>), max_depth = c(<span class="number">10</span>, <span class="number">12</span>), eta = c(<span class="number">0.1</span>, <span class="number">0.2</span>),  </span><br><span class="line">                      gamma = <span class="number">0</span>, colsample_bytree = c(<span class="number">0.5</span>, <span class="number">0.6</span>), min_child_weight = <span class="number">1</span>)</span><br><span class="line"><span class="comment"># start to train model</span></span><br><span class="line">xgFit2 &lt;- train(Species ~ .,  data = iris.Train,</span><br><span class="line">                trControl = ctrl,  method = <span class="string">&quot;xgbTree&quot;</span>,</span><br><span class="line">                tuneGrid = trGrid,  num_class = nlevels(iris$Species))</span><br><span class="line">xgFit2</span><br><span class="line"></span><br><span class="line"><span class="comment"># training result (auto-tuning)</span></span><br><span class="line">confusionMatrix(iris.Train$Species, predict(xgFit2, iris.Train))</span><br><span class="line"><span class="comment"># testing result (auto-tuning)</span></span><br><span class="line">confusionMatrix(iris.Test$Species, predict(xgFit2, iris.Test))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>caret</tag>
        <tag>parameters tuning</tag>
      </tags>
  </entry>
  <entry>
    <title>MxNet所提供的csv data iterator</title>
    <url>/posts/201704/2017-04-16-mxnet-io-csviter.html</url>
    <content><![CDATA[<p>這篇是參考mxnet的一個example來的<a href="https://github.com/dmlc/mxnet/tree/e7514fe1b3265aaf15870b124bb6ed0edd82fa76/example/kaggle-ndsb2">來源</a></p>
<p>而該篇所使用的資料是這一個比賽NDSB-II所提供的，<a href="https://www.kaggle.com/c/second-annual-data-science-bowl/data">請點我</a></p>
<a id="more"></a>

<p>登入Kaggle把Data裡面的四個zip下載下來</p>
<ol>
<li><code>sample_submission_validate.csv.zip</code></li>
<li><code>train.csv.zip</code></li>
<li><code>train.zip</code></li>
<li><code>validate.zip</code></li>
</ol>
<p>MxNet提供了一個Python去做Preprocessing</p>
<p>因為MxNet沒有提供R版本，所以我就寫了一版R的processing放在github上<a href="https://github.com/ChingChuan-Chen/mxnet-kaggle-ndsb2-example">Repo連結</a></p>
<p>從Kaggle下載zip下來之後，放到一個資料夾(為了說明方便，這個資料夾就叫做root path)裡面</p>
<p>並從我的github repository clone下我建立的R專案，先跑<code>preprocessing.R</code></p>
<p>接下來，我們就可以跑MxNet的train.R了：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Train.R for Second Annual Data Science Bowl</span></span><br><span class="line"><span class="comment"># Deep learning model with GPU support</span></span><br><span class="line"><span class="comment"># Please refer to https://mxnet.readthedocs.org/en/latest/build.html#r-package-installation</span></span><br><span class="line"><span class="comment"># for installation guide</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span>(mxnet)</span><br><span class="line"><span class="keyword">require</span>(data.table)</span><br><span class="line"></span><br><span class="line"><span class="comment">##A lenet style net, takes difference of each frame as input.</span></span><br><span class="line">get.lenet &lt;- <span class="keyword">function</span>() &#123;</span><br><span class="line">  <span class="keyword">source</span> &lt;- mx.symbol.Variable(<span class="string">&quot;data&quot;</span>)</span><br><span class="line">  <span class="keyword">source</span> &lt;- (<span class="keyword">source</span>-<span class="number">128</span>) / <span class="number">128</span></span><br><span class="line">  frames &lt;- mx.symbol.SliceChannel(<span class="keyword">source</span>, num.outputs = <span class="number">30</span>)</span><br><span class="line">  diffs &lt;- list()</span><br><span class="line">  <span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span>:<span class="number">29</span>) &#123;</span><br><span class="line">    diffs &lt;- c(diffs, frames[[i + <span class="number">1</span>]] - frames[[i]])</span><br><span class="line">  &#125;</span><br><span class="line">  diffs$num.args = <span class="number">29</span></span><br><span class="line">  <span class="keyword">source</span> &lt;- mxnet:::mx.varg.symbol.Concat(diffs)</span><br><span class="line">  net &lt;-</span><br><span class="line">    mx.symbol.Convolution(<span class="keyword">source</span>, kernel = c(<span class="number">5</span>, <span class="number">5</span>), num.filter = <span class="number">40</span>)</span><br><span class="line">  net &lt;- mx.symbol.BatchNorm(net, fix.gamma = <span class="literal">TRUE</span>)</span><br><span class="line">  net &lt;- mx.symbol.Activation(net, act.type = <span class="string">&quot;relu&quot;</span>)</span><br><span class="line">  net &lt;-</span><br><span class="line">    mx.symbol.Pooling(</span><br><span class="line">      net, pool.type = <span class="string">&quot;max&quot;</span>, kernel = c(<span class="number">2</span>, <span class="number">2</span>), stride = c(<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">    )</span><br><span class="line">  net &lt;-</span><br><span class="line">    mx.symbol.Convolution(net, kernel = c(<span class="number">3</span>, <span class="number">3</span>), num.filter = <span class="number">40</span>)</span><br><span class="line">  net &lt;- mx.symbol.BatchNorm(net, fix.gamma = <span class="literal">TRUE</span>)</span><br><span class="line">  net &lt;- mx.symbol.Activation(net, act.type = <span class="string">&quot;relu&quot;</span>)</span><br><span class="line">  net &lt;-</span><br><span class="line">    mx.symbol.Pooling(</span><br><span class="line">      net, pool.type = <span class="string">&quot;max&quot;</span>, kernel = c(<span class="number">2</span>, <span class="number">2</span>), stride = c(<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">    )</span><br><span class="line">  <span class="comment"># first fullc</span></span><br><span class="line">  flatten &lt;- mx.symbol.Flatten(net)</span><br><span class="line">  flatten &lt;- mx.symbol.Dropout(flatten)</span><br><span class="line">  fc1 &lt;- mx.symbol.FullyConnected(data = flatten, num.hidden = <span class="number">600</span>)</span><br><span class="line">  <span class="comment"># Name the final layer as softmax so it auto matches the naming of data iterator</span></span><br><span class="line">  <span class="comment"># Otherwise we can also change the provide_data in the data iter</span></span><br><span class="line">  <span class="keyword">return</span>(mx.symbol.LogisticRegressionOutput(data = fc1, name = <span class="string">&#x27;softmax&#x27;</span>))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">network &lt;- get.lenet()</span><br><span class="line">batch_size &lt;- <span class="number">32</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># CSVIter is uesed here, since the data can&#x27;t fit into memory</span></span><br><span class="line">data_train &lt;- mx.io.CSVIter(</span><br><span class="line">  data.csv = <span class="string">&quot;train-64x64-data.csv&quot;</span>, data.shape = c(<span class="number">64</span>, <span class="number">64</span>, <span class="number">30</span>),</span><br><span class="line">  label.csv = <span class="string">&quot;train-systole.csv&quot;</span>, label.shape = <span class="number">600</span>,</span><br><span class="line">  batch.size = batch_size</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">data_validate &lt;- mx.io.CSVIter(</span><br><span class="line">  data.csv = <span class="string">&quot;validate-64x64-data.csv&quot;</span>,</span><br><span class="line">  data.shape = c(<span class="number">64</span>, <span class="number">64</span>, <span class="number">30</span>),</span><br><span class="line">  batch.size = <span class="number">1</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Custom evaluation metric on CRPS.</span></span><br><span class="line">mx.metric.CRPS &lt;- mx.metric.custom(<span class="string">&quot;CRPS&quot;</span>, <span class="keyword">function</span>(label, pred) &#123;</span><br><span class="line">  pred &lt;- as.array(pred)</span><br><span class="line">  label &lt;- as.array(label)</span><br><span class="line">  <span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span>:dim(pred)[<span class="number">2</span>]) &#123;</span><br><span class="line">    <span class="keyword">for</span> (j <span class="keyword">in</span> <span class="number">1</span>:(dim(pred)[<span class="number">1</span>] - <span class="number">1</span>)) &#123;</span><br><span class="line">      <span class="keyword">if</span> (pred[j, i] &gt; pred[j + <span class="number">1</span>, i]) &#123;</span><br><span class="line">        pred[j + <span class="number">1</span>, i] = pred[j, i]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span>(sum((label - pred) ^ <span class="number">2</span>) / length(label))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Training the stytole net</span></span><br><span class="line">mx.set.seed(<span class="number">0</span>)</span><br><span class="line">stytole_model &lt;- mx.model.FeedForward.create(</span><br><span class="line">  X = data_train,</span><br><span class="line">  ctx = mx.gpu(<span class="number">0</span>),</span><br><span class="line">  symbol = network,</span><br><span class="line">  num.round = <span class="number">65</span>,</span><br><span class="line">  learning.rate = <span class="number">0.001</span>,</span><br><span class="line">  wd = <span class="number">0.00001</span>,</span><br><span class="line">  momentum = <span class="number">0.9</span>,</span><br><span class="line">  eval.metric = mx.metric.CRPS</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Predict stytole</span></span><br><span class="line">stytole_prob = predict(stytole_model, data_validate)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Training the diastole net</span></span><br><span class="line">network = get.lenet()</span><br><span class="line">batch_size = <span class="number">32</span></span><br><span class="line">data_train &lt;-</span><br><span class="line">  mx.io.CSVIter(</span><br><span class="line">    data.csv = <span class="string">&quot;./train-64x64-data.csv&quot;</span>, data.shape = c(<span class="number">64</span>, <span class="number">64</span>, <span class="number">30</span>),</span><br><span class="line">    label.csv = <span class="string">&quot;./train-diastole.csv&quot;</span>, label.shape = <span class="number">600</span>,</span><br><span class="line">    batch.size = batch_size</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">diastole_model = mx.model.FeedForward.create(</span><br><span class="line">  X = data_train,</span><br><span class="line">  ctx = mx.gpu(<span class="number">0</span>),</span><br><span class="line">  symbol = network,</span><br><span class="line">  num.round = <span class="number">65</span>,</span><br><span class="line">  learning.rate = <span class="number">0.001</span>,</span><br><span class="line">  wd = <span class="number">0.00001</span>,</span><br><span class="line">  momentum = <span class="number">0.9</span>,</span><br><span class="line">  eval.metric = mx.metric.CRPS</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Predict diastole</span></span><br><span class="line">diastole_prob = predict(diastole_model, data_validate)</span><br><span class="line"></span><br><span class="line">accumulate_result &lt;- <span class="keyword">function</span>(validate_lst, prob) &#123;</span><br><span class="line">  t &lt;- read.table(validate_lst, sep = <span class="string">&quot;,&quot;</span>)</span><br><span class="line">  p &lt;- cbind(t[,<span class="number">1</span>], t(prob))</span><br><span class="line">  dt &lt;- as.data.table(p)</span><br><span class="line">  <span class="keyword">return</span>(dt[, lapply(.SD, mean), by = V1])</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">stytole_result = as.data.frame(accumulate_result(<span class="string">&quot;./validate-label.csv&quot;</span>, stytole_prob))</span><br><span class="line">diastole_result = as.data.frame(accumulate_result(<span class="string">&quot;./validate-label.csv&quot;</span>, diastole_prob))</span><br><span class="line"></span><br><span class="line">train_csv &lt;- read.table(<span class="string">&quot;./train-label.csv&quot;</span>, sep = <span class="string">&#x27;,&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># we have 2 person missing due to frame selection, use udibr&#x27;s hist result instead</span></span><br><span class="line">doHist &lt;- <span class="keyword">function</span>(data) &#123;</span><br><span class="line">  res &lt;- rep(<span class="number">0</span>, <span class="number">600</span>)</span><br><span class="line">  <span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span>:length(data)) &#123;</span><br><span class="line">    <span class="keyword">for</span> (j <span class="keyword">in</span> round(data[i]):<span class="number">600</span>) &#123;</span><br><span class="line">      res[j] = res[j] + <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span>(res / length(data))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">hSystole = doHist(train_csv[, <span class="number">2</span>])</span><br><span class="line">hDiastole = doHist(train_csv[, <span class="number">3</span>])</span><br><span class="line"></span><br><span class="line">res &lt;- read.table(<span class="string">&quot;data/sample_submission_validate.csv&quot;</span>, sep = <span class="string">&quot;,&quot;</span>, header = <span class="literal">TRUE</span>, stringsAsFactors = <span class="literal">FALSE</span>)</span><br><span class="line"></span><br><span class="line">submission_helper &lt;- <span class="keyword">function</span>(pred) &#123;</span><br><span class="line">  <span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">2</span>:length(pred)) &#123;</span><br><span class="line">    <span class="keyword">if</span> (pred[i] &lt; pred[i - <span class="number">1</span>]) &#123;</span><br><span class="line">      pred[i] = pred[i - <span class="number">1</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span>(pred)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span>:nrow(res)) &#123;</span><br><span class="line">  key &lt;- unlist(strsplit(res$Id[i], <span class="string">&quot;_&quot;</span>))[<span class="number">1</span>]</span><br><span class="line">  target &lt;- unlist(strsplit(res$Id[i], <span class="string">&quot;_&quot;</span>))[<span class="number">2</span>]</span><br><span class="line">  <span class="keyword">if</span> (key %<span class="keyword">in</span>% stytole_result$V1) &#123;</span><br><span class="line">    <span class="keyword">if</span> (target == <span class="string">&#x27;Diastole&#x27;</span>) &#123;</span><br><span class="line">      res[i, <span class="number">2</span>:<span class="number">601</span>] &lt;- submission_helper(diastole_result[which(diastole_result$V1 == key), <span class="number">2</span>:<span class="number">601</span>])</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      res[i, <span class="number">2</span>:<span class="number">601</span>] &lt;- submission_helper(stytole_result[which(stytole_result$V1 == key), <span class="number">2</span>:<span class="number">601</span>])</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (target == <span class="string">&#x27;Diastole&#x27;</span>) &#123;</span><br><span class="line">      res[i, <span class="number">2</span>:<span class="number">601</span>] &lt;- hDiastole</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      res[i, <span class="number">2</span>:<span class="number">601</span>] &lt;- hSystole</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">write.table(res, file = <span class="string">&quot;submission.csv&quot;</span>, sep = <span class="string">&quot;,&quot;</span>, quote = <span class="literal">FALSE</span>, row.names = <span class="literal">FALSE</span>)</span><br></pre></td></tr></table></figure>

<p>本篇的重點在於下面這段R，用MxNet提供的mx.io.CSVIter去batch的訓練Net模型</p>
<p>而這裡的<code>train-64x64-data.csv</code>，每一行都是經過resized的<code>30</code>張圖片，所以<code>data.shape</code>是<code>64 x 64 x 30</code></p>
<p>而<code>label</code>則每一行是長度<code>600</code>的binary vector，其shape設定成<code>600</code></p>
<p>然後給好<code>batch.size</code>，MxNet就可以批次的從csv抓資料出來train模型了</p>
<p>不用一股腦地把資料全部匯入到R裡面再做，不然再多的記憶體也用不完Orz</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">data_train &lt;- mx.io.CSVIter(</span><br><span class="line">  data.csv = <span class="string">&quot;train-64x64-data.csv&quot;</span>, data.shape = c(<span class="number">64</span>, <span class="number">64</span>, <span class="number">30</span>),</span><br><span class="line">  label.csv = <span class="string">&quot;train-systole.csv&quot;</span>, label.shape = <span class="number">600</span>,</span><br><span class="line">  batch.size = batch_size</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>MxNet</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>MxNet</tag>
        <tag>Deep Learning</tag>
        <tag>Data Iterator</tag>
      </tags>
  </entry>
  <entry>
    <title>RcppArmadillo call F77 blas/lapack</title>
    <url>/posts/201704/2017-04-23-RcppArmadillo-call-F77-blas-lapacl.html</url>
    <content><![CDATA[<p>前幾篇有提過在Rcpp, RcppEigen中call F77 blas/lapack</p>
<p>最近也大概抓到RcppArmadillo call F77的方法</p>
<p>因為Armadillo本身就有宣告BLAS跟LAPACK functions</p>
<p>其實只需要include Armadillo宣告的header file即可</p>
<a id="more"></a>

<p>要include的是這三個檔案：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;armadillo_bits/typedef_elem.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;armadillo_bits/def_blas.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;armadillo_bits/def_lapack.hpp&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>不過我試了一下Armadillo並沒有import R全部的BLAS/LAPACK functions</p>
<p>所以遇到沒有的就要自己宣告，我這提供一個簡單例子宣告自己R有但Armadillo沒有的LAPACK function：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// [[Rcpp::depends(RcppArmadillo)]]</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;RcppArmadillo.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;armadillo_bits/typedef_elem.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;armadillo_bits/def_blas.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;armadillo_bits/def_lapack.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> !defined(ARMA_BLAS_CAPITALS)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> arma_dposv dposv</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> arma_dposv DPOSV</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> &#123;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">arma_fortran</span><span class="params">(arma_dposv)</span><span class="params">(<span class="keyword">char</span>* trans, blas_int* n, blas_int* nrhs, <span class="keyword">double</span>* a, blas_int* lda, </span></span></span><br><span class="line"><span class="function"><span class="params">                    <span class="keyword">double</span>*  b, blas_int* ldb, blas_int* info)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// [[Rcpp::export]]</span></span><br><span class="line"><span class="function">arma::vec <span class="title">wlssolver</span><span class="params">(arma::mat X, arma::vec w, arma::vec y)</span></span>&#123;</span><br><span class="line">  blas_int info = <span class="number">0</span>, nrhs = <span class="number">1</span>, k = blas_int(X.n_cols);</span><br><span class="line">  <span class="keyword">char</span> uplo = <span class="string">&#x27;L&#x27;</span>;</span><br><span class="line">  arma::mat XWX = X.t() * (X.each_col() % w);</span><br><span class="line">  arma::vec Xy = X.t() * (y % w);</span><br><span class="line">  arma_fortran(arma_dposv)(&amp;uplo, &amp;k, &amp;nrhs, XWX.memptr(), &amp;k, Xy.memptr(), &amp;k, &amp;info);</span><br><span class="line">  <span class="keyword">return</span>(Xy);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>上面這個script是用lapack中解正定對稱矩陣linear system的函數去求WLS的迴歸係數</p>
<p>簡單的R執行範例：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">n &lt;- <span class="number">20</span></span><br><span class="line">p &lt;- <span class="number">3</span></span><br><span class="line">X &lt;- matrix(rnorm(n * p), n , p)</span><br><span class="line">beta &lt;- rnorm(p)</span><br><span class="line">w &lt;- rgamma(nrow(X), <span class="number">2</span>, <span class="number">0.5</span>)</span><br><span class="line">y &lt;- <span class="number">3</span> + X %*% beta + rnorm(n)</span><br><span class="line">wlssolver(X, w, y)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>Rcpp</tag>
        <tag>RcppArmadillo</tag>
        <tag>BLAS</tag>
        <tag>LAPACK</tag>
      </tags>
  </entry>
  <entry>
    <title>Introduce to foreach and iterators</title>
    <url>/posts/201704/2017-04-23-introduce-to-foreach-and-iterators.html</url>
    <content><![CDATA[<h2 id="Introduction-apply-functions-Reduce-and-do-call"><a href="#Introduction-apply-functions-Reduce-and-do-call" class="headerlink" title="Introduction *apply functions, Reduce and do.call"></a>Introduction <code>*apply</code> functions, <code>Reduce</code> and <code>do.call</code></h2><p>我一直沒時間寫<code>*apply</code>系列函數的介紹</p>
<p>不過最近用了<code>foreach</code>跟<code>iterators</code></p>
<p>發現其實這兩個套件就可以完全取代<code>*apply</code>系列函數</p>
<p>而且對新手來說寫起來也不容易搞錯</p>
<a id="more"></a>


<p>這裡先簡介一下<code>*apply</code>系列函數</p>
<ol>
<li><code>apply</code></li>
</ol>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">m &lt;- matrix(<span class="number">1</span>:<span class="number">6</span>, <span class="number">3</span>)</span><br><span class="line"><span class="comment"># input matrix, output vector/matrix/list</span></span><br><span class="line">apply(m, <span class="number">1</span>, sum)  <span class="comment"># output vector</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [1] 5 7 9</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">apply(m, <span class="number">1</span>, `*`, <span class="number">2</span>)  <span class="comment"># output matrix</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">##      [,1] [,2] [,3]</span><br><span class="line">## [1,]    2    4    6</span><br><span class="line">## [2,]    8   10   12</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">apply(m, <span class="number">1</span>, <span class="keyword">function</span>(v) rep(v[<span class="number">1</span>], v[<span class="number">2</span>]))  <span class="comment"># output list</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [[1]]</span><br><span class="line">## [1] 1 1 1 1</span><br><span class="line">## </span><br><span class="line">## [[2]]</span><br><span class="line">## [1] 2 2 2 2 2</span><br><span class="line">## </span><br><span class="line">## [[3]]</span><br><span class="line">## [1] 3 3 3 3 3 3</span><br></pre></td></tr></table></figure>

<ol start="2">
<li><code>lapply</code></li>
</ol>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># input vector/list, output list</span></span><br><span class="line">lapply(<span class="number">1</span>:<span class="number">3</span>, `*`, <span class="number">2</span>)  <span class="comment"># input vector</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [[1]]</span><br><span class="line">## [1] 2</span><br><span class="line">## </span><br><span class="line">## [[2]]</span><br><span class="line">## [1] 4</span><br><span class="line">## </span><br><span class="line">## [[3]]</span><br><span class="line">## [1] 6</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">lapply(as.list(<span class="number">1</span>:<span class="number">3</span>), `*`, <span class="number">2</span>)  <span class="comment"># input list</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [[1]]</span><br><span class="line">## [1] 2</span><br><span class="line">## </span><br><span class="line">## [[2]]</span><br><span class="line">## [1] 4</span><br><span class="line">## </span><br><span class="line">## [[3]]</span><br><span class="line">## [1] 6</span><br></pre></td></tr></table></figure>


<ol start="3">
<li><code>sapply</code></li>
</ol>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># input vector/list, output vector/matrix/list</span></span><br><span class="line">sapply(<span class="number">1</span>:<span class="number">3</span>, `*`, <span class="number">2</span>)  <span class="comment"># input vector, output vector</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [1] 2 4 6</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">sapply(<span class="number">1</span>:<span class="number">3</span>, rep, each = <span class="number">2</span>)  <span class="comment"># input vector, output matrix</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">##      [,1] [,2] [,3]</span><br><span class="line">## [1,]    1    2    3</span><br><span class="line">## [2,]    1    2    3</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">sapply(<span class="number">1</span>:<span class="number">3</span>, rep, x = <span class="number">2</span>)  <span class="comment"># input vector, output list</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [[1]]</span><br><span class="line">## [1] 2</span><br><span class="line">## </span><br><span class="line">## [[2]]</span><br><span class="line">## [1] 2 2</span><br><span class="line">## </span><br><span class="line">## [[3]]</span><br><span class="line">## [1] 2 2 2</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">sapply(as.list(<span class="number">1</span>:<span class="number">3</span>), `*`, <span class="number">2</span>)  <span class="comment"># input list, output vector</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [1] 2 4 6</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">sapply(as.list(<span class="number">1</span>:<span class="number">3</span>), rep, each = <span class="number">2</span>)  <span class="comment"># input list, output matrix</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">##      [,1] [,2] [,3]</span><br><span class="line">## [1,]    1    2    3</span><br><span class="line">## [2,]    1    2    3</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">sapply(as.list(<span class="number">1</span>:<span class="number">3</span>), rep, x = <span class="number">2</span>)  <span class="comment"># input list, output list</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [[1]]</span><br><span class="line">## [1] 2</span><br><span class="line">## </span><br><span class="line">## [[2]]</span><br><span class="line">## [1] 2 2</span><br><span class="line">## </span><br><span class="line">## [[3]]</span><br><span class="line">## [1] 2 2 2</span><br></pre></td></tr></table></figure>

<ol start="4">
<li><code>mapply</code></li>
</ol>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># multiple inputs, output vector/matrix/list stick list output by using `SIMPLIFY = FALSE`</span></span><br><span class="line">mapply(<span class="keyword">function</span>(x, y) x + y, <span class="number">1</span>:<span class="number">3</span>, as.list(<span class="number">2</span>:<span class="number">4</span>))  <span class="comment"># input vector and list, output vector</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [1] 3 5 7</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">mapply(<span class="keyword">function</span>(x, y) rep(x * y, <span class="number">2</span>), <span class="number">1</span>:<span class="number">3</span>, as.list(<span class="number">2</span>:<span class="number">4</span>))  <span class="comment"># input vector and list, output matrix</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">##      [,1] [,2] [,3]</span><br><span class="line">## [1,]    2    6   12</span><br><span class="line">## [2,]    2    6   12</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">mapply(<span class="keyword">function</span>(x, y) x + y, <span class="number">1</span>:<span class="number">3</span>, as.list(<span class="number">2</span>:<span class="number">4</span>), SIMPLIFY = <span class="literal">FALSE</span>)  <span class="comment"># input vector and list, output list</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [[1]]</span><br><span class="line">## [1] 3</span><br><span class="line">## </span><br><span class="line">## [[2]]</span><br><span class="line">## [1] 5</span><br><span class="line">## </span><br><span class="line">## [[3]]</span><br><span class="line">## [1] 7</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">mapply(<span class="keyword">function</span>(x, y) rep(x, y), <span class="number">1</span>:<span class="number">3</span>, as.list(<span class="number">2</span>:<span class="number">4</span>))  <span class="comment"># input vector and list, output list</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [[1]]</span><br><span class="line">## [1] 1 1</span><br><span class="line">## </span><br><span class="line">## [[2]]</span><br><span class="line">## [1] 2 2 2</span><br><span class="line">## </span><br><span class="line">## [[3]]</span><br><span class="line">## [1] 3 3 3 3</span><br></pre></td></tr></table></figure>

<ol start="5">
<li><code>tapply</code></li>
</ol>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># input two vectors, one is value and the other one is group.  output vector/matrix</span></span><br><span class="line">tapply(<span class="number">1</span>:<span class="number">6</span>, rep(<span class="number">1</span>:<span class="number">2</span>, <span class="number">3</span>), sum)</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">##  1  2 </span><br><span class="line">##  9 12</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">tapply(<span class="number">1</span>:<span class="number">6</span>, rep(<span class="number">1</span>:<span class="number">2</span>, <span class="number">3</span>), `+`, <span class="number">1</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## $&#96;1&#96;</span><br><span class="line">## [1] 2 4 6</span><br><span class="line">## </span><br><span class="line">## $&#96;2&#96;</span><br><span class="line">## [1] 3 5 7</span><br></pre></td></tr></table></figure>

<p>簡單掃過<code>apply</code>系列之後，有沒有覺得光要弄懂輸出什麼格式就很折磨人了…</p>
<p>這裡額外提一下<code>do.call</code>這個指令</p>
<p><code>do.call</code>是<code>do a function call</code>的意思</p>
<p>所以如果我們要把<code>list</code>的資料合併再一起</p>
<p>那我們就可以執行一個<code>c</code>/<code>cbind</code>/<code>rbind</code>的function call</p>
<p>把<code>list</code>裡面的element當成<code>input</code>丟入這個function call，例子如下：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">do.call(c, list(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>))</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [1] 1 2 3</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">do.call(cbind, list(<span class="number">1</span>:<span class="number">2</span>, <span class="number">2</span>:<span class="number">3</span>, <span class="number">3</span>:<span class="number">4</span>))</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">##      [,1] [,2] [,3]</span><br><span class="line">## [1,]    1    2    3</span><br><span class="line">## [2,]    2    3    4</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">do.call(rbind, list(<span class="number">1</span>:<span class="number">2</span>, <span class="number">2</span>:<span class="number">3</span>, <span class="number">3</span>:<span class="number">4</span>))</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">##      [,1] [,2]</span><br><span class="line">## [1,]    1    2</span><br><span class="line">## [2,]    2    3</span><br><span class="line">## [3,]    3    4</span><br></pre></td></tr></table></figure>

<p>這裡可能有人學過<code>Reduce</code>這個函數</p>
<p>雖然寫法也差不多，像是：<code>Reduce(c, list(1, 2, 3))</code>這樣</p>
<p>但是其實差異還是滿大的，我這邊簡單呈現一下<code>do.call</code>跟<code>Reduce</code>的差異</p>
<p>假設一個<code>list</code>有四個elements，那<code>Reduce</code>跟<code>do.call</code>分別的做法如下：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">c(c(c(<span class="number">1</span>, <span class="number">2</span>), <span class="number">3</span>), <span class="number">4</span>)  <span class="comment"># &lt;= Reduce的做法</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [1] 1 2 3 4</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">c(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)  <span class="comment"># &lt;= do.call的做法</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [1] 1 2 3 4</span><br></pre></td></tr></table></figure>

<p>可以看出<code>Reduce</code>是兩兩做，所以他在內部處理的時候需要不斷擴充output vector/matrix的長度</p>
<p>但是<code>do.call</code>是一次做完，所以<code>do.call</code>就不需要擴充長度</p>
<p>效率方面可以自己動手測測看，會比較有感</p>
<p>那<code>Reduce</code>要幹嘛用？其實像是operator都只能輸入兩個參數，這情境就只能用<code>Reduce</code></p>
<p>或是有一個<code>list</code>，element都是<code>data.frame</code>，你要根據每個element的<code>id</code>欄位做合併</p>
<p>那這時候你能用的函數也只有<code>merge</code>而已，簡單範例如下：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">listDF &lt;- list(data.frame(id = <span class="number">1</span>:<span class="number">5</span>, V1 = rnorm(<span class="number">5</span>)), data.frame(id = <span class="number">1</span>:<span class="number">5</span>, V2 = rnorm(<span class="number">5</span>)), data.frame(id = <span class="number">1</span>:<span class="number">5</span>, V3 = rnorm(<span class="number">5</span>)))</span><br><span class="line">Reduce(<span class="keyword">function</span>(x, y) merge(x, y, by = <span class="string">&quot;id&quot;</span>), listDF)</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">##   id         V1         V2         V3</span><br><span class="line">## 1  1  0.5019189  1.9036192 -1.6574498</span><br><span class="line">## 2  2 -1.2667358  0.3022502  0.1295988</span><br><span class="line">## 3  3 -0.7827332 -3.4698064  0.4290014</span><br><span class="line">## 4  4 -1.6435900  1.0705252  2.0689225</span><br><span class="line">## 5  5 -0.4572341 -0.1567469 -0.1389343</span><br></pre></td></tr></table></figure>

<p>講那麼久，還沒到正題Orz</p>
<h2 id="foreach"><a href="#foreach" class="headerlink" title="foreach"></a><code>foreach</code></h2><p>接下來，我們來進入正題吧！</p>
<p><code>foreach</code>的用法相當直覺，我們從最簡單的case開始：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">foreach(x = <span class="number">1</span>:<span class="number">3</span>) %do% &#123;</span><br><span class="line">    x + <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [[1]]</span><br><span class="line">## [1] 2</span><br><span class="line">## </span><br><span class="line">## [[2]]</span><br><span class="line">## [1] 3</span><br><span class="line">## </span><br><span class="line">## [[3]]</span><br><span class="line">## [1] 4</span><br></pre></td></tr></table></figure>

<p>輸入一個vector: 1:3，對每一個element做加一的動作，然後輸出是<code>list</code></p>
<p>除非調整<code>foreach</code>的參數，不然輸出絕對是<code>list</code>，這是<code>foreach</code>第一個特性</p>
<p><code>foreach</code>這個函數會得到一個物件，而透過<code>%do%</code>這個operator就可以執行後面的命令</p>
<p><code>&#123;&#125;</code>是可以省略的，但是只限於一行，而且那一行不能是用operator的運算，不然會出現像是下面的錯誤</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">tryCatch</span>(&#123;</span><br><span class="line">    foreach(x = <span class="number">1</span>:<span class="number">3</span>) %do% x + <span class="number">1</span></span><br><span class="line">&#125;, error = <span class="keyword">function</span>(e) e)</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## &lt;simpleError in foreach(x &#x3D; 1:3) %do% x + 1: 二元運算子中有非數值引數&gt;</span><br></pre></td></tr></table></figure>

<p>如果還是不要<code>&#123;&#125;</code>，可以用下面這樣，把operator當成函數來用即可：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">foreach(x = <span class="number">1</span>:<span class="number">3</span>) %do% (x + <span class="number">1</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [[1]]</span><br><span class="line">## [1] 2</span><br><span class="line">## </span><br><span class="line">## [[2]]</span><br><span class="line">## [1] 3</span><br><span class="line">## </span><br><span class="line">## [[3]]</span><br><span class="line">## [1] 4</span><br></pre></td></tr></table></figure>


<p>再來，我們介紹怎麼改成vector/matrix輸出</p>
<p>我們只要在<code>foreach</code>這個命令裡面加上<code>.combine</code>這個屬性</p>
<p>那他裡面放的是我們要把結果合併的<code>function</code>，舉例如下：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">foreach(x = <span class="number">1</span>:<span class="number">3</span>, .combine = c) %do% &#123;</span><br><span class="line">    x + <span class="number">1</span></span><br><span class="line">&#125;  <span class="comment"># vector</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [1] 2 3 4</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">foreach(x = <span class="number">1</span>:<span class="number">3</span>, .combine = cbind) %do% &#123;</span><br><span class="line">    c(x, x + <span class="number">1</span>)</span><br><span class="line">&#125;  <span class="comment"># matrix</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">##      result.1 result.2 result.3</span><br><span class="line">## [1,]        1        2        3</span><br><span class="line">## [2,]        2        3        4</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">foreach(x = <span class="number">1</span>:<span class="number">3</span>, .combine = rbind) %do% &#123;</span><br><span class="line">    c(x, x + <span class="number">1</span>)</span><br><span class="line">&#125;  <span class="comment"># matrix</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">##          [,1] [,2]</span><br><span class="line">## result.1    1    2</span><br><span class="line">## result.2    2    3</span><br><span class="line">## result.3    3    4</span><br></pre></td></tr></table></figure>

<p>那這裡的<code>.combine</code>用的是<code>Reduce</code>，如果要用<code>do.call</code>的話，要在加上一個參數，如：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">foreach(x = <span class="number">1</span>:<span class="number">3</span>, .combine = c, .multicombine = <span class="literal">TRUE</span>) %do% &#123;</span><br><span class="line">    x + <span class="number">1</span></span><br><span class="line">&#125;  <span class="comment"># vector</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [1] 2 3 4</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">foreach(x = <span class="number">1</span>:<span class="number">3</span>, .combine = cbind, .multicombine = <span class="literal">TRUE</span>) %do% &#123;</span><br><span class="line">    c(x, x + <span class="number">1</span>)</span><br><span class="line">&#125;  <span class="comment"># matrix</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">##      result.1 result.2 result.3</span><br><span class="line">## [1,]        1        2        3</span><br><span class="line">## [2,]        2        3        4</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">foreach(x = <span class="number">1</span>:<span class="number">3</span>, .combine = rbind, .multicombine = <span class="literal">TRUE</span>) %do% &#123;</span><br><span class="line">    c(x, x + <span class="number">1</span>)</span><br><span class="line">&#125;  <span class="comment"># matrix</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">##          [,1] [,2]</span><br><span class="line">## result.1    1    2</span><br><span class="line">## result.2    2    3</span><br><span class="line">## result.3    3    4</span><br></pre></td></tr></table></figure>

<p><code>foreach</code>還有幾個參數，稍微帶過，有些參數之後會再細講</p>
<p><code>.inorder</code>是輸出是否要照順序，<code>.maxcombine</code>是最大結合數量</p>
<p><code>.errorhandling</code>則是對錯誤的處理方式，<code>verbose</code>則是顯示更多訊息已提供user debug用</p>
<p>至於<code>.package</code>, <code>.export</code>跟<code>.noexport</code>，我們留到後面再解釋</p>
<p>剛剛上面看到<code>foreach</code>可以input vector, output list/vector/matrix了</p>
<p>但是我們還沒試過是不是<code>list</code>也行，舉個小範例：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">foreach(x = as.list(<span class="number">1</span>:<span class="number">3</span>)) %do% rep(x, x)  <span class="comment"># list</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [[1]]</span><br><span class="line">## [1] 1</span><br><span class="line">## </span><br><span class="line">## [[2]]</span><br><span class="line">## [1] 2 2</span><br><span class="line">## </span><br><span class="line">## [[3]]</span><br><span class="line">## [1] 3 3 3</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">foreach(x = as.list(<span class="number">1</span>:<span class="number">3</span>), .combine = c, .multicombine = <span class="literal">TRUE</span>) %do% rep(x, x)  <span class="comment"># vector</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [1] 1 2 2 3 3 3</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">foreach(x = as.list(<span class="number">1</span>:<span class="number">3</span>), .combine = cbind, .multicombine = <span class="literal">TRUE</span>) %do% rep(x, <span class="number">2</span>)  <span class="comment"># matrix</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">##      result.1 result.2 result.3</span><br><span class="line">## [1,]        1        2        3</span><br><span class="line">## [2,]        1        2        3</span><br></pre></td></tr></table></figure>

<p>那這樣其實就可以完全取代<code>sapply</code>跟<code>lapply</code>的功能了</p>
<p>再來是<code>foreach</code>也可以支援多個input，把<code>mapply</code>的範例重新用<code>foreach</code>寫一次：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">foreach(x = <span class="number">1</span>:<span class="number">3</span>, y = as.list(<span class="number">2</span>:<span class="number">4</span>)) %do% &#123;</span><br><span class="line">    x + y</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [[1]]</span><br><span class="line">## [1] 3</span><br><span class="line">## </span><br><span class="line">## [[2]]</span><br><span class="line">## [1] 5</span><br><span class="line">## </span><br><span class="line">## [[3]]</span><br><span class="line">## [1] 7</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">foreach(x = <span class="number">1</span>:<span class="number">3</span>, y = as.list(<span class="number">2</span>:<span class="number">4</span>)) %do% rep(x * y, <span class="number">2</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [[1]]</span><br><span class="line">## [1] 2 2</span><br><span class="line">## </span><br><span class="line">## [[2]]</span><br><span class="line">## [1] 6 6</span><br><span class="line">## </span><br><span class="line">## [[3]]</span><br><span class="line">## [1] 12 12</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">foreach(x = <span class="number">1</span>:<span class="number">3</span>, y = as.list(<span class="number">2</span>:<span class="number">4</span>)) %do% &#123;</span><br><span class="line">    x + y</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [[1]]</span><br><span class="line">## [1] 3</span><br><span class="line">## </span><br><span class="line">## [[2]]</span><br><span class="line">## [1] 5</span><br><span class="line">## </span><br><span class="line">## [[3]]</span><br><span class="line">## [1] 7</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">foreach(x = <span class="number">1</span>:<span class="number">3</span>, y = as.list(<span class="number">2</span>:<span class="number">4</span>)) %do% rep(x, y)</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [[1]]</span><br><span class="line">## [1] 1 1</span><br><span class="line">## </span><br><span class="line">## [[2]]</span><br><span class="line">## [1] 2 2 2</span><br><span class="line">## </span><br><span class="line">## [[3]]</span><br><span class="line">## [1] 3 3 3 3</span><br></pre></td></tr></table></figure>


<p>但是<code>foreach</code>除了取代<code>sapply</code>跟<code>lapply</code>之外</p>
<p>其實<code>foreach</code>還有很棒的debug功能：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">print(<span class="string">&quot;i&quot;</span> %<span class="keyword">in</span>% ls())</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [1] FALSE</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">result &lt;- foreach(i = <span class="number">1</span>:<span class="number">3</span>) %do% &#123;</span><br><span class="line">    i + <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="string">&quot;i&quot;</span> %<span class="keyword">in</span>% ls()) print(i)</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [1] 3</span><br></pre></td></tr></table></figure>

<p>可以看出來<code>foreach</code>會自動assign <code>i</code>，讓我們能夠直接把<code>i</code>帶入<code>&#123;&#125;</code>裡面直接執行裡面的程式，看最後一次的執行結果</p>
<p>另外，<code>foreach</code>還會提示是在哪一個task中失敗的：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">tryCatch</span>(&#123;</span><br><span class="line">    foreach(x = <span class="number">1</span>:<span class="number">3</span>) %do% &#123;</span><br><span class="line">        <span class="keyword">if</span> (x == <span class="number">2</span>) </span><br><span class="line">            <span class="keyword">stop</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;, error = <span class="keyword">function</span>(e) e)</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## &lt;simpleError in &#123;    if (x &#x3D;&#x3D; 2)         stop(&quot;&quot;)&#125;: task 2 failed - &quot;&quot;&gt;</span><br></pre></td></tr></table></figure>

<p>上面的輸出可以看的出來就是<code>task 2 failed</code>，所以我們只要用<code>x=2</code>帶進<code>&#123;&#125;</code>裡面就可以找到問題了！</p>
<p>介紹到這，<code>foreach</code>還只是用到30%而已，這裡我要再介紹搭配同為Revolution R Analysis出的<code>iterators</code>來使用</p>
<h2 id="iterators"><a href="#iterators" class="headerlink" title="iterators"></a><code>iterators</code></h2><p>一開頭介紹的<code>*apply</code>系列函數還有兩個沒有用<code>foreach</code>取代</p>
<p>這節就是要來用<code>iteratos</code>的功能來取代<code>apply</code>跟<code>tapply</code></p>
<p>要取代<code>apply</code>就是我們要讓<code>foreach</code>能一次存取一個列或是一個行</p>
<p>那麼就是用<code>iter</code>這個函數，然後藉由<code>by</code>這個參數來控制要算列還是行</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">m &lt;- matrix(<span class="number">1</span>:<span class="number">6</span>, <span class="number">3</span>)</span><br><span class="line"><span class="comment"># input matrix, output vector/matrix/list</span></span><br><span class="line">foreach(v = iter(m, by = <span class="string">&quot;row&quot;</span>), .combine = c, .multicombine = <span class="literal">TRUE</span>) %do% sum(v)</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [1] 5 7 9</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">foreach(v = iter(m, by = <span class="string">&quot;row&quot;</span>), .combine = cbind, .multicombine = <span class="literal">TRUE</span>) %do% (v * <span class="number">2</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">##      [,1] [,2] [,3] [,4] [,5] [,6]</span><br><span class="line">## [1,]    2    8    4   10    6   12</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">foreach(v = iter(m, by = <span class="string">&quot;row&quot;</span>)) %do% rep(v[<span class="number">1</span>], v[<span class="number">2</span>])</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [[1]]</span><br><span class="line">## [1] 1 1 1 1</span><br><span class="line">## </span><br><span class="line">## [[2]]</span><br><span class="line">## [1] 2 2 2 2 2</span><br><span class="line">## </span><br><span class="line">## [[3]]</span><br><span class="line">## [1] 3 3 3 3 3 3</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">foreach(v = iter(m, by = <span class="string">&quot;column&quot;</span>), .combine = c, .multicombine = <span class="literal">TRUE</span>) %do% sum(v)</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [1]  6 15</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">foreach(v = iter(m, by = <span class="string">&quot;column&quot;</span>), .combine = cbind, .multicombine = <span class="literal">TRUE</span>) %do% (v * <span class="number">2</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">##      [,1] [,2]</span><br><span class="line">## [1,]    2    8</span><br><span class="line">## [2,]    4   10</span><br><span class="line">## [3,]    6   12</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">foreach(v = iter(m, by = <span class="string">&quot;column&quot;</span>)) %do% rep(v[<span class="number">1</span>], v[<span class="number">2</span>])</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [[1]]</span><br><span class="line">## [1] 1 1</span><br><span class="line">## </span><br><span class="line">## [[2]]</span><br><span class="line">## [1] 4 4 4 4 4</span><br></pre></td></tr></table></figure>

<p>如果是<code>array</code>的話就用<code>iapply</code>這個函數來取代<code>iter</code>，舉例如下：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">arr &lt;- array(<span class="number">1</span>:<span class="number">8</span>, rep(<span class="number">2</span>, <span class="number">3</span>))</span><br><span class="line">foreach(v = iapply(arr, <span class="number">1</span>)) %do% &#123;</span><br><span class="line">    v</span><br><span class="line">&#125;  <span class="comment"># iterate over rows</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [[1]]</span><br><span class="line">##      [,1] [,2]</span><br><span class="line">## [1,]    1    5</span><br><span class="line">## [2,]    3    7</span><br><span class="line">## </span><br><span class="line">## [[2]]</span><br><span class="line">##      [,1] [,2]</span><br><span class="line">## [1,]    2    6</span><br><span class="line">## [2,]    4    8</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">foreach(v = iapply(arr, <span class="number">2</span>)) %do% &#123;</span><br><span class="line">    v</span><br><span class="line">&#125;  <span class="comment"># iterate over columns</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [[1]]</span><br><span class="line">##      [,1] [,2]</span><br><span class="line">## [1,]    1    5</span><br><span class="line">## [2,]    2    6</span><br><span class="line">## </span><br><span class="line">## [[2]]</span><br><span class="line">##      [,1] [,2]</span><br><span class="line">## [1,]    3    7</span><br><span class="line">## [2,]    4    8</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">foreach(v = iapply(arr, <span class="number">3</span>)) %do% &#123;</span><br><span class="line">    v</span><br><span class="line">&#125;  <span class="comment"># iterate over slice</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [[1]]</span><br><span class="line">##      [,1] [,2]</span><br><span class="line">## [1,]    1    3</span><br><span class="line">## [2,]    2    4</span><br><span class="line">## </span><br><span class="line">## [[2]]</span><br><span class="line">##      [,1] [,2]</span><br><span class="line">## [1,]    5    7</span><br><span class="line">## [2,]    6    8</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">foreach(v = iapply(arr, <span class="number">2</span>:<span class="number">3</span>)) %do% &#123;</span><br><span class="line">    v</span><br><span class="line">&#125;  <span class="comment"># # iterate over all the columns of all the matrices</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [[1]]</span><br><span class="line">## [1] 1 2</span><br><span class="line">## </span><br><span class="line">## [[2]]</span><br><span class="line">## [1] 3 4</span><br><span class="line">## </span><br><span class="line">## [[3]]</span><br><span class="line">## [1] 5 6</span><br><span class="line">## </span><br><span class="line">## [[4]]</span><br><span class="line">## [1] 7 8</span><br></pre></td></tr></table></figure>

<p><code>tapply</code>的部分則是要引進<code>isplit</code>這個函數</p>
<p>只是要注意<code>isplit</code>的<code>iterator</code>跟前面使用方式不同</p>
<p>要用值的話，要用<code>iterator</code>的<code>value</code>，不能直接拿來用</p>
<p>它另外一個info是包含<code>key</code>，也就是用來分割的group value是什麼</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">str(isplit(<span class="number">1</span>:<span class="number">6</span>, rep(<span class="number">1</span>:<span class="number">2</span>, <span class="number">3</span>))$nextElem())</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## List of 2</span><br><span class="line">##  $ value: int [1:3] 1 3 5</span><br><span class="line">##  $ key  :List of 1</span><br><span class="line">##   ..$ : int 1</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">foreach(it = isplit(<span class="number">1</span>:<span class="number">6</span>, rep(<span class="number">1</span>:<span class="number">2</span>, <span class="number">3</span>)), .combine = c, .multicombine = <span class="literal">TRUE</span>) %do% &#123;</span><br><span class="line">    sum(it$value)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [1]  9 12</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">foreach(it = isplit(<span class="number">1</span>:<span class="number">6</span>, rep(<span class="number">1</span>:<span class="number">2</span>, <span class="number">3</span>))) %do% &#123;</span><br><span class="line">    it$value + <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [[1]]</span><br><span class="line">## [1] 2 4 6</span><br><span class="line">## </span><br><span class="line">## [[2]]</span><br><span class="line">## [1] 3 5 7</span><br></pre></td></tr></table></figure>

<p>多組group vector的話，可以這樣做：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">splitList &lt;- list(rep(<span class="number">1</span>:<span class="number">2</span>, <span class="number">3</span>), c(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>))</span><br><span class="line">str(isplit(<span class="number">1</span>:<span class="number">6</span>, splitList)$nextElem())</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## List of 2</span><br><span class="line">##  $ value: int [1:2] 1 3</span><br><span class="line">##  $ key  :List of 2</span><br><span class="line">##   ..$ : int 1</span><br><span class="line">##   ..$ : num 1</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">foreach(it = isplit(<span class="number">1</span>:<span class="number">6</span>, splitList), .combine = c, .multicombine = <span class="literal">TRUE</span>) %do% &#123;</span><br><span class="line">    sum(it$value)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [1]  4  2  5 10</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">foreach(it = isplit(<span class="number">1</span>:<span class="number">6</span>, splitList)) %do% &#123;</span><br><span class="line">    it$value + <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [[1]]</span><br><span class="line">## [1] 2 4</span><br><span class="line">## </span><br><span class="line">## [[2]]</span><br><span class="line">## [1] 3</span><br><span class="line">## </span><br><span class="line">## [[3]]</span><br><span class="line">## [1] 6</span><br><span class="line">## </span><br><span class="line">## [[4]]</span><br><span class="line">## [1] 5 7</span><br></pre></td></tr></table></figure>

<p>但是<code>isplit</code>除了搭配<code>vector</code>之外，也可以搭配<code>data.frame</code>來使用：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">DF &lt;- data.frame(x = rep(<span class="number">1</span>:<span class="number">3</span>, <span class="number">3</span>), y = c(rep(<span class="number">1</span>:<span class="number">2</span>, <span class="number">4</span>), <span class="number">3</span>))</span><br><span class="line">foreach(it = isplit(DF, with(DF, list(x = x, y = y)))) %do% &#123;</span><br><span class="line">    print(it$key)</span><br><span class="line">    nrow(it$value)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## $x</span><br><span class="line">## [1] 1</span><br><span class="line">## </span><br><span class="line">## $y</span><br><span class="line">## [1] 1</span><br><span class="line">## </span><br><span class="line">## $x</span><br><span class="line">## [1] 2</span><br><span class="line">## </span><br><span class="line">## $y</span><br><span class="line">## [1] 1</span><br><span class="line">## </span><br><span class="line">## $x</span><br><span class="line">## [1] 3</span><br><span class="line">## </span><br><span class="line">## $y</span><br><span class="line">## [1] 1</span><br><span class="line">## </span><br><span class="line">## $x</span><br><span class="line">## [1] 1</span><br><span class="line">## </span><br><span class="line">## $y</span><br><span class="line">## [1] 2</span><br><span class="line">## </span><br><span class="line">## $x</span><br><span class="line">## [1] 2</span><br><span class="line">## </span><br><span class="line">## $y</span><br><span class="line">## [1] 2</span><br><span class="line">## </span><br><span class="line">## $x</span><br><span class="line">## [1] 3</span><br><span class="line">## </span><br><span class="line">## $y</span><br><span class="line">## [1] 2</span><br><span class="line">## </span><br><span class="line">## $x</span><br><span class="line">## [1] 1</span><br><span class="line">## </span><br><span class="line">## $y</span><br><span class="line">## [1] 3</span><br><span class="line">## </span><br><span class="line">## $x</span><br><span class="line">## [1] 2</span><br><span class="line">## </span><br><span class="line">## $y</span><br><span class="line">## [1] 3</span><br><span class="line">## </span><br><span class="line">## $x</span><br><span class="line">## [1] 3</span><br><span class="line">## </span><br><span class="line">## $y</span><br><span class="line">## [1] 3</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [[1]]</span><br><span class="line">## [1] 2</span><br><span class="line">## </span><br><span class="line">## [[2]]</span><br><span class="line">## [1] 1</span><br><span class="line">## </span><br><span class="line">## [[3]]</span><br><span class="line">## [1] 1</span><br><span class="line">## </span><br><span class="line">## [[4]]</span><br><span class="line">## [1] 1</span><br><span class="line">## </span><br><span class="line">## [[5]]</span><br><span class="line">## [1] 2</span><br><span class="line">## </span><br><span class="line">## [[6]]</span><br><span class="line">## [1] 1</span><br><span class="line">## </span><br><span class="line">## [[7]]</span><br><span class="line">## [1] 0</span><br><span class="line">## </span><br><span class="line">## [[8]]</span><br><span class="line">## [1] 0</span><br><span class="line">## </span><br><span class="line">## [[9]]</span><br><span class="line">## [1] 1</span><br></pre></td></tr></table></figure>

<p>這裡需要注意的是<code>isplit</code>不是現有組合有存在才會取值</p>
<p>而是將你輸入的group vector分別取unique後做<code>expand.grid</code>的動作展開</p>
<p>所以會有組合是沒有資料的，要記得在script裡面寫如果零列要怎麼處理：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">DF &lt;- data.frame(x = rep(<span class="number">1</span>:<span class="number">3</span>, <span class="number">3</span>), y = c(rep(<span class="number">1</span>:<span class="number">2</span>, <span class="number">4</span>), <span class="number">3</span>))</span><br><span class="line">foreach(it = isplit(DF, with(DF, list(x = x, y = y))), .combine = rbind, .multicombine = <span class="literal">TRUE</span>) %do% &#123;</span><br><span class="line">    <span class="keyword">if</span> (nrow(it$value) == <span class="number">0</span>) </span><br><span class="line">        <span class="keyword">return</span>(<span class="literal">NULL</span>)</span><br><span class="line">    data.frame(it$key, sum(it$value))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">##   x y sum.it.value.</span><br><span class="line">## 1 1 1             4</span><br><span class="line">## 2 2 1             3</span><br><span class="line">## 3 3 1             4</span><br><span class="line">## 4 1 2             3</span><br><span class="line">## 5 2 2             8</span><br><span class="line">## 6 3 2             5</span><br><span class="line">## 7 3 3             6</span><br></pre></td></tr></table></figure>




]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>do.call</tag>
        <tag>foreach</tag>
        <tag>iterators</tag>
        <tag>apply</tag>
      </tags>
  </entry>
  <entry>
    <title>使用R來建立web service</title>
    <url>/posts/201705/2017-05-25-use-R-to-construct-web-service.html</url>
    <content><![CDATA[<p>使用httpuv來建立簡單的R web service</p>
<a id="more"></a>

<ol>
<li>簡單的GET服務，傳入x, y跟species (optional)來取得png raw vector：</li>
</ol>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(httpuv)</span><br><span class="line"><span class="keyword">library</span>(urltools)</span><br><span class="line"><span class="keyword">library</span>(pipeR)</span><br><span class="line"><span class="keyword">library</span>(Cairo)</span><br><span class="line"><span class="keyword">library</span>(png)</span><br><span class="line"><span class="keyword">library</span>(lattice)</span><br><span class="line"></span><br><span class="line">app &lt;- list(</span><br><span class="line">  call = <span class="keyword">function</span>(req) &#123;</span><br><span class="line">    <span class="keyword">if</span>(req$REQUEST_METHOD != <span class="string">&quot;GET&quot;</span>)</span><br><span class="line">      <span class="keyword">return</span>(list(status = <span class="number">400L</span>, headers = list(<span class="string">&#x27;Content-Type&#x27;</span> = <span class="string">&#x27;plain/text&#x27;</span>), body = <span class="string">&quot;Bad Request&quot;</span>))</span><br><span class="line">    </span><br><span class="line">    params &lt;- param_get(req$QUERY_STRING, c(<span class="string">&quot;x&quot;</span>, <span class="string">&quot;y&quot;</span>, <span class="string">&quot;species&quot;</span>))</span><br><span class="line">    <span class="keyword">if</span> (is.na(params$x) || is.na(params$y))</span><br><span class="line">      <span class="keyword">return</span>(list(status = <span class="number">400L</span>, headers = list(<span class="string">&#x27;Content-Type&#x27;</span> = <span class="string">&#x27;plain/text&#x27;</span>),</span><br><span class="line">                  body = <span class="string">&quot;Bad Request with wrong query string&quot;</span>))</span><br><span class="line">				  </span><br><span class="line">    iris2 &lt;- iris</span><br><span class="line">    <span class="keyword">if</span> (!is.na(params$species)) &#123;</span><br><span class="line">      <span class="keyword">if</span> (nchar(params$species) &gt; <span class="number">0</span> &amp;&amp; params$species %<span class="keyword">in</span>% unique(iris$Species))</span><br><span class="line">        iris2 &lt;- subset(iris, Species == params$species)</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span>(list(status = <span class="number">400L</span>, headers = list(<span class="string">&#x27;Content-Type&#x27;</span> = <span class="string">&#x27;plain/text&#x27;</span>),</span><br><span class="line">                    body = <span class="string">&quot;Bad Request with wrong species&quot;</span>))</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    Cairo(<span class="number">640</span>, <span class="number">640</span>, <span class="string">&quot;/dev/null&quot;</span>, bg = <span class="string">&quot;white&quot;</span>)</span><br><span class="line">    print(xyplot(iris2[[params$x]], iris2[[params$y]], xlab = params$x, ylab = params$y))</span><br><span class="line">    output &lt;- Cairo.capture() %&gt;&gt;% writePNG</span><br><span class="line">    dev.off()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span>(list(status = <span class="number">200L</span>, headers = list(<span class="string">&#x27;Content-Type&#x27;</span> = <span class="string">&#x27;image/png&#x27;</span>), body = output))</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">runServer(<span class="string">&quot;0.0.0.0&quot;</span>, <span class="number">9454</span>, app, <span class="number">250</span>)</span><br></pre></td></tr></table></figure>

<p>驗證程式：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(httr)</span><br><span class="line"><span class="keyword">library</span>(pipeR)</span><br><span class="line"><span class="keyword">library</span>(jsonlite)</span><br><span class="line"></span><br><span class="line">GET(<span class="string">&quot;http://localhost:9454&quot;</span>, query = list(x = <span class="string">&quot;Sepal.Length&quot;</span>, y = <span class="string">&quot;Sepal.Width&quot;</span>)) %&gt;&gt;% </span><br><span class="line">  content(<span class="string">&quot;raw&quot;</span>) %&gt;&gt;% writeBin(<span class="string">&quot;test.png&quot;</span>)</span><br><span class="line"><span class="comment"># test.png is a png</span></span><br><span class="line"></span><br><span class="line">GET(<span class="string">&quot;http://localhost:9454&quot;</span>, query = list(x = <span class="string">&quot;Sepal.Length&quot;</span>, y = <span class="string">&quot;Sepal.Width&quot;</span>)) %&gt;&gt;% </span><br><span class="line">  content(<span class="string">&quot;raw&quot;</span>) %&gt;&gt;% writeBin(<span class="string">&quot;test.png&quot;</span>)</span><br><span class="line"><span class="comment"># test.png is a png</span></span><br><span class="line"></span><br><span class="line">GET(<span class="string">&quot;http://localhost:9454&quot;</span>, query = list(x = <span class="string">&quot;Sepal.Length&quot;</span>, y = <span class="string">&quot;Sepal.Width&quot;</span>, species = <span class="string">&quot;&quot;</span>)) %&gt;&gt;% </span><br><span class="line">  content(<span class="string">&quot;text&quot;</span>)</span><br><span class="line"><span class="comment"># &quot;Bad Request with wrong species&quot;</span></span><br><span class="line"></span><br><span class="line">POST(<span class="string">&quot;http://localhost:9454&quot;</span>, query = list(table = <span class="string">&quot;xxx&quot;</span>, id = <span class="string">&quot;123&quot;</span>)) %&gt;&gt;% content(<span class="string">&quot;text&quot;</span>)</span><br><span class="line"><span class="comment"># Bad Request</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>簡單的POST服務，傳入包含x, y值的json檔案畫圖，然後回傳</li>
</ol>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">app &lt;- list(</span><br><span class="line">  call = <span class="keyword">function</span>(req) &#123;</span><br><span class="line">    <span class="keyword">if</span> (req$REQUEST_METHOD != <span class="string">&quot;POST&quot;</span>)</span><br><span class="line">      <span class="keyword">return</span>(list(status = <span class="number">400L</span>, headers = list(<span class="string">&#x27;Content-Type&#x27;</span> = <span class="string">&#x27;plain/text&#x27;</span>), body = <span class="string">&quot;Bad Request&quot;</span>))</span><br><span class="line">    </span><br><span class="line">    plotDF &lt;- fromJSON(req$rook.input$read_lines())</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (!all(c(<span class="string">&quot;x&quot;</span>, <span class="string">&quot;y&quot;</span>) %<span class="keyword">in</span>% names(plotDF)))</span><br><span class="line">      <span class="keyword">return</span>(list(status = <span class="number">400L</span>, headers = list(<span class="string">&#x27;Content-Type&#x27;</span> = <span class="string">&#x27;plain/text&#x27;</span>),</span><br><span class="line">                  body = <span class="string">&quot;Bad Request with wrong arguments in json&quot;</span>))</span><br><span class="line">    </span><br><span class="line">    Cairo(<span class="number">640</span>, <span class="number">640</span>, <span class="string">&quot;/dev/null&quot;</span>, bg = <span class="string">&quot;white&quot;</span>)</span><br><span class="line">    print(xyplot(y ~ x, plotDF))</span><br><span class="line">    output &lt;- Cairo.capture() %&gt;&gt;% writePNG</span><br><span class="line">    dev.off()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span>(list(status = <span class="number">200L</span>, headers = list(<span class="string">&#x27;Content-Type&#x27;</span> = <span class="string">&#x27;image/png&#x27;</span>), body = output))</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">runServer(<span class="string">&quot;0.0.0.0&quot;</span>, <span class="number">9454</span>, app, <span class="number">250</span>)</span><br></pre></td></tr></table></figure>

<p>驗證程式：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(httr)</span><br><span class="line"><span class="keyword">library</span>(pipeR)</span><br><span class="line"><span class="keyword">library</span>(jsonlite)</span><br><span class="line"></span><br><span class="line">POST(<span class="string">&quot;http://localhost:9454&quot;</span>, body = toJSON(data.frame(x = <span class="number">1</span>:<span class="number">6</span>, y = <span class="number">2</span>:<span class="number">7</span>))) %&gt;&gt;% </span><br><span class="line">  content(<span class="string">&quot;raw&quot;</span>) %&gt;&gt;% writeBin(<span class="string">&quot;test.png&quot;</span>)</span><br><span class="line"><span class="comment"># test.png is a png</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>Web Service</tag>
        <tag>httpuv</tag>
      </tags>
  </entry>
  <entry>
    <title>在Windows環境下編譯GPU版本的mxnet</title>
    <url>/posts/201704/2017-04-24-building-gpu-version-of-mxnet-in-windows.html</url>
    <content><![CDATA[<p>本篇主要介紹如何在Windows環境下編譯GPU版本的mxnet</p>
<a id="more"></a>

<p>需要的components有：</p>
<ol>
<li>Visual Studio 2015 Update 3以上</li>
<li>OpenBLAS或是Intel MKL 2017 (我這用Intel MKL 2017)</li>
<li><a href="https://developer.nvidia.com/cuda-toolkit">CUDA Toolkit 8.0</a> 下載安裝</li>
<li><a href="https://developer.nvidia.com/cudnn">cuDNN</a> 需要登入會員</li>
<li><a href="https://cmake.org/download/">CMake</a> 下載Windows win64-x64 ZIP，然後解壓縮</li>
<li><a href="http://opencv.org/releases.html">OpenCV</a> 下載最新版本的3.2.0 win pack，然後解壓縮</li>
</ol>
<p>為了說明方便，假設在D槽開一個資料夾，叫做mxnet</p>
<p>先把整個mxnet repository clone到<code>D:\mxnet\mxnet</code>，然後開啟<code>CMake\bin\cmake-gui.exe</code></p>
<p>(可能開啟會錯誤，先檢查一下bin下面所有檔案，右鍵內容，右下角是否有<code>解除鎖定</code>的按鈕)</p>
<p>然後where is the source code選<code>D:\mxnet\mxnet</code>，然後按下configure</p>
<p>他會先問你要用什麼編譯，選VS 2015 Win64，然後問是否要開一個新資料夾for build，按下Yes繼續</p>
<p>接下來會說找不到BLAS，那我這裡要用MKL，所以BLAS那個選項選MKL，然後再按一次configure</p>
<p>(如果要用OpenBLAS就直接把<code>OpenBLAS_INCLUDE_DIR</code>跟<code>OpenBLAS_LIB</code>修改上去即可)</p>
<p>然後會跳出INTEL_ROOT, MKL_INCLUDE, MKL_ROOT這三個選項，設定好相對的路徑後按下configure</p>
<p>接下來會問OpenCV的位置，一樣設定路徑之後再按一次configure，最後應該會看到下面這樣的配置</p>
<p><img src="/images/cmake-setup.PNG"></p>
<p>然後再按一次configure不會跳出任何錯誤後，按下Generate，下方出現<code>Generate Done</code>之後</p>
<p>按下<code>Open Project</code>就會打開Visual Studio 2015，接下來點<code>方案&#39;mxnet&#39;</code>右鍵選擇<code>建置方案</code></p>
<p>大概等個一小時之後就build完了</p>
<p>再來是安裝R套件，請先在<code>D:\mxnet\mxnet\R-package\inst</code>建一個<code>libs</code>資料夾，裡面再建一個<code>x64</code>資料夾</p>
<p>然後把<code>D:\mxnet\mxnet\Debug\libmxnet.dll</code>, CUDA路徑下bin的<code>cublas64_80.dll</code>, <code>cudart64_80.dll</code>, </p>
<p><code>cudnn64_5.dll</code>, <code>curand64_80.dll</code>跟<code>nvrtc64_80.dll</code>以及opencv路徑下的<code>bin\opencv_ffmpeg320_64.dll</code>,</p>
<p><code>x64\vc14\bin\opencv_world320.dll</code>跟<code>x64\vc14\bin\opencv_world320d.dll</code>複製到剛剛建立的<code>R-package\inst\x64</code>裡面</p>
<p>然後把INTEL ROOT下面的<code>redist\intel64_win\mkl\mkl_rt.dll</code>, <code>redist\intel64_win\mkl\mkl_intel_thread.dll</code>,</p>
<p><code>redist\intel64_win\mkl\mkl_avx.dll</code>, <code>redist\intel64_win\mkl\mkl_vml_avx.dll</code> (不同電腦用的指令集不同，不一定是用這兩個DLL)</p>
<p>以及<code>redist\intel64_win\mkl\libimalloc.dll</code>放到R目錄下的<code>bin\x64</code>裡面</p>
<p>(要抓哪些DLL是根據<code>dependencywalker</code>找的，請查看<a href="http://dependencywalker.com/">dependencywalker</a>，不過MKL部分是我自己試出來的)</p>
<p>再來是建立一個<code>R-package\inst\include</code>的資料夾，把<code>D:\mxnet\mxnet\mshadow\mshadow</code>, <code>D:\mxnet\mxnet\dmlc-core\include\dmlc</code>, </p>
<p><code>D:\mxnet\mxnet\nnvm\include\nnvm</code>, <code>D:\mxnet\mxnet\include\mxnet</code>複製到<code>R-package\inst\include</code></p>
<p>跑下面這個script</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> import(Rcpp) &gt; R-package/NAMESPACE</span><br><span class="line"><span class="built_in">echo</span> import(methods) &gt;&gt; R-package/NAMESPACE</span><br><span class="line">R CMD INSTALL R-package</span><br><span class="line">Rscript -e <span class="string">&quot;require(mxnet); mxnet:::mxnet.export(\&quot;R-package\&quot;)&quot;</span></span><br><span class="line">rm -rf R-package/NAMESPACE</span><br><span class="line">Rscript -e <span class="string">&quot;require(roxygen2); roxygen2::roxygenise(\&quot;R-package\&quot;)&quot;</span></span><br><span class="line">R CMD INSTALL R-package</span><br></pre></td></tr></table></figure>

<p>安裝之後就到<code>D:\mxnet\mxnet\example\image-classification</code>試跑看看<code>train_mnist.R --network mlp --gpus 0</code></p>
<p>或是簡單測一下下面的script:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">require</span>(mlbench)</span><br><span class="line"><span class="keyword">require</span>(mxnet)</span><br><span class="line">data(Sonar, package = <span class="string">&quot;mlbench&quot;</span>)</span><br><span class="line"></span><br><span class="line">Sonar[,<span class="number">61</span>] &lt;- as.numeric(Sonar[,<span class="number">61</span>])-<span class="number">1</span></span><br><span class="line">train.ind &lt;- c(<span class="number">1</span>:<span class="number">50</span>, <span class="number">100</span>:<span class="number">150</span>)</span><br><span class="line">train.x &lt;- data.matrix(Sonar[train.ind, <span class="number">1</span>:<span class="number">60</span>])</span><br><span class="line">train.y &lt;- Sonar[train.ind, <span class="number">61</span>]</span><br><span class="line">test.x &lt;- data.matrix(Sonar[-train.ind, <span class="number">1</span>:<span class="number">60</span>])</span><br><span class="line">test.y &lt;- Sonar[-train.ind, <span class="number">61</span>]</span><br><span class="line"></span><br><span class="line">mx.set.seed(<span class="number">0</span>)</span><br><span class="line"><span class="comment"># GPU</span></span><br><span class="line">model &lt;- mx.mlp(train.x, train.y, hidden_node=<span class="number">10</span>, out_node=<span class="number">2</span>, out_activation=<span class="string">&quot;softmax&quot;</span>,</span><br><span class="line">                num.round = <span class="number">20</span>, array.batch.size=<span class="number">15</span>, learning.rate=<span class="number">0.07</span>, momentum=<span class="number">0.9</span>, </span><br><span class="line">                eval.metric=mx.metric.accuracy, device = mx.gpu(<span class="number">0</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># CPU</span></span><br><span class="line">model &lt;- mx.mlp(train.x, train.y, hidden_node=<span class="number">10</span>, out_node=<span class="number">2</span>, out_activation=<span class="string">&quot;softmax&quot;</span>,</span><br><span class="line">                num.round = <span class="number">20</span>, array.batch.size=<span class="number">15</span>, learning.rate=<span class="number">0.07</span>, momentum=<span class="number">0.9</span>, </span><br><span class="line">                eval.metric=mx.metric.accuracy, device = lapply(<span class="number">0</span>:<span class="number">1</span>, mx.cpu))</span><br><span class="line"></span><br><span class="line">preds &lt;- predict(model, test.x, mx.gpu(<span class="number">0</span>))</span><br><span class="line">pred.label = max.col(t(preds))-<span class="number">1</span></span><br><span class="line">table(pred.label, test.y)</span><br></pre></td></tr></table></figure>

<p>至於Python套件部分，到<code>python</code>的子資料夾，執行<code>python setup.py install</code></p>
<p>然後把上面所說的<code>mkl_rt.dll</code>, <code>mkl_core.dll</code>, <code>mkl_intel_thread.dll</code>, <code>pencv_ffmpeg320_64.dll</code>, </p>
<p><code>opencv_world320.dll</code>以及<code>opencv_world320d.dll</code>放到Python的根目錄，然後到<code>D:\mxnet\mxnet\example\image-classification</code></p>
<p>試跑下面的命令驗證看看GPU是否正常安裝：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python train_mnist.py --network mlp --gpus <span class="number">0</span></span><br></pre></td></tr></table></figure>

<p><img src="/images/mxnet-gpu.PNG"></p>
<p>最後用python稍微看一下Performance差異：</p>
<p>Performance of prebuilt GPU:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># GPU</span><br><span class="line">INFO:root:Epoch[0] Batch [100]  Speed: 49999.99 samples&#x2F;sec     Train-accuracy&#x3D;0.783261</span><br><span class="line">INFO:root:Epoch[0] Batch [200]  Speed: 49999.99 samples&#x2F;sec     Train-accuracy&#x3D;0.909062</span><br><span class="line">INFO:root:Epoch[0] Batch [300]  Speed: 50393.66 samples&#x2F;sec     Train-accuracy&#x3D;0.931875</span><br><span class="line">INFO:root:Epoch[0] Batch [400]  Speed: 49999.99 samples&#x2F;sec     Train-accuracy&#x3D;0.934375</span><br><span class="line">INFO:root:Epoch[0] Batch [500]  Speed: 51200.00 samples&#x2F;sec     Train-accuracy&#x3D;0.935781</span><br><span class="line">INFO:root:Epoch[0] Batch [600]  Speed: 49999.99 samples&#x2F;sec     Train-accuracy&#x3D;0.950469</span><br><span class="line">INFO:root:Epoch[0] Batch [700]  Speed: 49612.42 samples&#x2F;sec     Train-accuracy&#x3D;0.950469</span><br><span class="line">INFO:root:Epoch[0] Batch [800]  Speed: 50000.08 samples&#x2F;sec     Train-accuracy&#x3D;0.949531</span><br><span class="line">INFO:root:Epoch[0] Batch [900]  Speed: 49612.33 samples&#x2F;sec     Train-accuracy&#x3D;0.957812</span><br><span class="line">INFO:root:Epoch[0] Train-accuracy&#x3D;0.957348</span><br><span class="line">INFO:root:Epoch[0] Time cost&#x3D;1.629</span><br><span class="line">INFO:root:Epoch[0] Validation-accuracy&#x3D;0.959793</span><br><span class="line"># CPU</span><br><span class="line">INFO:root:Epoch[0] Batch [100]  Speed: 42666.71 samples&#x2F;sec     Train-accuracy&#x3D;0.790687</span><br><span class="line">INFO:root:Epoch[0] Batch [200]  Speed: 42105.21 samples&#x2F;sec     Train-accuracy&#x3D;0.906250</span><br><span class="line">INFO:root:Epoch[0] Batch [300]  Speed: 42384.10 samples&#x2F;sec     Train-accuracy&#x3D;0.928438</span><br><span class="line">INFO:root:Epoch[0] Batch [400]  Speed: 41830.03 samples&#x2F;sec     Train-accuracy&#x3D;0.942656</span><br><span class="line">INFO:root:Epoch[0] Batch [500]  Speed: 41025.67 samples&#x2F;sec     Train-accuracy&#x3D;0.946250</span><br><span class="line">INFO:root:Epoch[0] Batch [600]  Speed: 42105.28 samples&#x2F;sec     Train-accuracy&#x3D;0.942344</span><br><span class="line">INFO:root:Epoch[0] Batch [700]  Speed: 42105.28 samples&#x2F;sec     Train-accuracy&#x3D;0.950469</span><br><span class="line">INFO:root:Epoch[0] Batch [800]  Speed: 41025.60 samples&#x2F;sec     Train-accuracy&#x3D;0.955937</span><br><span class="line">INFO:root:Epoch[0] Batch [900]  Speed: 42384.10 samples&#x2F;sec     Train-accuracy&#x3D;0.958594</span><br><span class="line">INFO:root:Epoch[0] Train-accuracy&#x3D;0.953125</span><br><span class="line">INFO:root:Epoch[0] Time cost&#x3D;1.853</span><br><span class="line">INFO:root:Epoch[0] Validation-accuracy&#x3D;0.962082</span><br></pre></td></tr></table></figure>

<p>Performance of built by myself (RelWithDebInfo):</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># GPU</span><br><span class="line">INFO:root:Epoch[0] Batch [100]  Speed: 52459.03 samples&#x2F;sec     Train-accuracy&#x3D;0.781405</span><br><span class="line">INFO:root:Epoch[0] Batch [200]  Speed: 54700.81 samples&#x2F;sec     Train-accuracy&#x3D;0.907656</span><br><span class="line">INFO:root:Epoch[0] Batch [300]  Speed: 56637.21 samples&#x2F;sec     Train-accuracy&#x3D;0.925000</span><br><span class="line">INFO:root:Epoch[0] Batch [400]  Speed: 55172.44 samples&#x2F;sec     Train-accuracy&#x3D;0.940156</span><br><span class="line">INFO:root:Epoch[0] Batch [500]  Speed: 51200.00 samples&#x2F;sec     Train-accuracy&#x3D;0.941406</span><br><span class="line">INFO:root:Epoch[0] Batch [600]  Speed: 55652.17 samples&#x2F;sec     Train-accuracy&#x3D;0.944063</span><br><span class="line">INFO:root:Epoch[0] Batch [700]  Speed: 54237.27 samples&#x2F;sec     Train-accuracy&#x3D;0.952812</span><br><span class="line">INFO:root:Epoch[0] Batch [800]  Speed: 55172.44 samples&#x2F;sec     Train-accuracy&#x3D;0.954844</span><br><span class="line">INFO:root:Epoch[0] Batch [900]  Speed: 55172.33 samples&#x2F;sec     Train-accuracy&#x3D;0.960313</span><br><span class="line">INFO:root:Epoch[0] Train-accuracy&#x3D;0.949324</span><br><span class="line">INFO:root:Epoch[0] Time cost&#x3D;1.493</span><br><span class="line">INFO:root:Epoch[0] Validation-accuracy&#x3D;0.952130</span><br><span class="line"># CPU</span><br><span class="line">INFO:root:Epoch[0] Batch [100]  Speed: 42105.28 samples&#x2F;sec     Train-accuracy&#x3D;0.790842</span><br><span class="line">INFO:root:Epoch[0] Batch [200]  Speed: 41830.03 samples&#x2F;sec     Train-accuracy&#x3D;0.907813</span><br><span class="line">INFO:root:Epoch[0] Batch [300]  Speed: 41558.43 samples&#x2F;sec     Train-accuracy&#x3D;0.927188</span><br><span class="line">INFO:root:Epoch[0] Batch [400]  Speed: 42105.28 samples&#x2F;sec     Train-accuracy&#x3D;0.934844</span><br><span class="line">INFO:root:Epoch[0] Batch [500]  Speed: 42105.28 samples&#x2F;sec     Train-accuracy&#x3D;0.944531</span><br><span class="line">INFO:root:Epoch[0] Batch [600]  Speed: 42384.10 samples&#x2F;sec     Train-accuracy&#x3D;0.944063</span><br><span class="line">INFO:root:Epoch[0] Batch [700]  Speed: 42384.10 samples&#x2F;sec     Train-accuracy&#x3D;0.950469</span><br><span class="line">INFO:root:Epoch[0] Batch [800]  Speed: 42105.28 samples&#x2F;sec     Train-accuracy&#x3D;0.957812</span><br><span class="line">INFO:root:Epoch[0] Batch [900]  Speed: 42384.10 samples&#x2F;sec     Train-accuracy&#x3D;0.957812</span><br><span class="line">INFO:root:Epoch[0] Train-accuracy&#x3D;0.959882</span><br><span class="line">INFO:root:Epoch[0] Time cost&#x3D;1.789</span><br><span class="line">INFO:root:Epoch[0] Validation-accuracy&#x3D;0.962082</span><br></pre></td></tr></table></figure>

<p>Performance of built by myself (Release with Intel C++ 2017, /O3 flags):</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># GPU</span><br><span class="line">INFO:root:Epoch[0] Batch [100]  Speed: 60377.39 samples&#x2F;sec     Train-accuracy&#x3D;0.791151</span><br><span class="line">INFO:root:Epoch[0] Batch [200]  Speed: 59259.24 samples&#x2F;sec     Train-accuracy&#x3D;0.913438</span><br><span class="line">INFO:root:Epoch[0] Batch [300]  Speed: 60952.37 samples&#x2F;sec     Train-accuracy&#x3D;0.927031</span><br><span class="line">INFO:root:Epoch[0] Batch [400]  Speed: 57657.63 samples&#x2F;sec     Train-accuracy&#x3D;0.938906</span><br><span class="line">INFO:root:Epoch[0] Batch [500]  Speed: 61538.41 samples&#x2F;sec     Train-accuracy&#x3D;0.943594</span><br><span class="line">INFO:root:Epoch[0] Batch [600]  Speed: 60377.39 samples&#x2F;sec     Train-accuracy&#x3D;0.945000</span><br><span class="line">INFO:root:Epoch[0] Batch [700]  Speed: 61538.55 samples&#x2F;sec     Train-accuracy&#x3D;0.945781</span><br><span class="line">INFO:root:Epoch[0] Batch [800]  Speed: 62135.82 samples&#x2F;sec     Train-accuracy&#x3D;0.952500</span><br><span class="line">INFO:root:Epoch[0] Batch [900]  Speed: 60952.37 samples&#x2F;sec     Train-accuracy&#x3D;0.957031</span><br><span class="line">INFO:root:Epoch[0] Train-accuracy&#x3D;0.960726</span><br><span class="line">INFO:root:Epoch[0] Time cost&#x3D;1.386</span><br><span class="line">INFO:root:Epoch[0] Validation-accuracy&#x3D;0.962878</span><br><span class="line"># CPU</span><br><span class="line">INFO:root:Epoch[0] Batch [100]  Speed: 52458.92 samples&#x2F;sec     Train-accuracy&#x3D;0.786665</span><br><span class="line">INFO:root:Epoch[0] Batch [200]  Speed: 52892.64 samples&#x2F;sec     Train-accuracy&#x3D;0.911094</span><br><span class="line">INFO:root:Epoch[0] Batch [300]  Speed: 52892.54 samples&#x2F;sec     Train-accuracy&#x3D;0.930781</span><br><span class="line">INFO:root:Epoch[0] Batch [400]  Speed: 52032.56 samples&#x2F;sec     Train-accuracy&#x3D;0.933594</span><br><span class="line">INFO:root:Epoch[0] Batch [500]  Speed: 53333.38 samples&#x2F;sec     Train-accuracy&#x3D;0.941094</span><br><span class="line">INFO:root:Epoch[0] Batch [600]  Speed: 52892.64 samples&#x2F;sec     Train-accuracy&#x3D;0.945781</span><br><span class="line">INFO:root:Epoch[0] Batch [700]  Speed: 52892.54 samples&#x2F;sec     Train-accuracy&#x3D;0.950156</span><br><span class="line">INFO:root:Epoch[0] Batch [800]  Speed: 53333.28 samples&#x2F;sec     Train-accuracy&#x3D;0.957031</span><br><span class="line">INFO:root:Epoch[0] Batch [900]  Speed: 53333.38 samples&#x2F;sec     Train-accuracy&#x3D;0.958125</span><br><span class="line">INFO:root:Epoch[0] Train-accuracy&#x3D;0.953125</span><br><span class="line">INFO:root:Epoch[0] Time cost&#x3D;1.506</span><br><span class="line">INFO:root:Epoch[0] Validation-accuracy&#x3D;0.962480</span><br></pre></td></tr></table></figure>

<p>可以看出我們自己用Intel C++ 2017 加上 O3 optimization的速度</p>
<p>在GPU方面比prebuilt每秒多了一千張，CPU部分則多了將近10000張</p>
<p>The performace gain worths your time!!</p>
]]></content>
      <categories>
        <category>MxNet</category>
      </categories>
      <tags>
        <tag>GPU</tag>
        <tag>MxNet</tag>
        <tag>Windows</tag>
        <tag>Deep Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>RcppArmadillo Uses NVBLAS</title>
    <url>/posts/201710/2017-10-06-RcppArmadillo-Use-NVBLAS.html</url>
    <content><![CDATA[<p>本篇主要介紹如何在RcppArmadillo去link NVBLAS來做運算</p>
<a id="more"></a>

<p>Set an environmental variables for CUDA_HOME.</p>
<p>For Linux:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> CUDA_HOME=/path/to/cuda/home</span><br><span class="line">tee -a `Rscript -e <span class="string">&quot;R.home()&quot;</span>`/etc/Renviron &lt;&lt; EOF</span><br><span class="line"><span class="built_in">export</span> LD_PRELOAD=<span class="variable">$CUDA_HOME</span>/lib64/libnvblas.so</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">tee -a `Rscript -e <span class="string">&quot;R.home()&quot;</span>`/etc/Rprofile.site &lt;&lt; EOF</span><br><span class="line">Sys.setenv(PKG_CXXFLAgs = sprintf(<span class="string">&quot;-I%s/include&quot;</span>, Sys.getenv(<span class="string">&quot;CUDA_HOME&quot;</span>)))</span><br><span class="line">Sys.setenv(PKG_LIBS = sprintf(<span class="string">&quot;-L%s/lib64 -lnvblas&quot;</span>, Sys.getenv(<span class="string">&quot;CUDA_HOME&quot;</span>)))</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<p>For Windows:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tee -a `Rscript -e <span class="string">&quot;R.home()&quot;</span>`/etc/Rprofile.site &lt;&lt; EOF</span><br><span class="line">dyn.load(paste0(Sys.getenv(<span class="string">&quot;CUDA_HOME&quot;</span>), <span class="string">&quot;/bin/nvblas64_90.dll&quot;</span>))</span><br><span class="line">Sys.setenv(PKG_CXXFLAGS = sprintf(<span class="string">&quot;-I\&quot;%s/include\&quot;&quot;</span>, Sys.getenv(<span class="string">&quot;CUDA_HOME&quot;</span>)))</span><br><span class="line">Sys.setenv(PKG_LIBS = sprintf(<span class="string">&quot;-L\&quot;%s/lib64\&quot; -lnvblas&quot;</span>, Sys.getenv(<span class="string">&quot;CUDA_HOME&quot;</span>)))</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>


<p>Run R:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># NVBLAS_CONFIG_FILE</span></span><br><span class="line">write(c(<span class="string">&quot;NVBLAS_LOGFILE nvblas.log&quot;</span>, <span class="string">&quot;NVBLAS_CPU_BLAS_LIB Rblas.dll&quot;</span>, </span><br><span class="line">        <span class="string">&quot;NVBLAS_GPU_LIST ALL&quot;</span>), <span class="string">&quot;nvblas.conf&quot;</span>)</span><br><span class="line">		</span><br><span class="line"><span class="comment"># library Rcpp and RcppArmadillo</span></span><br><span class="line"><span class="keyword">library</span>(Rcpp)</span><br><span class="line"><span class="keyword">library</span>(RcppArmadillo)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Rcpp code</span></span><br><span class="line">code &lt;- <span class="string">&#x27;</span></span><br><span class="line"><span class="string">// [[Rcpp::depends(RcppArmadillo)]]</span></span><br><span class="line"><span class="string">#include &lt;RcppArmadillo.h&gt;</span></span><br><span class="line"><span class="string">using Rcpp::_;</span></span><br><span class="line"><span class="string">using Rcpp::List;</span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">Rcpp::List arma_fastLm_chol(const arma::mat&amp; X, const arma::vec&amp; y) &#123;</span></span><br><span class="line"><span class="string">  arma::mat xtx = X.t() * X;</span></span><br><span class="line"><span class="string">  arma::vec coef = arma::solve(xtx, X.t() * y);</span></span><br><span class="line"><span class="string">  arma::vec res  = y - X*coef;</span></span><br><span class="line"><span class="string">  arma::uword df = X.n_rows - X.n_cols;</span></span><br><span class="line"><span class="string">  double s2 = arma::dot(res, res) / (double) df;</span></span><br><span class="line"><span class="string">  arma::colvec se = arma::sqrt(s2 * arma::diagvec(arma::inv_sympd(xtx)));</span></span><br><span class="line"><span class="string">  return List::create(_[&quot;coefficients&quot;] = coef, _[&quot;stderr&quot;] = se, </span></span><br><span class="line"><span class="string">                      _[&quot;df.residual&quot;]  = df);</span></span><br><span class="line"><span class="string">&#125;&#x27;</span></span><br><span class="line"><span class="comment"># compile Rcpp code</span></span><br><span class="line">Rcpp::sourceCpp(code = code)</span><br><span class="line"></span><br><span class="line"><span class="comment"># data generation</span></span><br><span class="line">n &lt;- <span class="number">2e5L</span></span><br><span class="line">p &lt;- <span class="number">300L</span></span><br><span class="line">mm &lt;- cbind(<span class="number">1</span>, matrix(rnorm(n * (p - <span class="number">1L</span>)), nc = p-<span class="number">1L</span>))</span><br><span class="line">y &lt;- mm %*% rnorm(p, sd = <span class="number">3</span>) + rnorm(n, sd = <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># test function</span></span><br><span class="line">system.time(&#123;</span><br><span class="line">  arma_fastLm_chol(mm, y)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">## cpu</span></span><br><span class="line"><span class="comment"># user  system elapsed</span></span><br><span class="line"><span class="comment"># 7.03    0.22    0.45</span></span><br><span class="line"><span class="comment">## gpu</span></span><br><span class="line"><span class="comment"># user  system elapsed</span></span><br><span class="line"><span class="comment"># 0.60    0.25    0.38</span></span><br></pre></td></tr></table></figure>

<p>My computer: AMD Threadripper 1950X with 128GB Ram and GTX 1080 SLI</p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>Rcpp</tag>
        <tag>RcppArmadillo</tag>
        <tag>NVBLAS</tag>
      </tags>
  </entry>
  <entry>
    <title>inconsolata.sty not found in CentOS</title>
    <url>/posts/201707/2017-07-20-inconsolata-in-centos.html</url>
    <content><![CDATA[<p>因為R編譯manual需要用到<code>inconsolata</code></p>
<p>但是CentOS 7下的texlive沒有<code>inconsolata.sty</code>這個檔案，所以要自己安裝</p>
<a id="more"></a>

<p>先用<code>yum install levien-inconsolata-fonts</code>安裝字型</p>
<p>再來是安裝tex檔案：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">wget http://mirrors.ctan.org/install/fonts/inconsolata.tds.zip</span><br><span class="line">mkdir inconsolata</span><br><span class="line">unzip inconsolata.tds.zip -d inconsolata</span><br><span class="line">sudo cp -r inconsolata/* /usr/share/texmf</span><br><span class="line">sudo mktexlsr</span><br><span class="line"></span><br><span class="line">tee -a /usr/share/texlive/texmf-dist/web2c/updmap.cfg &lt;&lt; EOF</span><br><span class="line">Map zi4.map</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">sudo yum install perl-Digest-MD5</span><br><span class="line">sudo updmap-sys --force</span><br></pre></td></tr></table></figure>

<p>這樣就可以快樂的編譯R manual了！</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>CentOS</tag>
        <tag>TexLive</tag>
        <tag>inconsolata</tag>
      </tags>
  </entry>
  <entry>
    <title>Rcpp link system library</title>
    <url>/posts/201708/2017-08-12-Rcpp-link-system-library.html</url>
    <content><![CDATA[<p>這篇主要是介紹Linux環境下，如何直接在Rcpp裡面去link系統已有的library</p>
<p>這篇主要是因為我在測試Blaze為什麼效能遠不如直接跑blazemark的結果</p>
<p>所以就想說直接link系統裡面的armadillo, blaze試試看</p>
<a id="more"></a>

<p>我這裡讓Rcpp直接使用我系統安裝好的Intel MKL以及Armaillo當第一個例子</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># armadillo</span></span><br><span class="line">Sys.setenv(PKG_CPPFLAGS = paste(<span class="string">&quot;-I/opt/intel/compilers_and_libraries_2017.1.132/linux/mkl/include -I/usr/include&quot;</span>,</span><br><span class="line">                                <span class="string">&quot;-L/opt/intel/compilers_and_libraries_2017.1.132/linux/mkl/lib/intel64 -L/usr/lib64&quot;</span>,</span><br><span class="line">                                <span class="string">&quot;-lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core  -liomp5 -lpthread -lm -larmadillo&quot;</span>,</span><br><span class="line">                                <span class="string">&quot;-O3 -mavx -DNDEBUG -fpermissive&quot;</span>),</span><br><span class="line">           PKG_LIBS = paste(<span class="string">&quot;-L/usr/lib64 -larmadillo&quot;</span>))</span><br><span class="line"></span><br><span class="line">sourceCpp(code = <span class="string">&quot;</span></span><br><span class="line"><span class="string">#include &lt;Rcpp.h&gt;</span></span><br><span class="line"><span class="string">#include &lt;mkl_blas.h&gt;</span></span><br><span class="line"><span class="string">#include &lt;armadillo&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">Rcpp::NumericMatrix arma_XTX2(Rcpp::NumericMatrix Xs) &#123;</span></span><br><span class="line"><span class="string">  int nr = Xs.nrow(), nc = Xs.ncol(), i_col, i_row, k;</span></span><br><span class="line"><span class="string">  arma::mat X(Xs.begin(), nr, nc, false);</span></span><br><span class="line"><span class="string">  arma::mat XTX = X.t() * X;</span></span><br><span class="line"><span class="string">  Rcpp::NumericMatrix out(nc, nc);</span></span><br><span class="line"><span class="string">  for( i_col=0, k=0 ; i_col &lt; nc; ++i_col)&#123;</span></span><br><span class="line"><span class="string">  	for( i_row = 0; i_row &lt; nc ; ++i_row, ++k )&#123;</span></span><br><span class="line"><span class="string">  		out[k] = XTX(i_row,i_col) ;</span></span><br><span class="line"><span class="string">  	&#125;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  return out;</span></span><br><span class="line"><span class="string">&#125;&quot;</span>, verbose = <span class="literal">TRUE</span>, rebuild = <span class="literal">TRUE</span>)</span><br></pre></td></tr></table></figure>

<p>下面是Rcpp link Blaze and MKL的例子</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(Rcpp)</span><br><span class="line">Sys.setenv(PKG_CPPFLAGS = paste(<span class="string">&quot;-I/opt/intel/compilers_and_libraries_2017.1.132/linux/mkl/include -I/usr/local/include/blaze&quot;</span>,</span><br><span class="line">                                <span class="string">&quot;-L/opt/intel/compilers_and_libraries_2017.1.132/linux/mkl/lib/intel64&quot;</span>,</span><br><span class="line">                                <span class="string">&quot;-lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core  -liomp5 -lpthread -lm&quot;</span>,</span><br><span class="line">                                <span class="string">&quot;-Wall -Wextra -Werror -Woverloaded-virtual -ansi -O3 -mavx -DNDEBUG -fpermissive -std=c++14&quot;</span>))</span><br><span class="line">sourceCpp(code = <span class="string">&quot;</span></span><br><span class="line"><span class="string">#include &lt;mkl_cblas.h&gt;</span></span><br><span class="line"><span class="string">#include &lt;Blaze.h&gt;</span></span><br><span class="line"><span class="string">#include &lt;Rcpp.h&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// [[Rcpp::export]]</span></span><br><span class="line"><span class="string">Rcpp::NumericMatrix blaze3_XTX3(Rcpp::NumericMatrix Xs) &#123;</span></span><br><span class="line"><span class="string">  int nr = Xs.nrow(), nc = Xs.ncol(), i_col, i_row, k;</span></span><br><span class="line"><span class="string">  blaze::DynamicMatrix&lt;double, blaze::columnMajor&gt; X(nr, nc);</span></span><br><span class="line"><span class="string">  for( i_col=0; i_col &lt; nc; ++i_col)&#123;</span></span><br><span class="line"><span class="string">  	for( i_row = 0; i_row &lt; nc ; ++i_row )&#123;</span></span><br><span class="line"><span class="string">          X(i_row, i_col) = Xs(i_row,i_col) ;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  blaze::DynamicMatrix&lt;double, blaze::rowMajor&gt; XT = blaze::trans(X);</span></span><br><span class="line"><span class="string">  blaze::DynamicMatrix&lt;double, blaze::columnMajor&gt; XTX( XT * X );</span></span><br><span class="line"><span class="string">  Rcpp::NumericMatrix out(nc, nc);</span></span><br><span class="line"><span class="string">  for( i_col=0, k=0 ; i_col &lt; nc; ++i_col)&#123;</span></span><br><span class="line"><span class="string">  	for( i_row = 0; i_row &lt; nc ; ++i_row, ++k )&#123;</span></span><br><span class="line"><span class="string">  		out[k] = XTX(i_row,i_col) ;</span></span><br><span class="line"><span class="string">  	&#125;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  return out;</span></span><br><span class="line"><span class="string">&#125;&quot;</span>, verbose = <span class="literal">TRUE</span>, rebuild = <span class="literal">TRUE</span>)</span><br></pre></td></tr></table></figure>




]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>Rcpp</tag>
        <tag>MKL</tag>
        <tag>Intel C++</tag>
      </tags>
  </entry>
  <entry>
    <title>Swish Beta Function In Keras</title>
    <url>/posts/201711/2017-11-19-Swish-Beta-Function-In-Keras.html</url>
    <content><![CDATA[<p>Google Brain had published a paper: “Swish : A Self-Gated Activation Function” (<a href="https://arxiv.org/abs/1710.05941">Arxiv link</a>).</p>
<p>In this blogger, I use Keras API of customizing layer to fulfill the Swish Beta function mentioned in paper.</p>
<a id="more"></a>

<p>Here is the source code: <a href="https://github.com/ChingChuan-Chen/keras_swish_beta">GitHub</a>.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> keras</span><br><span class="line"><span class="keyword">from</span> keras <span class="keyword">import</span> backend <span class="keyword">as</span> K</span><br><span class="line"><span class="keyword">from</span> keras.datasets <span class="keyword">import</span> mnist</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Dense, Dropout, Activation</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Conv2D, MaxPooling2D, GlobalAveragePooling1D</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> BatchNormalization</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> initializers, InputSpec</span><br><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> Sequential</span><br><span class="line"><span class="keyword">from</span> keras.engine.topology <span class="keyword">import</span> Layer</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SwishBeta</span>(<span class="params">Layer</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, trainable_beta = False, beta_initializer = <span class="string">&#x27;ones&#x27;</span>, **kwargs</span>):</span></span><br><span class="line">        super(SwishBeta, self).__init__(**kwargs)</span><br><span class="line">        self.supports_masking = <span class="literal">True</span></span><br><span class="line">        self.trainable = trainable_beta</span><br><span class="line">        self.beta_initializer = initializers.get(beta_initializer)</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">build</span>(<span class="params">self, input_shape</span>):</span></span><br><span class="line">        self.beta = self.add_weight(shape=[<span class="number">1</span>], name=<span class="string">&#x27;beta&#x27;</span>, </span><br><span class="line">                                    initializer=self.beta_initializer)</span><br><span class="line">        self.input_spec = InputSpec(ndim=len(input_shape))</span><br><span class="line">        self.built = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">call</span>(<span class="params">self, inputs</span>):</span></span><br><span class="line">        <span class="keyword">return</span> inputs * K.sigmoid(self.beta * inputs)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_config</span>(<span class="params">self</span>):</span></span><br><span class="line">        config = &#123;<span class="string">&#x27;trainable_beta&#x27;</span>: self.trainable_beta, </span><br><span class="line">                  <span class="string">&#x27;beta_initializer&#x27;</span>: initializers.serialize(self.beta_initializer)&#125;</span><br><span class="line">        base_config = super(SwishBeta, self).get_config()</span><br><span class="line">        <span class="keyword">return</span> dict(list(base_config.items()) + list(config.items()))</span><br><span class="line"></span><br><span class="line">num_classes = <span class="number">10</span></span><br><span class="line">img_rows, img_cols = <span class="number">28</span>, <span class="number">28</span></span><br><span class="line"></span><br><span class="line">(x_train, y_train), (x_test, y_test) = mnist.load_data()</span><br><span class="line"></span><br><span class="line">x_train = x_train.reshape(x_train.shape[<span class="number">0</span>], img_rows, img_cols, <span class="number">1</span>)</span><br><span class="line">x_test = x_test.reshape(x_test.shape[<span class="number">0</span>], img_rows, img_cols, <span class="number">1</span>)</span><br><span class="line">input_shape = (img_rows, img_cols, <span class="number">1</span>)</span><br><span class="line">    </span><br><span class="line">x_train = x_train.astype(<span class="string">&#x27;float32&#x27;</span>)</span><br><span class="line">x_test = x_test.astype(<span class="string">&#x27;float32&#x27;</span>)</span><br><span class="line">x_train /= <span class="number">255.</span></span><br><span class="line">x_test /= <span class="number">255.</span></span><br><span class="line"></span><br><span class="line">y_train = keras.utils.to_categorical(y_train, num_classes)</span><br><span class="line">y_test = keras.utils.to_categorical(y_test, num_classes)</span><br><span class="line"></span><br><span class="line">model = Sequential()</span><br><span class="line">model.add(Conv2D(<span class="number">64</span>, kernel_size=(<span class="number">3</span>, <span class="number">3</span>), padding = <span class="string">&#x27;same&#x27;</span>, </span><br><span class="line">                 kernel_initializer = <span class="string">&#x27;he_uniform&#x27;</span>, input_shape=input_shape))</span><br><span class="line">model.add(BatchNormalization())</span><br><span class="line">model.add(SwishBeta(<span class="literal">True</span>))</span><br><span class="line">model.add(Conv2D(<span class="number">128</span>, (<span class="number">3</span>, <span class="number">3</span>), padding = <span class="string">&#x27;same&#x27;</span>, </span><br><span class="line">                 kernel_initializer = <span class="string">&#x27;he_uniform&#x27;</span>))</span><br><span class="line">model.add(BatchNormalization())</span><br><span class="line">model.add(SwishBeta(<span class="literal">True</span>))</span><br><span class="line">model.add(MaxPooling2D(pool_size=(<span class="number">2</span>, <span class="number">2</span>)))</span><br><span class="line">model.add(Conv2D(<span class="number">256</span>, (<span class="number">3</span>, <span class="number">3</span>), padding = <span class="string">&#x27;same&#x27;</span>, </span><br><span class="line">                 kernel_initializer = <span class="string">&#x27;he_uniform&#x27;</span>))</span><br><span class="line">model.add(BatchNormalization())</span><br><span class="line">model.add(SwishBeta(<span class="literal">True</span>))</span><br><span class="line">model.add(Conv2D(<span class="number">256</span>, (<span class="number">3</span>, <span class="number">3</span>), padding = <span class="string">&#x27;same&#x27;</span>, </span><br><span class="line">                 kernel_initializer = <span class="string">&#x27;he_uniform&#x27;</span>))</span><br><span class="line">model.add(BatchNormalization())</span><br><span class="line">model.add(SwishBeta(<span class="literal">True</span>))</span><br><span class="line">model.add(MaxPooling2D(pool_size=(<span class="number">2</span>, <span class="number">2</span>)))</span><br><span class="line">model.add(Conv2D(<span class="number">512</span>, (<span class="number">3</span>, <span class="number">3</span>), padding = <span class="string">&#x27;same&#x27;</span>, </span><br><span class="line">                 kernel_initializer = <span class="string">&#x27;he_uniform&#x27;</span>))</span><br><span class="line">model.add(BatchNormalization())</span><br><span class="line">model.add(SwishBeta(<span class="literal">True</span>))</span><br><span class="line">model.add(Conv2D(<span class="number">512</span>, (<span class="number">3</span>, <span class="number">3</span>), padding = <span class="string">&#x27;same&#x27;</span>, </span><br><span class="line">                 kernel_initializer = <span class="string">&#x27;he_uniform&#x27;</span>))</span><br><span class="line">model.add(BatchNormalization())</span><br><span class="line">model.add(SwishBeta(<span class="literal">True</span>))</span><br><span class="line">model.add(MaxPooling2D(pool_size=(<span class="number">2</span>, <span class="number">2</span>)))</span><br><span class="line">model.add(GlobalAveragePooling2D())</span><br><span class="line">model.add(SwishBeta(<span class="literal">True</span>))</span><br><span class="line">model.add(Dense(num_classes, activation=<span class="string">&#x27;softmax&#x27;</span>))</span><br><span class="line"></span><br><span class="line">model.compile(loss=keras.losses.categorical_crossentropy,</span><br><span class="line">              optimizer=keras.optimizers.Adam(),</span><br><span class="line">              metrics=[<span class="string">&#x27;accuracy&#x27;</span>])</span><br><span class="line"></span><br><span class="line">history = model.fit(x_train, y_train,</span><br><span class="line">                    batch_size = <span class="number">128</span>,</span><br><span class="line">                    epochs = <span class="number">500</span>,</span><br><span class="line">                    verbose = <span class="number">1</span>,</span><br><span class="line">                    callbacks = [keras.callbacks.EarlyStopping(patience=<span class="number">7</span>)],</span><br><span class="line">                    validation_data=(x_test, y_test))</span><br><span class="line">score = model.evaluate(x_test, y_test, verbose=<span class="number">0</span>)</span><br><span class="line">print(<span class="string">&#x27;Test loss:&#x27;</span>, score[<span class="number">0</span>])</span><br><span class="line">print(<span class="string">&#x27;Test accuracy:&#x27;</span>, score[<span class="number">1</span>]) <span class="comment"># 99.66%</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Deep Learning</tag>
        <tag>Keras</tag>
        <tag>Swish</tag>
      </tags>
  </entry>
  <entry>
    <title>R call javascript</title>
    <url>/posts/201803/2018-03-15-R-call-javascript.html</url>
    <content><![CDATA[<p>今天看到javascript call R似乎很容易</p>
<p>就稍微看一下R call javascript的方法</p>
<p>然後就看到<code>V8</code>這個套件，玩了一下覺得很驚豔XD</p>
<p>感覺javascript很適合拿來做一些R不容易做的功能XDD</p>
<a id="more"></a>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(V8)</span><br><span class="line">ctx &lt;- v8()</span><br><span class="line">ctx$<span class="keyword">source</span>(<span class="string">&quot;http://underscorejs.org/underscore-min.js&quot;</span>)</span><br><span class="line">ctx$eval(<span class="string">&quot;var list = [[0, 1], [2, 3], [4, 5]];&quot;</span>)</span><br><span class="line">ctx$eval(<span class="string">&quot;var flat = _.reduceRight(list, function(a, b) &#123; return a.concat(b); &#125;, []);&quot;</span>)</span><br><span class="line">ctx$get(<span class="string">&quot;flat&quot;</span>)</span><br><span class="line"><span class="comment"># [1] 4 5 2 3 0 1</span></span><br><span class="line"></span><br><span class="line">ctx$assign(<span class="string">&quot;x&quot;</span>, <span class="number">1</span>:<span class="number">5</span>)</span><br><span class="line">ctx$eval(<span class="string">&quot;var y = _.each(x, function(x)&#123; return x*3;&#125;)&quot;</span>)</span><br><span class="line">ctx$get(<span class="string">&quot;y&quot;</span>)</span><br><span class="line"><span class="comment"># [1] 1 2 3 4 5</span></span><br><span class="line"></span><br><span class="line">x2 &lt;- <span class="number">1</span>:<span class="number">5</span></span><br><span class="line">ctx$call(<span class="string">&quot;_.each&quot;</span>, x2, JS(<span class="string">&quot;function(x)&#123; return x*3;&#125;&quot;</span>))</span><br><span class="line"><span class="comment"># [1] 1 2 3 4 5</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ctx$call(<span class="string">&quot;_.filter&quot;</span>, mtcars, JS(<span class="string">&quot;function(x)&#123;return x.mpg &lt; 15&#125;&quot;</span>))</span><br><span class="line"><span class="comment">#                      mpg cyl disp  hp drat    wt  qsec vs am gear carb</span></span><br><span class="line"><span class="comment"># Duster 360          14.3   8  360 245 3.21 3.570 15.84  0  0    3    4</span></span><br><span class="line"><span class="comment"># Cadillac Fleetwood  10.4   8  472 205 2.93 5.250 17.98  0  0    3    4</span></span><br><span class="line"><span class="comment"># Lincoln Continental 10.4   8  460 215 3.00 5.424 17.82  0  0    3    4</span></span><br><span class="line"><span class="comment"># Chrysler Imperial   14.7   8  440 230 3.23 5.345 17.42  0  0    3    4</span></span><br><span class="line"><span class="comment"># Camaro Z28          13.3   8  350 245 3.73 3.840 15.41  0  0    3    4</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># work with npm</span></span><br><span class="line">Sys.setenv(PATH = paste0(Sys.getenv(<span class="string">&quot;PATH&quot;</span>), <span class="string">&quot;;C:\\Program Files\\nodejs;C:\\Users\\Jamal\\AppData\\Roaming\\npm&quot;</span>))</span><br><span class="line">Sys.setenv(NODE_PATH = <span class="string">&quot;C:\\Program Files\\nodejs\\node_modules;C:\\Users\\Jamal\\AppData\\Roaming\\npm\\node_modules&quot;</span>)</span><br><span class="line">system(<span class="string">&quot;npm install -g browserify js-beautify&quot;</span>)</span><br><span class="line">writeLines(<span class="string">&quot;global.beautify = require(&#x27;js-beautify&#x27;);&quot;</span>, <span class="string">&quot;in.js&quot;</span>)</span><br><span class="line">system(<span class="string">&quot;browserify in.js -o bundle.js&quot;</span>)</span><br><span class="line"></span><br><span class="line">ct &lt;- v8()</span><br><span class="line">ct$<span class="keyword">source</span>(<span class="string">&quot;bundle.js&quot;</span>)</span><br><span class="line">test &lt;- <span class="string">&quot;(function(x,y)&#123;x = x || 1; y = y || 1; return y * x;&#125;)(4, 9)&quot;</span></span><br><span class="line">pretty_test &lt;- ct$call(<span class="string">&quot;pr.js_beautify&quot;</span>, test, list(indent_size = <span class="number">2</span>))</span><br><span class="line">cat(pretty_test)</span><br><span class="line"><span class="comment"># (function(x, y) &#123;</span></span><br><span class="line"><span class="comment">#   x = x || 1;</span></span><br><span class="line"><span class="comment">#   y = y || 1;</span></span><br><span class="line"><span class="comment">#   return y * x;</span></span><br><span class="line"><span class="comment"># &#125;)(4, 9)</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>Kivy</title>
    <url>/posts/201804/2018-04-16-kivy.html</url>
    <content><![CDATA[<p>Kivy是Python開源的一個庫</p>
<p>他可以直接在Android, iOS, Linux, Max OS X跟Windows上直接執行</p>
<a id="more"></a>

<p>這篇會介紹下面三點：</p>
<ol>
<li>安裝kivy</li>
<li>執行一個簡單的範例</li>
<li>安裝Kivy Designer，並設定可於PyCharm開啟</li>
<li>複雜一點的case</li>
</ol>
<h2 id="安裝kivy"><a href="#安裝kivy" class="headerlink" title="安裝kivy"></a>安裝kivy</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install docutils pygments pypiwin32 kivy.deps.sdl2 kivy.deps.glew</span><br><span class="line">pip install kivy.deps.gstreamer</span><br><span class="line">pip install kivy</span><br><span class="line">pip install kivy_examples</span><br></pre></td></tr></table></figure>

<h2 id="簡單的kivy範例"><a href="#簡單的kivy範例" class="headerlink" title="簡單的kivy範例"></a>簡單的kivy範例</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> kivy.app <span class="keyword">import</span> App</span><br><span class="line"><span class="keyword">from</span> kivy.uix.button <span class="keyword">import</span> Button</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestApp</span>(<span class="params">App</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">build</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> Button(text=<span class="string">&#x27;Test&#x27;</span>)</span><br><span class="line"></span><br><span class="line">TestApp().run()</span><br></pre></td></tr></table></figure>

<p>執行之後就可以看到這樣結果</p>
<p><img src="/images/kivy.png"></p>
<h2 id="安裝Kivy-Designer，並設定可於PyCharm開啟"><a href="#安裝Kivy-Designer，並設定可於PyCharm開啟" class="headerlink" title="安裝Kivy Designer，並設定可於PyCharm開啟"></a>安裝Kivy Designer，並設定可於PyCharm開啟</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda install watchdog pygments docutils jedi gitpython six kivy-garden</span><br><span class="line">garden install xpopup</span><br><span class="line">cd C:\Users\%USERNAME%\</span><br><span class="line">git clone http://github.com/kivy/kivy-designer/</span><br></pre></td></tr></table></figure>

<p>然後打開PyCharm，到<code>settings =&gt; Tools =&gt; External Tools</code></p>
<p>然後點+，新增一個工具，設定如下：</p>
<p><img src="/images/pycharm_kivy.png"></p>
<p>紅框部分就是你的Username，其位置可以根據你把你的kivy designer放哪兒決定</p>
<p>Program就用<code>$ModuleSdkPath$</code>，Arguments則是<code>-m designer</code></p>
<p>然後在Project裡面點右鍵點<code>External Tools</code>就可以看到Kivy Designer了，點下去就會打開了!</p>
<h2 id="複雜一點的case"><a href="#複雜一點的case" class="headerlink" title="複雜一點的case"></a>複雜一點的case</h2><p><a href="https://kivy.org/docs/examples/gen__canvas__bezier__py.html">Example連結</a></p>
<p>效果就會長這樣：</p>
<p><img src="/images/kivy_bezier.png"></p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>PyCharm</tag>
        <tag>Kivy</tag>
      </tags>
  </entry>
  <entry>
    <title>Installations of Python</title>
    <url>/posts/201804/2018-04-14-Python-installation.html</url>
    <content><![CDATA[<p>簡單記錄一些安裝命令，以及安裝<code>Tensorflow</code>、<code>PyTorch</code>，跟編譯<code>PyTorch</code>等</p>
<a id="more"></a>

<h2 id="Intel-Distributed-Python"><a href="#Intel-Distributed-Python" class="headerlink" title="Intel Distributed Python"></a>Intel Distributed Python</h2><p>稍微記錄一下怎麼用<code>Anaconda</code>建置虛擬環境，安裝<code>Intel</code>發行的<code>Python</code></p>
<p>安裝<code>miniconda</code>之後，用下面指令可以載入Python的環境</p>
<p>(建議安裝all-user，並安裝到<code>C:\Miniconda3</code>，可以避免一些問題)</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">C:\Miniconda3\Scripts\activate.bat</span><br></pre></td></tr></table></figure>

<p>引入Intel channel，安裝intel發行的Python</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda config --add channels intel</span><br><span class="line">conda create -n idp intelpython3_full python=3</span><br></pre></td></tr></table></figure>

<p>安裝之後，啟用idp這個環境</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">activate idp</span><br></pre></td></tr></table></figure>

<h2 id="Tensorflow-Keras安裝方法"><a href="#Tensorflow-Keras安裝方法" class="headerlink" title="Tensorflow, Keras安裝方法"></a>Tensorflow, Keras安裝方法</h2><p>建議不要更新<code>html5lib</code>，避免conda出現錯誤，無法再使用</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install tensorflow-gpu -I --no-update-deps</span><br></pre></td></tr></table></figure>

<h2 id="PyTorch安裝方法"><a href="#PyTorch安裝方法" class="headerlink" title="PyTorch安裝方法"></a>PyTorch安裝方法</h2><h3 id="直接利用conda安裝"><a href="#直接利用conda安裝" class="headerlink" title="直接利用conda安裝"></a>直接利用conda安裝</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">C:\Miniconda3\Scripts\activate.bat idp</span><br><span class="line">C:\Miniconda3\Scripts\conda install -c peterjc123 pytorch cuda90</span><br></pre></td></tr></table></figure>

<h3 id="自行編譯"><a href="#自行編譯" class="headerlink" title="自行編譯"></a>自行編譯</h3><p>安裝好VS2017, CUDA 9.0之後，執行下面</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/peterjc123/pytorch-scripts.git</span><br><span class="line">cd pytorch-scripts</span><br><span class="line">C:\Miniconda3\Scripts\activate.bat idp</span><br><span class="line">cuda90.bat</span><br></pre></td></tr></table></figure>

<h3 id="編譯PyTorch延伸套件"><a href="#編譯PyTorch延伸套件" class="headerlink" title="編譯PyTorch延伸套件"></a>編譯PyTorch延伸套件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/pytorch/extension-ffi.git</span><br><span class="line">&quot;C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvarsall.bat&quot;  x86_amd64</span><br><span class="line">C:\Miniconda3\Scripts\activate.bat idp</span><br><span class="line">cd extension-ffi/script</span><br><span class="line">python build.py</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>MKL</tag>
        <tag>Python</tag>
        <tag>Keras</tag>
        <tag>PyTorch</tag>
        <tag>Tensorflow</tag>
        <tag>Intel</tag>
        <tag>deep learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Python Call Golang</title>
    <url>/posts/201804/2018-04-16-python-call-go.html</url>
    <content><![CDATA[<p>Golang的速度極快，而且Go可以直接編譯成shared library</p>
<p>直接就譨讓Python使用<code>ctypes</code>載入，就能使用了</p>
<a id="more"></a>

<p>事先需求：</p>
<ol>
<li>安裝好Go (版本&gt;=1.5)，而且Go要在環境變數裡(執行<code>go -v</code>要有東西XD)</li>
</ol>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;C&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 匯出printBye method</span></span><br><span class="line"><span class="comment">//Export printBye</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">printBye</span><span class="params">()</span></span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;From DLL: Bye!&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 匯出 sum method</span></span><br><span class="line"><span class="comment">//Export sum</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sum</span><span class="params">(a <span class="keyword">int</span>, b <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;&#125; <span class="comment">// 一定要有</span></span><br></pre></td></tr></table></figure>

<p>然後就可以執行下面兩行Python來編譯成shared library檔案</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.system(<span class="string">&quot;go build -buildmode=c-shared -o libtest.dll test.go&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>就可以在你的目錄下看到<code>libtest.dll</code>了，就載入後，就能使用裡面的method了</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> ctypes</span><br><span class="line">test = ctypes.cdll.LoadLibrary(<span class="string">&quot;libtest.dll&quot;</span>)</span><br><span class="line"></span><br><span class="line">test.printBye()</span><br><span class="line">test.sum(<span class="number">1</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>PyCharm</tag>
        <tag>Golang</tag>
      </tags>
  </entry>
  <entry>
    <title>PyCharm and Cython</title>
    <url>/posts/201804/2018-04-15-PyCharm-and-Cython.html</url>
    <content><![CDATA[<p>這篇文章主要介紹PyCharm跟Cython</p>
<a id="more"></a>

<p>先寫下我的檔案架構</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">+-- main.py</span><br><span class="line">+-- fib</span><br><span class="line">|   +-- __init__.py</span><br><span class="line">|   +-- cfib.c</span><br><span class="line">|   +-- cfib.h</span><br><span class="line">|   +-- fib.pyx</span><br><span class="line">|   +-- setup.py</span><br></pre></td></tr></table></figure>

<p>每一個檔案的用途：</p>
<ol>
<li><code>main.py</code>是主程式</li>
<li><code>__init__.py</code>是套件引用檔案</li>
<li><code>cfib.c</code>是用c寫成的<code>fib</code>函數</li>
<li><code>cfib.h</code>是cfib的header檔，供<code>fib.pyx</code>參照</li>
<li><code>fib.pyx</code>是Cython檔</li>
<li><code>setup.py</code>則是拿來編譯整個Cython的</li>
</ol>
<p><code>cfib.c</code>內容如下：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;cfib.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="title">fib</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">long</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> a=<span class="number">0</span>, b=<span class="number">1</span>, i, tmp;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;n; ++i) &#123;</span><br><span class="line">        tmp = a; a = a + b; b = tmp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>cfib.h</code>內容如下：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __CFIB_H__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __CFIB_H__</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="title">fib</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">long</span> n)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>

<p>基本上<code>cfib.c</code>跟<code>cfib.h</code>就是很標準的c程式寫法，就不贅述，主要是拿來比performance用的</p>
<p>下面則是<code>fix.pyx</code>檔案，<code>fib_c</code>是定義引用的c函數</p>
<p><code>fib_cython</code>是未優化過的cython程式，基本上就是python樣子</p>
<p><code>fib_cython_optimized</code>是加上型別的cythoin程式</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cdef extern from &quot;cfib.h&quot;:</span><br><span class="line">    unsigned long _fib &quot;fib&quot;(unsigned long n)</span><br><span class="line"></span><br><span class="line">def fib_c(n):</span><br><span class="line">    &#39;&#39;&#39; Returns the nth Fibonacci number.&#39;&#39;&#39;</span><br><span class="line">    return _fib(n)</span><br><span class="line"></span><br><span class="line">def fib_cython(n):</span><br><span class="line">    &#39;&#39;&#39;Returns the nth Fibonacci number.&#39;&#39;&#39;</span><br><span class="line">    a, b &#x3D; 0, 1</span><br><span class="line">    for i in range(n):</span><br><span class="line">        a, b &#x3D; a + b, a</span><br><span class="line">    return a</span><br><span class="line"></span><br><span class="line">def fib_cython_optimized(unsigned long n):</span><br><span class="line">    &#39;&#39;&#39;Returns the nth Fibonacci number.&#39;&#39;&#39;</span><br><span class="line">    cdef unsigned long a&#x3D;0, b&#x3D;1, i</span><br><span class="line">    for i in range(n):</span><br><span class="line">        a, b &#x3D; a + b, a</span><br><span class="line">    return a</span><br></pre></td></tr></table></figure>

<p><code>__init__.py</code>檔案內容：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> .fib <span class="keyword">import</span> *</span><br></pre></td></tr></table></figure>

<p><code>setup.py</code>檔案內容如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> distutils.core <span class="keyword">import</span> setup, Extension</span><br><span class="line"><span class="keyword">from</span> Cython.Build <span class="keyword">import</span> cythonize</span><br><span class="line"></span><br><span class="line">setup(ext_modules = cythonize(Extension(name=<span class="string">&quot;fib&quot;</span>, sources=[<span class="string">&quot;cfib.c&quot;</span>, <span class="string">&quot;fib.pyx&quot;</span>])))</span><br></pre></td></tr></table></figure>

<p>有了這幾個檔案之後，我們先來設定PyCharm</p>
<p>打開PyCharm，到<code>settings =&gt; Tools =&gt; External Tools</code></p>
<p>然後點+，新增一個工具，設定如下：</p>
<p><img src="/images/pycharm_cython.png"></p>
<p><code>Porgram</code>設定<code>$ModuleSdkPath$</code>，<code>Arguments</code>設定<code>$FilePath$ build_ext --inplace</code>，<code>Working directory</code>設定<code>$FileDir$</code></p>
<p>這樣基本上就大功告成了，然後回到Project對setup.py點右鍵，選<code>External Tools</code>，選<code>CythonBuild</code>就可以看到開始跑了</p>
<p><img src="/images/pycharm_cython_2.png"></p>
<p>如果設定對的話，就可以看到編譯成功的訊息</p>
<p><img src="/images/pycharm_cython_3.png"></p>
<p>最後就可以來跑跑看啦，<code>main.py</code>如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fib_python</span>(<span class="params">n</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;Returns the nth Fibonacci number.&#x27;&#x27;&#x27;</span></span><br><span class="line">    a, b = <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</span><br><span class="line">        a, b = a + b, a</span><br><span class="line">    <span class="keyword">return</span> a</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    print(<span class="string">&quot;##### check result #####&quot;</span>)</span><br><span class="line">    <span class="keyword">import</span> fib</span><br><span class="line">    print(<span class="string">&quot;fib(47) in python:&quot;</span>, fib_python(<span class="number">47</span>))</span><br><span class="line">    print(<span class="string">&quot;fib.fib_c(47):&quot;</span>, fib.fib_c(<span class="number">47</span>))</span><br><span class="line">    print(<span class="string">&quot;fib.fib_cython(47):&quot;</span>, fib.fib_cython(<span class="number">47</span>))</span><br><span class="line">    print(<span class="string">&quot;fib.fib_cython_optimized(47):&quot;</span>, fib.fib_cython_optimized(<span class="number">47</span>))</span><br><span class="line"></span><br><span class="line">    print(<span class="string">&quot;\n##### performace benchmark #####&quot;</span>)</span><br><span class="line">    <span class="keyword">import</span> timeit</span><br><span class="line">    python_setup = <span class="string">&quot;from __main__ import fib_python&quot;</span></span><br><span class="line">    cython_setup = <span class="string">&quot;import fib&quot;</span></span><br><span class="line">    print(<span class="string">&quot;Python code: &quot;</span>, timeit.timeit(<span class="string">&#x27;fib_python(47)&#x27;</span>, setup=python_setup), <span class="string">&quot;seconds&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;Cython code: &quot;</span>, timeit.timeit(<span class="string">&#x27;fib.fib_cython(47)&#x27;</span>, setup=cython_setup), <span class="string">&quot;seconds&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;Optimized Cython code: &quot;</span>, timeit.timeit(<span class="string">&#x27;fib.fib_cython_optimized(47)&#x27;</span>, setup=cython_setup), <span class="string">&quot;seconds&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;C code: &quot;</span>, timeit.timeit(<span class="string">&#x27;fib.fib_c(47)&#x27;</span>, setup=cython_setup), <span class="string">&quot;seconds&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>輸出結果就會是下面這樣：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">C:\Users\*****\Miniconda3\envs\idp\python.exe D:&#x2F;Dropbox&#x2F;Data&#x2F;programming&#x2F;Python&#x2F;Cython&#x2F;1_fib&#x2F;main.py</span><br><span class="line">##### check result #####</span><br><span class="line">fib(47) in python: 2971215073</span><br><span class="line">fib.fib_c(47): 2971215073</span><br><span class="line">fib.fib_cython(47): 2971215073</span><br><span class="line">fib.fib_cython_optimized(47): 2971215073</span><br><span class="line"></span><br><span class="line">##### performace benchmark #####</span><br><span class="line">Python code:  2.9352622053858113 seconds</span><br><span class="line">Cython code:  1.7331176511158422 seconds</span><br><span class="line">Optimized Cython code:  0.14643933094340067 seconds</span><br><span class="line">C code:  0.11884286952119272 seconds</span><br><span class="line"></span><br><span class="line">Process finished with exit code 0</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>PyCharm</tag>
        <tag>Cython</tag>
      </tags>
  </entry>
  <entry>
    <title>Python Call Golang Part 2</title>
    <url>/posts/201804/2018-04-24-python-call-go-part2.html</url>
    <content><![CDATA[<p>我們還可以利用<code>cffi</code>幫我們直接build module來供Python來使用</p>
<p>你可以在我的github repo找到這些程式碼(<a href="https://github.com/ChingChuan-Chen/python_call_go">點我</a>)</p>
<a id="more"></a>

<p>你可以一樣利用<code>os.system</code>來call go幫忙編譯成動態程式庫，提供Python來用</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.system(<span class="string">&quot;go build -buildmode=c-shared -o libtest.dll test.go&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> cffi <span class="keyword">import</span> FFI</span><br><span class="line">ffi = FFI()</span><br><span class="line">ffi.cdef(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">typedef long long GoInt;</span></span><br><span class="line"><span class="string">void printBye();</span></span><br><span class="line"><span class="string">GoInt sum(GoInt p0, GoInt p1);</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line">lib = ffi.dlopen(<span class="string">&quot;libtest.dll&quot;</span>)</span><br><span class="line"></span><br><span class="line">lib.printBye()</span><br><span class="line">lib.sum(<span class="number">1</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure>

<p>然後就可以用<code>cffi</code>載入dll來呼叫函數，不這個例子還看不出來<code>cffi</code>有什麼差別</p>
<p>下面這個例子，可以讓你透過<code>cffi</code>來使用Go的struct</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;C&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;math&quot;</span></span><br><span class="line">    <span class="string">&quot;sort&quot;</span></span><br><span class="line">    <span class="string">&quot;sync&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> count <span class="keyword">int</span></span><br><span class="line"><span class="keyword">var</span> mtx sync.Mutex</span><br><span class="line"></span><br><span class="line"><span class="comment">//export Add</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Add</span><span class="params">(a, b <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> a + b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//export Cosine</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Cosine</span><span class="params">(x <span class="keyword">float64</span>)</span> <span class="title">float64</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> math.Cos(x)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//export Sort</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Sort</span><span class="params">(vals []<span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">    sort.Ints(vals)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//export Log</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Log</span><span class="params">(msg <span class="keyword">string</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">    mtx.Lock()</span><br><span class="line">    <span class="keyword">defer</span> mtx.Unlock()</span><br><span class="line">    fmt.Println(msg)</span><br><span class="line">    count++</span><br><span class="line">    <span class="keyword">return</span> count</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;&#125;</span><br></pre></td></tr></table></figure>

<p>上面是go檔案，下面是Python檔</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> cffi <span class="keyword">import</span> FFI</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.system(<span class="string">&quot;go build -buildmode=c-shared -o awesome.dll awesome.go&quot;</span>)</span><br><span class="line"></span><br><span class="line">ffi = FFI()</span><br><span class="line"></span><br><span class="line">ffi.cdef(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">typedef long long GoInt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">typedef struct &#123;</span></span><br><span class="line"><span class="string">    void* data;</span></span><br><span class="line"><span class="string">    GoInt len;</span></span><br><span class="line"><span class="string">    GoInt cap;</span></span><br><span class="line"><span class="string">&#125; GoSlice;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">typedef struct &#123;</span></span><br><span class="line"><span class="string">    const char *data;</span></span><br><span class="line"><span class="string">    GoInt len;</span></span><br><span class="line"><span class="string">&#125; GoString;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">GoInt Add(GoInt a, GoInt b);</span></span><br><span class="line"><span class="string">double Cosine(double v);</span></span><br><span class="line"><span class="string">void Sort(GoSlice values);</span></span><br><span class="line"><span class="string">GoInt Log(GoString str);</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line">lib = ffi.dlopen(<span class="string">&quot;awesome.dll&quot;</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;awesome.Add(12,99) = %d&quot;</span> % lib.Add(<span class="number">12</span>,<span class="number">99</span>))</span><br><span class="line">print(<span class="string">&quot;awesome.Cosine(1) = %f&quot;</span> % lib.Cosine(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">data = ffi.new(<span class="string">&quot;GoInt[]&quot;</span>, [<span class="number">74</span>,<span class="number">4</span>,<span class="number">122</span>,<span class="number">9</span>,<span class="number">12</span>])</span><br><span class="line">nums = ffi.new(<span class="string">&quot;GoSlice*&quot;</span>, &#123;<span class="string">&#x27;data&#x27;</span>:data, <span class="string">&#x27;len&#x27;</span>:<span class="number">5</span>, <span class="string">&#x27;cap&#x27;</span>:<span class="number">5</span>&#125;)</span><br><span class="line">lib.Sort(nums[<span class="number">0</span>])</span><br><span class="line">print(<span class="string">&quot;awesome.Sort(74,4,122,9,12) = %s&quot;</span> % \</span><br><span class="line">      [ffi.cast(<span class="string">&quot;GoInt*&quot;</span>, nums.data)[i] <span class="keyword">for</span> i <span class="keyword">in</span> range(nums.len)])</span><br><span class="line"></span><br><span class="line">data = ffi.new(<span class="string">&quot;char[]&quot;</span>, <span class="string">b&quot;Hello Python!&quot;</span>)</span><br><span class="line">msg = ffi.new(<span class="string">&quot;GoString*&quot;</span>, &#123;<span class="string">&#x27;data&#x27;</span>:data, <span class="string">&#x27;len&#x27;</span>:<span class="number">13</span>&#125;)</span><br><span class="line">print(<span class="string">&quot;log id %d&quot;</span> % lib.Log(msg[<span class="number">0</span>]))</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>PyCharm</tag>
        <tag>Golang</tag>
      </tags>
  </entry>
  <entry>
    <title>Installations of Go 1.10 in CentOS 7.4</title>
    <url>/posts/201804/2018-04-25-installation-of-go-1.10-in-centos-7.4.html</url>
    <content><![CDATA[<p>簡單記錄一下在CentOS 7.4安裝Go 1.10</p>
<a id="more"></a>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://dl.google.com/go/go1.10.1.linux-amd64.tar.gz</span><br><span class="line">tar -zxvf go1.10.1.linux-amd64.tar.gz</span><br><span class="line">mv go /usr/<span class="built_in">local</span></span><br><span class="line">tee -a /etc/profile &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line"><span class="built_in">export</span> GOROOT=/usr/<span class="built_in">local</span>/go</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$GOROOT</span>/bin</span><br><span class="line">EOF</span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Go</category>
      </categories>
      <tags>
        <tag>Go</tag>
      </tags>
  </entry>
  <entry>
    <title>Extend The Disk Space of CentOS 7 VM</title>
    <url>/posts/201807/2018-07-13-extend-disk-space-centos-7-vm.html</url>
    <content><![CDATA[<p>這篇主要是紀錄怎麼在CentOS 7 VM上延展Disk</p>
<a id="more"></a>

<p>基本上，我是參考<a href="https://serverfault.com/questions/861517/centos-7-extend-partition-with-unallocated-space">這篇</a>做出來的</p>
<p>首先，當然你要先把VM的設定打開，將硬碟空間加大</p>
<p>之後，回到VM操作</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 對disk做操作</span></span><br><span class="line">fdisk /dev/sda</span><br><span class="line"><span class="comment"># 用 p &gt; d &gt; 2 &gt; n &gt; p &gt; 2 &gt; t &gt; 2 &gt; 8e &gt; p &gt; w 這個順序來操作</span></span><br><span class="line"><span class="comment"># p是print，d是刪除，裡面的2都是選擇第二個分區的意思</span></span><br><span class="line"><span class="comment"># n是新增，t應該是align，8e是某個位置，w是寫入</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## d之前</span></span><br><span class="line"><span class="comment">#    Device Boot      Start         End      Blocks   Id  System</span></span><br><span class="line"><span class="comment"># /dev/sda1   *        2048     2099199     1048576   83  Linux</span></span><br><span class="line"><span class="comment"># /dev/sda2         2099200    83886079    40893440   8e  Linux LVM</span></span><br><span class="line"><span class="comment">## t之後 (我把硬碟從40G變成600G)</span></span><br><span class="line"><span class="comment">#    Device Boot      Start         End      Blocks   Id  System</span></span><br><span class="line"><span class="comment"># /dev/sda1   *        2048     2099199     1048576   83  Linux</span></span><br><span class="line"><span class="comment"># /dev/sda2         2099200  1258291199   628096000   8e  Linux LVM</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 然後重開</span></span><br><span class="line">reboot</span><br><span class="line"><span class="comment"># resize 你修改的硬碟</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出目前空間</span></span><br><span class="line">df -h</span><br><span class="line"><span class="comment"># Filesystem                         Size  Used Avail Use% Mounted on</span></span><br><span class="line"><span class="comment"># /dev/mapper/centos_jamalvm01-root   35G  1.6G   34G   5% /</span></span><br><span class="line"><span class="comment"># devtmpfs                           3.8G     0  3.8G   0% /dev</span></span><br><span class="line"><span class="comment"># tmpfs                              3.9G     0  3.9G   0% /dev/shm</span></span><br><span class="line"><span class="comment"># tmpfs                              3.9G   12M  3.8G   1% /run</span></span><br><span class="line"><span class="comment"># tmpfs                              3.9G     0  3.9G   0% /sys/fs/cgroup</span></span><br><span class="line"><span class="comment"># /dev/sda1                         1014M  222M  793M  22% /boot</span></span><br><span class="line"><span class="comment"># tmpfs                              781M     0  781M   0% /run/user/0</span></span><br><span class="line"></span><br><span class="line">pvresize /dev/sda2</span><br><span class="line"><span class="comment">#  Physical volume &quot;/dev/sda2&quot; changed</span></span><br><span class="line"><span class="comment">#  1 physical volume(s) resized / 0 physical volume(s) not resized</span></span><br><span class="line"></span><br><span class="line">lvextend -l +100%FREE /dev/mapper/centos_jamalvm01-root</span><br><span class="line"><span class="comment">#  Size of logical volume centos_jamalvm01/root changed from &lt;35.00 GiB (8959 extents) to &lt;595.00 GiB (152319 extents).</span></span><br><span class="line"><span class="comment">#  Logical volume centos_jamalvm01/root successfully resized.</span></span><br><span class="line"></span><br><span class="line">xfs_growfs /</span><br><span class="line"><span class="comment"># meta-data=/dev/mapper/centos_jamalvm01-root isize=512    agcount=4, agsize=2293504 blks</span></span><br><span class="line"><span class="comment">#          =                       sectsz=512   attr=2, projid32bit=1</span></span><br><span class="line"><span class="comment">#          =                       crc=1        finobt=0 spinodes=0</span></span><br><span class="line"><span class="comment"># data     =                       bsize=4096   blocks=9174016, imaxpct=25</span></span><br><span class="line"><span class="comment">#          =                       sunit=0      swidth=0 blks</span></span><br><span class="line"><span class="comment"># naming   =version 2              bsize=4096   ascii-ci=0 ftype=1</span></span><br><span class="line"><span class="comment"># log      =internal               bsize=4096   blocks=4479, version=2</span></span><br><span class="line"><span class="comment">#          =                       sectsz=512   sunit=0 blks, lazy-count=1</span></span><br><span class="line"><span class="comment"># realtime =none                   extsz=4096   blocks=0, rtextents=0</span></span><br><span class="line"><span class="comment"># data blocks changed from 9174016 to 155974656</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出目前空間</span></span><br><span class="line">df -h</span><br><span class="line"><span class="comment"># Filesystem                         Size  Used Avail Use% Mounted on</span></span><br><span class="line"><span class="comment"># /dev/mapper/centos_jamalvm01-root  595G  1.6G  594G   1% /</span></span><br><span class="line"><span class="comment"># devtmpfs                           3.8G     0  3.8G   0% /dev</span></span><br><span class="line"><span class="comment"># tmpfs                              3.9G     0  3.9G   0% /dev/shm</span></span><br><span class="line"><span class="comment"># tmpfs                              3.9G   12M  3.8G   1% /run</span></span><br><span class="line"><span class="comment"># tmpfs                              3.9G     0  3.9G   0% /sys/fs/cgroup</span></span><br><span class="line"><span class="comment"># /dev/sda1                         1014M  222M  793M  22% /boot</span></span><br><span class="line"><span class="comment"># tmpfs                              781M     0  781M   0% /run/user/0</span></span><br></pre></td></tr></table></figure>

<p>這樣就搞定了<del>~</del></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Compilation of Python 3.5.5 in CentOS 7.4</title>
    <url>/posts/201804/2018-04-25-installation-of-python-3.5.5-in-centos-7.4.html</url>
    <content><![CDATA[<p>簡單記錄一下在CentOS自行編譯Python 3.5.5的過程</p>
<a id="more"></a>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python_version=3.5.5</span><br><span class="line">sudo yum install gcc gcc-c++</span><br><span class="line">sudo yum install -y zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel expat-devel</span><br><span class="line">sudo yum install -y wget</span><br><span class="line">wget https://www.python.org/ftp/python/<span class="variable">$python_version</span>/Python-<span class="variable">$python_version</span>.tgz</span><br><span class="line">tar xzf Python-<span class="variable">$python_version</span>.tgz</span><br><span class="line"><span class="built_in">cd</span> Python-<span class="variable">$python_version</span></span><br><span class="line"><span class="comment"># 極大可能會抓不到g++，先export</span></span><br><span class="line"><span class="built_in">export</span> CXX=g++</span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span> --<span class="built_in">enable</span>-shared --<span class="built_in">enable</span>-optimizations --<span class="built_in">enable</span>-profiling</span><br><span class="line"></span><br><span class="line">make -j<span class="variable">$&#123;nproc&#125;</span></span><br><span class="line">sudo make altinstall</span><br><span class="line">sudo tee /etc/ld.so.conf.d/local_lib.conf &lt;&lt; EOF</span><br><span class="line">/usr/<span class="built_in">local</span>/lib</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 從Oracle官網下載Oracle Instant Client 12.2 basic, devel and sqlplus</span></span><br><span class="line">sudo yum install oracle-instanclient12.2* -y</span><br><span class="line">sudo tee /etc/ld.so.conf.d/oracle_lib.conf&lt;&lt; EOF</span><br><span class="line">/usr/lib/oracle/12.2/client64/lib</span><br><span class="line">EOF</span><br><span class="line">sudo ldconfig</span><br><span class="line"></span><br><span class="line">pip3.5 install cx_Oracle</span><br></pre></td></tr></table></figure>

<p>py_main_version</p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>CentOS</tag>
      </tags>
  </entry>
  <entry>
    <title>PySpark with MongoDB</title>
    <url>/posts/201804/2018-04-25-pyspark-with-mongodb.html</url>
    <content><![CDATA[<p>這篇主要是要用PySpark去操作MongoDB</p>
<a id="more"></a>

<p>我的環境是windows 10 x64，下面會用到的檔案都有傳到<a href="https://github.com/ChingChuan-Chen/pyspark-mongo">github repo</a></p>
<p>需要的元件有：</p>
<ol>
<li><a href="https://github.com/steveloughran/winutils">winutils repo</a></li>
<li><a href="https://github.com/mongodb/mongo-spark">mongo-spark repo</a></li>
<li><a href="https://www.jetbrains.com/idea/">IntelliJ Idea</a> (IDE, 可用其他代替)</li>
</ol>
<h2 id="安裝篇"><a href="#安裝篇" class="headerlink" title="安裝篇"></a>安裝篇</h2><p>簡單安裝一下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tee /etc/yum.repos.d/mongodb-org-3.4.repo &lt;&lt; EOF</span><br><span class="line">[mongodb-org-3.4]</span><br><span class="line">name=MongoDB Repository</span><br><span class="line">baseurl=https://repo.mongodb.org/yum/redhat/\<span class="variable">$releasever</span>/mongodb-org/3.4/x86_64/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#install</span></span><br><span class="line">yum install -y mongodb-org</span><br><span class="line"></span><br><span class="line"><span class="comment">#ignore update</span></span><br><span class="line">sed -i <span class="string">&#x27;$a exclude=mongodb-org,mongodb-org-server,mongodb-org-shell,mongodb-org-mongos,mongodb-org-tools&#x27;</span> /etc/yum.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#disable selinux</span></span><br><span class="line">sed -i <span class="string">&#x27;s/^SELINUX=.*/SELINUX=disabled/&#x27;</span> /etc/sysconfig/selinux</span><br><span class="line">sed -i <span class="string">&#x27;s/^SELINUX=.*/SELINUX=disabled/&#x27;</span> /etc/selinux/config</span><br><span class="line">setenforce 0</span><br><span class="line"></span><br><span class="line"><span class="comment">#kernel settings</span></span><br><span class="line"><span class="keyword">if</span> [[ -f /sys/kernel/mm/transparent_hugepage/enabled ]];<span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> never &gt; /sys/kernel/mm/transparent_hugepage/enabled</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [[ -f /sys/kernel/mm/transparent_hugepage/defrag ]];<span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> never &gt; /sys/kernel/mm/transparent_hugepage/defrag</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">tee -a /etc/rc.local &lt;&lt;EOF</span><br><span class="line"><span class="keyword">if</span> [[ -f /sys/kernel/mm/transparent_hugepage/enabled ]];<span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> never &gt; /sys/kernel/mm/transparent_hugepage/enabled</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [[ -f /sys/kernel/mm/transparent_hugepage/defrag ]];<span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> never &gt; /sys/kernel/mm/transparent_hugepage/defrag</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#configure</span></span><br><span class="line">sed -i <span class="string">&quot;s/bindIp:.*/bindIp: <span class="subst">$(hostname -I)</span>/&quot;</span> /etc/mongod.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># start service</span></span><br><span class="line">systemctl <span class="built_in">enable</span> mongod</span><br><span class="line">systemctl start mongod</span><br><span class="line"></span><br><span class="line"><span class="comment"># create user</span></span><br><span class="line">tee createUser.js &lt;&lt; EOF</span><br><span class="line">use admin;</span><br><span class="line">db.createUser(&#123;</span><br><span class="line">    user: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">    <span class="built_in">pwd</span>: <span class="string">&quot;password&quot;</span>,</span><br><span class="line">    roles: [&#123;role: <span class="string">&quot;root&quot;</span>, db: <span class="string">&quot;admin&quot;</span>&#125;]</span><br><span class="line">&#125;);</span><br><span class="line">EOF</span><br><span class="line">mongo 192.168.1.112/admin  createUser.js</span><br><span class="line"></span><br><span class="line"><span class="comment"># restart mongod</span></span><br><span class="line">systemctl restart mongod</span><br><span class="line"></span><br><span class="line"><span class="comment"># enable authorization</span></span><br><span class="line">tee -a /etc/mongod.conf &lt;&lt; EOF</span><br><span class="line">security:</span><br><span class="line">  authorization: enabled</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># open mongo shell</span></span><br><span class="line">mongo -u <span class="string">&quot;admin&quot;</span> -p <span class="string">&quot;password&quot;</span> -host 192.168.1.112 --authenticationDatabase <span class="string">&quot;admin&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># open port to connect mongodb</span></span><br><span class="line">sudo firewall-cmd --zone=public --add-port=27017/tcp --permanent</span><br><span class="line">sudo firewall-cmd --reload</span><br></pre></td></tr></table></figure>


<h2 id="Spark環境"><a href="#Spark環境" class="headerlink" title="Spark環境"></a>Spark環境</h2><p>下載<code>winutils</code>後，把<code>hadoop-2.7.1</code>丟到<code>C:\hadoop</code></p>
<p>然後加一個環境變數<code>HADOOP_HOME</code>指向<code>C:\hadoop\hadoop-2.7.1</code></p>
<p>然後用<code>conda install pyspark</code>把pyspark安裝起來，然後用<code>pyspark</code>指令打開來測試看看</p>
<h2 id="執行PySpark"><a href="#執行PySpark" class="headerlink" title="執行PySpark"></a>執行PySpark</h2><p><code>test_script.py</code>如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pyspark</span><br><span class="line">spark = pyspark.sql.SparkSession.builder.appName(<span class="string">&#x27;test&#x27;</span>).getOrCreate()</span><br><span class="line">print(spark.range(<span class="number">10</span>).collect())</span><br></pre></td></tr></table></figure>

<p>用下面指令來執行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">spark-submit --master <span class="built_in">local</span>[2] test_script.py</span><br></pre></td></tr></table></figure>

<p>執行，就可以看到輸出為</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[Row(id=0), Row(id=1), Row(id=2), Row(id=3), Row(id=4), Row(id=5), Row(id=6), Row(id=7), Row(id=8), Row(id=9)]</span><br></pre></td></tr></table></figure>

<p>這樣就代表pyspark環境完成了</p>
<h2 id="IDEA跟編譯mongo-spark-connector"><a href="#IDEA跟編譯mongo-spark-connector" class="headerlink" title="IDEA跟編譯mongo spark connector"></a>IDEA跟編譯mongo spark connector</h2><p>接著打開Idea，安裝sbt, scala這兩個plugins</p>
<p>接著create一個scala的sbt專案於mongo-spark的資料夾</p>
<p>稍待一下，直接停掉idea的build job</p>
<p>打開Terminal打bash sbt check就會開始編譯 (要有mingw)</p>
<p>然後到sbt shell輸入asembly，就可以編譯出mongo spark connector的fat jar了</p>
<p>盪<code>target/scala-2.11</code>裡面就會有<code>mongo-spark-connector-assembly-2.2.2.jar</code>了</p>
<p>把<code>mongo-spark-connector-assembly-2.2.2.jar</code>丟到你的project下裡面</p>
<h2 id="使用PySpark-access-mongo"><a href="#使用PySpark-access-mongo" class="headerlink" title="使用PySpark access mongo"></a>使用PySpark access mongo</h2><p>先來一個簡單的例子，<code>mongo.py</code>:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pyspark.sql <span class="keyword">import</span> SparkSession</span><br><span class="line"></span><br><span class="line">uri = <span class="string">&quot;mongodb://admin:password@192.168.1.112&quot;</span></span><br><span class="line">spark = SparkSession \</span><br><span class="line">    .builder \</span><br><span class="line">    .appName(<span class="string">&quot;myApp&quot;</span>) \</span><br><span class="line">    .config(<span class="string">&quot;spark.mongodb.input.uri&quot;</span>, uri + <span class="string">&quot;/admin.test&quot;</span>) \</span><br><span class="line">    .config(<span class="string">&quot;spark.mongodb.output.uri&quot;</span>, uri + <span class="string">&quot;/admin.test&quot;</span>) \</span><br><span class="line">    .getOrCreate()</span><br><span class="line"></span><br><span class="line">people = spark.createDataFrame([(<span class="string">&quot;Bilbo Baggins&quot;</span>,  <span class="number">50</span>), (<span class="string">&quot;Gandalf&quot;</span>, <span class="number">1000</span>), (<span class="string">&quot;Thorin&quot;</span>, <span class="number">195</span>), (<span class="string">&quot;Balin&quot;</span>, <span class="number">178</span>), (<span class="string">&quot;Kili&quot;</span>, <span class="number">77</span>),</span><br><span class="line">   (<span class="string">&quot;Dwalin&quot;</span>, <span class="number">169</span>), (<span class="string">&quot;Oin&quot;</span>, <span class="number">167</span>), (<span class="string">&quot;Gloin&quot;</span>, <span class="number">158</span>), (<span class="string">&quot;Fili&quot;</span>, <span class="number">82</span>), (<span class="string">&quot;Bombur&quot;</span>, <span class="literal">None</span>)], [<span class="string">&quot;name&quot;</span>, <span class="string">&quot;age&quot;</span>])</span><br><span class="line"></span><br><span class="line">people.write.format(<span class="string">&quot;com.mongodb.spark.sql.DefaultSource&quot;</span>).mode(<span class="string">&quot;append&quot;</span>).save()</span><br></pre></td></tr></table></figure>

<p>執行命令如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">spark-submit --master <span class="built_in">local</span>[8] --jars mongo-spark-connector-assembly-2.2.2.jar --conf spark.driver.extraClassPath=mongo-spark-connector-assembly-2.2.2.jar --conf spark.executor.extraClassPath=mongo-spark-connector-assembly-2.2.2.jar mongo.py</span><br></pre></td></tr></table></figure>

<p>用mongo shell執行就可以看到資料已經被塞進去了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use admin;</span><br><span class="line">db.test.findOne();</span><br><span class="line">&#x2F;&#x2F; &#123;</span><br><span class="line">&#x2F;&#x2F;         &quot;_id&quot; : ObjectId(&quot;5ae1e04885beb03a349ffbcf&quot;),</span><br><span class="line">&#x2F;&#x2F;         &quot;name&quot; : &quot;Dwalin&quot;,</span><br><span class="line">&#x2F;&#x2F;         &quot;age&quot; : NumberLong(169)</span><br><span class="line">&#x2F;&#x2F; &#125;</span><br></pre></td></tr></table></figure>

<p>再來是本次目標，我們想要用pyspark從一個csv塞入一個架構如下面這樣的資料：</p>
<p>(舉一個可能類似婚友社的資料長相)</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">[&#123;</span><br><span class="line">  <span class="attr">&quot;id&quot;</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Kevin&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;sex&quot;</span>: <span class="string">&quot;man&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;age&quot;</span>: <span class="number">27</span>,</span><br><span class="line">  <span class="attr">&quot;history&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;pairId&quot;</span>: <span class="number">2</span>,</span><br><span class="line">       <span class="attr">&quot;statusCheck&quot;</span>: <span class="string">&quot;Interested&quot;</span>,</span><br><span class="line">       <span class="attr">&quot;memo&quot;</span>: <span class="string">&quot;Rose is following&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;pairId&quot;</span>: <span class="number">5</span>,</span><br><span class="line">      <span class="attr">&quot;statusCheck&quot;</span>: <span class="string">&quot;Not interested&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;, &#123;</span><br><span class="line">  <span class="attr">&quot;id&quot;</span>: <span class="number">2</span>,</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Cindy&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;sex&quot;</span>: <span class="string">&quot;woman&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;age&quot;</span>: <span class="number">22</span>,</span><br><span class="line">  <span class="attr">&quot;optional&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;pairId&quot;</span>: <span class="number">1</span>,</span><br><span class="line">      <span class="attr">&quot;memo&quot;</span>: <span class="string">&quot;unchecked, need to be followed!&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;]</span><br></pre></td></tr></table></figure>

<p><code>profiles.csv</code>檔案：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">id,name,sex,age,pairId,statusCheck,memo</span><br><span class="line">1,Kevin,man,27,2,&quot;Interested&quot;,&quot;Rose is following&quot;</span><br><span class="line">1,Kevin,man,27,5,&quot;Not Interested&quot;,</span><br><span class="line">2,Cindy,woman,22,1,,&quot;unchecked, need to be followed!&quot;</span><br></pre></td></tr></table></figure>

<p><code>profile_data_builder.py</code>檔案：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> pyspark.sql <span class="keyword">import</span> SparkSession</span><br><span class="line"><span class="keyword">from</span> pyspark.sql.types <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> pyspark.sql.functions <span class="keyword">import</span> struct, col, collect_list</span><br><span class="line"></span><br><span class="line">df_pd = pd.read_csv(<span class="string">&quot;profile.csv&quot;</span>)</span><br><span class="line"></span><br><span class="line">spark = SparkSession\</span><br><span class="line">        .builder\</span><br><span class="line">        .appName(<span class="string">&quot;dataTransform&quot;</span>)\</span><br><span class="line">        .getOrCreate()</span><br><span class="line">schema = StructType(</span><br><span class="line">    [StructField(<span class="string">&quot;id&quot;</span>, IntegerType(), <span class="literal">True</span>),</span><br><span class="line">    StructField(<span class="string">&quot;name&quot;</span>, StringType(), <span class="literal">True</span>),</span><br><span class="line">    StructField(<span class="string">&quot;sex&quot;</span>, StringType(), <span class="literal">True</span>),</span><br><span class="line">    StructField(<span class="string">&quot;age&quot;</span>, IntegerType(), <span class="literal">True</span>),</span><br><span class="line">    StructField(<span class="string">&quot;pairId&quot;</span>, StringType(), <span class="literal">True</span>),</span><br><span class="line">    StructField(<span class="string">&quot;statusCheck&quot;</span>, StringType(), <span class="literal">True</span>),</span><br><span class="line">    StructField(<span class="string">&quot;memo&quot;</span>, StringType(), <span class="literal">True</span>)]</span><br><span class="line">)</span><br><span class="line">df = spark.createDataFrame(df_pd, schema)</span><br><span class="line"></span><br><span class="line">grpByCols = [<span class="string">&quot;id&quot;</span>, <span class="string">&quot;name&quot;</span>, <span class="string">&quot;sex&quot;</span>, <span class="string">&quot;age&quot;</span>]</span><br><span class="line">historyCols = [<span class="string">&quot;pairId&quot;</span>, <span class="string">&quot;statusCheck&quot;</span>, <span class="string">&quot;memo&quot;</span>]</span><br><span class="line">outDf = df.withColumn(<span class="string">&quot;history&quot;</span>, struct(*[col(name) <span class="keyword">for</span> name <span class="keyword">in</span> historyCols]))\</span><br><span class="line">    .drop(*historyCols).groupBy(*grpByCols)\</span><br><span class="line">    .agg(collect_list(col(<span class="string">&quot;history&quot;</span>)).alias(<span class="string">&quot;history&quot;</span>))</span><br><span class="line">uri = <span class="string">&#x27;mongodb://admin:password@192.168.1.112&#x27;</span></span><br><span class="line">outDf.write.format(<span class="string">&quot;com.mongodb.spark.sql.DefaultSource&quot;</span>)\</span><br><span class="line">    .option(<span class="string">&#x27;uri&#x27;</span>, uri).option(<span class="string">&#x27;database&#x27;</span>, <span class="string">&#x27;admin&#x27;</span>).option(<span class="string">&#x27;collection&#x27;</span>, <span class="string">&#x27;profile&#x27;</span>)\</span><br><span class="line">    .mode(<span class="string">&quot;append&quot;</span>).save()</span><br></pre></td></tr></table></figure>

<p>最後用mongo shell查看塞進去的資料：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use admin;</span><br><span class="line">db.profile.findOne();</span><br><span class="line">&#x2F;&#x2F; &#123;</span><br><span class="line">&#x2F;&#x2F;         &quot;_id&quot; : ObjectId(&quot;5ae1ff1885beb047444fc948&quot;),</span><br><span class="line">&#x2F;&#x2F;         &quot;id&quot; : 1,</span><br><span class="line">&#x2F;&#x2F;         &quot;name&quot; : &quot;Kevin&quot;,</span><br><span class="line">&#x2F;&#x2F;         &quot;sex&quot; : &quot;man&quot;,</span><br><span class="line">&#x2F;&#x2F;         &quot;age&quot; : 27,</span><br><span class="line">&#x2F;&#x2F;         &quot;history&quot; : [</span><br><span class="line">&#x2F;&#x2F;                 &#123;</span><br><span class="line">&#x2F;&#x2F;                         &quot;pairId&quot; : &quot;2&quot;,</span><br><span class="line">&#x2F;&#x2F;                         &quot;statusCheck&quot; : &quot;Interested&quot;,</span><br><span class="line">&#x2F;&#x2F;                         &quot;memo&quot; : &quot;Rose is following&quot;</span><br><span class="line">&#x2F;&#x2F;                 &#125;,</span><br><span class="line">&#x2F;&#x2F;                 &#123;</span><br><span class="line">&#x2F;&#x2F;                         &quot;pairId&quot; : &quot;5&quot;,</span><br><span class="line">&#x2F;&#x2F;                         &quot;statusCheck&quot; : &quot;Not Interested&quot;,</span><br><span class="line">&#x2F;&#x2F;                         &quot;memo&quot; : &quot;NaN&quot;</span><br><span class="line">&#x2F;&#x2F;                 &#125;</span><br><span class="line">&#x2F;&#x2F;         ]</span><br><span class="line">&#x2F;&#x2F; &#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>MongoDB</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Spark</tag>
        <tag>MongoDB</tag>
      </tags>
  </entry>
  <entry>
    <title>Compile Julia on Windows with Intel MKL</title>
    <url>/posts/201807/2018-07-14-compile-julia-in-windows.html</url>
    <content><![CDATA[<p>這篇主要是紀錄在Windows編譯Julia</p>
<a id="more"></a>

<p>首先是安裝cygwin64，下載好exe之後，下指令安裝需要的東西:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">setup-x86_64.exe -s http://ftp.yzu.edu.tw/cygwin/ -q -P cmake,gcc-g++,git,make,patch,curl,m4,python,p7zip,mingw64-x86_64-gcc-g++,mingw64-x86_64-gcc-fortran</span><br></pre></td></tr></table></figure>

<p>打開cygwin terminal:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># clone source code</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/JuliaLang/julia.git</span><br><span class="line">mv julia julia-master</span><br><span class="line"><span class="built_in">cd</span> julia-master</span><br><span class="line"><span class="comment"># create make info</span></span><br><span class="line">tee Make.user &lt;&lt; EOF</span><br><span class="line">XC_HOST = x86_64-w64-mingw32</span><br><span class="line">USE_INTEL_MKL = 1</span><br><span class="line">MKLROOT = /cygdrive/c/Program\ Files\ \(x86\)/IntelSWTools/compilers_and_libraries_2017/windows/mkl</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 把dll複製過來</span></span><br><span class="line">MKLROOT=/cygdrive/c/Program\ Files\ \(x86\)/IntelSWTools/compilers_and_libraries_2017/windows/mkl</span><br><span class="line">mkdir -p usr/bin</span><br><span class="line">cp <span class="string">&quot;<span class="variable">$MKLROOT</span>/../redist/intel64_win/compiler/libiomp5md.dll&quot;</span> usr/bin/</span><br><span class="line">cp <span class="string">&quot;<span class="variable">$MKLROOT</span>/../redist/intel64_win/mkl/mkl*.dll&quot;</span> usr/bin/</span><br><span class="line">cp usr/bin/mkl_rt.dll usr/bin/libmkl_rt.dll</span><br><span class="line"></span><br><span class="line"><span class="comment"># 開始編譯</span></span><br><span class="line">make -j 28</span><br><span class="line"><span class="comment"># 編譯extra</span></span><br><span class="line">make win-extras</span><br><span class="line"><span class="comment"># create binary distribution</span></span><br><span class="line">make binary-dist</span><br></pre></td></tr></table></figure>

<p>然後就會出現<code>julia-53db863142-win64.exe</code>類似這種檔案在你的Cygwin資料夾下面了，點擊兩下後就可以安裝了</p>
<p>下面比較測試一下OpenBLAS跟MKL (@Ryzen ThreadRipper <a href="mailto:&#49;&#57;&#53;&#x30;&#88;&#x40;&#51;&#46;&#55;&#x47;&#72;&#122;">&#49;&#57;&#53;&#x30;&#88;&#x40;&#51;&#46;&#55;&#x47;&#72;&#122;</a>, 128 GB RAM)</p>
<p>程式碼如下</p>
<figure class="highlight julia"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> LinearAlgebra</span><br><span class="line">A = <span class="built_in">Array</span>(ones(m,n))</span><br><span class="line">B = <span class="built_in">Bidiagonal</span>(ones(n,p), :U)</span><br><span class="line"><span class="meta">@elapsed</span> inv(B) * A</span><br><span class="line"><span class="meta">@elapsed</span> B * A</span><br></pre></td></tr></table></figure>

<p>結果:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. m &#x3D; n &#x3D; p &#x3D; 500</span><br><span class="line">1 - openblas</span><br><span class="line">The elapsed time of inv(B) * A: 0.18717380649999998</span><br><span class="line">The elapsed time of B * A: 0.1825800896</span><br><span class="line">1 - mkl</span><br><span class="line">The elapsed time of inv(B) * A: 0.19427489685000002</span><br><span class="line">The elapsed time of B * A: 0.16237521085</span><br><span class="line"></span><br><span class="line">2. m &#x3D; n &#x3D; p &#x3D; 1500</span><br><span class="line">2 - openblas</span><br><span class="line">The elapsed time of inv(B) * A: 1.6726551640500003</span><br><span class="line">The elapsed time of B * A: 1.23033070435</span><br><span class="line"></span><br><span class="line">2 - mkl</span><br><span class="line">The elapsed time of inv(B) * A: 1.6964857918000007</span><br><span class="line">The elapsed time of B * A: 1.1328988554000001</span><br><span class="line"></span><br><span class="line">3. m &#x3D; n &#x3D; p &#x3D; 2500</span><br><span class="line">3 - openblas</span><br><span class="line">The elapsed time of inv(B) * A: 4.77680297335</span><br><span class="line">The elapsed time of B * A: 3.5322971791500004</span><br><span class="line"></span><br><span class="line">3 - mkl</span><br><span class="line">The elapsed time of inv(B) * A: 4.916846529599999</span><br><span class="line">The elapsed time of B * A: 3.2682480265000002</span><br></pre></td></tr></table></figure>

<p>基本上互有勝負… 雖然我覺得根本就是Intel MKL對AMD處理器負優化…</p>
]]></content>
      <categories>
        <category>julia</category>
      </categories>
      <tags>
        <tag>MKL</tag>
        <tag>julia</tag>
      </tags>
  </entry>
  <entry>
    <title>Installation of VMs</title>
    <url>/posts/201807/2018-07-26-installation-of-vms.html</url>
    <content><![CDATA[<p>這篇主要是紀錄在Windows安裝VM的一些紀錄</p>
<p>紀錄安裝ssh, sshpass以及VMware-tools</p>
<a id="more"></a>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 2048 -f ~/.ssh/id_rsa -q -N <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> cat ~/.ssh/id_rsa.pub</span><br><span class="line"></span><br><span class="line">yum install -y sshpass</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;121..123&#125;; <span class="keyword">do</span></span><br><span class="line">  ssh-keyscan 192.168.1.<span class="variable">$i</span> &gt;&gt; ~/.ssh/known_hosts</span><br><span class="line">  sshpass -p XXXXXXXX ssh-copy-id root@192.168.1.<span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">tee -a /etc/hosts &lt;&lt; EOF</span><br><span class="line">192.168.1.121 jamalvm11</span><br><span class="line">192.168.1.122 jamalvm12</span><br><span class="line">192.168.1.123 jamalvm13</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;122..123&#125;; <span class="keyword">do</span></span><br><span class="line">  scp /etc/hosts root@192.168.1.<span class="variable">$i</span>:/etc</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Installation of VMware-tools</span></span><br><span class="line">yum install -y git</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/rasa/vmware-tools-patches.git</span><br><span class="line"><span class="built_in">cd</span> vmware-tools-patches</span><br><span class="line">./patched-open-vm-tools.sh</span><br><span class="line"><span class="keyword">if</span> [ -d <span class="string">&quot;/etc/vmware-tools&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">  perl /root/vmware-tools-patches/vmware-tools-patches/vmware-tools-distrib/bin/vmware-uninstall-tools.pl</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">perl /root/vmware-tools-patches/vmware-tools-patches/vmware-tools-distrib/vmware-install.pl</span><br><span class="line"></span><br><span class="line"><span class="comment"># link host computer to guest</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;121..123&#125;; <span class="keyword">do</span></span><br><span class="line">  ssh root@192.168.1.<span class="variable">$i</span> ln -s /mnt/hgfs/F ~/F</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># installation of Intel Parallel Studio XE 2017</span></span><br><span class="line">yum install gcc gcc-c++ gcc-gfortran -y</span><br><span class="line">./install.sh</span><br><span class="line"><span class="comment"># step 1: Enter and key accept to accept End User License Agreement</span></span><br><span class="line"><span class="comment"># step 3: to activate by using a license file =&gt; 1 to Activate offline =&gt; give the location of license</span></span><br><span class="line"><span class="comment"># step 4: 2 to not help</span></span><br><span class="line"><span class="comment"># step 5: 2 to go to Customize installation =&gt; cancel IA-32 installation</span></span><br><span class="line"><span class="comment"># step 6: y to install now</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Create A Mirror of NPM Registry</title>
    <url>/posts/201807/2018-07-13-npm-mirror.html</url>
    <content><![CDATA[<p>這篇主要是創一個mirror of NPM Registry</p>
<a id="more"></a>

<p>首先是安裝CouchDB</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install epel-release -y</span><br><span class="line">tee /etc/yum.repos.d/npm_repo.repo &lt;&lt; EOF</span><br><span class="line">[apache-couchdb-rpm]</span><br><span class="line">name=bintray--apache-couchdb-rpm</span><br><span class="line">baseurl=http://apache.bintray.com/couchdb-rpm/el7/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=0</span><br><span class="line">repo_gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">EOF</span><br><span class="line">yum repolist all</span><br><span class="line">yum install couchdb -y</span><br></pre></td></tr></table></figure>

<p>接下來修改設定，然後啟動</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;/\[httpd\]/a allow_jsonp = true&#x27;</span> /opt/couchdb/etc/local.ini</span><br><span class="line">sed -i <span class="string">&#x27;/\[httpd\]/a secure_rewrites = false&#x27;</span> /opt/couchdb/etc/local.ini</span><br><span class="line">sed -i <span class="string">&#x27;/\[httpd\]/a port = 8092&#x27;</span> /opt/couchdb/etc/local.ini</span><br><span class="line">sed -i <span class="string">&#x27;/\[httpd\]/a bind_address = 0.0.0.0&#x27;</span> /opt/couchdb/etc/local.ini</span><br><span class="line">systemctl start couchdb</span><br><span class="line">systemctl <span class="built_in">enable</span> couchdb</span><br></pre></td></tr></table></figure>

<p>開防火牆</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --add-port=8092/tcp</span><br><span class="line">firewall-cmd --add-port=8094/tcp</span><br><span class="line">firewall-cmd --reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 測試localhost</span></span><br><span class="line">curl http://localhost:8092/</span><br><span class="line"><span class="comment"># &#123;&quot;couchdb&quot;:&quot;Welcome&quot;,&quot;version&quot;:&quot;2.1.2&quot;,&quot;features&quot;:[&quot;scheduler&quot;],&quot;vendor&quot;:&#123;&quot;name&quot;:&quot;The Apache Software Foundation&quot;&#125;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 測試網路位置</span></span><br><span class="line">curl http://192.168.1.116:8092/</span><br><span class="line"><span class="comment"># &#123;&quot;couchdb&quot;:&quot;Welcome&quot;,&quot;version&quot;:&quot;2.1.2&quot;,&quot;features&quot;:[&quot;scheduler&quot;],&quot;vendor&quot;:&#123;&quot;name&quot;:&quot;The Apache Software Foundation&quot;&#125;&#125;</span></span><br></pre></td></tr></table></figure>

<p>開始mirror:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># create user</span></span><br><span class="line">curl -X PUT http://localhost:8092/_config/admins/jamal -d <span class="string">&#x27;&quot;jamal&quot;&#x27;</span></span><br><span class="line"><span class="comment"># create database</span></span><br><span class="line">curl -X PUT http://jamal:jamal@localhost:8092/registry</span><br><span class="line"><span class="comment"># replicate</span></span><br><span class="line">curl -X POST http://localhost:8092/_replicate -d <span class="string">&#x27;&#123;&quot;source&quot;:&quot;https://skimdb.npmjs.com/registry&quot;, &quot;target&quot;:&#123;&quot;headers&quot;:&#123;&quot;Authorization&quot;:&quot;Basic amFtYWw6amFtYWw=&quot;&#125;,&quot;url&quot;:&quot;http://192.168.1.116:8092/registry&quot;&#125;, &quot;continuous&quot;:true, &quot;create_target&quot;: false, &quot;user_ctx&quot;: &#123;&quot;name&quot;: &quot;jamal&quot;,&quot;roles&quot;:[&quot;_admin&quot;,&quot;_reader&quot;,&quot;_writer&quot;]&#125;&#125;&#x27;</span> -H <span class="string">&quot;Content-Type: application/json&quot;</span></span><br><span class="line"><span class="comment"># amFtYWw6amFtYWw=為jamal:jamal的decode</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>nodejs</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>Installation of SLURM</title>
    <url>/posts/201807/2018-07-27-installation-of-slurm.html</url>
    <content><![CDATA[<p>這篇主要是紀錄如何在CentOS 7中安裝SLURM</p>
<a id="more"></a>

<h2 id="1-Installation-of-munge"><a href="#1-Installation-of-munge" class="headerlink" title="1. Installation of munge"></a>1. Installation of munge</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1-1. install mariadb</span></span><br><span class="line">yum install mariadb-server mariadb-devel -y</span><br><span class="line"><span class="comment"># 1-2. create users</span></span><br><span class="line">tee tmp.sh &lt;&lt; EOF</span><br><span class="line"><span class="built_in">export</span> MUNGEUSER=991</span><br><span class="line">groupadd -g <span class="variable">$MUNGEUSER</span> munge</span><br><span class="line">useradd -m -d /var/lib/munge -u <span class="variable">$MUNGEUSER</span> -g munge -s /sbin/nologin munge</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> SLURMUSER=990</span><br><span class="line">groupadd -g <span class="variable">$SLURMUSER</span> slurm</span><br><span class="line">useradd -m -d /var/lib/slurm -u <span class="variable">$SLURMUSER</span> -g slurm -s /bin/bash slurm</span><br><span class="line">EOF</span><br><span class="line">bash tmp.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># check</span></span><br><span class="line">grep <span class="string">&#x27;990&#x27;</span> /etc/passwd</span><br><span class="line">grep <span class="string">&#x27;991&#x27;</span> /etc/passwd</span><br><span class="line"><span class="comment"># slurm::990:990::/var/lib/slurm:/bin/bash</span></span><br><span class="line"><span class="comment"># munge::991:991::/var/lib/munge:/sbin/nologin</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;122..123&#125;; <span class="keyword">do</span></span><br><span class="line">  scp ~/tmp.sh root@192.168.1.<span class="variable">$i</span>:~/</span><br><span class="line">  ssh root@192.168.1.<span class="variable">$i</span> bash ~/tmp.sh</span><br><span class="line">  ssh root@192.168.1.<span class="variable">$i</span> grep <span class="string">&#x27;990&#x27;</span> /etc/passwd</span><br><span class="line">  ssh root@192.168.1.<span class="variable">$i</span> grep <span class="string">&#x27;991&#x27;</span> /etc/passwd</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="comment"># tmp.sh                                                                                   100%  219   173.5KB/s   00:00</span></span><br><span class="line"><span class="comment"># slurm::990:990::/var/lib/slurm:/bin/bash</span></span><br><span class="line"><span class="comment"># munge::991:991::/var/lib/munge:/sbin/nologin</span></span><br><span class="line"><span class="comment"># tmp.sh                                                                                   100%  219   214.9KB/s   00:00</span></span><br><span class="line"><span class="comment"># slurm::990:990::/var/lib/slurm:/bin/bash</span></span><br><span class="line"><span class="comment"># munge::991:991::/var/lib/munge:/sbin/nologin</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1-3. Installation of munge</span></span><br><span class="line">yum install epel-release -y</span><br><span class="line">yum install munge munge-libs munge-devel -y</span><br><span class="line">yum install rng-tools -y</span><br><span class="line">/usr/sbin/create-munge-key -r</span><br><span class="line">dd <span class="keyword">if</span>=/dev/urandom bs=1 count=1024 &gt; /etc/munge/munge.key</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;122..123&#125;; <span class="keyword">do</span></span><br><span class="line">  ssh root@192.168.1.<span class="variable">$i</span> yum install epel-release -y</span><br><span class="line">  ssh root@192.168.1.<span class="variable">$i</span> yum install munge munge-libs munge-devel -y</span><br><span class="line">  scp /etc/munge/munge.key root@192.168.1.<span class="variable">$i</span>:/etc/munge</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1-4. Start services</span></span><br><span class="line">tee ~/tmp.sh &lt;&lt; EOF</span><br><span class="line">chown munge: /etc/munge/munge.key</span><br><span class="line">chmod 400 /etc/munge/munge.key</span><br><span class="line">chown -R munge: /etc/munge/ /var/<span class="built_in">log</span>/munge/</span><br><span class="line">chmod 0700 /etc/munge/ /var/<span class="built_in">log</span>/munge/</span><br><span class="line">systemctl <span class="built_in">enable</span> munge</span><br><span class="line">systemctl start munge</span><br><span class="line">EOF</span><br><span class="line">bash tmp.sh</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;122..123&#125;; <span class="keyword">do</span></span><br><span class="line">  scp ~/tmp.sh root@192.168.1.<span class="variable">$i</span>:~/</span><br><span class="line">  ssh root@192.168.1.<span class="variable">$i</span> bash ~/tmp.sh</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1-5. test</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;121..123&#125;; <span class="keyword">do</span></span><br><span class="line">  munge -n | ssh 192.168.1.<span class="variable">$i</span> unmunge</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="comment"># STATUS:           Success (0)</span></span><br><span class="line"><span class="comment"># ENCODE_HOST:      jamalvm11 (192.168.1.121)</span></span><br><span class="line"><span class="comment"># ENCODE_TIME:      2018-07-26 23:16:50 +0800 (1532618210)</span></span><br><span class="line"><span class="comment"># DECODE_TIME:      2018-07-26 23:16:50 +0800 (1532618210)</span></span><br><span class="line"><span class="comment"># TTL:              300</span></span><br><span class="line"><span class="comment"># CIPHER:           aes128 (4)</span></span><br><span class="line"><span class="comment"># MAC:              sha1 (3)</span></span><br><span class="line"><span class="comment"># ZIP:              none (0)</span></span><br><span class="line"><span class="comment"># UID:              root (0)</span></span><br><span class="line"><span class="comment"># GID:              root (0)</span></span><br><span class="line"><span class="comment"># LENGTH:           0</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># STATUS:           Success (0)</span></span><br><span class="line"><span class="comment"># ENCODE_HOST:      jamalvm11 (192.168.1.121)</span></span><br><span class="line"><span class="comment"># ENCODE_TIME:      2018-07-26 23:16:50 +0800 (1532618210)</span></span><br><span class="line"><span class="comment"># DECODE_TIME:      2018-07-26 23:16:50 +0800 (1532618210)</span></span><br><span class="line"><span class="comment"># TTL:              300</span></span><br><span class="line"><span class="comment"># CIPHER:           aes128 (4)</span></span><br><span class="line"><span class="comment"># MAC:              sha1 (3)</span></span><br><span class="line"><span class="comment"># ZIP:              none (0)</span></span><br><span class="line"><span class="comment"># UID:              root (0)</span></span><br><span class="line"><span class="comment"># GID:              root (0)</span></span><br><span class="line"><span class="comment"># LENGTH:           0</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># STATUS:           Success (0)</span></span><br><span class="line"><span class="comment"># ENCODE_HOST:      jamalvm11 (192.168.1.121)</span></span><br><span class="line"><span class="comment"># ENCODE_TIME:      2018-07-26 23:16:50 +0800 (1532618210)</span></span><br><span class="line"><span class="comment"># DECODE_TIME:      2018-07-26 23:16:50 +0800 (1532618210)</span></span><br><span class="line"><span class="comment"># TTL:              300</span></span><br><span class="line"><span class="comment"># CIPHER:           aes128 (4)</span></span><br><span class="line"><span class="comment"># MAC:              sha1 (3)</span></span><br><span class="line"><span class="comment"># ZIP:              none (0)</span></span><br><span class="line"><span class="comment"># UID:              root (0)</span></span><br><span class="line"><span class="comment"># GID:              root (0)</span></span><br><span class="line"><span class="comment"># LENGTH:           0</span></span><br></pre></td></tr></table></figure>

<h2 id="2-Build-SLURM"><a href="#2-Build-SLURM" class="headerlink" title="2. Build SLURM"></a>2. Build SLURM</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1-1. install MPICH2 (optional)</span></span><br><span class="line">yum install gcc gcc-c++ gcc-gfortran kernel-devel -y</span><br><span class="line">wget http://www.mpich.org/static/downloads/3.2.1/mpich-3.2.1.tar.gz</span><br><span class="line">tar zxvf mpich-3.2.1.tar.gz</span><br><span class="line"><span class="built_in">cd</span> mpich-3.2.1</span><br><span class="line">./configure</span><br><span class="line">make -j4</span><br><span class="line">make install</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;122..123&#125;; <span class="keyword">do</span></span><br><span class="line">  scp ~/mpich-3.2.1 root@192.168.1.<span class="variable">$i</span>:~/</span><br><span class="line">  ssh root@192.168.1.<span class="variable">$i</span> &lt;&lt; EOF</span><br><span class="line"><span class="built_in">cd</span> mpich-3.2.1</span><br><span class="line">make install</span><br><span class="line">EOF</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1-2. install deps</span></span><br><span class="line">yum install openssl openssl-devel pam-devel numactl numactl-devel hwloc hwloc-devel lua lua-devel readline-devel rrdtool-devel ncurses-devel man2html libibmad libibumad cpanm* -y</span><br><span class="line">yum install wget gcc gcc-c++ hdf5 hdf5-devel -y</span><br><span class="line">yum install libcurl-devel json-c-devel lz4-devel libibmad-devel libssh2-devel glibc-devel glib2-devel gtk2-devel -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1-3. build slurm</span></span><br><span class="line">wget https://download.schedmd.com/slurm/slurm-17.11.8.tar.bz2</span><br><span class="line">yum install rpmdevtools -y</span><br><span class="line">rpmbuild -ta slurm-17.11.8.tar.bz2</span><br><span class="line">mkdir ~/slurm_rpms</span><br><span class="line">mv rpmbuild/RPMS/x86_64/slurm*.rpm ~/slurm_rpms</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;122..123&#125;; <span class="keyword">do</span></span><br><span class="line">  scp -r ~/slurm_rpms root@192.168.1.<span class="variable">$i</span>:~/</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<h2 id="3-Installation-of-SLURM"><a href="#3-Installation-of-SLURM" class="headerlink" title="3. Installation of SLURM"></a>3. Installation of SLURM</h2><p>Generate configuration in <a href="https://slurm.schedmd.com/configurator.easy.html">here</a>.</p>
<p>Below is my config.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># slurm.conf file generated by configurator easy.html.</span><br><span class="line"># Put this file on all nodes of your cluster.</span><br><span class="line"># See the slurm.conf man page for more information.</span><br><span class="line">#</span><br><span class="line">ControlMachine&#x3D;jamalvm11</span><br><span class="line">#ControlAddr&#x3D;</span><br><span class="line">#</span><br><span class="line">MailProg&#x3D;&#x2F;bin&#x2F;mail</span><br><span class="line">MpiDefault&#x3D;none</span><br><span class="line">#MpiParams&#x3D;ports&#x3D;#-#</span><br><span class="line">ProctrackType&#x3D;proctrack&#x2F;cgroup</span><br><span class="line">ReturnToService&#x3D;1</span><br><span class="line">SlurmctldPidFile&#x3D;&#x2F;var&#x2F;run&#x2F;slurm&#x2F;slurmctld.pid</span><br><span class="line">SlurmctldPort&#x3D;8017</span><br><span class="line">SlurmdPidFile&#x3D;&#x2F;var&#x2F;run&#x2F;slurm&#x2F;slurmd.pid</span><br><span class="line">SlurmdPort&#x3D;8018</span><br><span class="line">SlurmdSpoolDir&#x3D;&#x2F;var&#x2F;spool&#x2F;slurm</span><br><span class="line">SlurmUser&#x3D;slurm</span><br><span class="line">#SlurmdUser&#x3D;root</span><br><span class="line">StateSaveLocation&#x3D;&#x2F;var&#x2F;spool&#x2F;slurm</span><br><span class="line">SwitchType&#x3D;switch&#x2F;none</span><br><span class="line">TaskPlugin&#x3D;task&#x2F;affinity</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line"># TIMERS</span><br><span class="line">#KillWait&#x3D;30</span><br><span class="line">#MinJobAge&#x3D;300</span><br><span class="line">#SlurmctldTimeout&#x3D;120</span><br><span class="line">#SlurmdTimeout&#x3D;300</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line"># SCHEDULING</span><br><span class="line">FastSchedule&#x3D;1</span><br><span class="line">SchedulerType&#x3D;sched&#x2F;backfill</span><br><span class="line">SelectType&#x3D;select&#x2F;cons_res</span><br><span class="line">SelectTypeParameters&#x3D;CR_Core</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line"># LOGGING AND ACCOUNTING</span><br><span class="line">AccountingStorageType&#x3D;accounting_storage&#x2F;none</span><br><span class="line">ClusterName&#x3D;cluster</span><br><span class="line">#JobAcctGatherFrequency&#x3D;30</span><br><span class="line">JobAcctGatherType&#x3D;jobacct_gather&#x2F;none</span><br><span class="line">#SlurmctldDebug&#x3D;3</span><br><span class="line">SlurmctldLogFile&#x3D;&#x2F;var&#x2F;log&#x2F;slurmctld.log</span><br><span class="line">#SlurmdDebug&#x3D;3</span><br><span class="line">SlurmdLogFile&#x3D;&#x2F;var&#x2F;log&#x2F;slurmd.log</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line"># COMPUTE NODES</span><br><span class="line">NodeName&#x3D;jamalvm[11-13] CPUs&#x3D;4 Boards&#x3D;1 SocketsPerBoard&#x3D;1 CoresPerSocket&#x3D;4 ThreadsPerCore&#x3D;1 State&#x3D;UNKNOWN</span><br><span class="line">PartitionName&#x3D;production Nodes&#x3D;jamalvm[11-13] Default&#x3D;YES MaxTime&#x3D;INFINITE State&#x3D;UP</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1-1. install slurm</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;121..123&#125;; <span class="keyword">do</span></span><br><span class="line">  ssh root@192.168.1.<span class="variable">$i</span> yum install mailx -y</span><br><span class="line">  ssh root@192.168.1.<span class="variable">$i</span> yum install ~/slurm_rpms/*.rpm -y</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1-2. setting up environment</span></span><br><span class="line">tee ~/tmp.sh &lt;&lt; EOF</span><br><span class="line">mkdir /var/run/slurm</span><br><span class="line">chown slurm: /var/run/slurm</span><br><span class="line">chmod 755 /var/run/slurm</span><br><span class="line">mkdir /var/spool/slurm</span><br><span class="line">chown slurm: /var/spool/slurm</span><br><span class="line">chmod 755 /var/spool/slurm</span><br><span class="line">slurmd -C</span><br><span class="line">EOF</span><br><span class="line">bash ~/tmp.sh</span><br><span class="line"><span class="comment"># NodeName=jamalvm11 CPUs=4 Boards=1 SocketsPerBoard=1 CoresPerSocket=4 ThreadsPerCore=1 RealMemory=15869</span></span><br><span class="line"><span class="comment"># UpTime=0-02:06:12</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;122..123&#125;; <span class="keyword">do</span></span><br><span class="line">  scp ~/tmp.sh root@192.168.1.<span class="variable">$i</span>:~/</span><br><span class="line">  ssh root@192.168.1.<span class="variable">$i</span> bash ~/tmp.sh</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="comment"># tmp.sh                                                                      100%  164   188.6KB/s   00:00</span></span><br><span class="line"><span class="comment"># NodeName=jamalvm12 CPUs=4 Boards=1 SocketsPerBoard=1 CoresPerSocket=4 ThreadsPerCore=1 RealMemory=15869</span></span><br><span class="line"><span class="comment"># UpTime=0-02:06:24</span></span><br><span class="line"><span class="comment"># tmp.sh                                                                      100%  164   172.7KB/s   00:00</span></span><br><span class="line"><span class="comment"># NodeName=jamalvm13 CPUs=4 Boards=1 SocketsPerBoard=1 CoresPerSocket=4 ThreadsPerCore=1 RealMemory=15869</span></span><br><span class="line"><span class="comment"># UpTime=0-02:06:25</span></span><br><span class="line"></span><br><span class="line">sed -i -e <span class="string">&#x27;s/PIDFile=.*/PIDFile=\/var\/run\/slurm\/slurmctld.pid/g&#x27;</span> /usr/lib/systemd/system/slurmctld.service</span><br><span class="line">sed -i -e <span class="string">&#x27;s/PIDFile=.*/PIDFile=\/var\/run\/slurm\/slurmd.pid/g&#x27;</span> /usr/lib/systemd/system/slurmd.service</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;122..123&#125;; <span class="keyword">do</span></span><br><span class="line">  ssh root@192.168.1.<span class="variable">$i</span> &lt;&lt; EOF</span><br><span class="line">sed -i -e <span class="string">&#x27;s/PIDFile=.*/PIDFile=\/var\/run\/slurm\/slurmd.pid/g&#x27;</span> /usr/lib/systemd/system/slurmd.service</span><br><span class="line">EOF</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1-3. start services</span></span><br><span class="line">systemctl <span class="built_in">enable</span> slurmctld</span><br><span class="line">systemctl start slurmctld</span><br><span class="line">cp /etc/slurm/cgroup.conf.example /etc/slurm/cgroup.conf</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;122..123&#125;; <span class="keyword">do</span></span><br><span class="line">  scp /etc/slurm/cgroup.conf root@192.168.1.<span class="variable">$i</span>:/etc/slurm</span><br><span class="line">  scp /etc/slurm/slurm.conf root@192.168.1.<span class="variable">$i</span>:/etc/slurm</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;121..123&#125;; <span class="keyword">do</span></span><br><span class="line">  ssh root@192.168.1.<span class="variable">$i</span> &lt;&lt; EOF</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl <span class="built_in">enable</span> slurmd</span><br><span class="line">systemctl start slurmd</span><br><span class="line">EOF</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1-4. check</span></span><br><span class="line">sinfo</span><br><span class="line"><span class="comment"># PARTITION   AVAIL  TIMELIMIT  NODES  STATE NODELIST</span></span><br><span class="line"><span class="comment"># production*    up   infinite      3   idle jamalvm[11-13]</span></span><br></pre></td></tr></table></figure>

<h2 id="4-Simple-tests"><a href="#4-Simple-tests" class="headerlink" title="4. Simple tests"></a>4. Simple tests</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># test 1</span></span><br><span class="line">tee submit.sh &lt;&lt; EOF</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#SBATCH --job-name=test</span></span><br><span class="line"><span class="comment">#SBATCH --output=res.txt</span></span><br><span class="line"><span class="comment">#SBATCH --ntasks=1</span></span><br><span class="line"></span><br><span class="line">srun hostname</span><br><span class="line">EOF</span><br><span class="line">sbatch submit.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># test 2</span></span><br><span class="line">tee hello_mpi.c &lt;&lt; EOF</span><br><span class="line">/*</span><br><span class="line">  <span class="string">&quot;Hello World&quot;</span> MPI Test Program</span><br><span class="line">*/</span><br><span class="line"><span class="comment">#include &lt;assert.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;mpi.h&gt;</span></span><br><span class="line"></span><br><span class="line">int main(int argc, char **argv)</span><br><span class="line">&#123;</span><br><span class="line">    char buf[256];</span><br><span class="line">    int my_rank, num_procs;</span><br><span class="line"></span><br><span class="line">    /* Initialize the infrastructure necessary <span class="keyword">for</span> communication */</span><br><span class="line">    MPI_Init(&amp;argc, &amp;argv);</span><br><span class="line"></span><br><span class="line">    /* Identify this process */</span><br><span class="line">    MPI_Comm_rank(MPI_COMM_WORLD, &amp;my_rank);</span><br><span class="line"></span><br><span class="line">    /* Find out how many total processes are active */</span><br><span class="line">    MPI_Comm_size(MPI_COMM_WORLD, &amp;num_procs);</span><br><span class="line"></span><br><span class="line">    /* Until this point, all programs have been doing exactly the same.</span><br><span class="line">       Here, we check the rank to distinguish the roles of the programs */</span><br><span class="line">    <span class="keyword">if</span> (my_rank == 0) &#123;</span><br><span class="line">        int other_rank;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;We have %i processes.\n&quot;</span>, num_procs);</span><br><span class="line"></span><br><span class="line">        /* Send messages to all other processes */</span><br><span class="line">        <span class="keyword">for</span> (other_rank = 1; other_rank &lt; num_procs; other_rank++)</span><br><span class="line">        &#123;</span><br><span class="line">            sprintf(buf, <span class="string">&quot;Hello %i!&quot;</span>, other_rank);</span><br><span class="line">            MPI_Send(buf, sizeof(buf), MPI_CHAR, other_rank,</span><br><span class="line">                     0, MPI_COMM_WORLD);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /* Receive messages from all other process */</span><br><span class="line">        <span class="keyword">for</span> (other_rank = 1; other_rank &lt; num_procs; other_rank++)</span><br><span class="line">        &#123;</span><br><span class="line">            MPI_Recv(buf, sizeof(buf), MPI_CHAR, other_rank,</span><br><span class="line">                     0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, buf);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">        /* Receive message from process <span class="comment">#0 */</span></span><br><span class="line">        MPI_Recv(buf, sizeof(buf), MPI_CHAR, 0,</span><br><span class="line">                 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);</span><br><span class="line">        assert(memcmp(buf, <span class="string">&quot;Hello &quot;</span>, 6) == 0),</span><br><span class="line"></span><br><span class="line">        /* Send message to process <span class="comment">#0 */</span></span><br><span class="line">        sprintf(buf, <span class="string">&quot;Process %i reporting for duty.&quot;</span>, my_rank);</span><br><span class="line">        MPI_Send(buf, sizeof(buf), MPI_CHAR, 0,</span><br><span class="line">                 0, MPI_COMM_WORLD);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /* Tear down the communication infrastructure */</span><br><span class="line">    MPI_Finalize();</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">mpicc hello_mpi.c -o hello.mpi</span><br><span class="line"></span><br><span class="line">tee submit_mpi.sh &lt;&lt; EOF</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#SBATCH --job-name=test</span></span><br><span class="line"><span class="comment">#SBATCH --output=res_mpi.txt</span></span><br><span class="line"><span class="comment">#SBATCH --ntasks=12</span></span><br><span class="line"></span><br><span class="line">srun ~/F/hello.mpi</span><br><span class="line">EOF</span><br><span class="line">sbatch submit_mpi.sh</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>SLURM</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>SLURM</tag>
      </tags>
  </entry>
  <entry>
    <title>Build the GPU Version of LightGBM in Windows</title>
    <url>/posts/201808/2018-08-15-build-gpu-version-of-lightgbm-in-windows.html</url>
    <content><![CDATA[<p>這篇主要是紀錄如何在Windows要怎麼去編譯GPU Version的LightGBM</p>
<a id="more"></a>

<p>其實<a href="https://github.com/Microsoft/LightGBM/blob/master/docs/GPU-Windows.rst">官方安裝文件</a>已經寫得非常清楚</p>
<p>我這裡就只是把整個流程可以被自動化而已</p>
<p>事前準備：</p>
<ol>
<li>安裝R, Rtools, Python (Recommend Miniconda or Anaconda)</li>
<li>安裝<a href="https://git-scm.com/download/win">Git</a>, <a href="https://cmake.org/download/">CMake</a></li>
<li>安裝<a href="https://sourceforge.net/projects/boost/files/boost-binaries/">Boost</a>，我自己是下載msvc-14.0-64的版本，打開來安裝即可</li>
<li>安裝<a href="https://docs.microsoft.com/zh-tw/visualstudio/install/install-visual-studio">Visual Studio 2017</a>，照著做就好</li>
</ol>
<p>我把Git跟CMake都加入了PATH裡面，如果不會加PATH，或是不想破壞Windows的PATH，也可以考慮用下面指令把<code>git</code>跟<code>cmake</code>命令短暫地可以被access到</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line"><span class="comment">REM 這裡是舉例我安裝的地方，您的安裝位置可能不一樣</span></span><br><span class="line"><span class="built_in">set</span> <span class="built_in">PATH</span>=<span class="variable">%PATH%</span>;C:\Program Files\CMake\bin;C:\Program Files\Git\bin</span><br></pre></td></tr></table></figure>

<p>然後就可以開始安裝了</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line"><span class="comment">REM 這裡是先設定BOOST的環境變數</span></span><br><span class="line"><span class="built_in">Set</span> BOOST_ROOT=C:\local\boost_1_64_0\</span><br><span class="line"><span class="built_in">Set</span> BOOST_LIBRARYDIR=C:\local\boost_1_64_0\lib64-msvc-<span class="number">14</span>.<span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">REM 下載lightGBM，並重新命名</span></span><br><span class="line">git clone --recursive https://github.com/Microsoft/LightGBM</span><br><span class="line">mv LightGBM LightGBM-<span class="number">20180815</span></span><br><span class="line"><span class="built_in">cd</span> LightGBM-<span class="number">20180815</span></span><br><span class="line"></span><br><span class="line"><span class="comment">REM 開始編譯</span></span><br><span class="line"><span class="built_in">mkdir</span> build</span><br><span class="line"><span class="built_in">cd</span> build</span><br><span class="line">cmake -DUSE_GPU=<span class="number">1</span> -DCMAKE_GENERATOR_PLATFORM=x64 ..</span><br><span class="line">cmake --build . --target ALL_BUILD --config Release -- /maxcpucount</span><br><span class="line"></span><br><span class="line"><span class="comment">REM R安裝</span></span><br><span class="line"><span class="built_in">cd</span> ..\R-package</span><br><span class="line"><span class="built_in">set</span> <span class="built_in">PATH</span>=<span class="variable">%PATH%</span>;C:\Program Files\Microsoft\R Open\R-<span class="number">3</span>.<span class="number">4</span>.<span class="number">4</span>\bin;C:\Rtools\bin;C:\Rtools\mingw_64\bin</span><br><span class="line">Rscript build_package.R</span><br><span class="line"><span class="comment">REM 改成用precompiled dll跟GPU</span></span><br><span class="line">sed -i -e &quot;s/use_precompile &lt;.*/use_precompile &lt;- TRUE/g&quot; src/install.libs.R</span><br><span class="line">sed -i -e &quot;s/use_gpu &lt;.*/use_gpu &lt;- TRUE/g&quot; src/install.libs.R</span><br><span class="line">R <span class="built_in">CMD</span> INSTALL . --build --no-multiarch</span><br><span class="line"></span><br><span class="line"><span class="comment">REM python安裝</span></span><br><span class="line"><span class="built_in">cd</span> ..\python-package</span><br><span class="line"><span class="function">C:\<span class="title">Miniconda3</span>\<span class="title">Scripts</span>\<span class="title">activate.bat</span></span></span><br><span class="line"><span class="function"><span class="title">conda</span> <span class="title">activate</span> <span class="title">myenv</span></span></span><br><span class="line"><span class="function"><span class="title">python</span> <span class="title">setup.py</span> <span class="title">install</span> --<span class="title">precompile</span> -<span class="title">O2</span></span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>LightGBM</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>Python</tag>
        <tag>GPU</tag>
        <tag>cuda</tag>
        <tag>LightGBM</tag>
      </tags>
  </entry>
  <entry>
    <title>Compile Julia on CentOS 7 with Intel MKL and Intel C++</title>
    <url>/posts/201809/2018-09-11-compile-julia-in-centos-7.html</url>
    <content><![CDATA[<p>這篇主要是紀錄在CentOS 7編譯Julia</p>
<a id="more"></a>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># clone source code</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/JuliaLang/julia.git</span><br><span class="line">git checkout v1.0.0</span><br><span class="line"><span class="comment"># create make info</span></span><br><span class="line">tee Make.user &lt;&lt; EOF</span><br><span class="line">USE_INTEL_MKL = 1</span><br><span class="line">MKLROOT = /opt/intel/mkl</span><br><span class="line">EOF</span><br><span class="line"><span class="comment"># install needed components</span></span><br><span class="line">yum install gcc gcc-c++ libatomic gcc-gfortran wget m4 bzip2 -y</span><br><span class="line">wget https://cmake.org/files/v3.11/cmake-3.11.4.tar.gz</span><br><span class="line">tar xzvf cmake-3.11.4.tar.gz</span><br><span class="line"><span class="built_in">cd</span> cmake-3.11.4</span><br><span class="line">./bootstrap --prefix=/usr</span><br><span class="line">gmake</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 把so複製過來</span></span><br><span class="line">MKLROOT=/opt/intel/mkl</span><br><span class="line">mkdir -p usr/bin</span><br><span class="line">cp <span class="string">&quot;<span class="variable">$MKLROOT</span>/lib/intel64/libiomp5md.dll&quot;</span> usr/bin/</span><br><span class="line">cp <span class="variable">$MKLROOT</span>/lib/intel64/lib* usr/bin</span><br><span class="line">cp /opt/intel/compilers_and_libraries/linux/lib/intel64/libiomp5* usr/bin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 開始編譯</span></span><br><span class="line">make -j 15</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>julia</category>
      </categories>
      <tags>
        <tag>MKL</tag>
        <tag>julia</tag>
      </tags>
  </entry>
  <entry>
    <title>Build the GPU Version of LightGBM in CentOS 7</title>
    <url>/posts/201808/2018-08-16-build-gpu-version-of-lightgbm-in-centos-7.html</url>
    <content><![CDATA[<p>這篇主要是紀錄如何在CentOS要怎麼去編譯GPU Version的LightGBM</p>
<a id="more"></a>

<p>其實<a href="https://github.com/Microsoft/LightGBM/blob/master/docs/GPU-Tutorial.rst">官方安裝文件</a>已經寫得非常清楚</p>
<p>但是因為Centos 7提供的<code>boost</code>實在太舊了，你需要自己編譯。<code>cmake</code>則是需要安裝<code>cmake3</code>，CentOS的<code>cmake</code>是2.8</p>
<p>CUDA安裝就不介紹了，從Nvidia那裡載下來rpm，然後安裝，再輸入指令<code>yum install -y cuda</code>即可，最後就可以在<code>/usr/local</code>看到你的cuda</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install cmake3 opencl-headers -y</span><br><span class="line">ln -s /usr/bin/cmake3 /usr/bin/cmake</span><br><span class="line"></span><br><span class="line">wget https://dl.bintray.com/boostorg/release/1.66.0/<span class="built_in">source</span>/boost_1_66_0.tar.gz</span><br><span class="line">tar -zxvf boost_1_66_0.tar.gz</span><br><span class="line"><span class="built_in">cd</span> boost_1_66_0</span><br><span class="line">./bootstrap.sh --prefix=/usr --libdir=/usr/lib64</span><br><span class="line">./b2 install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下載lightGBM，並重新命名</span></span><br><span class="line">git <span class="built_in">clone</span> --recursive https://github.com/Microsoft/LightGBM</span><br><span class="line">mv LightGBM LightGBM-20180816</span><br><span class="line"><span class="built_in">cd</span> LightGBM-20180816</span><br><span class="line"></span><br><span class="line"><span class="comment"># 開始編譯</span></span><br><span class="line">mkdir build</span><br><span class="line"><span class="built_in">cd</span> build</span><br><span class="line"><span class="built_in">export</span> OpenCL_LIBRARY=/usr/<span class="built_in">local</span>/cuda/lib64/libOpenCL.so</span><br><span class="line"><span class="built_in">export</span> OpenCL_INCLUDE_DIR=/usr/<span class="built_in">local</span>/cuda-9.2/include/CL</span><br><span class="line">cmake -DUSE_GPU=1 ..</span><br><span class="line">make -j4</span><br><span class="line"></span><br><span class="line"><span class="comment"># R安裝</span></span><br><span class="line"><span class="built_in">cd</span> ../R-package</span><br><span class="line">Rscript build_package.R</span><br><span class="line"><span class="comment"># 改成用precompiled so跟GPU</span></span><br><span class="line">sed -i -e <span class="string">&quot;s/use_precompile &lt;.*/use_precompile &lt;- TRUE/g&quot;</span> src/install.libs.R</span><br><span class="line">sed -i -e <span class="string">&quot;s/use_gpu &lt;.*/use_gpu &lt;- TRUE/g&quot;</span> src/install.libs.R</span><br><span class="line">R CMD INSTALL . --build --no-multiarch</span><br><span class="line"></span><br><span class="line"><span class="comment"># python安裝</span></span><br><span class="line"><span class="built_in">cd</span> ../python-package</span><br><span class="line">pip3.5 install setuptools numpy scikit-learn scipy</span><br><span class="line">python3.5 setup.py install --precompile -O2</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>LightGBM</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>Python</tag>
        <tag>GPU</tag>
        <tag>cuda</tag>
        <tag>LightGBM</tag>
        <tag>Liunx</tag>
      </tags>
  </entry>
  <entry>
    <title>Write a Generalized Plotting Function Via R</title>
    <url>/posts/201809/2018-09-18-write-A-general-plot-function-with-R.html</url>
    <content><![CDATA[<p>這篇主要是介紹怎麼利用<code>R</code>的<code>ggplot2</code>去寫一個generalized的畫圖函數</p>
<a id="more"></a>

<p>先載入資料，轉成<code>data.table</code>，以及把<code>factor</code>的欄位都轉成<code>character</code></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(ggplot2)</span><br><span class="line"><span class="keyword">library</span>(data.table)</span><br><span class="line"><span class="keyword">library</span>(pipeR)</span><br><span class="line"></span><br><span class="line">data(<span class="string">&quot;diamonds&quot;</span>)</span><br><span class="line">factorCols &lt;- names(diamonds)[sapply(diamonds, is.factor)]</span><br><span class="line">diamondsDT &lt;- data.table(diamonds) %&gt;&gt;%</span><br><span class="line">  `[`(j = eval(factorCols) := lapply(.SD, as.character), .SDcols = factorCols)</span><br></pre></td></tr></table></figure>

<p>目標是把下面這張圖做成一個<code>generalized plotting function</code>來應付各種需求</p>
<p><img src="/images/boxplot_example.png"></p>
<p>畫圖程式如下：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">statDT &lt;- diamondsDT[ , .(cnt = .N, mean = mean(price), sd = sd(price)), by = .(cut)] %&gt;&gt;%</span><br><span class="line">  `[`(j = label := sprintf(<span class="string">&quot;cnt: %i\nmean: %.1f\nsd: %.2f&quot;</span>, cnt, mean, sd))</span><br><span class="line">g &lt;- ggplot(diamondsDT, aes(cut, price)) +</span><br><span class="line">  geom_boxplot(outlier.shape = <span class="literal">NA</span>) + geom_jitter(width = <span class="number">0.25</span>) +</span><br><span class="line">  ylim(c(<span class="number">300</span>, <span class="number">21000</span>)) +</span><br><span class="line">  geom_text(aes(cut, <span class="number">20000</span>, label = label), statDT)</span><br><span class="line">ggsave(<span class="string">&quot;boxplot_example.png&quot;</span>, g, width = <span class="number">7</span>, height = <span class="number">7</span>)</span><br></pre></td></tr></table></figure>

<p>第一步，我們先能夠產出<code>ggplot2</code>的<code>aes</code>，讓他能吃characters</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 利用aes_string來達成，為什麼要用bquote，下面那段程式說明</span></span><br><span class="line">aesExpr &lt;- bquote(aes_string(x = <span class="string">&quot;cut&quot;</span>, y = <span class="string">&quot;price&quot;</span>))</span><br><span class="line">ggplot(diamondsDT, eval(aesExpr)) +</span><br><span class="line">  geom_boxplot(outlier.shape = <span class="literal">NA</span>) + geom_jitter(width = <span class="number">0.25</span>) +</span><br><span class="line">  ylim(c(<span class="number">300</span>, <span class="number">21000</span>)) +</span><br><span class="line">  geom_text(aes(cut, <span class="number">20000</span>, label = label), statDT, inherit.aes = <span class="literal">FALSE</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加點花樣 (不同的color給不同的顏色)，使用bquote好處就是可以很容易新增其他變數</span></span><br><span class="line">aesExpr &lt;- bquote(aes_string(x = <span class="string">&quot;cut&quot;</span>, y = <span class="string">&quot;price&quot;</span>))</span><br><span class="line">aesExpr$colour &lt;- <span class="string">&quot;color&quot;</span></span><br><span class="line">ggplot(diamondsDT, eval(aesExpr)) +</span><br><span class="line">  geom_boxplot(outlier.shape = <span class="literal">NA</span>) + geom_jitter(width = <span class="number">0.25</span>) +</span><br><span class="line">  ylim(c(<span class="number">300</span>, <span class="number">21000</span>)) +</span><br><span class="line">  geom_text(aes(cut, <span class="number">20000</span>, label = label), statDT, inherit.aes = <span class="literal">FALSE</span>)</span><br></pre></td></tr></table></figure>

<p>第二步，我們將<code>statDT</code>用函數算出來，這邊大量使用<code>data.table</code>的技巧</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">getStatDTFunc &lt;- <span class="keyword">function</span>(DT, calVar, byVars,</span><br><span class="line">                          labelName = <span class="string">&quot;label&quot;</span>,</span><br><span class="line">                          sprintFmts = c(<span class="string">&quot;%i&quot;</span>, <span class="string">&quot;%.1f&quot;</span>, <span class="string">&quot;%.2f&quot;</span>),</span><br><span class="line">                          funcList = list(cnt = length, mean = mean, sd = sd)) &#123;</span><br><span class="line">  stopifnot(is.data.frame(DT), is.character(calVar),</span><br><span class="line">            length(calVar) == <span class="number">1</span>, calVar %<span class="keyword">in</span>% names(DT),</span><br><span class="line">            is.character(labelName), length(labelName) == <span class="number">1</span>,</span><br><span class="line">            is.character(byVars), all(byVars %<span class="keyword">in</span>% names(DT)),</span><br><span class="line">            all(grepl(<span class="string">&quot;^%[0-9.]*[if]&quot;</span>, sprintFmts)),</span><br><span class="line">            length(sprintFmts) == length(funcList),</span><br><span class="line">            all(nchar(names(funcList)) &gt; <span class="number">0</span>))</span><br><span class="line">  <span class="keyword">if</span> (!is.data.table(DT))</span><br><span class="line">    DT &lt;- data.table(DT)</span><br><span class="line">  outDT &lt;- DT[ , lapply(funcList, <span class="keyword">function</span>(f) f(get(calVar))) %&gt;&gt;%</span><br><span class="line">                 setNames(names(funcList)), by = byVars]</span><br><span class="line">  fmt &lt;- sprintf(<span class="string">&quot;%s: %s&quot;</span>, names(funcList), sprintFmts) %&gt;&gt;% paste0(collapse = <span class="string">&quot;\n&quot;</span>)</span><br><span class="line">  outDT[ , eval(labelName) := do.call(sprintf, c(list(fmt = fmt), mget(names(funcList))))]</span><br><span class="line">  <span class="keyword">return</span>(outDT)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># default</span></span><br><span class="line">getStatDTFunc(diamondsDT, <span class="string">&quot;price&quot;</span>, <span class="string">&quot;cut&quot;</span>)</span><br><span class="line"><span class="comment">## 結果如下</span></span><br><span class="line"><span class="comment">#          cut   cnt     mean       sd                                 label</span></span><br><span class="line"><span class="comment"># 1:     Ideal 21551 3457.542 3808.401 cnt: 21551\nmean: 3457.5\nsd: 3808.40</span></span><br><span class="line"><span class="comment"># 2:   Premium 13791 4584.258 4349.205 cnt: 13791\nmean: 4584.3\nsd: 4349.20</span></span><br><span class="line"><span class="comment"># 3:      Good  4906 3928.864 3681.590  cnt: 4906\nmean: 3928.9\nsd: 3681.59</span></span><br><span class="line"><span class="comment"># 4: Very Good 12082 3981.760 3935.862 cnt: 12082\nmean: 3981.8\nsd: 3935.86</span></span><br><span class="line"><span class="comment"># 5:      Fair  1610 4358.758 3560.387  cnt: 1610\nmean: 4358.8\nsd: 3560.39</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># variant 1 (data.table has a bug on median.)</span></span><br><span class="line">getStatDTFunc(diamondsDT, <span class="string">&quot;price&quot;</span>, <span class="string">&quot;cut&quot;</span>, <span class="string">&quot;label&quot;</span>, c(<span class="string">&quot;%i&quot;</span>, <span class="string">&quot;%.1f&quot;</span>),</span><br><span class="line">              list(cnt = length, median = <span class="keyword">function</span>(x) quantile(x, <span class="number">0.5</span>)))</span><br><span class="line"><span class="comment">## 結果如下</span></span><br><span class="line"><span class="comment">#          cut   cnt median                      label</span></span><br><span class="line"><span class="comment"># 1:     Ideal 21551 1810.0 cnt: 21551\nmedian: 1810.0</span></span><br><span class="line"><span class="comment"># 2:   Premium 13791 3185.0 cnt: 13791\nmedian: 3185.0</span></span><br><span class="line"><span class="comment"># 3:      Good  4906 3050.5  cnt: 4906\nmedian: 3050.5</span></span><br><span class="line"><span class="comment"># 4: Very Good 12082 2648.0 cnt: 12082\nmedian: 2648.0</span></span><br><span class="line"><span class="comment"># 5:      Fair  1610 3282.0  cnt: 1610\nmedian: 3282.0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># variant 2</span></span><br><span class="line">getStatDTFunc(diamondsDT, <span class="string">&quot;price&quot;</span>, <span class="string">&quot;clarity&quot;</span>, <span class="string">&quot;label&quot;</span>, c(<span class="string">&quot;%i&quot;</span>, <span class="string">&quot;%.1f&quot;</span>, <span class="string">&quot;%.1f&quot;</span>, <span class="string">&quot;%.1f&quot;</span>),</span><br><span class="line">              list(cnt = length, q25 = <span class="keyword">function</span>(x) quantile(x, <span class="number">0.25</span>),</span><br><span class="line">                   q50 = <span class="keyword">function</span>(x) quantile(x, <span class="number">0.5</span>),</span><br><span class="line">                   q75 = <span class="keyword">function</span>(x) quantile(x, <span class="number">0.75</span>)))</span><br><span class="line"><span class="comment">## 結果如下</span></span><br><span class="line"><span class="comment">#    clarity   cnt     q25  q50     q75                                             label</span></span><br><span class="line"><span class="comment"># 1:     SI2  9194 2264.00 4072 5777.25  cnt: 9194\nq25: 2264.0\nq50: 4072.0\nq75: 5777.2</span></span><br><span class="line"><span class="comment"># 2:     SI1 13065 1089.00 2822 5250.00 cnt: 13065\nq25: 1089.0\nq50: 2822.0\nq75: 5250.0</span></span><br><span class="line"><span class="comment"># 3:     VS1  8171  876.00 2005 6023.00   cnt: 8171\nq25: 876.0\nq50: 2005.0\nq75: 6023.0</span></span><br><span class="line"><span class="comment"># 4:     VS2 12258  900.00 2054 6023.75  cnt: 12258\nq25: 900.0\nq50: 2054.0\nq75: 6023.8</span></span><br><span class="line"><span class="comment"># 5:    VVS2  5066  794.25 1311 3638.25   cnt: 5066\nq25: 794.2\nq50: 1311.0\nq75: 3638.2</span></span><br><span class="line"><span class="comment"># 6:    VVS1  3655  816.00 1093 2379.00   cnt: 3655\nq25: 816.0\nq50: 1093.0\nq75: 2379.0</span></span><br><span class="line"><span class="comment"># 7:      I1   741 2080.00 3344 5161.00   cnt: 741\nq25: 2080.0\nq50: 3344.0\nq75: 5161.0</span></span><br><span class="line"><span class="comment"># 8:      IF  1790  895.00 1080 2388.50   cnt: 1790\nq25: 895.0\nq50: 1080.0\nq75: 2388.5</span></span><br></pre></td></tr></table></figure>

<p>所以這樣一來，<code>statDT</code>的產生也能用函數產生了，最後就是寫畫圖函數了</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">boxPlotFunc &lt;- <span class="keyword">function</span>(data, x, y, colour = <span class="literal">NULL</span>,</span><br><span class="line">                        title = <span class="string">&quot;&quot;</span>, xlab = x, ylab = y,</span><br><span class="line">                        needStats = <span class="literal">FALSE</span>, statDT = <span class="literal">NULL</span>, labelCol = <span class="literal">NULL</span>,</span><br><span class="line">                        textSize = <span class="number">11</span>, titleTextSize = rel(<span class="number">1.2</span>), legendTitle = <span class="string">&quot;&quot;</span>,</span><br><span class="line">                        legendTitleSize = rel(<span class="number">1</span>), legendLabelSize = rel(<span class="number">0.8</span>),</span><br><span class="line">                        axisTitleSize = rel(<span class="number">0.8</span>), axisTextSize = rel(<span class="number">0.8</span>)) &#123;</span><br><span class="line">  aesExpr &lt;- bquote(aes_string(x = <span class="string">&quot;cut&quot;</span>, y = <span class="string">&quot;price&quot;</span>))</span><br><span class="line">  labExpr &lt;- bquote(labs(x = xlab, y = ylab, title = title))</span><br><span class="line">  <span class="keyword">if</span> (!is.null(colour)) &#123;</span><br><span class="line">    aesExpr$colour &lt;- colour</span><br><span class="line">    labExpr$colour &lt;- ifelse(nchar(legendTitle) == <span class="number">0</span>, colour, legendTitle)</span><br><span class="line">  &#125;</span><br><span class="line">  g &lt;- ggplot(data, eval(aesExpr)) + eval(labExpr) +</span><br><span class="line">    geom_boxplot(outlier.shape = <span class="literal">NA</span>) + geom_jitter(width = <span class="number">0.25</span>) +</span><br><span class="line">    theme(text = element_text(size = textSize),</span><br><span class="line">          plot.title = element_text(size = titleTextSize),</span><br><span class="line">          axis.title.x = element_text(size = axisTitleSize),</span><br><span class="line">          axis.title.y = element_text(size = axisTitleSize),</span><br><span class="line">          axis.text = element_text(size = axisTextSize),</span><br><span class="line">          legend.title = element_text(size = legendTitleSize),</span><br><span class="line">          legend.text = element_text(size = legendLabelSize))</span><br><span class="line">  <span class="keyword">if</span> (needStats) &#123;</span><br><span class="line">    calStatLoc &lt;- extendrange(diamondsDT$price, f = <span class="number">0.05</span>)[<span class="number">2</span>]</span><br><span class="line">    ylim &lt;- c(extendrange(diamondsDT$price, f = <span class="number">0.025</span>)[<span class="number">1</span>],</span><br><span class="line">              extendrange(diamondsDT$price, f = <span class="number">0.075</span>)[<span class="number">2</span>])</span><br><span class="line">    <span class="keyword">if</span> (!is.null(statDT) &amp;&amp; !is.null(labelCol))</span><br><span class="line">      g &lt;- g + ylim(ylim) +</span><br><span class="line">        geom_text(aes_string(x, y = as.character(calStatLoc), label = labelCol),</span><br><span class="line">                  statDT, inherit.aes = <span class="literal">FALSE</span>)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="keyword">warning</span>(<span class="string">&quot;needStats is TRUE, but statDT or labelCol is null, so not add statistics.&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span>(g)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>這裡有幾點要說明</p>
<ol>
<li><code>rel</code>是<code>ggplot2</code>的相對大小的函數，<code>ggplot2</code>預設的text大小是<code>11</code>，則<code>rel(0.8) = 11 * 0.8 = 8.8</code>的size</li>
<li>ggplot2參數預設值可以參考<a href="https://github.com/tidyverse/ggplot2/blob/master/R/theme-defaults.r">這裡</a></li>
</ol>
<p>最後簡單的測試一下：</p>
<p>簡單功能測試：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">boxPlotFunc(diamondsDT, <span class="string">&quot;cut&quot;</span>, <span class="string">&quot;price&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>測試一下其他參數：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">statDT &lt;- getStatDTFunc(diamondsDT, <span class="string">&quot;price&quot;</span>, <span class="string">&quot;cut&quot;</span>, <span class="string">&quot;label&quot;</span>, c(<span class="string">&quot;%i&quot;</span>, <span class="string">&quot;%f&quot;</span>),</span><br><span class="line">                        list(cnt = length, median = <span class="keyword">function</span>(x) quantile(x, <span class="number">0.5</span>)))</span><br><span class="line">g2 &lt;- boxPlotFunc(diamondsDT, <span class="string">&quot;cut&quot;</span>, <span class="string">&quot;price&quot;</span>, <span class="string">&quot;color&quot;</span>,</span><br><span class="line">                  <span class="string">&quot;Boxplox for Price vs Cut + Color of Diamonds&quot;</span>,</span><br><span class="line">                  <span class="string">&quot;Cut of Diamonds&quot;</span>, <span class="string">&quot;Price of Diamonds&quot;</span>,</span><br><span class="line">                  legendTitle = <span class="string">&quot;Color of Diamonds&quot;</span>,</span><br><span class="line">                  needStats = <span class="literal">TRUE</span>, statDT = statDT, labelCol = <span class="string">&quot;label&quot;</span>)</span><br><span class="line">ggsave(<span class="string">&quot;boxplot_final.png&quot;</span>, g2, width = <span class="number">9</span>, height = <span class="number">7</span>)</span><br></pre></td></tr></table></figure>

<p>圖：</p>
<p><img src="/images/boxplot_final.png"></p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>ggplot2</tag>
      </tags>
  </entry>
  <entry>
    <title>How does R Process Existed Connections When Exit?</title>
    <url>/posts/201812/2018-12-16-how-does-R-process-existed-connections-when-exit.html</url>
    <content><![CDATA[<p>這篇主要是介紹在R裡面在離開Process時是怎麼處理Process的連線。</p>
<a id="more"></a>

<p>熟悉R的人都知道<code>showConnections(all = TRUE)</code>會show出這個Process目前的所有連線為何</p>
<p>基本上一定會有<code>stdin</code>，<code>stdout</code>跟<code>stderr</code></p>
<p>而且在<a href="https://github.com/wch/r-source/blob/trunk/src/main/connections.c#L127">connections.c</a>裡面會定義最大連線數</p>
<p>基本上，R的最大連線數都是128，除非自己編譯R，才可能取得更高的連線數量，這個數字其實還有很多意義</p>
<p>其中之一是，如果有用<code>parallel</code>或是<code>snow</code>都是R可以透過<code>ssh</code>多台電腦來spawn slaves</p>
<p>而slaves的最大數目就是這個數字減3(需要扣掉<code>stdin</code>，<code>stdout</code>跟<code>stderr</code>)</p>
<p>扯得有點遠了，我們今天的主題是介紹R裡面怎麼處理這些Connection的</p>
<p>要知道這個，我們首先從<a href="https://github.com/wch/r-source/blob/trunk/src/main/connections.c">connections.c</a>下手</p>
<p>在<code>R_new_custom_connection</code>這個函數上面可以看到兩個註解的block，裡面寫到：</p>
<blockquote>
<p>/* — C-level entry to create a custom connection object – <em>/<br>/</em> The returned value is the R-side instance. To avoid additional call to getConnection()<br>   the internal Rconnection pointer will be placed in ptr[0] if ptr is not NULL.<br>   It is the responsibility of the caller to customize callbacks in the structure,<br>   they are initialized to dummy_ (where available) and null_ (all others) callbacks.<br>   Also note that the resulting object has a finalizer, so any clean up (including after<br>   errors) is done by garbage collection - the caller may not free anything in the<br>   structure explicitly (that includes the con-&gt;private pointer!).<br>  */</p>
</blockquote>
<p>我們重點是裡面提到每一個connection的object都會有一個finalizer，所以所有包含錯誤的clean up相關動作就會被正確處理掉</p>
<p>那我們看一下<code>R_new_custom_connection</code>，其實裡面就會有<code>R_RegisterCFinalizerEx</code>的動作</p>
<p>我們先往下挖，而它會註冊到<code>conFinalizer</code>這個函數，然後會連結到<code>con_destroy</code></p>
<p>接著到<code>con_close1</code>，然後call <code>con</code>裡面對應的<code>close</code> method完成關閉</p>
<p>但是我們怎麼知道R離開時會call finalizer呢?</p>
<p>我們就要深入去看<a href="https://github.com/wch/r-source/blob/trunk/src/main/memory.c#L1545">memory.c中的R_RegisterCFinalizerEx</a>了</p>
<p>我們循著脈絡來往下找<code>R_RegisterCFinalizerEx</code> -&gt; <code>R_MakeWeakRefC</code> -&gt; <code>MakeCFinalizer</code>，所以最後會註冊到<code>CFinalizer</code></p>
<p>我們再從取的<code>CFinalizer</code>的function <code>GetCFinalizer</code>往上找，就會看到<code>R_RunWeakRefFinalizer</code> -&gt; <code>RunFinalizers</code></p>
<p>看一下<code>RunFinalizers</code>裡面的註解</p>
<blockquote>
<p>/** A top level context is established for the finalizer to<br>   insure that any errors that might occur do not spill<br>   into the call that triggered the collection.<br>  **/</p>
</blockquote>
<p>它提到context是為了finalizer而被建立的，用來確認說在任何錯誤發生時，能夠trigger資源回收</p>
<p>最後，我們的R Source Code Trace之旅就結束了</p>
<p>我們看到說R針對它自己離開時，會在不論什麼情況下，回收掉所有的connections，避免connection殘留</p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
      </tags>
  </entry>
  <entry>
    <title>Start an RStudio Server With R built on MKL</title>
    <url>/posts/201812/2018-12-04-Rstudio-server-in-docker.html</url>
    <content><![CDATA[<p>安裝<code>Docker-ce</code>，並啟動。然後pull image，就可以啟動了。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># install docker</span></span><br><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line">sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line">yum install docker-ce -y</span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br><span class="line">systemctl start docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># pull images and start</span></span><br><span class="line">docker pull jamal0230/centos-rstudio-mkl-r:latest</span><br><span class="line"></span><br><span class="line"><span class="comment"># run RStudio server with R built on MKL. The account is user with password password.</span></span><br><span class="line">docker run -d -p 8787:8787 -e USER=user -e PASSWORD=password --name rstudio jamal0230/centos-rstudio-mkl-r:latest</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>SLURM Cluster in Docker Swarm Cluster</title>
    <url>/posts/201812/2018-12-21-SLURM-cluster-in-docker.html</url>
    <content><![CDATA[<p>這篇主要是介紹怎麼在Docker Swarm Cluster起SLURM Cluster</p>
<a id="more"></a>

<p>先提供References:</p>
<ol>
<li><a href="https://github.com/SciDAS/slurm-in-docker">slurm-in-docker</a></li>
<li><a href="https://github.com/giovtorres/slurm-docker-cluster">slurm-docker-cluster</a></li>
</ol>
<p>首先先部署docker swarm cluster</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># modify hosts</span></span><br><span class="line">tee -a /etc/hosts &lt;&lt; EOF</span><br><span class="line">192.168.1.131 jamalslurm01</span><br><span class="line">192.168.1.132 jamalslurm02</span><br><span class="line">192.168.1.133 jamalslurm03</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># generate ssh key</span></span><br><span class="line">ssh-keygen -t rsa -b 2048 -f ~/.ssh/id_rsa -q -N <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># install sshpass and copy ssh key</span></span><br><span class="line">yum install sshpass -y</span><br><span class="line">PASS=`cat password`</span><br><span class="line"><span class="keyword">for</span> host <span class="keyword">in</span> jamalslurm01 jamalslurm02 jamalslurm03; <span class="keyword">do</span></span><br><span class="line">  ssh-keyscan <span class="variable">$host</span> &gt;&gt; ~/.ssh/known_hosts</span><br><span class="line">  sshpass -p <span class="variable">$PASS</span> ssh-copy-id root@<span class="variable">$host</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># copy hosts file</span></span><br><span class="line"><span class="keyword">for</span> host <span class="keyword">in</span> jamalslurm02 jamalslurm03; <span class="keyword">do</span></span><br><span class="line">  scp /etc/hosts <span class="variable">$host</span>:/etc</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># install pip and docker-compose</span></span><br><span class="line">yum install -y epel-release</span><br><span class="line">yum install -y python-pip</span><br><span class="line">pip install pip setuptools --upgrade</span><br><span class="line">pip install docker-compose</span><br><span class="line"></span><br><span class="line"><span class="comment"># init docker swarm cluster</span></span><br><span class="line">docker swarm init --advertise-addr 192.168.1.131</span><br><span class="line"></span><br><span class="line"><span class="comment"># show key to add worker</span></span><br><span class="line">docker swarm join-token worker</span><br><span class="line"><span class="comment"># run following command in node (example)</span></span><br><span class="line"><span class="comment"># docker swarm join --token SWMTKN-1-35f9hdj8scn5o58xnsxffvh12eeagw67r5mim87o1g3hzvs60d-dk72tjwi9elppjgq37agrpp4o 192.168.1.131:2377</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># show key to add manager</span></span><br><span class="line">docker swarm join-token manager</span><br><span class="line"><span class="comment"># run following command in node (example)</span></span><br><span class="line"><span class="comment"># docker swarm join --token SWMTKN-1-35f9hdj8scn5o58xnsxffvh12eeagw67r5mim87o1g3hzvs60d-521e7shudywaqbpxz2ox9231n 192.168.1.131:2377</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># setup iptables</span></span><br><span class="line"><span class="keyword">for</span> host <span class="keyword">in</span> jamalslurm01 jamalslurm02 jamalslurm03; <span class="keyword">do</span></span><br><span class="line">  ssh <span class="variable">$host</span> &lt;&lt; EOF</span><br><span class="line">iptables -L</span><br><span class="line">systemctl restart docker</span><br><span class="line">EOF</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<p>安裝swarm visualizer:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker service create --name=viz \</span><br><span class="line">  --publish=8080:8080/tcp \</span><br><span class="line">  --constraint=node.role==manager \</span><br><span class="line">  --mount=<span class="built_in">type</span>=<span class="built_in">bind</span>,src=/var/run/docker.sock,dst=/var/run/docker.sock \</span><br><span class="line">  dockersamples/visualizer</span><br></pre></td></tr></table></figure>

<p>安裝之後連上該host的8080就可以看到下圖：</p>
<p><img src="/images/docker-viz-1.PNG"></p>
<p>安裝nfs用來share swarm的volumes</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># install nfs</span></span><br><span class="line"><span class="keyword">for</span> host <span class="keyword">in</span> jamalslurm01 jamalslurm02 jamalslurm03; <span class="keyword">do</span></span><br><span class="line">  ssh <span class="variable">$host</span> &lt;&lt; EOF</span><br><span class="line">yum -y install nfs-utils</span><br><span class="line">systemctl start rpcbind</span><br><span class="line">systemctl <span class="built_in">enable</span> rpcbind</span><br><span class="line">EOF</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## jamalslurm01</span></span><br><span class="line">mkdir -p /data/nfs_vol</span><br><span class="line">touch /data/nfs_vol/test.txt</span><br><span class="line">tee /etc/exports &lt;&lt; EOF</span><br><span class="line"><span class="comment"># swarm nfs share volume</span></span><br><span class="line"><span class="comment"># /data/nfs_vol: shared directory</span></span><br><span class="line"><span class="comment"># 192.168.1.0/24: subnet having privilege to access</span></span><br><span class="line"><span class="comment"># rw: permission to read and write. ro: read only</span></span><br><span class="line"><span class="comment"># sync: synchronized, slow, secure.</span></span><br><span class="line"><span class="comment"># async: asynchronized, fast, less secure</span></span><br><span class="line"><span class="comment"># no_root_squash: open to root to use</span></span><br><span class="line">/data/nfs_vol 192.168.1.0/24(rw,sync,no_root_squash)</span><br><span class="line">EOF</span><br><span class="line"><span class="comment"># start nfs</span></span><br><span class="line">systemctl <span class="built_in">enable</span> nfs</span><br><span class="line">systemctl start nfs</span><br><span class="line"></span><br><span class="line"><span class="comment"># install and config autofs on nodes</span></span><br><span class="line"><span class="keyword">for</span> host <span class="keyword">in</span> jamalslurm02 jamalslurm03; <span class="keyword">do</span></span><br><span class="line">  ssh <span class="variable">$host</span> &lt;&lt; EOF</span><br><span class="line">yum -y install autofs</span><br><span class="line">tee -a /etc/auto.master &lt;&lt; EOF2</span><br><span class="line">/mnt /etc/auto.mnt</span><br><span class="line">EOF2</span><br><span class="line">tee /etc/auto.mnt &lt;&lt; EOF2</span><br><span class="line">nfs_vol -rw,<span class="built_in">bg</span>,soft,intr,rsize=8192,wsize=8192 jamalslurm01:/data/nfs_vol</span><br><span class="line">EOF2</span><br><span class="line">systemctl <span class="built_in">enable</span> autofs</span><br><span class="line">systemctl start autofs</span><br><span class="line">EOF</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<p>測試一下nfs沒問題之後，就可以進主菜SLURM了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># create needed folders</span></span><br><span class="line">mkdir /data/nfs_vol/slurm_spool</span><br><span class="line">mkdir /data/nfs_vol/slurm_conf</span><br><span class="line">mkdir /data/nfs_vol/data</span><br><span class="line">mkdir /data/nfs_vol/mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># clone files</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/ChingChuan-Chen/slurm-mpi-r.git</span><br><span class="line"><span class="built_in">cd</span> slurm-mpi-r</span><br><span class="line"></span><br><span class="line"><span class="comment"># label host</span></span><br><span class="line"><span class="keyword">for</span> host <span class="keyword">in</span> jamalslurm01 jamalslurm02 jamalslurm03; <span class="keyword">do</span></span><br><span class="line">  docker node update --label-add role=slurmd <span class="variable">$host</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="comment"># generate config</span></span><br><span class="line">./generate-slurm-config.sh slurmd worker normal</span><br><span class="line"></span><br><span class="line"><span class="comment"># copy config</span></span><br><span class="line">rm -f /data/nfs_vol/slurm_conf/*.conf</span><br><span class="line">cp slurm-confs/*.conf /data/nfs_vol/slurm_conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># pull needed images (master pull and share to other nodes)</span></span><br><span class="line">docker pull mysql:5.7</span><br><span class="line">docker pull jamal0230/slurm-mpi-r:latest</span><br><span class="line">docker save jamal0230/mysql:5.7 &gt; /data/nfs_vol/mysql-5.7.tar</span><br><span class="line">docker save jamal0230/slurm-mpi-r:latest &gt; /data/nfs_vol/slurm-mpi-r-latest.tar</span><br><span class="line"><span class="keyword">for</span> host <span class="keyword">in</span> jamalslurm02 jamalslurm03; <span class="keyword">do</span></span><br><span class="line">  ssh <span class="variable">$host</span> &lt;&lt; EOF</span><br><span class="line">docker load &lt; /mnt/nfs_vol/mysql-5.7.tar</span><br><span class="line">docker load &lt; /mnt/nfs_vol/slurm-mpi-r-latest.tar</span><br><span class="line">EOF</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># deploy</span></span><br><span class="line">docker stack deploy --with-registry-auth slurm --compose-file=docker-compose.yml</span><br><span class="line"></span><br><span class="line"><span class="comment"># register</span></span><br><span class="line">host=$(docker service ps -f <span class="string">&#x27;name=slurm&#x27;</span> slurm_slurmctld | awk <span class="string">&#x27;&#123;print $4&#125;&#x27;</span> | head -2 | tail -1)</span><br><span class="line">scp register_cluster.sh <span class="variable">$host</span>:~/</span><br><span class="line">ssh <span class="variable">$host</span> ~/register_cluster.sh</span><br></pre></td></tr></table></figure>

<p>用visualizer查看佈署情況：</p>
<p><img src="/images/docker-viz-2.PNG"></p>
<p>最後利用這個指令就可以進去slurmctld的container:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># get host of slurmctld</span><br><span class="line">host&#x3D;$(docker service ps -f &#39;name&#x3D;slurm&#39; slurm_slurmctld | awk &#39;&#123;print $4&#125;&#39; | tail -1)</span><br><span class="line">ssh $host</span><br><span class="line">docker exec -it slurm_slurmctld.1.$(docker service ps -f &#39;name&#x3D;slurm&#39; slurm_slurmctld -q --no-trunc | head -n1) &#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure>

<p>然後執行<code>sinfo</code>就可以看到下圖了</p>
<p><img src="/images/docker-slurm-sinfo.PNG"></p>
<p>PS: 後來測試Multi-node job都失敗，原因目前找不到…</p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Start an Jupyter Lab With Julia built with MKL on Docker</title>
    <url>/posts/201902/2019-02-03-Julia-MKL-build-in-docker.html</url>
    <content><![CDATA[<p>安裝<code>Docker-ce</code>，並啟動。然後pull image，就可以啟動了。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># install docker</span></span><br><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line">sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line">yum install docker-ce -y</span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br><span class="line">systemctl start docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># pull images and start</span></span><br><span class="line">docker pull jamal0230/centos-mkl-julia-jupyter:latest</span><br><span class="line"></span><br><span class="line"><span class="comment"># run Jupyter Lab with Julia built with MKL. Then connect to https://localhost:8888</span></span><br><span class="line">docker run -d -p 8888:8888 -e PASSWORD=password -e USE_HTTPS=yes --name julia_jupyter jamal0230/centos-mkl-julia-jupyter:latest</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>julia</category>
      </categories>
      <tags>
        <tag>julia</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Reverse Proxy for RStudio Server and JupyterLab-Hub with SSL in NGINX</title>
    <url>/posts/201902/2019-02-27-nginx-reverse-proxy-for-rstudio-server-and-jupyterhub-with-ssl.html</url>
    <content><![CDATA[<p>Simply record the configuration files.</p>
<a id="more"></a>

<ol>
<li><p>Install NGINX, <a href="https://www.rstudio.com/products/rstudio/download-server/">RStudio server</a>, <a href="https://github.com/jupyterhub/jupyterhub">JupyterHub</a>, <a href="https://github.com/jupyterlab/jupyterlab">JupyterLab</a> and <a href="https://github.com/jupyterhub/jupyterlab-hub">Jupyterlab-hub extension</a>.</p>
</li>
<li><p>Setup NGINX</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># generate SSL</span></span><br><span class="line">mkdir /etc/nginx/ssl</span><br><span class="line">sudo openssl req -x509 -nodes -days 3650 -newkey rsa:2048 -keyout /etc/nginx/ssl/nginx.key -out /etc/nginx/ssl/nginx.crt</span><br><span class="line"></span><br><span class="line"><span class="comment"># config</span></span><br><span class="line">tee /etc/nginx/conf.d/rstudio_jupyter.conf &lt;&lt; EOF</span><br><span class="line">server &#123;</span><br><span class="line">  listen 80;</span><br><span class="line">  <span class="built_in">return</span> 301 https://\<span class="variable">$host</span>\<span class="variable">$request_uri</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">map \<span class="variable">$http_upgrade</span> \<span class="variable">$connection_upgrade</span> &#123;</span><br><span class="line">  default upgrade;</span><br><span class="line">  <span class="string">&#x27;&#x27;</span>        close;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">  listen 443 ssl default_server;</span><br><span class="line">  listen [::]:443 ssl default_server;</span><br><span class="line"></span><br><span class="line">  server_name _;</span><br><span class="line">  ssl_certificate /etc/nginx/ssl/nginx.crt;</span><br><span class="line">  ssl_certificate_key /etc/nginx/ssl/nginx.key;</span><br><span class="line">  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">  ssl_prefer_server_ciphers on;</span><br><span class="line"></span><br><span class="line">  add_header Strict-Transport-Security <span class="string">&quot;max-age=15768000&quot;</span>;</span><br><span class="line">  client_max_body_size 512M;</span><br><span class="line">  fastcgi_buffers 64 4K;</span><br><span class="line"></span><br><span class="line">  location /rstudio/ &#123;</span><br><span class="line">    rewrite ^/rstudio/(.*)$ /\<span class="variable">$1</span> <span class="built_in">break</span>;</span><br><span class="line">    proxy_pass http://localhost:8787;</span><br><span class="line">    proxy_redirect http://localhost:8787/ \<span class="variable">$scheme</span>://\<span class="variable">$host</span>/rstudio/;</span><br><span class="line">    proxy_http_version 1.1;</span><br><span class="line">    proxy_set_header Upgrade \<span class="variable">$http_upgrade</span>;</span><br><span class="line">    proxy_set_header Connection \<span class="variable">$connection_upgrade</span>;</span><br><span class="line">    proxy_read_timeout 86400;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  location ~* /jupyter.* &#123;</span><br><span class="line">    proxy_pass http://localhost:8000;</span><br><span class="line">    proxy_http_version 1.1;</span><br><span class="line">    proxy_set_header Host \<span class="variable">$host</span>;</span><br><span class="line">    proxy_set_header X-Real-IP \<span class="variable">$remote_addr</span>;</span><br><span class="line">    proxy_set_header X-Forwarded-For \<span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">    proxy_set_header Upgrade \<span class="variable">$http_upgrade</span>;</span><br><span class="line">    proxy_set_header Connection \<span class="variable">$connection_upgrade</span>;</span><br><span class="line">    proxy_read_timeout 86400;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>
</li>
<li><p>Setup RStudio Server</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;/www-address/d&#x27;</span> /etc/rstudio/rserver.conf</span><br><span class="line">tee -a /etc/rstudio/rserver.conf &lt;&lt; EOF</span><br><span class="line">www-address=127.0.0.1</span><br><span class="line">EOF</span><br><span class="line">systemctl restart rstudio-server</span><br></pre></td></tr></table></figure></li>
<li><p>Setup JupyterHub</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir /jupyter</span><br><span class="line"><span class="comment"># setup config</span></span><br><span class="line">tee /jupyter/jupyterhub_config.py &lt;&lt; EOF</span><br><span class="line">c.JupyterHub.authenticator_class = <span class="string">&#x27;jupyterhub.auth.PAMAuthenticator&#x27;</span></span><br><span class="line">c.JupyterHub.bind_url=<span class="string">&#x27;http://:8000/jupyter&#x27;</span></span><br><span class="line">c.JupyterHub.config_file = <span class="string">&#x27;/jupyter/jupyterhub_config.py&#x27;</span></span><br><span class="line">c.JupyterHub.cookie_secret_file = <span class="string">&#x27;/jupyter/jupyterhub_cookie_secret&#x27;</span></span><br><span class="line">c.JupyterHub.data_files_path = <span class="string">&#x27;/usr/local/share/jupyterhub&#x27;</span></span><br><span class="line">c.JupyterHub.db_url = <span class="string">&#x27;sqlite:////jupyter/jupyterhub.sqlite&#x27;</span></span><br><span class="line">EOF</span><br><span class="line"><span class="comment"># setup service</span></span><br><span class="line">tee /etc/systemd/system/jupyterhub.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Jupyterhub</span><br><span class="line">After=syslog.target network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User=root</span><br><span class="line">Environment=<span class="string">&quot;PATH=/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin&quot;</span></span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/bin/jupyterhub -f /jupyter/jupyterhub_config.py</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">systemctl start jupyterhub</span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>Python</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Installation in CentOS 8</title>
    <url>/posts/201909/2019-09-28-installation-in-centos-8.html</url>
    <content><![CDATA[<p>Simply record the scripts to setup CentOS 8.</p>
<a id="more"></a>

<p>Putty Settings:</p>
<ol>
<li>Install Font <code>Noto Mono for Powerline</code>: <a href="https://github.com/powerline/fonts/tree/master/NotoMono">https://github.com/powerline/fonts/tree/master/NotoMono</a></li>
<li>Change the font of PuTTy to <code>Noto Mono for Powerline</code>.</li>
<li>(optional) Modify the resolution in Hyper-V VM: <code>sudo grubby --update-kernel=ALL --args=&quot;video=hyperv_fb:2560x1440&quot;</code></li>
</ol>
<p>A. Setup zsh / SSH-keys</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># install zsh/oh-my-zsh</span></span><br><span class="line">sudo yum install zsh -y</span><br><span class="line">sh -c <span class="string">&quot;<span class="subst">$(wget -O- https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>&quot;</span></span><br><span class="line"><span class="comment"># install powerlevel9k theme</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/bhilburn/powerlevel9k.git ~/.oh-my-zsh/custom/themes/powerlevel9k</span><br><span class="line">sed -i <span class="string">&#x27;s~ZSH_THEME=.*~ZSH_THEME=&quot;powerlevel9k/powerlevel9k&quot;~g&#x27;</span> ~/.zshrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># install awesome-terminal fonts</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/gabrielelana/awesome-terminal-fonts.git</span><br><span class="line"><span class="built_in">cd</span> awesome-terminal-fonts</span><br><span class="line">mv build ~/.fonts</span><br><span class="line"><span class="built_in">fc</span>-cache -fv ~/.fonts</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;POWERLEVEL9K_MODE=&quot;awesome-fontconfig&quot;&#x27;</span> &gt;&gt; ~/.zshrc</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;source ~/.fonts/*.sh&#x27;</span> &gt;&gt; ~/.zshrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># install Plug-ins of zsh</span></span><br><span class="line"><span class="comment">## zsh-syntax-highlighting</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-syntax-highlighting</span><br><span class="line">sed -i <span class="string">&#x27;s/^plugins=(/&amp;zsh-syntax-highlighting /&#x27;</span> ~/.zshrc</span><br><span class="line"><span class="comment">## zsh-autosuggestions</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-autosuggestions</span><br><span class="line">sed -i <span class="string">&#x27;s/^plugins=(/&amp;zsh-autosuggestions /&#x27;</span> ~/.zshrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># SSH-key</span></span><br><span class="line">ssh-keygen -t rsa -P <span class="string">&quot;&quot;</span> -f ~/.ssh/id_rsa</span><br><span class="line">cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</span><br><span class="line">chmod 644  ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure>

<p>B. Install JupyterLab / JupyterHub</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum install npm -y</span><br><span class="line">sudo npm install -g configurable-http-proxy</span><br><span class="line">sudo pip3 install --upgrade pip</span><br><span class="line">sudo mv /usr/<span class="built_in">local</span>/bin/pip3* /usr/bin</span><br><span class="line">sudo rm /usr/<span class="built_in">local</span>/bin/pip</span><br><span class="line">sudo pip3 install jupyterlab jupyterhub</span><br><span class="line">sudo /usr/<span class="built_in">local</span>/bin/jupyter labextension install @jupyterlab/hub-extension</span><br><span class="line">sudo ln -s /usr/<span class="built_in">local</span>/bin/jupyterhub-singleuser /usr/bin/jupyterhub-singleuser</span><br><span class="line">sudo ln -s /usr/<span class="built_in">local</span>/bin/jupyter-labhub /usr/bin/jupyter-labhub</span><br><span class="line"></span><br><span class="line">sudo mkdir /jupyter</span><br><span class="line"><span class="built_in">cd</span> /jupyter</span><br><span class="line">sudo /usr/<span class="built_in">local</span>/bin/jupyterhub --generate-config</span><br><span class="line"></span><br><span class="line">sudo sed -i <span class="string">&#x27;s~#c.JupyterHub.bind_url.*~c.JupyterHub.bind_url=&quot;http://:8000/jupyter&quot;~g&#x27;</span> /jupyter/jupyterhub_config.py</span><br><span class="line">sudo sed -i <span class="string">&#x27;s~#c.JupyterHub.data_files_path.*~c.JupyterHub.data_files_path=&quot;/usr/local/share/jupyterhub&quot;~g&#x27;</span> /jupyter/jupyterhub_config.py</span><br><span class="line">sudo sed -i <span class="string">&#x27;s~#c.JupyterHub.config_file.*~c.JupyterHub.config_file=&quot;/jupyter/jupyterhub_config.py&quot;~g&#x27;</span> /jupyter/jupyterhub_config.py</span><br><span class="line">sudo sed -i <span class="string">&#x27;s~#c.JupyterHub.db_url.*~c.JupyterHub.db_url=&quot;sqlite:////jupyter/jupyterhub.sqlite&quot;~g&#x27;</span> /jupyter/jupyterhub_config.py</span><br><span class="line">sudo sed -i <span class="string">&#x27;s~#c.JupyterHub.cookie_secret_file.*~c.JupyterHub.cookie_secret_file=&quot;/jupyter/jupyterhub_cookie_secret&quot;~g&#x27;</span> /jupyter/jupyterhub_config.py</span><br><span class="line">sudo sed -i <span class="string">&#x27;s~#c.Spawner.default_url.*~c.Spawner.default_url = &quot;/lab&quot;~g&#x27;</span> /jupyter/jupyterhub_config.py</span><br><span class="line"></span><br><span class="line">sudo tee /etc/systemd/system/jupyterhub.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Jupyterhub</span><br><span class="line">After=syslog.target network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User=root</span><br><span class="line">Environment=<span class="string">&quot;PATH=/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin&quot;</span></span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/bin/jupyterhub -f /jupyter/jupyterhub_config.py</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> jupyterhub</span><br><span class="line">sudo systemctl start jupyterhub</span><br><span class="line"></span><br><span class="line">sudo setsebool -P httpd_can_network_connect 1</span><br><span class="line">sudo setsebool -P httpd_can_network_relay 1</span><br><span class="line">sudo firewall-cmd --zone=public --permanent --add-service=http</span><br><span class="line">sudo firewall-cmd --zone=public --permanent --add-service=https</span><br><span class="line">sudo firewall-cmd --reload</span><br></pre></td></tr></table></figure>
<p>Remaining setting refer to <a href="https://chingchuan-chen.github.io/posts/201902/2019-02-27-nginx-reverse-proxy-for-rstudio-server-and-jupyterhub-with-ssl.html">Reverse Proxy for JupyterHub and Rstudio Server</a></p>
<p>C. Install R / RStudio Server</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://download2.rstudio.org/server/fedora28/x86_64/rstudio-server-rhel-1.2.5033-x86_64.rpm</span><br><span class="line">sudo yum install rstudio-server-rhel-1.2.5033-x86_64.rpm -y</span><br><span class="line"></span><br><span class="line">sudo yum install epel-release -y</span><br><span class="line">sudo yum config-manager --<span class="built_in">set</span>-enabled PowerTools</span><br><span class="line">sudo yum install gcc-c++ gcc-gfortran openssl-devel libxml2-devel tcl-devel tk-devel libtiff-devel \</span><br><span class="line">  libjpeg-turbo-devel libpng-devel cairo-devel  libicu-devel openssl-devel libcurl-devel freeglut \</span><br><span class="line">  readline-devel cyrus-sasl-devel texinfo texinfo-tex texlive texlive-xetex pango-devel libquadmath-devel \</span><br><span class="line">  pcre-devel libX11-devel libXmu-devel libXt-devel pigz java-1.8.0-openjdk-devel xorg-x11-server-Xvfb -y</span><br><span class="line"></span><br><span class="line">wget https://raw.githubusercontent.com/google/fonts/master/ofl/inconsolata/Inconsolata-Regular.ttf</span><br><span class="line">wget https://raw.githubusercontent.com/google/fonts/master/ofl/inconsolata/Inconsolata-Bold.ttf</span><br><span class="line">sudo mv Inconsolata-Regular.ttf Inconsolata-Bold.ttf /usr/share/fonts</span><br><span class="line">sudo <span class="built_in">fc</span>-cache /usr/share/fonts</span><br><span class="line"></span><br><span class="line">wget -q http://mirrors.ctan.org/install/fonts/inconsolata.tds.zip</span><br><span class="line">mkdir inconsolata</span><br><span class="line">unzip inconsolata.tds.zip -d inconsolata</span><br><span class="line">sudo cp -r inconsolata/* /usr/share/texmf</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;Map zi4.map\n&#x27;</span> | sudo tee -a /usr/share/texlive/texmf-dist/web2c/updmap.cfg</span><br><span class="line">sudo mktexlsr</span><br><span class="line">yes | sudo updmap-sys --<span class="built_in">enable</span> Map=zi4.map --syncwithtrees --force</span><br><span class="line">sudo updmap -sys</span><br><span class="line"></span><br><span class="line">sudo yum install -y yum-utils</span><br><span class="line">sudo yum-config-manager --add-repo https://yum.repos.intel.com/setup/intelproducts.repo</span><br><span class="line">sudo rpm --import https://yum.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB</span><br><span class="line">sudo rm -rf /var/cache/yum/ &amp;&amp; yes | sudo yum makecache</span><br><span class="line"></span><br><span class="line">sudo yum install -y intel-mkl intel-tbb</span><br><span class="line">sudo tee /etc/ld.so.conf.d/intel.conf &lt;&lt; EOF</span><br><span class="line">/opt/intel/mkl/lib/intel64</span><br><span class="line">/opt/intel/lib/intel64</span><br><span class="line">/opt/intel/tbb/lib/intel64/gcc4.8</span><br><span class="line">EOF</span><br><span class="line">sudo ldconfig</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> R_VER=3.6.3</span><br><span class="line">wget https://cran.r-project.org/src/base/R-3/R-<span class="variable">$R_VER</span>.tar.gz</span><br><span class="line">tar zxvf R-<span class="variable">$R_VER</span>.tar.gz</span><br><span class="line"><span class="built_in">cd</span> R-<span class="variable">$R_VER</span></span><br><span class="line"><span class="built_in">export</span> MKLROOT=/opt/intel/compilers_and_libraries/linux</span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=<span class="variable">$&#123;MKLROOT&#125;</span>/mkl/lib/intel64</span><br><span class="line"><span class="built_in">export</span> MKL=<span class="string">&quot;-L<span class="variable">$&#123;MKLROOT&#125;</span>/mkl/lib/intel64 -lmkl_gf_lp64 -lmkl_gnu_thread -lmkl_core -fopenmp -lpthread -ldl -lm&quot;</span></span><br><span class="line"><span class="built_in">export</span> CFLAGS=<span class="string">&quot;-std=gnu99 -g -O3 -march=native -DU_STATIC_IMPLEMENTATION&quot;</span></span><br><span class="line"><span class="built_in">export</span> CXXFLAGS=<span class="string">&quot;-g -O3 -march=native -DU_STATIC_IMPLEMENTATION&quot;</span></span><br><span class="line"><span class="built_in">export</span> CXXSTD=-std=gnu++98</span><br><span class="line">./configure --prefix=/usr --libdir=/usr/lib64 --with-cairo --with-x=no --<span class="built_in">enable</span>-R-shlib --<span class="built_in">enable</span>-shared \</span><br><span class="line">  --<span class="built_in">enable</span>-R-profiling --<span class="built_in">enable</span>-BLAS-shlib --<span class="built_in">enable</span>-memory-profiling --with-blas=<span class="string">&quot;<span class="variable">$MKL</span>&quot;</span> \</span><br><span class="line">  --with-lapack --with-tcl-config=/usr/lib64/tcl8.6/tclConfig.sh \</span><br><span class="line">  --with-tk-config=/usr/lib64/tkConfig.sh --<span class="built_in">enable</span>-prebuilt-html</span><br><span class="line">make -j$(nproc)</span><br><span class="line">sudo make install</span><br><span class="line">sudo groupadd ruser</span><br><span class="line">sudo chown -R root:ruser /usr/lib64/R</span><br><span class="line">sudo chmod -R g+w /usr/lib64/R</span><br><span class="line">sudo usermod -a -G ruser jamal</span><br><span class="line">sudo R CMD javareconf</span><br><span class="line">sudo tee /usr/lib64/R/etc/Rprofile.site &lt;&lt; EOF</span><br><span class="line">options(bitmapType=<span class="string">&#x27;cairo&#x27;</span>)</span><br><span class="line"><span class="built_in">local</span>(&#123;r &lt;- getOption(<span class="string">&quot;repos&quot;</span>)</span><br><span class="line">       r[<span class="string">&quot;CRAN&quot;</span>] &lt;- <span class="string">&quot;https://cran.r-project.org&quot;</span></span><br><span class="line">       options(repos=r)&#125;)</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">sudo chcon -u system_u -r object_r --<span class="built_in">type</span>=bin_t -R /usr/lib/rstudio-server/bin</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> rstudio-server</span><br><span class="line">sudo systemctl start rstudio-server</span><br></pre></td></tr></table></figure>

<p>D. Installation of Docker</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo dnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line">sudo dnf install --nobest docker-ce</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> docker</span><br><span class="line">sudo systemctl start docker</span><br><span class="line"></span><br><span class="line">sudo firewall-cmd --permanent --zone=trusted --change-interface=docker0</span><br><span class="line">sudo firewall-cmd --permanent --zone=trusted --add-port=4243/tcp</span><br><span class="line">sudo firewall-cmd --reload</span><br></pre></td></tr></table></figure>

<p>E. Installation of Intel Parallel Studio</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo rpm --import https://yum.repos.intel.com/2020/setup/RPM-GPG-KEY-intel-psxe-runtime-2020</span><br><span class="line">sudo rpm -Uhv https://yum.repos.intel.com/2020/setup/intel-psxe-runtime-2020-reposetup-1-0.noarch.rpm</span><br><span class="line">sudo yum install intel-psxe-runtime -y</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>CentOS</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>Python</tag>
        <tag>CentOS</tag>
      </tags>
  </entry>
  <entry>
    <title>Setup NFS in CentOS 8</title>
    <url>/posts/201909/2019-09-29-setup-nfs-in-centos-8.html</url>
    <content><![CDATA[<p>Simply record the scripts to setup NFS in CentOS 8.</p>
<a id="more"></a>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum install nfs-utils -y</span><br><span class="line">systemctl <span class="built_in">enable</span> rpcbind</span><br><span class="line">systemctl <span class="built_in">enable</span> nfs-server</span><br><span class="line">systemctl start rpcbind</span><br><span class="line">systemctl start nfs-server</span><br><span class="line"></span><br><span class="line">sudo mkdir /var/nfsshare</span><br><span class="line">tee -a /etc/exports &lt;&lt; EOF</span><br><span class="line">/var/nfsshare 192.168.1.0/24(rw,sync,no_root_squash,no_all_squash)</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">sudo firewall-cmd --zone=public --permanent --add-service=mountd</span><br><span class="line">sudo firewall-cmd --zone=public --permanent --add-service=rpc-bind</span><br><span class="line">sudo firewall-cmd --zone=public --permanent --add-service=nfs</span><br><span class="line">sudo firewall-cmd --reload</span><br><span class="line"></span><br><span class="line">sudo setsebool nfs_export_all_ro on</span><br><span class="line">sudo setsebool nfs_export_all_rw on</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>CentOS</category>
      </categories>
      <tags>
        <tag>CentOS</tag>
        <tag>NFS</tag>
      </tags>
  </entry>
  <entry>
    <title>introduction to dplyr</title>
    <url>/posts/201507/2015-07-03-dplyr.html</url>
    <content><![CDATA[<p>這是我自己在PTT PO的文，詳細介紹dplyr，以下是正文~~</p>
<p>這篇重點放在dplyr</p>
<a id="more"></a>

<p>plyr與dplyr有不少函數是重疊的</p>
<p>不過都會以dplyr為主</p>
<p>plyr跟dplyr有一些名字不同，但功能相似的函數</p>
<p>我會一併介紹</p>
<p>先列一下這章要介紹的函數 (沒標註的就是來自dplyr)</p>
<p>A. 基本整理的函數：arragnge, filter, mutate, select, group_by, summarise, n</p>
<p>B. 增併rownames為變數：add_rownames, plyr:::name_rows</p>
<p>C. list to data.frame：as_data_frame</p>
<p>D. by var 合併函數：join, plyr:::join, data.table:::merge, base:::merge</p>
<p>E. col/row 合併函數：bind_rows, data.table:::rbindlist, bind_cols</p>
<p>F. 取唯一列：distinct, data.table:::unique</p>
<p>G. 列行運算：rowwise, plyr:::colwise</p>
<p>H. 值映射(對應修改)：plyr:::mapvalues, plyr:::revalue</p>
<p>I. 其他函數：summarise_each, mutate_each</p>
<p>J. 特殊函數：plyr:::here</p>
<ol>
<li>基本整理函數</li>
</ol>
<p>arrange: 根據你選定的變數做排列 (可以是多個變數)</p>
<p>filter: 根據你設定的條件做row 篩選(or selection)</p>
<p>mutate: 根據你給定的值賦予新變數，或是變更舊變數</p>
<p>select: 根據給定的變數名稱做選擇，也可以做刪除變數</p>
<p>group_by: 根據給定變數做group，以銜接summarise</p>
<p>summarise: 資料整併</p>
<p>n: 計算資料個數</p>
<p>用一個簡單例子來展示用法：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">  set.seed(<span class="number">100</span>)</span><br><span class="line">  (dt = data.table(V1 = rpois(<span class="number">5</span>, <span class="number">3</span>),</span><br><span class="line">     V2 = sample(c(<span class="string">&quot;g1&quot;</span>, <span class="string">&quot;g2&quot;</span>), <span class="number">5</span>, <span class="number">1</span>), V3 = rnorm(<span class="number">5</span>)))</span><br><span class="line"><span class="comment">#    V1 V2         V3</span></span><br><span class="line"><span class="comment"># 1:  2 g1  0.3186301</span></span><br><span class="line"><span class="comment"># 2:  2 g2 -0.5817907</span></span><br><span class="line"><span class="comment"># 3:  3 g1  0.7145327</span></span><br><span class="line"><span class="comment"># 4:  1 g2 -0.8252594</span></span><br><span class="line"><span class="comment"># 5:  3 g1 -0.3598621</span></span><br><span class="line"></span><br><span class="line">  dt %&gt;% arrange(V1, V2, V3)</span><br><span class="line"><span class="comment">#    V1 V2         V3</span></span><br><span class="line"><span class="comment"># 1:  1 g2 -0.8252594</span></span><br><span class="line"><span class="comment"># 2:  2 g1  0.3186301</span></span><br><span class="line"><span class="comment"># 3:  2 g2 -0.5817907</span></span><br><span class="line"><span class="comment"># 4:  3 g1 -0.3598621</span></span><br><span class="line"><span class="comment"># 5:  3 g1  0.7145327</span></span><br><span class="line"></span><br><span class="line">  dt %&gt;% filter(V1 &lt;= <span class="number">2</span>, V3 &lt; <span class="number">0</span>)</span><br><span class="line"><span class="comment">#    V1 V2         V3</span></span><br><span class="line"><span class="comment"># 1:  2 g2 -0.5817907</span></span><br><span class="line"><span class="comment"># 2:  1 g2 -0.8252594</span></span><br><span class="line"></span><br><span class="line">  dt %&gt;% mutate(V5 = V1 * V3, V6 = substr(V2, <span class="number">2</span>, <span class="number">2</span>),</span><br><span class="line">           V7 = round(V3), V8 = <span class="number">1L</span>, V3 = V3 **<span class="number">2</span>)</span><br><span class="line"><span class="comment">#    V1 V2        V3         V5 V6 V7 V8</span></span><br><span class="line"><span class="comment"># 1:  2 g1 0.1015251  0.6372602  1  0  1</span></span><br><span class="line"><span class="comment"># 2:  2 g2 0.3384804 -1.1635814  2 -1  1</span></span><br><span class="line"><span class="comment"># 3:  3 g1 0.5105570  2.1435981  1  1  1</span></span><br><span class="line"><span class="comment"># 4:  1 g2 0.6810531 -0.8252594  2 -1  1</span></span><br><span class="line"><span class="comment"># 5:  3 g1 0.1295008 -1.0795864  1  0  1</span></span><br><span class="line"></span><br><span class="line">  dt %&gt;% select(V1, V2)</span><br><span class="line"><span class="comment">#    V1 V2</span></span><br><span class="line"><span class="comment"># 1:  2 g1</span></span><br><span class="line"><span class="comment"># 2:  2 g2</span></span><br><span class="line"><span class="comment"># 3:  3 g1</span></span><br><span class="line"><span class="comment"># 4:  1 g2</span></span><br><span class="line"><span class="comment"># 5:  3 g1</span></span><br><span class="line"></span><br><span class="line">  dt %&gt;% group_by(V2) %&gt;% summarise(size_g = n(), m_V3 = mean(V3),</span><br><span class="line">    s_V1 = sum(V1))</span><br><span class="line"><span class="comment">#   V2 size_g       m_V3 s_V1</span></span><br><span class="line"><span class="comment"># 1 g1      3  0.2244336    8</span></span><br><span class="line"><span class="comment"># 2 g2      2 -0.7035251    3</span></span><br></pre></td></tr></table></figure>

<p>上面的例子是一些簡單運用的範例</p>
<p>先介紹一下tbl_df, tbl_dt的class</p>
<p>tbl_df跟tbl_dt只會列出一部分的資料</p>
<p>做操作時比較不會因為太多資料的輸出造成當機</p>
<p>要更改列出的資料量，可以這樣做</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">  set.seed(<span class="number">100</span>)</span><br><span class="line">  (dt = data.table(V1 = rpois(<span class="number">50</span>, <span class="number">3</span>), V2 = sample(c(<span class="string">&quot;g1&quot;</span>, <span class="string">&quot;g2&quot;</span>), <span class="number">50</span>, <span class="number">1</span>),</span><br><span class="line">     V3 = rnorm(<span class="number">50</span>))) %&gt;% tbl_dt(<span class="literal">FALSE</span>)</span><br><span class="line"><span class="comment">#    V1 V2         V3</span></span><br><span class="line"><span class="comment"># 1   2 g1 -0.4470622</span></span><br><span class="line"><span class="comment"># 2   2 g1 -1.7385979</span></span><br><span class="line"><span class="comment"># 3   3 g1  0.1788648</span></span><br><span class="line"><span class="comment"># 4   1 g1  1.8974657</span></span><br><span class="line"><span class="comment"># 5   3 g2 -2.2719255</span></span><br><span class="line"><span class="comment"># 6   3 g1  0.9804641</span></span><br><span class="line"><span class="comment"># 7   4 g1 -1.3988256</span></span><br><span class="line"><span class="comment"># 8   2 g1  1.8248724</span></span><br><span class="line"><span class="comment"># 9   3 g2  1.3812987</span></span><br><span class="line"><span class="comment"># 10  1 g1 -0.8388519</span></span><br><span class="line"><span class="comment"># .. .. ..        ...</span></span><br><span class="line"></span><br><span class="line">  print(dt, n = <span class="number">5</span>)</span><br><span class="line"><span class="comment">#    V1 V2         V3</span></span><br><span class="line"><span class="comment"># 1   2 g1 -0.4470622</span></span><br><span class="line"><span class="comment"># 2   2 g1 -1.7385979</span></span><br><span class="line"><span class="comment"># 3   3 g1  0.1788648</span></span><br><span class="line"><span class="comment"># 4   1 g1  1.8974657</span></span><br><span class="line"><span class="comment"># 5   3 g2 -2.2719255</span></span><br><span class="line"><span class="comment"># .. .. ..        ...</span></span><br></pre></td></tr></table></figure>

<p>再介紹一些這些函數的其他用法</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">  dt = data.table(V1 = rpois(<span class="number">20</span>, <span class="number">3</span>), V2 = sample(c(<span class="string">&quot;g1&quot;</span>, <span class="string">&quot;g2&quot;</span>), <span class="number">20</span>, <span class="number">1</span>),</span><br><span class="line">    V3 = rnorm(<span class="number">20</span>), V4 = rgamma(<span class="number">20</span>, <span class="number">5</span>, <span class="number">3</span>))</span><br><span class="line"><span class="comment"># 你可以直接用一個你想要使用的變數放入，不須先立變數</span></span><br><span class="line">  dt %&gt;% arrange(V1*V3, V3)</span><br><span class="line">  dt %&gt;% filter(abs(V1*V3) &gt; <span class="number">1</span>)</span><br><span class="line"><span class="comment"># desc是dplyr的函數提供反向排列</span></span><br><span class="line">  dt %&gt;% arrange(V1)</span><br><span class="line">  dt %&gt;% arrange(desc(V1))</span><br><span class="line"><span class="comment"># 兩種做變數刪除的方式 (我偏好第二種)</span></span><br><span class="line">  dt %&gt;% mutate(V4 = <span class="literal">NULL</span>)</span><br><span class="line">  dt %&gt;% select(-V4)</span><br><span class="line"><span class="comment"># select 還有提供各種特別函數於select中使用</span></span><br><span class="line">  dt %&gt;% select(starts_with(<span class="string">&quot;V&quot;</span>))</span><br><span class="line">  dt %&gt;% select(ends_with(<span class="string">&quot;1&quot;</span>))</span><br><span class="line">  dt %&gt;% select(contains(<span class="string">&quot;2&quot;</span>))</span><br><span class="line">  dt %&gt;% select(matches(<span class="string">&quot;\\w\\d&quot;</span>))</span><br><span class="line">  dt %&gt;% select(num_range(<span class="string">&quot;V&quot;</span>, <span class="number">1</span>:<span class="number">2</span>))</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>增併rownames為變數</li>
</ol>
<p>如標題所示，直接看範例</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">dat = data.frame(A = <span class="number">1</span>:<span class="number">5</span>, row.names = paste0(<span class="string">&quot;City_&quot;</span>, LETTERS[<span class="number">1</span>:<span class="number">5</span>]))</span><br><span class="line">dat %&gt;% name_rows</span><br><span class="line">dat %&gt;% add_rownames</span><br><span class="line">dat %&gt;% add_rownames(<span class="string">&quot;city&quot;</span>) <span class="comment"># add_rownames可以改成你要的名稱</span></span><br></pre></td></tr></table></figure>
<ol start="3">
<li>list to data.frame</li>
</ol>
<p>as_data_frame提供比as.data.frame有效率的轉換方法</p>
<p>我之前也沒用過，不過看到manual寫到這個函數，就忍不住想分享一下</p>
<p>不過這個函數強迫list的element要有name，使用上要注意一下</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">  <span class="keyword">library</span>(microbenchmark)</span><br><span class="line">  dat_list = lapply(rep(<span class="number">1e6</span>, <span class="number">200</span>), rnorm)</span><br><span class="line">  names(dat_list) &lt;- paste0(<span class="string">&quot;A&quot;</span>, <span class="number">1</span>:<span class="number">200</span>)</span><br><span class="line">  microbenchmark(</span><br><span class="line">    as_data_frame(dat_list),</span><br><span class="line">    as.data.frame(dat_list)</span><br><span class="line">  )</span><br><span class="line"><span class="comment">#Unit: milliseconds</span></span><br><span class="line"><span class="comment">#                    expr      min        lq      mean    median        uq</span></span><br><span class="line"><span class="comment"># as_data_frame(dat_list)  1.22642  1.281156  1.418296  1.311944  1.339027</span></span><br><span class="line"><span class="comment"># as.data.frame(dat_list) 19.83196 20.199147 21.397833 20.350524 21.143335</span></span><br><span class="line"><span class="comment">#                    expr       max neval</span></span><br><span class="line"><span class="comment"># as_data_frame(dat_list)  6.957693   100</span></span><br><span class="line"><span class="comment"># as.data.frame(dat_list) 33.307182   100</span></span><br></pre></td></tr></table></figure>
<p>看起來是沒差很多啦(汗顏，可能資料不夠大</p>
<ol start="4">
<li>by var 合併函數</li>
</ol>
<p>先介紹base的merge，這個函數是用來合併兩個data.frame</p>
<p>除了input的兩個data.frame，還有其他五個input (其他input之後再提)</p>
<p>a. by    - 合併根據的變數<br>b. by.x  - 合併根據的變數 於第一個data.frame的名稱<br>c. by.y  - 合併根據的變數 於第二個data.frame的名稱<br>d. all.x - 是否保留來自第一個data.frame的values<br>e. all.y - 是否保留來自第一個data.frame的values</p>
<p>註：還有一個input是 all 可以一次控制all.x跟all.y</p>
<p>我用簡單的範例去介紹這幾個選項</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 產生資料</span></span><br><span class="line">  set.seed(<span class="number">75</span>)</span><br><span class="line">  (x = data.frame(cat1 = sample(c(<span class="string">&quot;A&quot;</span>, <span class="string">&quot;B&quot;</span>, <span class="literal">NA</span>), <span class="number">5</span>, <span class="number">1</span>),</span><br><span class="line">    cat2 = sample(c(<span class="number">1</span>, <span class="number">2</span>, <span class="literal">NA</span>), <span class="number">5</span>, <span class="number">1</span>), v = rpois(<span class="number">5</span>, <span class="number">3</span>),</span><br><span class="line">    stringsAsFactors = <span class="literal">FALSE</span>))</span><br><span class="line"><span class="comment">#   cat1 cat2 v</span></span><br><span class="line"><span class="comment"># 1    A    1 4</span></span><br><span class="line"><span class="comment"># 2    A    2 3</span></span><br><span class="line"><span class="comment"># 3 &lt;NA&gt;   NA 4</span></span><br><span class="line"><span class="comment"># 4    B   NA 4</span></span><br><span class="line"><span class="comment"># 5    A    1 4</span></span><br><span class="line">  (y = data.frame(cat1 = sample(c(<span class="string">&quot;A&quot;</span>, <span class="string">&quot;B&quot;</span>, <span class="literal">NA</span>), <span class="number">5</span>, <span class="number">1</span>),</span><br><span class="line">    cat2 = sample(c(<span class="number">1</span>, <span class="number">2</span>, <span class="literal">NA</span>), <span class="number">5</span>, <span class="number">1</span>), v = rpois(<span class="number">5</span>, <span class="number">3</span>),</span><br><span class="line">    stringsAsFactors = <span class="literal">FALSE</span>))</span><br><span class="line"><span class="comment">#   cat1 cat2 v</span></span><br><span class="line"><span class="comment"># 1    A    2 1</span></span><br><span class="line"><span class="comment"># 2    A    1 8</span></span><br><span class="line"><span class="comment"># 3 &lt;NA&gt;   NA 2</span></span><br><span class="line"><span class="comment"># 4    B    2 5</span></span><br><span class="line"><span class="comment"># 5 &lt;NA&gt;    1 3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 兩個data.frame的資料都不保留 (預設值)</span></span><br><span class="line">  merge(x, y, by = c(<span class="string">&quot;cat1&quot;</span>,<span class="string">&quot;cat2&quot;</span>), all.x = <span class="literal">FALSE</span>, all.y = <span class="literal">FALSE</span>)</span><br><span class="line"><span class="comment">#   cat1 cat2 v.x v.y</span></span><br><span class="line"><span class="comment"># 1    A    1   4   8</span></span><br><span class="line"><span class="comment"># 2    A    1   4   8</span></span><br><span class="line"><span class="comment"># 3    A    2   3   1</span></span><br><span class="line"><span class="comment"># 4 &lt;NA&gt;   NA   4   2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 保留第一個data.frame的全部資料</span></span><br><span class="line">  merge(x, y, by = c(<span class="string">&quot;cat1&quot;</span>,<span class="string">&quot;cat2&quot;</span>), all.x = <span class="literal">TRUE</span>, all.y = <span class="literal">FALSE</span>)</span><br><span class="line"><span class="comment">#   cat1 cat2 v.x v.y</span></span><br><span class="line"><span class="comment"># 1    A    1   4   8</span></span><br><span class="line"><span class="comment"># 2    A    1   4   8</span></span><br><span class="line"><span class="comment"># 3    A    2   3   1</span></span><br><span class="line"><span class="comment"># 4    B   NA   4  NA</span></span><br><span class="line"><span class="comment"># 5 &lt;NA&gt;   NA   4   2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 保留第二個data.frame的全部資料</span></span><br><span class="line">  merge(x, y, by = c(<span class="string">&quot;cat1&quot;</span>,<span class="string">&quot;cat2&quot;</span>), all.x = <span class="literal">FALSE</span>, all.y = <span class="literal">TRUE</span>)</span><br><span class="line"><span class="comment">#   cat1 cat2 v.x v.y</span></span><br><span class="line"><span class="comment"># 1    A    1   4   8</span></span><br><span class="line"><span class="comment"># 2    A    1   4   8</span></span><br><span class="line"><span class="comment"># 3    A    2   3   1</span></span><br><span class="line"><span class="comment"># 4    B    2  NA   5</span></span><br><span class="line"><span class="comment"># 5 &lt;NA&gt;    1  NA   3</span></span><br><span class="line"><span class="comment"># 6 &lt;NA&gt;   NA   4   2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 保留兩個data.frame全部的資料</span></span><br><span class="line">  merge(x, y, by = c(<span class="string">&quot;cat1&quot;</span>,<span class="string">&quot;cat2&quot;</span>), all.x = <span class="literal">TRUE</span>, all.y = <span class="literal">TRUE</span>)</span><br><span class="line"><span class="comment">#   cat1 cat2 v.x v.y</span></span><br><span class="line"><span class="comment"># 1    A    1   4   8</span></span><br><span class="line"><span class="comment"># 2    A    1   4   8</span></span><br><span class="line"><span class="comment"># 3    A    2   3   1</span></span><br><span class="line"><span class="comment"># 4    B    2  NA   5</span></span><br><span class="line"><span class="comment"># 5    B   NA   4  NA</span></span><br><span class="line"><span class="comment"># 6 &lt;NA&gt;    1  NA   3</span></span><br><span class="line"><span class="comment"># 7 &lt;NA&gt;   NA   4   2</span></span><br></pre></td></tr></table></figure>

<p>all.x跟all.y這四種組合分別對應到dplyr的四種join</p>
<p>a. inner_join  - merge(…, all.x = FALSE, all.y = FALSE)<br>b. left_join   - merge(…, all.x = TRUE , all.y = FALSE)<br>c. right_join  - merge(…, all.x = FASLE, all.y = TRUE)<br>d. full_join   - merge(…, all.x = TRUE , all.y = TRUE)</p>
<p>但是merge跟dplyr的join還是有些微不同</p>
<p>dplyr的join不會去比對by variable都是NA的情況</p>
<p>給一個例子就好</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">  inner_join(x, y, by = c(<span class="string">&quot;cat1&quot;</span>,<span class="string">&quot;cat2&quot;</span>))</span><br><span class="line"><span class="comment">#   cat1 cat2 v.x v.y</span></span><br><span class="line"><span class="comment"># 1    A    1   4   8</span></span><br><span class="line"><span class="comment"># 2    A    2   3   1</span></span><br><span class="line"><span class="comment"># 3 &lt;NA&gt;   NA   4   2</span></span><br><span class="line"><span class="comment"># 4    A    1   4   8</span></span><br></pre></td></tr></table></figure>

<p>PS: If you use dplyr 0.4.1, there is something wrong. You’re gonna find the</p>
<p>output do not contain the line: 3 <NA>   NA   4   2. Please update your dplyr</p>
<p>to 0.4.2 or higher version.</p>
<p>至於plyr:::join就沒有這個問題</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">  join(x, y, by = c(<span class="string">&quot;cat1&quot;</span>,<span class="string">&quot;cat2&quot;</span>), <span class="string">&#x27;inner&#x27;</span>)</span><br><span class="line"><span class="comment">#   cat1 cat2 v v</span></span><br><span class="line"><span class="comment"># 1    A    1 4 8</span></span><br><span class="line"><span class="comment"># 2    A    2 3 1</span></span><br><span class="line"><span class="comment"># 3 &lt;NA&gt;   NA 4 2</span></span><br><span class="line"><span class="comment"># 4    A    1 4 8</span></span><br></pre></td></tr></table></figure>
<p>plyr:::join用法其實大同小異，它是用type去控制join方式</p>
<p>最後是data.table:::merge</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">  setDT(x)</span><br><span class="line">  setDT(y)</span><br><span class="line">  merge(x, y, by = c(<span class="string">&quot;cat1&quot;</span>,<span class="string">&quot;cat2&quot;</span>))</span><br><span class="line"><span class="comment">#    cat1 cat2 v.x v.y</span></span><br><span class="line"><span class="comment"># 1:   NA   NA   4   2</span></span><br><span class="line"><span class="comment"># 2:    A    1   4   8</span></span><br><span class="line"><span class="comment"># 3:    A    1   4   8</span></span><br><span class="line"><span class="comment"># 4:    A    2   3   1</span></span><br></pre></td></tr></table></figure>
<p>其實用法跟merge一模一樣，不贅述</p>
<p>介紹完by, all.x, 跟all.y之後，我們來介紹by.x跟by.y</p>
<p>用一個簡單例子：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">  set.seed(<span class="number">75</span>)</span><br><span class="line">  x = data.frame(cat1 = sample(c(<span class="string">&quot;A&quot;</span>, <span class="string">&quot;B&quot;</span>, <span class="literal">NA</span>), <span class="number">5</span>, <span class="number">1</span>),</span><br><span class="line">    cat2 = sample(c(<span class="number">1</span>, <span class="number">2</span>, <span class="literal">NA</span>), <span class="number">5</span>, <span class="number">1</span>), v = rpois(<span class="number">5</span>, <span class="number">3</span>),</span><br><span class="line">    stringsAsFactors = <span class="literal">FALSE</span>)</span><br><span class="line">  y = data.frame(cat3 = sample(c(<span class="string">&quot;A&quot;</span>, <span class="string">&quot;B&quot;</span>, <span class="literal">NA</span>), <span class="number">5</span>, <span class="number">1</span>),</span><br><span class="line">    cat4 = sample(c(<span class="number">1</span>, <span class="number">2</span>, <span class="literal">NA</span>), <span class="number">5</span>, <span class="number">1</span>), v = rpois(<span class="number">5</span>, <span class="number">3</span>),</span><br><span class="line">    stringsAsFactors = <span class="literal">FALSE</span>)</span><br><span class="line">  merge(x, y, by.x = c(<span class="string">&quot;cat1&quot;</span>,<span class="string">&quot;cat2&quot;</span>), by.y = c(<span class="string">&quot;cat3&quot;</span>,<span class="string">&quot;cat4&quot;</span>))</span><br><span class="line"><span class="comment">#   cat1 cat2 v.x v.y</span></span><br><span class="line"><span class="comment"># 1    A    1   4   8</span></span><br><span class="line"><span class="comment"># 2    A    1   4   8</span></span><br><span class="line"><span class="comment"># 3    A    2   3   1</span></span><br><span class="line"><span class="comment"># 4 &lt;NA&gt;   NA   4   2</span></span><br></pre></td></tr></table></figure>
<p>我想這個例子已經很好說明了by.x跟by.y了</p>
<p>接著是再dplyr怎麼做？</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">  inner_join(x, y, by = c(<span class="string">&quot;cat1&quot;</span> = <span class="string">&quot;cat3&quot;</span>, <span class="string">&quot;cat2&quot;</span> = <span class="string">&quot;cat4&quot;</span>))</span><br><span class="line"><span class="comment">#   cat1 cat2 v.x v.y</span></span><br><span class="line"><span class="comment"># 1    A    1   4   8</span></span><br><span class="line"><span class="comment"># 2    A    2   3   1</span></span><br><span class="line"><span class="comment"># 3    A    1   4   8</span></span><br></pre></td></tr></table></figure>

<p>至於plyr:::join跟data.table:::merge就沒有支援這種功能了</p>
<p>dplyr還提供兩種join: semi_join跟anti_join</p>
<p>簡單說明一下，semi_join就是只保留第一個data.frame變數的inner_join</p>
<p>anti_join則semi_join沒有配對的組合</p>
<p>這兩個有興趣再去玩玩看，這裡就不提供例子了</p>
<p>最後是一個實際問題</p>
<p>我如果要merge超過三個的df怎麼辦？</p>
<p>可以參考一下 #1LaHm_aH (R_Language)</p>
<p>這裡完整介紹一下使用這幾個套件要怎麼解決</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">  DF_list = replicate(<span class="number">5</span>, data.frame(cat1 = sample(c(<span class="string">&quot;A&quot;</span>, <span class="string">&quot;B&quot;</span>), <span class="number">5</span>, <span class="number">1</span>),</span><br><span class="line">      cat2 = sample(c(<span class="number">1</span>, <span class="number">2</span>), <span class="number">5</span>, <span class="number">1</span>), v = rnorm(<span class="number">5</span>)), simplify = <span class="literal">FALSE</span>)</span><br><span class="line"><span class="comment"># 下列兩種會變成橫表，每一個data.frame的v都會保留</span></span><br><span class="line">  Reduce(<span class="keyword">function</span>(x, y) merge(x, y, by = c(<span class="string">&quot;cat1&quot;</span>,<span class="string">&quot;cat2&quot;</span>), all=<span class="literal">TRUE</span>), DF_list)</span><br><span class="line">  Reduce(<span class="keyword">function</span>(x, y) full_join(x, y, by = c(<span class="string">&quot;cat1&quot;</span>,<span class="string">&quot;cat2&quot;</span>)), DF_list)</span><br><span class="line"><span class="comment"># 只保留第一個data.frame的值</span></span><br><span class="line">  join_all(DF_list, by = c(<span class="string">&quot;cat1&quot;</span>,<span class="string">&quot;cat2&quot;</span>), type = <span class="string">&quot;full&quot;</span>)</span><br><span class="line"><span class="comment"># 直表，保留全部的v，等同於全部做rbind</span></span><br><span class="line">  join_all(DF_list, by = c(<span class="string">&quot;cat1&quot;</span>,<span class="string">&quot;cat2&quot;</span>, <span class="string">&quot;v&quot;</span>), type = <span class="string">&quot;full&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>其實這樣每一個方法的結果都會很混亂，非常不建議，除非你知道你目標是什麼</p>
<ol start="5">
<li>col/row 合併函數</li>
</ol>
<p>bind_rows跟rbindlist其實就是在做 do.call(rbind, .)或是 Reduce(rbind, .)</p>
<p>只是這兩個function更加有效率</p>
<p>如果還不懂do.call(rbind, .)跟Reduce(rbind, .)再做什麼</p>
<p>剛好可以利用這個機會去弄懂他們在幹嘛</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">DF_list = replicate(<span class="number">5</span>, data.frame(cat1 = sample(c(<span class="string">&quot;A&quot;</span>, <span class="string">&quot;B&quot;</span>), <span class="number">5</span>, <span class="number">1</span>),</span><br><span class="line">    cat2 = sample(c(<span class="number">1</span>, <span class="number">2</span>), <span class="number">5</span>, <span class="number">1</span>), v = rnorm(<span class="number">5</span>)), simplify = <span class="literal">FALSE</span>)</span><br><span class="line">bind_rows(DF_list)</span><br><span class="line">rbindlist(DF_list)</span><br></pre></td></tr></table></figure>

<p>bind_cols等同於 do.call(cbind, .)</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">DT_list = lapply(<span class="number">1</span>:<span class="number">5</span>, <span class="keyword">function</span>(x) data.table(rnorm(<span class="number">5</span>)) %&gt;%</span><br><span class="line">  setnames(paste0(<span class="string">&quot;V&quot;</span>, x)))</span><br><span class="line">bind_cols(DT_list)</span><br></pre></td></tr></table></figure>

<p>此為下半部部分，下部分要介紹的function如下：</p>
<p>A. 取唯一列：distinct, data.table:::unique</p>
<p>B. 列行運算：rowwise, plyr:::colwise</p>
<p>C. 值映射(對應修改)：plyr:::mapvalues, plyr:::revalue</p>
<p>D. 其他函數：summarise_each, mutate_each</p>
<p>E. 特殊函數：plyr:::here</p>
<p>F. function with underscore suffix</p>
<ol>
<li>取唯一列</li>
</ol>
<p>我在第一章 data.table提過 unique</p>
<p>distinct是一樣的方法</p>
<p>就從data.table:::unique的例子開始</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">  DT = data.table(A = rbinom(<span class="number">5</span>, <span class="number">1</span>, <span class="number">0.5</span>), B = rbinom(<span class="number">5</span>, <span class="number">1</span>, <span class="number">0.5</span>))</span><br><span class="line"><span class="comment">#    A B</span></span><br><span class="line"><span class="comment"># 1: 0 0</span></span><br><span class="line"><span class="comment"># 2: 0 1</span></span><br><span class="line"><span class="comment"># 3: 1 0</span></span><br><span class="line"><span class="comment"># 4: 0 1</span></span><br><span class="line"><span class="comment"># 5: 0 0</span></span><br><span class="line"></span><br><span class="line">  unique(DT)</span><br><span class="line"><span class="comment">#    A B</span></span><br><span class="line"><span class="comment"># 1: 0 0</span></span><br><span class="line"><span class="comment"># 2: 0 1</span></span><br><span class="line"><span class="comment"># 3: 1 0</span></span><br><span class="line"></span><br><span class="line">  distinct(DT)</span><br><span class="line"><span class="comment">#    A B</span></span><br><span class="line"><span class="comment"># 1: 0 0</span></span><br><span class="line"><span class="comment"># 2: 0 1</span></span><br><span class="line"><span class="comment"># 3: 1 0</span></span><br><span class="line"></span><br><span class="line">  unique(DT, by = <span class="string">&quot;A&quot;</span>)</span><br><span class="line"><span class="comment">#    A B</span></span><br><span class="line"><span class="comment"># 1: 0 0</span></span><br><span class="line"><span class="comment"># 2: 1 0</span></span><br><span class="line"></span><br><span class="line">  distinct(DT, A)</span><br><span class="line"><span class="comment">#    A B</span></span><br><span class="line"><span class="comment"># 1: 0 0</span></span><br><span class="line"><span class="comment"># 2: 1 0</span></span><br></pre></td></tr></table></figure>

<p>但是如mutate, filter等函數</p>
<p>distinct也可以給由變數組成的其他條件來做取唯一列的動作</p>
<p>給個簡單例子：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">  distinct(DT, A*B)</span><br><span class="line"><span class="comment">#    A B  A * B</span></span><br><span class="line"><span class="comment"># 1: 0 0      0</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>列行運算</li>
</ol>
<p>mutate提供了列運算的函數 rowwise</p>
<p>雖然沒有apply好寫，不過效率確實好上不少</p>
<p>至少在chain上可以比較輕易地套用了</p>
<p>要介紹rowwise，還需要介紹do這個函數</p>
<p>do提供一些廣泛的運算方式</p>
<p>像是你可以根據不同變數設立模型如範例所示</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">  set.seed(<span class="number">100</span>)</span><br><span class="line">  DF = data.frame(A = sample(<span class="number">1</span>:<span class="number">5</span>, <span class="number">50</span>, <span class="literal">TRUE</span>),</span><br><span class="line">    y = rnorm(<span class="number">50</span>), x = rnorm(<span class="number">50</span>))</span><br><span class="line">  models = DF %&gt;% group_by(A) %&gt;% do(model = lm(y ~ x, data = .))</span><br><span class="line">  models %&gt;% summarise(mse = mean(model$residuals**<span class="number">2</span>))</span><br><span class="line"><span class="comment">#          mse</span></span><br><span class="line"><span class="comment"># 1 0.07560431</span></span><br><span class="line"><span class="comment"># 2 0.03617592</span></span><br><span class="line"><span class="comment"># 3 0.71000090</span></span><br><span class="line"><span class="comment"># 4 0.35385491</span></span><br><span class="line"><span class="comment"># 5 1.39799410</span></span><br><span class="line"></span><br><span class="line">  DT = data.table(A = sample(<span class="number">1</span>:<span class="number">5</span>, <span class="number">50</span>, <span class="literal">TRUE</span>),</span><br><span class="line">    y = rnorm(<span class="number">50</span>), x = rnorm(<span class="number">50</span>))</span><br><span class="line">  models = group_by(DT, A)  %&gt;% do(model = lm(y ~ x, data = .))</span><br><span class="line">  models %&gt;% rowwise %&gt;% summarise(mse = mean(model$residuals**<span class="number">2</span>))</span><br><span class="line"><span class="comment">#         mse</span></span><br><span class="line"><span class="comment"># 1 0.8953635</span></span><br><span class="line"><span class="comment"># 2 0.3954457</span></span><br><span class="line"><span class="comment"># 3 0.1469698</span></span><br><span class="line"><span class="comment"># 4 0.6303710</span></span><br><span class="line"><span class="comment"># 5 0.2966472</span></span><br></pre></td></tr></table></figure>

<p>data.table出來的結果不會自動group_by row</p>
<p>要自己手動加入rowwise，這點需要注意</p>
<p>do應該有更多應用，需要各位好好開發。</p>
<p>再來，給一個rowwise的應用：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">  set.seed(<span class="number">100</span>)</span><br><span class="line">  (DT = data.table(A = rnorm(<span class="number">5</span>), B = rnorm(<span class="number">5</span>), C = rnorm(<span class="number">5</span>)))</span><br><span class="line"><span class="comment">#              A          B           C</span></span><br><span class="line"><span class="comment"># 1: -0.50219235  0.3186301  0.08988614</span></span><br><span class="line"><span class="comment"># 2:  0.13153117 -0.5817907  0.09627446</span></span><br><span class="line"><span class="comment"># 3: -0.07891709  0.7145327 -0.20163395</span></span><br><span class="line"><span class="comment"># 4:  0.88678481 -0.8252594  0.73984050</span></span><br><span class="line"><span class="comment"># 5:  0.11697127 -0.3598621  0.12337950</span></span><br><span class="line"></span><br><span class="line">  DT %&gt;% rowwise %&gt;%</span><br><span class="line">    do(k = c(.$A, .$B, .$C)[between(c(.$A, .$B, .$C), <span class="number">0</span>, <span class="number">1</span>)]) %&gt;%</span><br><span class="line">    summarise(size = length(k), sums = sum(k))</span><br><span class="line"><span class="comment">#   size      sums</span></span><br><span class="line"><span class="comment"># 1    2 0.4085162</span></span><br><span class="line"><span class="comment"># 2    2 0.2278056</span></span><br><span class="line"><span class="comment"># 3    1 0.7145327</span></span><br><span class="line"><span class="comment"># 4    2 1.6266253</span></span><br><span class="line"><span class="comment"># 5    2 0.2403508</span></span><br></pre></td></tr></table></figure>

<p>colwise提供每一行的做一個動作的方法</p>
<p>其實等同於你用sapply做</p>
<p>只是它還可以讓你選擇你要做的column去做</p>
<p>簡單例子如下：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">  set.seed(<span class="number">100</span>)</span><br><span class="line">  (DT = data.table(A = rnorm(<span class="number">5</span>), B = rnorm(<span class="number">5</span>), C = rnorm(<span class="number">5</span>)))</span><br><span class="line"><span class="comment">#              A          B           C</span></span><br><span class="line"><span class="comment"># 1: -0.50219235  0.3186301  0.08988614</span></span><br><span class="line"><span class="comment"># 2:  0.13153117 -0.5817907  0.09627446</span></span><br><span class="line"><span class="comment"># 3: -0.07891709  0.7145327 -0.20163395</span></span><br><span class="line"><span class="comment"># 4:  0.88678481 -0.8252594  0.73984050</span></span><br><span class="line"><span class="comment"># 5:  0.11697127 -0.3598621  0.12337950</span></span><br><span class="line"></span><br><span class="line">  colwise(<span class="keyword">function</span>(x) c(mean(x), sd(x)))(DT)</span><br><span class="line"><span class="comment">#           A         B          C</span></span><br><span class="line"><span class="comment"># 1 0.1600685 0.1890685 -0.6537084</span></span><br><span class="line"><span class="comment"># 2 0.8140039 0.7824803  0.5610936</span></span><br><span class="line"></span><br><span class="line">  colwise(<span class="keyword">function</span>(x) c(mean(x), sd(x)), .cols = .(A, B))(DT)</span><br><span class="line"><span class="comment">#           A         B</span></span><br><span class="line"><span class="comment"># 1 0.1600685 0.1890685</span></span><br><span class="line"><span class="comment"># 2 0.8140039 0.7824803</span></span><br><span class="line"></span><br><span class="line">  f = <span class="keyword">function</span>(x) quantile(x, c(<span class="number">0.05</span>, <span class="number">0.95</span>))</span><br><span class="line">  colwise(f)(DT)</span><br><span class="line"><span class="comment">#            A          B          C</span></span><br><span class="line"><span class="comment"># 1 -0.4175373 -0.7765657 -0.1433299</span></span><br><span class="line"><span class="comment"># 2  0.7357341  0.6353522  0.6165483</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>值映射(對應修改)</li>
</ol>
<p>這一節要介紹兩個很好用的函數 plyr:::mapvalues, plyr:::revalue</p>
<p>這兩個函數再處理資料時一定很常用到</p>
<p>我們再整理資料時，有時候會遇到奇異值</p>
<p>我們要把它改成我們想要的值時</p>
<p>大部分人應該都會遇到這個問題</p>
<p>或是有時候我們需要組別整併時也會遇到</p>
<p>給一個簡單的example</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">DT = data.table(col1 = sample(c(<span class="string">&quot;A&quot;</span>, <span class="string">&quot;B&quot;</span>, <span class="string">&quot;N&quot;</span>), <span class="number">30</span>, <span class="literal">TRUE</span>),</span><br><span class="line">  col2 = sample(c(<span class="string">&quot;A1&quot;</span>, <span class="string">&quot;B3&quot;</span>, <span class="string">&quot;C4&quot;</span>, <span class="string">&quot;U9&quot;</span>, <span class="string">&quot;Z5&quot;</span>), <span class="number">30</span>, <span class="literal">TRUE</span>),</span><br><span class="line">  col3 = sample(-<span class="number">2</span>:<span class="number">2</span>, <span class="number">30</span>, <span class="literal">TRUE</span>))</span><br><span class="line">DT2 = copy(DT)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## example 1 - 當初keyin資料出問題，col1出現了&quot;N&quot;這個值，我們要通通改成NA</span></span><br><span class="line"><span class="comment">## 此處提供數種方法做</span></span><br><span class="line">set(DT, which(DT$col1 == <span class="string">&quot;N&quot;</span>), <span class="string">&quot;col1&quot;</span>, <span class="literal">NA</span>)</span><br><span class="line">DT2 %&gt;% mutate(col1 = ifelse(col1 == <span class="string">&quot;N&quot;</span>, <span class="literal">NA</span>, col1)) <span class="comment"># transform同理</span></span><br><span class="line">DT2 %&gt;% mutate(col1 = revalue(col1, c(N = <span class="literal">NA</span>)))</span><br><span class="line">DT2 %&gt;% mutate(col1 = mapvalues(col1, <span class="string">&quot;N&quot;</span>, <span class="literal">NA</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">## example 2 - 我們想要把col2做調整 A1 改成 B3， U9改成Z5</span></span><br><span class="line"><span class="comment">## 這裡就直接提供用revalue以及mapvalues的方法</span></span><br><span class="line">DT2 %&gt;% mutate(col2 = revalue(col2, c(A1 = <span class="string">&quot;B3&quot;</span>, U9 = <span class="string">&quot;Z5&quot;</span>)))</span><br><span class="line">DT2 %&gt;% mutate(col2 = mapvalues(col2, c(<span class="string">&quot;A1&quot;</span>, <span class="string">&quot;U9&quot;</span>), c(<span class="string">&quot;B3&quot;</span>, <span class="string">&quot;Z5&quot;</span>)))</span><br><span class="line"></span><br><span class="line"><span class="comment">## example 3 - 當初keyin時不小心搞錯col3的-2跟2的正負號，我們要把-2跟2做互換</span></span><br><span class="line">DT2 %&gt;% mutate(col3 = mapvalues(col3, c(-<span class="number">2</span>, <span class="number">2</span>), c(<span class="number">2</span>, -<span class="number">2</span>)))</span><br></pre></td></tr></table></figure>

<p>最後提示幾個重點，</p>
<p>revalue可以用在factor跟character上面，不能用在數值上</p>
<p>mapvalues可以用在integer, double跟character上面，factor要先轉chr</p>
<ol start="4">
<li>其他函數</li>
</ol>
<p>這兩個函數 summarise_each, mutate_each，我自己也很少用</p>
<p>我提供一些例子做操作，先用簡單的例子</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">  DT = data.table(X = rnorm(<span class="number">100</span>), Y = rnorm(<span class="number">100</span>))</span><br><span class="line">  DT %&gt;% summarise_each(funs(c(median(.), mean(.))))</span><br><span class="line"><span class="comment">#              X          Y</span></span><br><span class="line"><span class="comment"># 1: -0.02923809 0.08238550</span></span><br><span class="line"><span class="comment"># 2: -0.09154615 0.05153845</span></span><br><span class="line">  DT = data.table(X = c(<span class="number">3</span>,<span class="number">2</span>), Y = c(<span class="number">1</span>, <span class="number">4</span>))</span><br><span class="line">  DT %&gt;% mutate_each(funs(half = . / <span class="number">2</span>))</span><br><span class="line"><span class="comment">#      X   Y</span></span><br><span class="line"><span class="comment"># 1: 1.5 0.5</span></span><br><span class="line"><span class="comment"># 2: 1.0 2.0</span></span><br></pre></td></tr></table></figure>
<p>這例子只是很簡單的介紹他們的功能</p>
<p>可能需要時間來累積看看是否有什麼好方法去用這兩個函數</p>
<ol start="5">
<li>特殊函數</li>
</ol>
<p>介紹一個我覺得很有趣的函數 here</p>
<p>here可以幫助你再使用sapply系列時</p>
<p>可以使用mutate等</p>
<p>提一個簡單的例子</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">DTs = resplicate(<span class="number">5</span>, data.table(A = rnorm(<span class="number">5</span>)), simplify = <span class="literal">FALSE</span>)</span><br><span class="line">DTs = lapply(DTs, here(mutate), Asq = A**<span class="number">2</span>)</span><br></pre></td></tr></table></figure>

<ol start="6">
<li>function with underscore suffix</li>
</ol>
<p>本章最後一個重點</p>
<p>怎麼使用像是filter_, select_, mutate_, …這些以_結尾的function</p>
<p>這些以_結尾的function提供使用者使用string作為input</p>
<p>中間執行的過程透過 lazyeval 來執行</p>
<p>(其實dplyr大部分函數都透過這個套件)</p>
<p>來看幾個簡單的例子</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">DT = data.table(A = rnorm(<span class="number">5</span>), B = rnorm(<span class="number">5</span>))</span><br><span class="line">DT %&gt;% select_(<span class="string">&quot;A&quot;</span>)</span><br><span class="line">DT %&gt;% select(A)</span><br><span class="line">DT %&gt;% mutate(C = A*B)</span><br><span class="line">(DT2 = DT %&gt;% mutate_(<span class="string">&quot;A*B&quot;</span>) %&gt;% setnames(<span class="string">&quot;A*B&quot;</span>, <span class="string">&quot;C&quot;</span>))</span><br></pre></td></tr></table></figure>

<p>這幾個例子應該可以很簡單的解釋有_的函數要怎麼使用</p>
<p>最後給個.dots的用法，這個代表說你可以製作適當的string放入</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">DT = data.table(x = rnorm(<span class="number">100</span>), y = rnorm(<span class="number">100</span>))</span><br><span class="line">(DT %&lt;&gt;% mutate_(.dots = c(<span class="string">&quot;x^2&quot;</span>, <span class="string">&quot;y^2&quot;</span>)) %&gt;%</span><br><span class="line">  setnames(c(<span class="string">&quot;x^2&quot;</span>, <span class="string">&quot;y^2&quot;</span>), c(<span class="string">&quot;xsq&quot;</span>, <span class="string">&quot;ysq&quot;</span>)))</span><br><span class="line">DT %&gt;% select_(.dots = c(<span class="string">&quot;y&quot;</span>, <span class="string">&quot;xsq&quot;</span>))</span><br></pre></td></tr></table></figure>

<p>再給一個簡單的例子</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">DT = data.table(x1 = rnorm(<span class="number">100</span>), x2 = rnorm(<span class="number">100</span>))</span><br><span class="line">cmds = paste0(<span class="string">&quot;x&quot;</span>, <span class="number">1</span>:<span class="number">2</span>, <span class="string">&quot;^2&quot;</span>)</span><br><span class="line">newnames = c(<span class="string">&quot;xsq&quot;</span>, <span class="string">&quot;ysq&quot;</span>)</span><br><span class="line">DT %&lt;&gt;% mutate_(.dots = cmds) %&gt;% setnames(cmds, newnames))</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>data.table</tag>
        <tag>dplyr</tag>
        <tag>plyr</tag>
        <tag>ptt</tag>
      </tags>
  </entry>
  <entry>
    <title>基於Hadoop的Spark, Phoenix, HBase, Yarn, Zookeeper部署</title>
    <url>/posts/201607/2016-07-23-deployment-spark-phoenix-hbase-yarn-zookeeper-hadoop.html</url>
    <content><![CDATA[<p>之前有一系列文章是在mint 17上部署R-hadoop的環境</p>
<p>這篇主要是在centos 7.2最小安裝下去部署hadoop, yarn, zookeeper, hbase, phoenix以及spark</p>
<p>一樣是透過VM做部署，所以目標是部署好其中一台後</p>
<p>再把那一台的映像檔做clone，變成slaves</p>
<a id="more"></a>

<ol>
<li><p>準備工作</p>
<p> i. 安裝好VMware，然後新增一台VM (網路連接方式使用bridged即可)，引進centos 7.2安裝映像檔</p>
<p> ii. 選擇最小安裝，並新增使用者: tester</p>
<p> iii. 安裝完後要先configure：</p>
</li>
</ol>
<p>a. 給予使用者sudoer權限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">su <span class="comment"># 切換到root</span></span><br><span class="line">visudo <span class="comment"># 打開設定檔</span></span><br><span class="line"><span class="comment"># 打/root\tALL找到這行 root ALL=(ALL) ALL</span></span><br><span class="line"><span class="comment"># 在下面新增 tester ALL=(ALL) ALL</span></span><br></pre></td></tr></table></figure>

<p>b. 網路設定</p>
<p>先查看自己電腦的網段是哪一個(使用撥接就無法，要透過IP分享器)</p>
<p>在cmd上找<code>ipconfig</code>就可以找到，像是我的電腦是192.168.0.111</p>
<p>預設閘道192.168.0.1，沒有設定DNS</p>
<p>接著用<code>ip a</code>看VM網路卡的裝置名稱</p>
<p>我的VM網路卡名稱是eno16777736</p>
<p>然後就使用<code>sudo ifup eno16777736</code>去啟用網路</p>
<p>接著使用<code>sudo vi /etc/sysconfig/network-scripts/ifcfg-eno16777736</code>去修改網路設定</p>
<p>改成下方這樣：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">TYPE=Ethernet</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">NAME=eno16777736</span><br><span class="line">UUID=213f0a79-5d73-45c5-afce-16b48e6c9c65</span><br><span class="line">DEVICE=eno16777736</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPADDR=192.168.0.161</span><br><span class="line">PREFIX=24</span><br><span class="line">GATEWAY=192.168.0.1</span><br><span class="line">DNS1=192.168.0.1</span><br><span class="line">IPV6_PEERDNS=yes</span><br><span class="line">IPV6_PEERROUTES=yes</span><br><span class="line">IPV6_PRIVACY=no</span><br></pre></td></tr></table></figure>

<p>之後使用<code>sudo service network restart</code>重啟網路服務</p>
<p>這樣網路設定就完成了。測試方式為：<code>ping 192.168.0.1</code>(DNS)跟</p>
<p><code>ping www.google.com</code>就可以知道網路有沒有設定成功了。</p>
<p>c. 安裝ssh跟設定ssh資料夾權限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安裝SSH</span></span><br><span class="line">sudo yum -y install rsync openssh-server-*</span><br><span class="line"><span class="comment"># 產生SSH Key</span></span><br><span class="line">ssh-keygen -t rsa -P <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment"># 授權SSH Key</span></span><br><span class="line">cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 設定.ssh的權限</span></span><br><span class="line">sudo chmod 700 /home/tester</span><br><span class="line">sudo chmod 700 /home/tester/.ssh</span><br><span class="line">sudo chmod 644 /home/tester/.ssh/authorized_keys</span><br><span class="line">sudo chmod 600 /home/tester/.ssh/id_rsa</span><br><span class="line">sudo service sshd restart</span><br></pre></td></tr></table></figure>

<p>d. 編輯/etc/hosts</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo tee -a /etc/hosts &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">192.168.0.161 sparkServer0</span><br><span class="line">192.168.0.162 sparkServer1</span><br><span class="line">192.168.0.163 sparkServer2</span><br><span class="line">192.168.0.164 sparkServer3</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<p>e. 編輯/etc/hostname</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vi /etc/hostname</span><br><span class="line"><span class="comment"># 對應的電腦修改成對應的名稱</span></span><br></pre></td></tr></table></figure>

<p>f. 斷掉防火牆</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl stop firewalld</span><br><span class="line">sudo systemctl <span class="built_in">disable</span> firewalld  </span><br></pre></td></tr></table></figure>

<ol start="2">
<li>開始部署<br>i. 關掉ip v6</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo tee -a /etc/sysctl.conf &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">net.ipv6.conf.all.disable_ipv6 = 1</span><br><span class="line">net.ipv6.conf.default.disable_ipv6 = 1</span><br><span class="line">net.ipv6.conf.lo.disable_ipv6 = 1</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<p>ii. 下載檔案並移到適當位置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下載並安裝java</span></span><br><span class="line">curl -v -j -k -L -H <span class="string">&quot;Cookie: oraclelicense=accept-securebackup-cookie&quot;</span> http://download.oracle.com/otn-pub/java/jdk/8u101-b13/jdk-8u101-linux-x64.rpm -o jdk-8u101-linux-x64.rpm</span><br><span class="line">sudo yum install -y jdk-8u101-linux-x64.rpm</span><br><span class="line"><span class="comment"># 下載並部署Hadoop</span></span><br><span class="line">curl -v -j -k -L http://apache.stu.edu.tw/hadoop/common/hadoop-2.6.4/hadoop-2.6.4.tar.gz -o hadoop-2.6.4.tar.gz</span><br><span class="line">tar -zxvf hadoop-2.6.4.tar.gz</span><br><span class="line">sudo mv hadoop-2.6.4 /usr/<span class="built_in">local</span>/hadoop</span><br><span class="line">sudo chown -R tester /usr/<span class="built_in">local</span>/hadoop</span><br><span class="line"><span class="comment"># 下載並部署zookeeper</span></span><br><span class="line">curl -v -j -k -L http://apache.stu.edu.tw/zookeeper/zookeeper-3.4.8/zookeeper-3.4.8.tar.gz -o zookeeper-3.4.8.tar.gz</span><br><span class="line">tar -zxvf zookeeper-3.4.8.tar.gz</span><br><span class="line">sudo mv zookeeper-3.4.8 /usr/<span class="built_in">local</span>/zookeeper</span><br><span class="line">sudo chown -R tester /usr/<span class="built_in">local</span>/zookeeper</span><br><span class="line"><span class="comment"># 下載並部署HBase</span></span><br><span class="line">curl -v -j -k -L http://apache.stu.edu.tw/hbase/0.98.20/hbase-0.98.20-hadoop2-bin.tar.gz -o hbase-0.98.20-hadoop2-bin.tar.gz</span><br><span class="line">tar -zxvf hbase-0.98.20-hadoop2-bin.tar.gz</span><br><span class="line">sudo mv hbase-0.98.20-hadoop2 /usr/<span class="built_in">local</span>/hbase</span><br><span class="line">sudo chown -R tester /usr/<span class="built_in">local</span>/hbase</span><br><span class="line"><span class="comment"># 下載並部署phoenix</span></span><br><span class="line">curl -v -j -k -L  http://apache.stu.edu.tw/phoenix/phoenix-4.7.0-HBase-1.1/bin/phoenix-4.7.0-HBase-1.1-bin.tar.gz -o phoenix-4.7.0-HBase-1.1-bin.tar.gz</span><br><span class="line">tar -zxvf phoenix-4.7.0-HBase-1.1-bin.tar.gz</span><br><span class="line"><span class="comment">## phoenix部署比較不同，後面再處理</span></span><br><span class="line"><span class="comment"># 下載並部署scala</span></span><br><span class="line">curl -v -j -k -L http://downloads.lightbend.com/scala/2.10.6/scala-2.10.6.tgz -o scala-2.10.6.tgz</span><br><span class="line">tar -zxvf scala-2.10.6.tgz</span><br><span class="line">sudo mv scala-2.10.6 /usr/<span class="built_in">local</span>/scala</span><br><span class="line">sudo chown -R tester /usr/<span class="built_in">local</span>/scala</span><br><span class="line"><span class="comment"># 下載並部署spark</span></span><br><span class="line">curl -v -j -k -L   http://apache.stu.edu.tw/spark/spark-1.6.2/spark-1.6.2-bin-hadoop2.6.tgz -o spark-1.6.2-bin-hadoop2.6.tgz</span><br><span class="line">tar -zxvf spark-1.6.2-bin-hadoop2.6.tgz</span><br><span class="line">sudo mv spark-1.6.2-bin-hadoop2.6 /usr/<span class="built_in">local</span>/spark</span><br><span class="line">sudo chown -R tester /usr/<span class="built_in">local</span>/spark</span><br></pre></td></tr></table></figure>

<p>iii. 環境變數設置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo tee -a /etc/bashrc &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line"><span class="comment"># JAVA</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/java/jdk1.8.0_101</span><br><span class="line"><span class="comment"># HADOOP</span></span><br><span class="line"><span class="built_in">export</span> HADOOP_HOME=/usr/<span class="built_in">local</span>/hadoop</span><br><span class="line"><span class="built_in">export</span> HADOOP_COMMON_HOME=<span class="variable">$HADOOP_HOME</span></span><br><span class="line"><span class="built_in">export</span> HADOOP_MAPRED_HOME=<span class="variable">$HADOOP_HOME</span></span><br><span class="line"><span class="built_in">export</span> HADOOP_HDFS_HOME=<span class="variable">$HADOOP_HOME</span></span><br><span class="line"><span class="built_in">export</span> HADOOP_YARN_HOME=<span class="variable">$HADOOP_HOME</span></span><br><span class="line"><span class="built_in">export</span> YARN_HOME=<span class="variable">$HADOOP_HOME</span></span><br><span class="line"><span class="built_in">export</span> HADOOP_CONF_DIR=<span class="variable">$HADOOP_HOME</span>/etc/hadoop</span><br><span class="line"><span class="built_in">export</span> YARN_CONF_DIR=<span class="variable">$HADOOP_HOME</span>/etc/hadoop</span><br><span class="line"><span class="built_in">export</span> HADOOP_COMMON_LIB_NATIVE_DIR=<span class="variable">$HADOOP_HOME</span>/lib/native</span><br><span class="line"><span class="built_in">export</span> HADOOP_OPTS=<span class="string">&quot;<span class="variable">$HADOOP_OPTS</span> -Djava.library.path=<span class="variable">$HADOOP_HOME</span>/lib/native&quot;</span></span><br><span class="line"><span class="built_in">export</span> HADOOP_PREFIX=<span class="variable">$HADOOP_HOME</span></span><br><span class="line"><span class="built_in">export</span> HADOOP_PID_DIR=<span class="variable">$HADOOP_HOME</span>/pids/</span><br><span class="line"><span class="comment"># ZOOKEEPER</span></span><br><span class="line"><span class="built_in">export</span> ZOOKEEPER_HOME=/usr/<span class="built_in">local</span>/zookeeper</span><br><span class="line"><span class="comment"># HBASE</span></span><br><span class="line"><span class="built_in">export</span> HBASE_HOME=/usr/<span class="built_in">local</span>/hbase</span><br><span class="line"><span class="built_in">export</span> HBASE_CLASSPATH=<span class="variable">$HBASE_HOME</span>/conf</span><br><span class="line"><span class="built_in">export</span> HBASE_PID_DIR=<span class="variable">$HBASE_HOME</span>/pids </span><br><span class="line"><span class="built_in">export</span> HBASE_MANAGES_ZK=<span class="literal">false</span></span><br><span class="line"><span class="comment"># PHOENIX</span></span><br><span class="line"><span class="built_in">export</span> PHOENIX_HOME=/usr/<span class="built_in">local</span>/phoenix</span><br><span class="line"><span class="built_in">export</span> PHOENIX_CLASSPATH=<span class="variable">$PHOENIX_HOME</span>/lib</span><br><span class="line"><span class="built_in">export</span> PHOENIX_LIB_DIR=<span class="variable">$PHOENIX_HOME</span>/lib</span><br><span class="line"><span class="comment"># SCALA</span></span><br><span class="line"><span class="built_in">export</span> SCALA_HOME=/usr/<span class="built_in">local</span>/scala</span><br><span class="line"><span class="comment"># SPARK</span></span><br><span class="line"><span class="built_in">export</span> SPARK_HOME=/usr/<span class="built_in">local</span>/spark</span><br><span class="line"><span class="comment"># PATH</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>:<span class="variable">$HADOOP_HOME</span>/bin:<span class="variable">$HADOOP_HOME</span>/sbin:<span class="variable">$ZOOKEEPER_HOME</span>/bin:<span class="variable">$HBASE_HOME</span>/bin:<span class="variable">$SCALA_HOME</span>/bin:<span class="variable">$SPARK_HOME</span>/bin:<span class="variable">$PHOENIX_HOME</span>/bin</span><br><span class="line">EOF</span><br><span class="line"><span class="built_in">source</span> /etc/bashrc</span><br></pre></td></tr></table></figure>

<p>iv. 配置Hadoop</p>
<p>a. core-site.xml<br>用<code>vi $HADOOP_CONF_DIR/core-site.xml</code>編輯，改成下面這樣：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.default.name<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://sparkServer0:9000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.tmp.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>/usr/local/hadoop/tmp<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>b. mapred-site.xml<br>先用<code>cp $HADOOP_CONF_DIR/mapred-site.xml.template $HADOOP_CONF_DIR/mapred-site.xml</code>，然後用<code>vi $HADOOP_CONF_DIR/mapred-site.xml</code>編輯，改成下面這樣：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.framework.name<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>yarn<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>c. hdfs-site.xml<br>用<code>vi $HADOOP_CONF_DIR/hdfs-site.xml</code>編輯，改成下面這樣：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.replication<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>3<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.permissions<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.name.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>file:///usr/local/hadoop/tmp/name<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.data.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>file:///usr/local/hadoop/tmp/data<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.checkpoint.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>file:///usr/local/hadoop/tmp/name/chkpt<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>建立node需要的資料夾：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p <span class="variable">$HADOOP_HOME</span>/tmp</span><br><span class="line">mkdir -p <span class="variable">$HADOOP_HOME</span>/tmp/data</span><br><span class="line">mkdir -p <span class="variable">$HADOOP_HOME</span>/tmp/name</span><br></pre></td></tr></table></figure>

<p>d. yarn-site.xml<br>用<code>vi $HADOOP_CONF_DIR/yarn-site.xml</code>編輯，改成下面這樣：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.hostname<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>sparkServer0<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.aux-services<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>mapreduce_shuffle<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.aux-services.mapreduce.shuffle.class<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>org.apache.hadoop.mapred.ShuffleHandler<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>e. 配置slaves</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 傳入slaves的電腦名稱</span></span><br><span class="line">tee <span class="variable">$HADOOP_CONF_DIR</span>/slaves &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">sparkServer1</span><br><span class="line">sparkServer2</span><br><span class="line">sparkServer3</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<p>ii. 配置Zookeeper<br>先用<code>cp $ZOOKEEPER_HOME/conf/zoo_sample.cfg $ZOOKEEPER_HOME/conf/zoo.cfg</code>，然後用<code>vi $ZOOKEEPER_HOME/conf/zoo.cfg</code>編輯，改成下面這樣：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dataDir=/usr/<span class="built_in">local</span>/zookeeper/data</span><br><span class="line">server.1=sparkServer0:2888:3888</span><br><span class="line">server.1=sparkServer1:2888:3888</span><br><span class="line">server.1=sparkServer2:2888:3888</span><br><span class="line"><span class="comment"># 接著創立需要的資料夾，並新增檔案</span></span><br><span class="line">mkdir <span class="variable">$ZOOKEEPER_HOME</span>/data</span><br><span class="line">tee <span class="variable">$ZOOKEEPER_HOME</span>/data/myid &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">1</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<p>在sparkServer2跟sparkServer3分別設定為2跟3。</p>
<p>iii. 配置HBase<br>用<code>vi $HBASE_HOME/conf/hbase-site.xml</code>編輯，改成下面這樣：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.master<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>sparkServer0:60000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.rootdir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://sparkServer0:9000/hbase<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.cluster.distributed<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.replication<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>3<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.zookeeper.quorum<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>sparkServer0<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.zookeeper.property.clientPort<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>2181<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.zookeeper.property.dataDir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>file:///usr/local/zookeeper/data<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>接著，用<code>cp $HADOOP_CONF_DIR/slaves $HBASE_HOME/conf/regionservers</code>複製hadoop的slaves</p>
<p>iv. 配置phoenix</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 縮短名稱</span></span><br><span class="line">mv phoenix-4.7.0-HBase-1.1-bin phoenix-4.7.0</span><br><span class="line"><span class="comment"># 複製lib檔案到HBase/lib下</span></span><br><span class="line">sudo cp phoenix/phoenix-4.7.0-HBase-1.1-server.jar <span class="variable">$HBASE_HOME</span>/lib</span><br><span class="line"><span class="comment"># 複製hbase設定到phoenix下</span></span><br><span class="line">cp <span class="variable">$HBASE_HOME</span>/conf/hbase-site.xml <span class="variable">$PHOENIX_HOME</span>/bin</span><br><span class="line">cp <span class="variable">$HBASE_HOME</span>/conf/hbase-env.sh <span class="variable">$PHOENIX_HOME</span>/bin</span><br><span class="line"><span class="comment"># 複製lib檔, bin</span></span><br><span class="line">sudo mkdir /usr/<span class="built_in">local</span>/phoenix</span><br><span class="line">sudo chown -R tester <span class="variable">$PHOENIX_HOME</span></span><br><span class="line">mkdir <span class="variable">$PHOENIX_HOME</span>/lib</span><br><span class="line">cp phoenix-4.7.0/phoenix-4.7.0-HBase-1.1-client-spark.jar <span class="variable">$PHOENIX_HOME</span>/lib/phoenix-4.7.0-HBase-1.1-client-spark.jar</span><br><span class="line">cp phoenix-4.7.0/phoenix-4.7.0-HBase-1.1-client.jar <span class="variable">$PHOENIX_HOME</span>/lib/phoenix-4.7.0-HBase-1.1-client.jar</span><br><span class="line">cp -R phoenix-4.7.0/bin <span class="variable">$PHOENIX_HOME</span></span><br><span class="line">cp -R phoenix-4.7.0/examples <span class="variable">$PHOENIX_HOME</span></span><br><span class="line">cp phoenix-4.7.0/LICENSE <span class="variable">$PHOENIX_HOME</span>/LICENSE</span><br><span class="line">chmod +x <span class="variable">$PHOENIX_HOME</span>/bin/*.py</span><br></pre></td></tr></table></figure>

<p>並且在用<code>vi $PHOENIX_HOME/bin/hbase-site.xml</code>加入下面的設定</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.hdfs.impl<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>org.apache.hadoop.hdfs.DistributedFileSystem<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>v. 配置scala and spark</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 複製hadoop的slaves</span></span><br><span class="line">cp <span class="variable">$HADOOP_CONF_DIR</span>/slaves <span class="variable">$SPARK_HOME</span>/conf/slaves</span><br><span class="line"></span><br><span class="line"><span class="comment"># 複製檔案</span></span><br><span class="line">cp <span class="variable">$SPARK_HOME</span>/conf/spark-env.sh.template <span class="variable">$SPARK_HOME</span>/conf/spark-env.sh</span><br><span class="line"><span class="comment"># 傳入設定</span></span><br><span class="line">sudo tee -a <span class="variable">$SPARK_HOME</span>/conf/spark-env.sh &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line"><span class="built_in">export</span> HADOOP_HOME=/usr/<span class="built_in">local</span>/hadoop</span><br><span class="line"><span class="built_in">export</span> HADOOP_CONF_DIR=<span class="variable">$HADOOP_HOME</span>/etc/hadoop</span><br><span class="line">SPARK_MASTER_IP=sparkServer0</span><br><span class="line">SPARK_LOCAL_DIRS=/usr/<span class="built_in">local</span>/spark</span><br><span class="line">SPARK_DRIVER_MEMORY=2G</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<p>vi. slaves的部署</p>
<p>因為是VM，所以剩下的就是把映像檔clone複製成各個nodes，然後針對需要個別配置的地方做配置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 改hostname</span></span><br><span class="line">sudo vi /etc/hostname</span><br><span class="line"><span class="comment"># 改網路設定</span></span><br><span class="line">sudo vi /etc/sysconfig/network-scripts/ifcfg-eno16777736</span><br><span class="line"><span class="comment"># 配置玩各台電腦，並透過`sudo service network restart`重啟網路服務後</span></span><br><span class="line"><span class="comment"># 生成新的SSH key</span></span><br><span class="line">ssh-keygen -t rsa -P <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment"># 在sparkServer0，把他的ssh key傳到各台電腦去</span></span><br><span class="line">tee run.sh &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> hostname <span class="keyword">in</span> `cat <span class="variable">$HADOOP_CONF_DIR</span>/slaves`; <span class="keyword">do</span></span><br><span class="line">  ssh-copy-id -i ~/.ssh/id_rsa.pub <span class="variable">$hostname</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>啟動hadoop server / zookeeper server / hbase server / </li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 執行hadoop的namenode format</span></span><br><span class="line">hdfs namenode -format </span><br><span class="line"><span class="comment"># 啟動hadoop server</span></span><br><span class="line">start-dfs.sh &amp; start-yarn.sh</span><br><span class="line"><span class="comment"># 啟動zookeeper server</span></span><br><span class="line">zkServer.sh start</span><br><span class="line">ssh tester@cassSpark2 <span class="string">&quot;zkServer.sh start&quot;</span></span><br><span class="line">ssh tester@cassSpark3 <span class="string">&quot;zkServer.sh start&quot;</span></span><br><span class="line"><span class="comment"># 啟動hbase server</span></span><br><span class="line">start-hbase.sh</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>測試<br>i. Hadoop MapReduce例子 - pi estimation</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hadoop jar <span class="variable">$HADOOP_HOME</span>/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.6.4.jar pi 10 1000</span><br><span class="line"><span class="comment"># output會像下面這樣</span></span><br><span class="line"><span class="comment"># Job Finished in 2.413 seconds</span></span><br><span class="line"><span class="comment"># Estimated value of Pi is 3.14800000000000000000</span></span><br></pre></td></tr></table></figure>

<p>ii. zookeeper<br>再來是測試看看zookeeper是否有部署成功，先輸入<code>zkCli.sh -server cassSpark1:2181,cassSpark2:2181,cassSpark3:2181</code>可以登錄到zookeeper的server上，如果是正常運作會看到下面的訊息：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[zk: cassSpark1:2181,cassSpark2:2181,cassSpark3:2181(CONNECTED) 0]</span><br></pre></td></tr></table></figure>

<p>此時試著輸入看看<code>create /test01 abcd</code>，然後輸入<code>ls /</code>看看是否會出現<code>[test01, zookeeper]</code></p>
<p>如果是，zookeeper就是設定成功，如果中間有出現任何錯誤，則否</p>
<p>最後用<code>delete /test01</code>做刪除即可，然後用<code>quit</code>離開。</p>
<p>iii. HBase<br>鍵入<code>hbase shell</code>會出現下面的訊息：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SLF4J: Class path contains multiple SLF4J bindings.</span><br><span class="line">SLF4J: Found binding <span class="keyword">in</span> [jar:file:/usr/<span class="built_in">local</span>/hbase/lib/slf4j-log4j12-1.7.5.jar!/org/slf4j/impl/StaticLoggerBinder.class]</span><br><span class="line">SLF4J: Found binding <span class="keyword">in</span> [jar:file:/usr/<span class="built_in">local</span>/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.5.jar!/org/slf4j/impl/StaticLoggerBinder.class]</span><br><span class="line">SLF4J: See http://www.slf4j.org/codes.html<span class="comment">#multiple_bindings for an explanation.</span></span><br><span class="line">SLF4J: Actual binding is of <span class="built_in">type</span> [org.slf4j.impl.Log4jLoggerFactory]</span><br><span class="line">HBase Shell; enter <span class="string">&#x27;help&lt;RETURN&gt;&#x27;</span> <span class="keyword">for</span> list of supported commands.</span><br><span class="line">Type <span class="string">&quot;exit&lt;RETURN&gt;&quot;</span> to leave the HBase Shell</span><br><span class="line">Version 1.1.5, r239b80456118175b340b2e562a5568b5c744252e, Sun May  8 20:29:26 PDT 2016</span><br><span class="line"></span><br><span class="line">hbase(main):001:0&gt;</span><br></pre></td></tr></table></figure>

<p>測試建表、塞資料、擷取資料跟刪除表(#後面是會出現的訊息)：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 建表</span></span><br><span class="line">create <span class="string">&#x27;testData&#x27;</span>,<span class="string">&#x27;cf&#x27;</span>  </span><br><span class="line"><span class="comment"># 0 row(s) in 1.3420 seconds</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># =&gt; Hbase::Table - testData</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 塞資料</span></span><br><span class="line">put <span class="string">&#x27;testData&#x27;</span>,<span class="string">&#x27;row1&#x27;</span>,<span class="string">&#x27;cf:a&#x27;</span>,<span class="string">&#x27;value1&#x27;</span>  </span><br><span class="line"><span class="comment"># 0 row(s) in 0.1170 seconds</span></span><br><span class="line">put <span class="string">&#x27;testData&#x27;</span>,<span class="string">&#x27;row2&#x27;</span>,<span class="string">&#x27;cf:b&#x27;</span>,<span class="string">&#x27;value2&#x27;</span>  </span><br><span class="line"><span class="comment"># 0 row(s) in 0.0130 seconds</span></span><br><span class="line">put <span class="string">&#x27;testData&#x27;</span>,<span class="string">&#x27;row3&#x27;</span>,<span class="string">&#x27;cf:c&#x27;</span>,<span class="string">&#x27;value3&#x27;</span>  </span><br><span class="line"><span class="comment"># 0 row(s) in 0.0240 seconds</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有表</span></span><br><span class="line">list</span><br><span class="line"><span class="comment"># TABLE</span></span><br><span class="line"><span class="comment"># testData</span></span><br><span class="line"><span class="comment"># 1 row(s) in 0.0040 seconds</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># =&gt; [&quot;testData&quot;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出資料</span></span><br><span class="line">scan <span class="string">&#x27;testData&#x27;</span></span><br><span class="line"><span class="comment"># ROW                             COLUMN+CELL</span></span><br><span class="line"><span class="comment">#  row1                           column=cf:a, timestamp=1469372859574, value=value1</span></span><br><span class="line"><span class="comment">#  row2                           column=cf:b, timestamp=1469372859613, value=value2</span></span><br><span class="line"><span class="comment">#  row3                           column=cf:c, timestamp=1469372860195, value=value3</span></span><br><span class="line"><span class="comment"># 3 row(s) in 0.0450 seconds</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 擷取特定資料</span></span><br><span class="line">get <span class="string">&#x27;testData&#x27;</span>,<span class="string">&#x27;row1&#x27;</span>  </span><br><span class="line"><span class="comment"># COLUMN                          CELL</span></span><br><span class="line"><span class="comment">#  cf:a                           timestamp=1469372859574, value=value1</span></span><br><span class="line"><span class="comment"># 1 row(s) in 0.0200 seconds</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 刪除表</span></span><br><span class="line"><span class="comment">## 先無效表</span></span><br><span class="line"><span class="built_in">disable</span> <span class="string">&#x27;testData&#x27;</span></span><br><span class="line"><span class="comment">## 再刪除表</span></span><br><span class="line">drop <span class="string">&#x27;testData&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有表</span></span><br><span class="line">list</span><br><span class="line"><span class="comment"># TABLE</span></span><br><span class="line"><span class="comment"># 0 row(s) in 0.0070 seconds</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># =&gt; []</span></span><br></pre></td></tr></table></figure>

<p>最後可以用<code>exit</code>離開hbase shell。</p>
<p>iv. phoenix</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 創表SQL</span></span><br><span class="line">cat <span class="variable">$PHOENIX_HOME</span>/examples/STOCK_SYMBOL.sql</span><br><span class="line"><span class="comment"># -- creates stock table with single row</span></span><br><span class="line"><span class="comment"># CREATE TABLE IF NOT EXISTS STOCK_SYMBOL (SYMBOL VARCHAR NOT NULL PRIMARY KEY, COMPANY VARCHAR);</span></span><br><span class="line"><span class="comment"># UPSERT INTO STOCK_SYMBOL VALUES (&#x27;CRM&#x27;,&#x27;SalesForce.com&#x27;);</span></span><br><span class="line"><span class="comment"># SELECT * FROM STOCK_SYMBOL;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># create table</span></span><br><span class="line">psql.py sparkServer0:2181 <span class="variable">$PHOENIX_HOME</span>/examples/STOCK_SYMBOL.sql</span><br><span class="line"><span class="comment"># SLF4J: Class path contains multiple SLF4J bindings.</span></span><br><span class="line"><span class="comment"># SLF4J: Found binding in [jar:file:/usr/local/phoenix/lib/phoenix-4.7.0-HBase-1.1-client.jar!/org/slf4j/impl/StaticLoggerBinder.class]</span></span><br><span class="line"><span class="comment"># SLF4J: Found binding in [jar:file:/usr/local/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.5.jar!/org/slf4j/impl/StaticLoggerBinder.class]</span></span><br><span class="line"><span class="comment"># SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.</span></span><br><span class="line"><span class="comment"># 16/07/24 23:25:53 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable</span></span><br><span class="line"><span class="comment"># no rows upserted</span></span><br><span class="line"><span class="comment"># Time: 1.246 sec(s)</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># 1 row upserted</span></span><br><span class="line"><span class="comment"># Time: 0.102 sec(s)</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># SYMBOL                                   COMPANY</span></span><br><span class="line"><span class="comment"># ---------------------------------------- ----------------------------------------</span></span><br><span class="line"><span class="comment"># CRM                                      SalesForce.com</span></span><br><span class="line"><span class="comment"># Time: 0.028 sec(s)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 要插入的資料</span></span><br><span class="line">cat <span class="variable">$PHOENIX_HOME</span>/examples/STOCK_SYMBOL.csv</span><br><span class="line"><span class="comment"># AAPL,APPLE Inc.</span></span><br><span class="line"><span class="comment"># CRM,SALESFORCE</span></span><br><span class="line"><span class="comment"># GOOG,Google</span></span><br><span class="line"><span class="comment"># HOG,Harlet-Davidson Inc.</span></span><br><span class="line"><span class="comment"># HPQ,Hewlett Packard</span></span><br><span class="line"><span class="comment"># INTC,Intel</span></span><br><span class="line"><span class="comment"># MSFT,Microsoft</span></span><br><span class="line"><span class="comment"># WAG,Walgreens</span></span><br><span class="line"><span class="comment"># WMT,Walmart</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># insert data</span></span><br><span class="line">psql.py -t STOCK_SYMBOL sparkServer0:2181 <span class="variable">$PHOENIX_HOME</span>/examples/STOCK_SYMBOL.csv</span><br><span class="line"><span class="comment"># SLF4J: Class path contains multiple SLF4J bindings.</span></span><br><span class="line"><span class="comment"># SLF4J: Found binding in [jar:file:/usr/local/phoenix/lib/phoenix-4.7.0-HBase-1.1-client.jar!/org/slf4j/impl/StaticLoggerBinder.class]</span></span><br><span class="line"><span class="comment"># SLF4J: Found binding in [jar:file:/usr/local/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.5.jar!/org/slf4j/impl/StaticLoggerBinder.class]</span></span><br><span class="line"><span class="comment"># SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.</span></span><br><span class="line"><span class="comment"># 16/07/24 23:32:14 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable</span></span><br><span class="line"><span class="comment"># csv columns from database.</span></span><br><span class="line"><span class="comment"># CSV Upsert complete. 9 rows upserted</span></span><br><span class="line"><span class="comment"># Time: 0.074 sec(s)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查詢資料</span></span><br><span class="line">sqlline.py sparkServer0:2181</span><br><span class="line"><span class="comment"># Setting property: [incremental, false]</span></span><br><span class="line"><span class="comment"># Setting property: [isolation, TRANSACTION_READ_COMMITTED]</span></span><br><span class="line"><span class="comment"># issuing: !connect jdbc:phoenix:sparkServer0:2181 none none org.apache.phoenix.jdbc.PhoenixDriver</span></span><br><span class="line"><span class="comment"># Connecting to jdbc:phoenix:sparkServer0:2181</span></span><br><span class="line"><span class="comment"># SLF4J: Class path contains multiple SLF4J bindings.</span></span><br><span class="line"><span class="comment"># SLF4J: Found binding in [jar:file:/usr/local/phoenix/lib/phoenix-4.7.0-HBase-1.1-client.jar!/org/slf4j/impl/StaticLoggerBinder.class]</span></span><br><span class="line"><span class="comment"># SLF4J: Found binding in [jar:file:/usr/local/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.5.jar!/org/slf4j/impl/StaticLoggerBinder.class]</span></span><br><span class="line"><span class="comment"># SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.</span></span><br><span class="line"><span class="comment"># 16/07/24 23:34:17 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable</span></span><br><span class="line"><span class="comment"># Connected to: Phoenix (version 4.7)</span></span><br><span class="line"><span class="comment"># Driver: PhoenixEmbeddedDriver (version 4.7)</span></span><br><span class="line"><span class="comment"># Autocommit status: true</span></span><br><span class="line"><span class="comment"># Transaction isolation: TRANSACTION_READ_COMMITTED</span></span><br><span class="line"><span class="comment"># Building list of tables and columns for tab-completion (set fastconnect to true to skip)...</span></span><br><span class="line"><span class="comment"># 85/85 (100%) Done</span></span><br><span class="line"><span class="comment"># Done</span></span><br><span class="line"><span class="comment"># sqlline version 1.1.8</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### 計算COUNT</span></span><br><span class="line"><span class="comment"># 0: jdbc:phoenix:sparkServer0:2181&gt; select count(*) from STOCK_SYMBOL;</span></span><br><span class="line"><span class="comment">## +-----------+</span></span><br><span class="line"><span class="comment">## | COUNT(1)  |</span></span><br><span class="line"><span class="comment">## +-----------+</span></span><br><span class="line"><span class="comment">## | 9         |</span></span><br><span class="line"><span class="comment">## +-----------+</span></span><br><span class="line"><span class="comment">## 1 row selected (0.046 seconds)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### 拉出表</span></span><br><span class="line"><span class="comment"># 0: jdbc:phoenix:sparkServer0:2181&gt; select * from STOCK_SYMBOL;</span></span><br><span class="line"><span class="comment">## +---------+-----------------------+</span></span><br><span class="line"><span class="comment">## | SYMBOL  |        COMPANY        |</span></span><br><span class="line"><span class="comment">## +---------+-----------------------+</span></span><br><span class="line"><span class="comment">## | AAPL    | APPLE Inc.            |</span></span><br><span class="line"><span class="comment">## | CRM     | SALESFORCE            |</span></span><br><span class="line"><span class="comment">## | GOOG    | Google                |</span></span><br><span class="line"><span class="comment">## | HOG     | Harlet-Davidson Inc.  |</span></span><br><span class="line"><span class="comment">## | HPQ     | Hewlett Packard       |</span></span><br><span class="line"><span class="comment">## | INTC    | Intel                 |</span></span><br><span class="line"><span class="comment">## | MSFT    | Microsoft             |</span></span><br><span class="line"><span class="comment">## | WAG     | Walgreens             |</span></span><br><span class="line"><span class="comment">## | WMT     | Walmart               |</span></span><br><span class="line"><span class="comment">## +---------+-----------------------+</span></span><br><span class="line"><span class="comment">## 9 rows selected (0.03 seconds)</span></span><br></pre></td></tr></table></figure>

<p>離開請按<code>CTRL+Z</code>或是用<code>!quit</code>，輸入<code>exit()</code>是沒用的。接下來，我們試試看在<code>hbase</code>裡面看不看的到我們剛剛插入的表，打<code>hbase shell</code>進入，然後開始測試：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># scan看看就可以發現表已經存進來了</span></span><br><span class="line"><span class="comment"># hbase(main):001:0&gt; scan &#x27;STOCK_SYMBOL&#x27;</span></span><br><span class="line"><span class="comment">## ROW                             COLUMN+CELL</span></span><br><span class="line"><span class="comment">##  AAPL                           column=0:COMPANY, timestamp=1469374336318, value=APPLE Inc.</span></span><br><span class="line"><span class="comment">##  AAPL                           column=0:_0, timestamp=1469374336318, value=x</span></span><br><span class="line"><span class="comment">##  CRM                            column=0:COMPANY, timestamp=1469374336318, value=SALESFORCE</span></span><br><span class="line"><span class="comment">##  CRM                            column=0:_0, timestamp=1469374336318, value=x</span></span><br><span class="line"><span class="comment">##  GOOG                           column=0:COMPANY, timestamp=1469374336318, value=Google</span></span><br><span class="line"><span class="comment">##  GOOG                           column=0:_0, timestamp=1469374336318, value=x</span></span><br><span class="line"><span class="comment">##  HOG                            column=0:COMPANY, timestamp=1469374336318, value=Harlet-Davidson Inc.</span></span><br><span class="line"><span class="comment">##  HOG                            column=0:_0, timestamp=1469374336318, value=x</span></span><br><span class="line"><span class="comment">##  HPQ                            column=0:COMPANY, timestamp=1469374336318, value=Hewlett Packard</span></span><br><span class="line"><span class="comment">##  HPQ                            column=0:_0, timestamp=1469374336318, value=x</span></span><br><span class="line"><span class="comment">##  INTC                           column=0:COMPANY, timestamp=1469374336318, value=Intel</span></span><br><span class="line"><span class="comment">##  INTC                           column=0:_0, timestamp=1469374336318, value=x</span></span><br><span class="line"><span class="comment">##  MSFT                           column=0:COMPANY, timestamp=1469374336318, value=Microsoft</span></span><br><span class="line"><span class="comment">##  MSFT                           column=0:_0, timestamp=1469374336318, value=x</span></span><br><span class="line"><span class="comment">##  WAG                            column=0:COMPANY, timestamp=1469374336318, value=Walgreens</span></span><br><span class="line"><span class="comment">##  WAG                            column=0:_0, timestamp=1469374336318, value=x</span></span><br><span class="line"><span class="comment">##  WMT                            column=0:COMPANY, timestamp=1469374336318, value=Walmart</span></span><br><span class="line"><span class="comment">##  WMT                            column=0:_0, timestamp=1469374336318, value=x</span></span><br><span class="line"><span class="comment">## 9 row(s) in 0.1840 seconds</span></span><br></pre></td></tr></table></figure>

<p>最後是進去<code>sqlline.py</code>去刪掉剛剛建立的表：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlline.py sparkServer0:2181</span><br><span class="line"><span class="comment"># 0: jdbc:phoenix:sparkServer0:2181&gt; DROP TABLE STOCK_SYMBOL;</span></span><br><span class="line"><span class="comment">## No rows affected (3.556 seconds)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出現有的表</span></span><br><span class="line"><span class="comment"># 0: jdbc:phoenix:sparkServer0:2181&gt; !tables </span></span><br><span class="line"><span class="comment">## +------------+--------------+-------------+---------------+----------+------------+----------------------------+----------+</span></span><br><span class="line"><span class="comment">## | TABLE_CAT  | TABLE_SCHEM  | TABLE_NAME  |  TABLE_TYPE   | REMARKS  | TYPE_NAME  | SELF_REFERENCING_COL_NAME  | REF_GENE |</span></span><br><span class="line"><span class="comment">## +------------+--------------+-------------+---------------+----------+------------+----------------------------+----------+</span></span><br><span class="line"><span class="comment">## |            | SYSTEM       | CATALOG     | SYSTEM TABLE  |          |            |                            |          |</span></span><br><span class="line"><span class="comment">## |            | SYSTEM       | FUNCTION    | SYSTEM TABLE  |          |            |                            |          |</span></span><br><span class="line"><span class="comment">## |            | SYSTEM       | SEQUENCE    | SYSTEM TABLE  |          |            |                            |          |</span></span><br><span class="line"><span class="comment">## |            | SYSTEM       | STATS       | SYSTEM TABLE  |          |            |                            |          |</span></span><br><span class="line"><span class="comment">## +------------+--------------+-------------+---------------+----------+------------+----------------------------+----------+</span></span><br></pre></td></tr></table></figure>

<p>v. spark<br>利用spark提供的例子去測試看看 (記得要先開啟hadoop)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">spark-submit --class org.apache.spark.examples.SparkPi \</span><br><span class="line">  --deploy-mode cluster  \</span><br><span class="line">  --master yarn  \</span><br><span class="line">  --num-executors 3 \</span><br><span class="line">  --driver-memory 4g \</span><br><span class="line">  --executor-memory 2g \</span><br><span class="line">  --executor-cores 2 \</span><br><span class="line">   /usr/<span class="built_in">local</span>/spark/lib/spark-examples-1.6.2-hadoop2.6.0.jar</span><br></pre></td></tr></table></figure>

<p>最後就可以看到任務成功，如圖所示：<br><img src="/images/sparkSucceeded_1.PNG"></p>
<p>用上面的連結就可以看到任務的成功情況：<br><img src="/images/sparkSucceeded_2.PNG"></p>
<ol start="5">
<li><p>Reference</p>
<ol>
<li><p>vm:</p>
<ol>
<li><a href="https://dotblogs.com.tw/jhsiao/2013/09/26/120726">https://dotblogs.com.tw/jhsiao/2013/09/26/120726</a></li>
<li><a href="https://read01.com/DQO2jg.html">https://read01.com/DQO2jg.html</a></li>
<li><a href="https://read01.com/KEQ6GP.html">https://read01.com/KEQ6GP.html</a></li>
</ol>
</li>
<li><p>centos:</p>
<ol>
<li><a href="https://www.howtoforge.com/creating_a_local_yum_repository_centos">https://www.howtoforge.com/creating_a_local_yum_repository_centos</a></li>
<li><a href="http://www.serverlab.ca/tutorials/linux/network-services/creating-a-yum-repository-server-for-red-hat-and-centos/">http://www.serverlab.ca/tutorials/linux/network-services/creating-a-yum-repository-server-for-red-hat-and-centos/</a></li>
<li><a href="http://ask.xmodulo.com/change-network-interface-name-centos7.html">http://ask.xmodulo.com/change-network-interface-name-centos7.html</a></li>
<li><a href="http://yenpai.idis.com.tw/archives/240-%E6%95%99%E5%AD%B8-centos-6-3-%E5%AE%89%E8%A3%9D-2%E7%B6%B2%E8%B7%AF%E8%A8%AD%E5%AE%9A%E7%AF%87?doing_wp_cron=1468854397.3452270030975341796875">http://yenpai.idis.com.tw/archives/240-%E6%95%99%E5%AD%B8-centos-6-3-%E5%AE%89%E8%A3%9D-2%E7%B6%B2%E8%B7%AF%E8%A8%AD%E5%AE%9A%E7%AF%87?doing_wp_cron=1468854397.3452270030975341796875</a></li>
</ol>
</li>
<li><p>hadoop, hbase, zookeeper:</p>
<ol>
<li><a href="http://tsai-cookie.blogspot.tw/2015/09/hadoop-hbase-hive.html">http://tsai-cookie.blogspot.tw/2015/09/hadoop-hbase-hive.html</a></li>
<li><a href="http://lyhpcha.pixnet.net/blog/post/60903916-hadoop%E3%80%81zookeeper%E3%80%81hbase%E5%AE%89%E8%A3%9D%E9%85%8D%E7%BD%AE%E8%AA%AA%E6%98%8E">http://lyhpcha.pixnet.net/blog/post/60903916-hadoop%E3%80%81zookeeper%E3%80%81hbase%E5%AE%89%E8%A3%9D%E9%85%8D%E7%BD%AE%E8%AA%AA%E6%98%8E</a></li>
<li><a href="http://blog.csdn.net/smile0198/article/details/17660205">http://blog.csdn.net/smile0198/article/details/17660205</a></li>
</ol>
</li>
<li><p>phoenix:</p>
<ol>
<li><a href="http://www.aboutyun.com/thread-12403-1-1.html">http://www.aboutyun.com/thread-12403-1-1.html</a></li>
<li><a href="http://www.zhangshuai.top/2015/09/01/phoenix%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3/">http://www.zhangshuai.top/2015/09/01/phoenix%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3/</a></li>
<li><a href="http://toutiao.com/i6222878197948613122/">http://toutiao.com/i6222878197948613122/</a></li>
<li><a href="https://phoenix.apache.org/faq.html">https://phoenix.apache.org/faq.html</a></li>
<li><a href="http://ju.outofmemory.cn/entry/237491">http://ju.outofmemory.cn/entry/237491</a></li>
</ol>
</li>
</ol>
</li>
</ol>
]]></content>
      <categories>
        <category>BigData</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>Hadoop</tag>
        <tag>HBase</tag>
        <tag>CentOS</tag>
        <tag>Spark</tag>
        <tag>Phoenix</tag>
        <tag>Yarn</tag>
        <tag>Zookeeper</tag>
      </tags>
  </entry>
  <entry>
    <title>重返Hadoop Architecture (設定HA群集)</title>
    <url>/posts/201609/2016-09-19-return-hadoop-architecture.html</url>
    <content><![CDATA[<p>用完Cassandra的primary key跟secondary index之後</p>
<p>覺得Cassandra適合表格有固定query pattern做使用才方便</p>
<p>primary key中的partition key在query時都要用到</p>
<p>clustering key要照順序使用，secondary index不能做複合查詢</p>
<p>更不用提ALLOW FILTERING的功能帶來的崩潰效能</p>
<a id="more"></a>

<p>我的用途真的很難用Cassandra去滿足，也不願意透過Spark SQL去使用</p>
<p>(畢竟Spark SQL要吃的資源也不少)</p>
<p>因此，我就survey了SQL on Hadoop的solutions…</p>
<p>而這一篇會先forcus在Hadoop的群集建立</p>
<p>SQL on Hadoop將會在下一篇介紹</p>
<p>這一篇會非常的長，因為Hadoop之前沒有完全的建好 (讓它能夠開機自動啟動，並且有HA的能力)</p>
<p>這一篇斷斷續續寫了三週，一直提不太起勁一口氣完成他</p>
<p>廢話不多說，下面是本文</p>
<p>配置架構：</p>
<ol>
<li>Hadoop的HA只有兩台電腦、YARN也是同理，並且配置hdfs HA的電腦要啟動zkfc的服務</li>
<li>每一台都要配置Journal node去讓資料同步、並且在Hadoop Master當機時能夠做自動切換</li>
<li>Zookeeper要設定成奇數台</li>
</ol>
<p>重新佈署：</p>
<ol start="0">
<li>部署之前的環境設定</li>
</ol>
<p>ssh部分要實現全部都能互相連接，不能只有master能夠連到slaves</p>
<p>因此，這裡給一個簡單的script去做key的傳遞</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 每一台都執行完下面兩個指令後</span></span><br><span class="line">ssh-keygen -t rsa -P <span class="string">&quot;&quot;</span></span><br><span class="line">cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</span><br><span class="line"><span class="comment"># 在master上跑</span></span><br><span class="line"></span><br><span class="line">tee ~/all_hosts &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">cassSpark1</span><br><span class="line">cassSpark2</span><br><span class="line">cassSpark3</span><br><span class="line">EOF</span><br><span class="line">scp ~/all_hosts tester@cassSpark2:~/</span><br><span class="line">scp ~/all_hosts tester@cassSpark2:~/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 然後在每一台都跑下面這個指令(要打很多次密碼)</span></span><br><span class="line"><span class="keyword">for</span> hostname <span class="keyword">in</span> `cat all_hosts`; <span class="keyword">do</span></span><br><span class="line">  ssh-copy-id -i ~/.ssh/id_rsa.pub <span class="variable">$hostname</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<ol>
<li>下載檔案</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 建立放置資料夾</span></span><br><span class="line">sudo mkdir /usr/<span class="built_in">local</span>/bigdata</span><br><span class="line">sudo chown -R tester /usr/<span class="built_in">local</span>/bigdata</span><br><span class="line"><span class="comment"># 下載並安裝java</span></span><br><span class="line">curl -v -j -k -L -H <span class="string">&quot;Cookie: oraclelicense=accept-securebackup-cookie&quot;</span> http://download.oracle.com/otn-pub/java/jdk/8u101-b13/jdk-8u101-linux-x64.rpm -o jdk-8u101-linux-x64.rpm</span><br><span class="line">sudo yum install -y jdk-8u101-linux-x64.rpm</span><br><span class="line"><span class="comment"># 下載並部署Hadoop</span></span><br><span class="line">curl -v -j -k -L http://apache.stu.edu.tw/hadoop/common/hadoop-2.7.3/hadoop-2.7.3.tar.gz -o hadoop-2.7.3.tar.gz</span><br><span class="line">tar -zxvf hadoop-2.7.3.tar.gz</span><br><span class="line">mv hadoop-2.7.3 /usr/<span class="built_in">local</span>/bigdata/hadoop</span><br><span class="line"><span class="comment"># 下載並部署zookeeper</span></span><br><span class="line">curl -v -j -k -L http://apache.stu.edu.tw/zookeeper/zookeeper-3.4.8/zookeeper-3.4.8.tar.gz -o zookeeper-3.4.8.tar.gz</span><br><span class="line">tar -zxvf zookeeper-3.4.8.tar.gz</span><br><span class="line">mv zookeeper-3.4.8 /usr/<span class="built_in">local</span>/bigdata/zookeeper</span><br><span class="line"><span class="comment"># 下載並部署HBase</span></span><br><span class="line">curl -v -j -k -L http://apache.stu.edu.tw/hbase/stable/hbase-1.2.2-bin.tar.gz -o hbase-1.2.2-bin.tar.gz</span><br><span class="line">tar -zxvf hbase-1.2.2-bin.tar.gz</span><br><span class="line">mv hbase-1.2.2 /usr/<span class="built_in">local</span>/bigdata/hbase</span><br><span class="line"><span class="comment"># 下載並部署mesos</span></span><br><span class="line">curl -v -j -k -L http://repos.mesosphere.com/el/7/x86_64/RPMS/mesos-1.0.0-2.0.89.centos701406.x86_64.rpm -o mesos-1.0.0-2.0.89.centos701406.x86_64.rpm</span><br><span class="line">sudo yum install mesos-1.0.0-2.0.89.centos701406.x86_64.rpm</span><br><span class="line"><span class="comment"># 下載並部署scala</span></span><br><span class="line">curl -v -j -k -L http://downloads.lightbend.com/scala/2.11.8/scala-2.11.8.tgz -o scala-2.11.8.tgz</span><br><span class="line">tar -zxvf scala-2.11.8.tgz</span><br><span class="line">mv scala-2.11.8 /usr/<span class="built_in">local</span>/bigdata/scala</span><br><span class="line"><span class="comment"># 下載並部署spark</span></span><br><span class="line">curl -v -j -k -L http://apache.stu.edu.tw/spark/spark-2.0.0/spark-2.0.0-bin-hadoop2.7.tgz -o spark-2.0.0-bin-hadoop2.7.tgz</span><br><span class="line">tar -zxvf spark-2.0.0-bin-hadoop2.7.tgz</span><br><span class="line">mv spark-2.0.0-bin-hadoop2.7 /usr/<span class="built_in">local</span>/bigdata/spark</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>環境變數設置：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo tee -a /etc/bashrc &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line"><span class="comment"># JAVA</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/java/jdk1.8.0_101</span><br><span class="line"><span class="comment"># HADOOP</span></span><br><span class="line"><span class="built_in">export</span> HADOOP_HOME=/usr/<span class="built_in">local</span>/bigdata/hadoop</span><br><span class="line"><span class="built_in">export</span> HADOOP_COMMON_HOME=<span class="variable">$HADOOP_HOME</span></span><br><span class="line"><span class="built_in">export</span> HADOOP_CONF_DIR=<span class="variable">$HADOOP_HOME</span>/etc/hadoop</span><br><span class="line"><span class="built_in">export</span> HADOOP_COMMON_LIB_NATIVE_DIR=<span class="variable">$HADOOP_HOME</span>/lib/native</span><br><span class="line"><span class="built_in">export</span> HADOOP_OPTS=<span class="string">&quot;<span class="variable">$HADOOP_OPTS</span> -Djava.library.path=<span class="variable">$HADOOP_HOME</span>/lib/native&quot;</span></span><br><span class="line"><span class="comment"># ZOOKEEPER</span></span><br><span class="line"><span class="built_in">export</span> ZOOKEEPER_HOME=/usr/<span class="built_in">local</span>/bigdata/zookeeper</span><br><span class="line"><span class="comment"># HBASE</span></span><br><span class="line"><span class="built_in">export</span> HBASE_HOME=/usr/<span class="built_in">local</span>/bigdata/hbase</span><br><span class="line"><span class="built_in">export</span> HBASE_MANAGES_ZK=<span class="literal">false</span></span><br><span class="line"><span class="built_in">export</span> HBASE_CLASSPATH=<span class="variable">$HBASE_CLASSPATH</span>:<span class="variable">$HADOOP_CONF_DIR</span></span><br><span class="line"><span class="built_in">export</span> HBASE_CONF_DIR=<span class="variable">$HBASE_HOME</span>/conf</span><br><span class="line"><span class="comment"># SCALA</span></span><br><span class="line"><span class="built_in">export</span> SCALA_HOME=/usr/<span class="built_in">local</span>/bigdata/scala</span><br><span class="line"><span class="comment"># SPARK</span></span><br><span class="line"><span class="built_in">export</span> SPARK_HOME=/usr/<span class="built_in">local</span>/bigdata/spark</span><br><span class="line"><span class="comment"># PATH</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>:<span class="variable">$ZOOKEEPER_HOME</span>/bin:<span class="variable">$HADOOP_HOME</span>/bin:<span class="variable">$HBASE_HOME</span>/bin:<span class="variable">$SCALA_HOME</span>/bin:<span class="variable">$SPARK_HOME</span>/bin</span><br><span class="line">EOF</span><br><span class="line"><span class="built_in">source</span> /etc/bashrc</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>開始設定</li>
</ol>
<p>a. Zookeeper, Mesos設定</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">## Zookeeper</span></span><br><span class="line"><span class="comment"># 複製zoo.cfg</span></span><br><span class="line">cp <span class="variable">$ZOOKEEPER_HOME</span>/conf/zoo_sample.cfg <span class="variable">$ZOOKEEPER_HOME</span>/conf/zoo.cfg</span><br><span class="line"><span class="comment"># 傳入設定</span></span><br><span class="line">tee <span class="variable">$ZOOKEEPER_HOME</span>/conf/zoo.cfg &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">dataDir=/usr/<span class="built_in">local</span>/bigdata/zookeeper/data</span><br><span class="line">server.1=cassSpark1:2888:3888</span><br><span class="line">server.2=cassSpark2:2888:3888</span><br><span class="line">server.3=cassSpark3:2888:3888</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 接著創立需要的資料夾，並新增檔案</span></span><br><span class="line">mkdir <span class="variable">$ZOOKEEPER_HOME</span>/data</span><br><span class="line">tee <span class="variable">$ZOOKEEPER_HOME</span>/data/myid &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">1</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 佈置到其他台</span></span><br><span class="line">scp -r /usr/<span class="built_in">local</span>/bigdata/zookeeper tester@cassSpark2:/usr/<span class="built_in">local</span>/bigdata</span><br><span class="line">scp -r /usr/<span class="built_in">local</span>/bigdata/zookeeper tester@cassSpark3:/usr/<span class="built_in">local</span>/bigdata</span><br><span class="line">ssh tester@cassSpark2 <span class="string">&quot;sed -i -e &#x27;s/1/2/g&#x27; <span class="variable">$ZOOKEEPER_HOME</span>/data/myid&quot;</span></span><br><span class="line">ssh tester@cassSpark2 <span class="string">&quot;sed -i -e &#x27;s/1/3/g&#x27; <span class="variable">$ZOOKEEPER_HOME</span>/data/myid&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Mesos</span></span><br><span class="line"><span class="comment"># 修改zookeeper</span></span><br><span class="line">sudo tee /etc/mesos/zk &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">zk://192.168.0.121:2181,192.168.0.122:2181,192.168.0.123:2181/mesos</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置quorum</span></span><br><span class="line">sudo tee /etc/mesos-master/quorum &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">2</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<p>b. Hadoop設定</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># slaves</span></span><br><span class="line">tee <span class="variable">$HADOOP_CONF_DIR</span>/slaves &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">cassSpark1</span><br><span class="line">cassSpark2</span><br><span class="line">cassSpark3</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># core-site.xml</span></span><br><span class="line">sed -i -e <span class="string">&#x27;s/&lt;\/configuration&gt;//g&#x27;</span> <span class="variable">$HADOOP_CONF_DIR</span>/core-site.xml</span><br><span class="line">tee -a <span class="variable">$HADOOP_CONF_DIR</span>/core-site.xml &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;fs.defaultFS&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;hdfs://hc1&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;/usr/<span class="built_in">local</span>/bigdata/hadoop/tmp&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;ha.zookeeper.quorum&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;192.168.0.121:2181,192.168.0.122:2181,192.168.0.123:2181&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">mkdir -p <span class="variable">$HADOOP_HOME</span>/tmp</span><br><span class="line"></span><br><span class="line"><span class="comment"># hdfs-site.xml</span></span><br><span class="line">sed -i -e <span class="string">&#x27;s/&lt;\/configuration&gt;//g&#x27;</span> <span class="variable">$HADOOP_CONF_DIR</span>/hdfs-site.xml</span><br><span class="line">tee -a <span class="variable">$HADOOP_CONF_DIR</span>/hdfs-site.xml &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;dfs.replication&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;3&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;dfs.permissions&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;<span class="literal">false</span>&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;dfs.webhdfs.enabled&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;<span class="literal">true</span>&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;dfs.name.dir&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;file:///usr/<span class="built_in">local</span>/bigdata/hadoop/tmp/name&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;dfs.data.dir&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;file:///usr/<span class="built_in">local</span>/bigdata/hadoop/tmp/data&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;dfs.namenode.checkpoint.dir&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;file:///usr/<span class="built_in">local</span>/bigdata/hadoop/tmp/name/chkpt&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;dfs.nameservices&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;hc1&lt;/value&gt;     </span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;dfs.namenode.shared.edits.dir&lt;/name&gt;    </span><br><span class="line">    &lt;value&gt;qjournal://192.168.0.121:8485;192.168.0.122:8485;192.168.0.123:8485/hc1&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;dfs.journalnode.edits.dir&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;/usr/<span class="built_in">local</span>/bigdata/hadoop/tmp/journal&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;dfs.ha.namenodes.hc1&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;nn1,nn2&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;dfs.namenode.rpc-address.hc1.nn1&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;192.168.0.121:9000&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;dfs.namenode.rpc-address.hc1.nn2&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;192.168.0.122:9000&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;dfs.namenode.http-address.hc1.nn1&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;192.168.0.121:50070&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;dfs.namenode.http-address.hc1.nn2&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;192.168.0.122:50070&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;dfs.namenode.shared.edits.dir&lt;/name&gt;    </span><br><span class="line">    &lt;value&gt;file:///usr/<span class="built_in">local</span>/bigdata/hadoop/tmp/ha-name-dir-shared&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;dfs.client.failover.proxy.provider.hc1&lt;/name&gt; </span><br><span class="line">    &lt;value&gt;org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;dfs.ha.fencing.methods&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;sshfence(tester)&lt;/value&gt;</span><br><span class="line">    &lt;-- 如果不能用root權限登入ssh，記得加上能登入ssh的username --&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;dfs.ha.fencing.ssh.private-key-files&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;/home/tester/.ssh/id_rsa&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;dfs.ha.automatic-failover.enabled&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;<span class="literal">true</span>&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">mkdir -p <span class="variable">$HADOOP_HOME</span>/tmp/data</span><br><span class="line">mkdir -p <span class="variable">$HADOOP_HOME</span>/tmp/name</span><br><span class="line">mkdir -p <span class="variable">$HADOOP_HOME</span>/tmp/journal</span><br><span class="line">mkdir -p <span class="variable">$HADOOP_HOME</span>/tmp/name/chkpt</span><br><span class="line">mkdir -p <span class="variable">$HADOOP_HOME</span>/tmp/ha-name-dir-shared</span><br><span class="line"></span><br><span class="line"><span class="comment"># mapred-site.xml</span></span><br><span class="line">cp <span class="variable">$HADOOP_CONF_DIR</span>/mapred-site.xml.template <span class="variable">$HADOOP_CONF_DIR</span>/mapred-site.xml</span><br><span class="line">sed -i -e <span class="string">&#x27;s/&lt;\/configuration&gt;//g&#x27;</span> <span class="variable">$HADOOP_CONF_DIR</span>/mapred-site.xml</span><br><span class="line">tee -a <span class="variable">$HADOOP_CONF_DIR</span>/mapred-site.xml &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;mapreduce.framework.name&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;yarn&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># yarn-site.xml</span></span><br><span class="line">sed -i -e <span class="string">&#x27;s/&lt;\/configuration&gt;//g&#x27;</span> <span class="variable">$HADOOP_CONF_DIR</span>/yarn-site.xml</span><br><span class="line">tee -a <span class="variable">$HADOOP_CONF_DIR</span>/yarn-site.xml &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;mapreduce_shuffle&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;yarn.nodemanager.aux-services.mapreduce.shuffle.class&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;org.apache.hadoop.mapred.ShuffleHandler&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;yarn.resourcemanager.zk-address&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;192.168.0.121:2181,192.168.0.122:2181,192.168.0.123:2181&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;yarn.resourcemanager.cluster-id&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;yarn-ha&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;yarn.resourcemanager.ha.enabled&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;<span class="literal">true</span>&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;yarn.resourcemanager.ha.rm-ids&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;rm1,rm2&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;yarn.resourcemanager.hostname.rm1&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;cassSpark1&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;yarn.resourcemanager.hostname.rm2&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;cassSpark2&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;yarn.resourcemanager.recovery.enabled&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;<span class="literal">true</span>&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;yarn.resourcemanager.ha.automatic-failover.enabled&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;<span class="literal">true</span>&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;yarn.client.failover-proxy-provider&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;org.apache.hadoop.yarn.client.ConfiguredRMFailoverProxyProvider&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;yarn.resourcemanager.store.class&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 複製到各台</span></span><br><span class="line">scp -r /usr/<span class="built_in">local</span>/bigdata/hadoop tester@cassSpark2:/usr/<span class="built_in">local</span>/bigdata</span><br><span class="line">scp -r /usr/<span class="built_in">local</span>/bigdata/hadoop tester@cassSpark3:/usr/<span class="built_in">local</span>/bigdata</span><br></pre></td></tr></table></figure>

<p>c. HBase設定</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i -e <span class="string">&#x27;s/&lt;\/configuration&gt;//g&#x27;</span> <span class="variable">$HBASE_HOME</span>/conf/hbase-site.xml</span><br><span class="line">tee -a <span class="variable">$HBASE_HOME</span>/conf/hbase-site.xml &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;hbase.rootdir&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;hdfs://hc1/hbase&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;hbase.cluster.distributed&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;<span class="literal">true</span>&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;dfs.replication&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;3&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;hbase.zookeeper.quorum&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;192.168.0.121,192.168.0.122,192.168.0.123&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;hbase.zookeeper.property.clientPort&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;2181&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;hbase.zookeeper.property.dataDir&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;file:///usr/<span class="built_in">local</span>/bigdata/zookeeper/data&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;hbase.master.port&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;60000&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 複製slaves</span></span><br><span class="line">cp <span class="variable">$HADOOP_CONF_DIR</span>/slaves <span class="variable">$HBASE_HOME</span>/conf/regionservers</span><br><span class="line"></span><br><span class="line"><span class="comment"># 複製到各台</span></span><br><span class="line">scp -r /usr/<span class="built_in">local</span>/bigdata/hbase tester@cassSpark2:/usr/<span class="built_in">local</span>/bigdata</span><br><span class="line">scp -r /usr/<span class="built_in">local</span>/bigdata/hbase tester@cassSpark3:/usr/<span class="built_in">local</span>/bigdata</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>啟動</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 啟動zookeeper server (設定自動啟動可以跳過)</span></span><br><span class="line">zkServer.sh start</span><br><span class="line">ssh tester@cassSpark2 <span class="string">&quot;zkServer.sh start&quot;</span></span><br><span class="line">ssh tester@cassSpark3 <span class="string">&quot;zkServer.sh start&quot;</span></span><br><span class="line"><span class="comment"># 格式化zkfc</span></span><br><span class="line">hdfs zkfc -formatZK</span><br><span class="line">ssh tester@cassSpark2 <span class="string">&quot;hdfs zkfc -formatZK&quot;</span></span><br><span class="line"><span class="comment"># 開啟journalnode</span></span><br><span class="line"><span class="variable">$HADOOP_HOME</span>/sbin/hadoop-daemon.sh start journalnode</span><br><span class="line">ssh tester@cassSpark2 <span class="string">&quot;<span class="variable">$HADOOP_HOME</span>/sbin/hadoop-daemon.sh start journalnode&quot;</span></span><br><span class="line">ssh tester@cassSpark3 <span class="string">&quot;<span class="variable">$HADOOP_HOME</span>/sbin/hadoop-daemon.sh start journalnode&quot;</span></span><br><span class="line"><span class="comment"># 格式化namenode，並啟動namenode (nn1)</span></span><br><span class="line">hadoop namenode -format hc1</span><br><span class="line"><span class="variable">$HADOOP_HOME</span>/sbin/hadoop-daemon.sh start namenode</span><br><span class="line"><span class="comment"># 備用namenode啟動 (nn2)</span></span><br><span class="line">ssh tester@cassSpark2 <span class="string">&quot;hadoop namenode -format hc1&quot;</span></span><br><span class="line">ssh tester@cassSpark2 <span class="string">&quot;hdfs namenode -bootstrapStandby&quot;</span></span><br><span class="line">ssh tester@cassSpark2 <span class="string">&quot;<span class="variable">$HADOOP_HOME</span>/sbin/hadoop-daemon.sh start namenode&quot;</span></span><br><span class="line"><span class="comment"># 啟動zkfc</span></span><br><span class="line"><span class="variable">$HADOOP_HOME</span>/sbin/hadoop-daemon.sh start zkfc</span><br><span class="line">ssh tester@cassSpark2 <span class="string">&quot;<span class="variable">$HADOOP_HOME</span>/sbin/hadoop-daemon.sh start zkfc&quot;</span></span><br><span class="line"><span class="comment"># 啟動datanode</span></span><br><span class="line"><span class="variable">$HADOOP_HOME</span>/sbin/hadoop-daemon.sh start datanode</span><br><span class="line">ssh tester@cassSpark2 <span class="string">&quot;<span class="variable">$HADOOP_HOME</span>/sbin/hadoop-daemon.sh start datanode&quot;</span></span><br><span class="line">ssh tester@cassSpark3 <span class="string">&quot;<span class="variable">$HADOOP_HOME</span>/sbin/hadoop-daemon.sh start datanode&quot;</span></span><br><span class="line"><span class="comment"># 啟動yarn</span></span><br><span class="line"><span class="variable">$HADOOP_HOME</span>/sbin/yarn-daemon.sh start resourcemanager</span><br><span class="line"><span class="variable">$HADOOP_HOME</span>/sbin/yarn-daemon.sh start nodemanager</span><br><span class="line">ssh tester@cassSpark2 <span class="string">&quot;<span class="variable">$HADOOP_HOME</span>/sbin/yarn-daemon.sh start resourcemanager&quot;</span></span><br><span class="line">ssh tester@cassSpark2 <span class="string">&quot;<span class="variable">$HADOOP_HOME</span>/sbin/yarn-daemon.sh start nodemanager&quot;</span></span><br><span class="line">ssh tester@cassSpark3 <span class="string">&quot;<span class="variable">$HADOOP_HOME</span>/sbin/yarn-daemon.sh start nodemanager&quot;</span></span><br><span class="line"><span class="comment"># 啟動HBase</span></span><br><span class="line">hbase-daemon.sh start master</span><br><span class="line">hbase-daemon.sh start regionserver</span><br><span class="line">ssh tester@cassSpark2 <span class="string">&quot;hbase-daemon.sh start master&quot;</span></span><br><span class="line">ssh tester@cassSpark2 <span class="string">&quot;hbase-daemon.sh start regionserver&quot;</span></span><br><span class="line">ssh tester@cassSpark3 <span class="string">&quot;hbase-daemon.sh start master&quot;</span></span><br><span class="line">ssh tester@cassSpark3 <span class="string">&quot;hbase-daemon.sh start regionserver&quot;</span></span><br></pre></td></tr></table></figure>

<p>開啟之後就可以用jps去看各台開啟狀況，如果確定都沒問題之後</p>
<p>接下來就可以往下去設定自動啟動的部分了，也可以先往下跳去測試部分</p>
<p>這裡採用python的supervisord去協助監控service的進程，並做自動啟動的動作</p>
<p>先安裝supervisor:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum install python-setuptools</span><br><span class="line">sudo easy_install pip</span><br><span class="line">sudo pip install supervisor</span><br><span class="line"><span class="comment"># echo default config</span></span><br><span class="line">sudo mkdir /etc/supervisor</span><br><span class="line">sudo bash -c <span class="string">&#x27;echo_supervisord_conf &gt; /etc/supervisor/supervisord.conf&#x27;</span></span><br></pre></td></tr></table></figure>

<p>使用<code>sudo vi /etc/supervisor/supervisord.conf</code>編輯，更動下面的設定：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[inet_http_server]         ; inet (TCP) server disabled by default</span><br><span class="line">port&#x3D;192.168.0.121:10088   ; (ip_address:port specifier, *:port for all iface)</span><br><span class="line">username&#x3D;tester            ; (default is no username (open server))</span><br><span class="line">password&#x3D;qscf12356         ; (default is no password (open server))</span><br><span class="line"></span><br><span class="line">[supervisorctl]</span><br><span class="line">serverurl&#x3D;unix:&#x2F;&#x2F;&#x2F;tmp&#x2F;supervisor.sock ; use a unix:&#x2F;&#x2F; URL  for a unix socket</span><br><span class="line">serverurl&#x3D;http:&#x2F;&#x2F;192.168.0.121:10088 ; use an http:&#x2F;&#x2F; url to specify an inet socket</span><br><span class="line">username&#x3D;tester              ; should be same as http_username if set</span><br><span class="line">password&#x3D;qscf12356          ; should be same as http_password if set</span><br><span class="line"></span><br><span class="line">[supervisord]</span><br><span class="line">environment&#x3D;</span><br><span class="line">  JAVA_HOME&#x3D;&#x2F;usr&#x2F;java&#x2F;jdk1.8.0_101,</span><br><span class="line">  SCALA_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;scala&#x2F;scala-2.11,</span><br><span class="line">  SPARK_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;bigdata&#x2F;spark,</span><br><span class="line">  CASSANDRA_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;bigdata&#x2F;cassandra,</span><br><span class="line">  ZOOKEEPER_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;bigdata&#x2F;zookeeper,</span><br><span class="line">  HADOOP_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;bigdata&#x2F;hadoop,</span><br><span class="line">  HADOOP_COMMON_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;bigdata&#x2F;hadoop,</span><br><span class="line">  HADOOP_CONF_DIR&#x3D;&#x2F;usr&#x2F;local&#x2F;bigdata&#x2F;hadoop&#x2F;etc&#x2F;hadoop,</span><br><span class="line">  HADOOP_COMMON_LIB_NATIVE_DIR&#x3D;&#x2F;usr&#x2F;local&#x2F;bigdata&#x2F;hadoop&#x2F;lib&#x2F;native,</span><br><span class="line">  HADOOP_OPTS&#x3D;&quot;-Djava.library.path&#x3D;&#x2F;usr&#x2F;local&#x2F;bigdata&#x2F;hadoop&#x2F;lib&#x2F;native&quot;,</span><br><span class="line">  HBASE_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;bigdata&#x2F;hbase,</span><br><span class="line">  HBASE_MANAGES_ZK&#x3D;&quot;false&quot;,</span><br><span class="line">  HBASE_CLASSPATH&#x3D;&#x2F;usr&#x2F;local&#x2F;bigdata&#x2F;hadoop&#x2F;etc&#x2F;hadoop,</span><br><span class="line">  HBASE_CONF_DIR&#x3D;&#x2F;usr&#x2F;local&#x2F;bigdata&#x2F;hbase&#x2F;conf</span><br></pre></td></tr></table></figure>

<p>然後用下面的指令在設定後面追加下面的設定</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo tee -a &#x2F;etc&#x2F;supervisor&#x2F;supervisord.conf &lt;&lt; &quot;EOF&quot;</span><br><span class="line"></span><br><span class="line">; 全部都要配置的服務</span><br><span class="line">[program:hadoop-hdfs-journalnode]</span><br><span class="line">command&#x3D;&#x2F;bin&#x2F;bash -c &quot;$HADOOP_HOME&#x2F;bin&#x2F;hdfs journalnode&quot;</span><br><span class="line">stdout_logfile&#x3D;&#x2F;var&#x2F;log&#x2F;supervisor&#x2F;hadoop-hdfs-journalnode-stdout.out</span><br><span class="line">stderr_logfile&#x3D;&#x2F;var&#x2F;log&#x2F;supervisor&#x2F;hadoop-hdfs-journalnode-stderr.out</span><br><span class="line">autostart&#x3D;true</span><br><span class="line">startsecs&#x3D;5</span><br><span class="line">priority&#x3D;60</span><br><span class="line"></span><br><span class="line">[program:mesos-slave]</span><br><span class="line">command&#x3D;&#x2F;bin&#x2F;bash -c &quot;&#x2F;usr&#x2F;bin&#x2F;mesos-init-wrapper slave&quot;</span><br><span class="line">stdout_logfile&#x3D;&#x2F;var&#x2F;log&#x2F;supervisor&#x2F;mesos-slave-stdout.out</span><br><span class="line">stderr_logfile&#x3D;&#x2F;var&#x2F;log&#x2F;supervisor&#x2F;mesos-slave-stderr.out</span><br><span class="line">autostart&#x3D;true</span><br><span class="line">startsecs&#x3D;5</span><br><span class="line">priority&#x3D;80</span><br><span class="line"></span><br><span class="line">[program:hadoop-hdfs-datanode]</span><br><span class="line">command&#x3D;&#x2F;bin&#x2F;bash -c &quot;$HADOOP_HOME&#x2F;bin&#x2F;hdfs datanode&quot;</span><br><span class="line">stdout_logfile&#x3D;&#x2F;var&#x2F;log&#x2F;supervisor&#x2F;hadoop-hdfs-datanode-stdout.out</span><br><span class="line">stderr_logfile&#x3D;&#x2F;var&#x2F;log&#x2F;supervisor&#x2F;hadoop-hdfs-datanode-stderr.out</span><br><span class="line">autostart&#x3D;true</span><br><span class="line">startsecs&#x3D;5</span><br><span class="line">priority&#x3D;80</span><br><span class="line"></span><br><span class="line">[program:hadoop-yarn-nodemanager]</span><br><span class="line">command&#x3D;&#x2F;bin&#x2F;bash -c &quot;$HADOOP_HOME&#x2F;bin&#x2F;yarn nodemanager&quot;</span><br><span class="line">stdout_logfile&#x3D;&#x2F;var&#x2F;log&#x2F;supervisor&#x2F;hadoop-yarn-nodemanager-stdout.out</span><br><span class="line">stderr_logfile&#x3D;&#x2F;var&#x2F;log&#x2F;supervisor&#x2F;hadoop-yarn-nodemanager-stderr.out</span><br><span class="line">autostart&#x3D;true</span><br><span class="line">startsecs&#x3D;5</span><br><span class="line">priority&#x3D;85</span><br><span class="line"></span><br><span class="line">[program:spark-mesos-shuffle]</span><br><span class="line">command&#x3D;&#x2F;bin&#x2F;bash -c &quot;$SPARK_HOME&#x2F;bin&#x2F;spark-submit --class org.apache.spark.deploy.mesos.MesosExternalShuffleService 1&quot;</span><br><span class="line">stdout_logfile&#x3D;&#x2F;var&#x2F;log&#x2F;supervisor&#x2F;spark-mesos-shuffle-stdout.out</span><br><span class="line">stderr_logfile&#x3D;&#x2F;var&#x2F;log&#x2F;supervisor&#x2F;spark-mesos-shuffle-stderr.out</span><br><span class="line">autostart&#x3D;true</span><br><span class="line">startsecs&#x3D;5</span><br><span class="line">priority&#x3D;90</span><br><span class="line"></span><br><span class="line">[program:hbase-regionserver]</span><br><span class="line">command&#x3D;&#x2F;bin&#x2F;bash -c &quot;$HBASE_HOME&#x2F;bin&#x2F;hbase regionserver start&quot;</span><br><span class="line">stdout_logfile&#x3D;&#x2F;var&#x2F;log&#x2F;supervisor&#x2F;hbase-regionserver-stdout.out</span><br><span class="line">stderr_logfile&#x3D;&#x2F;var&#x2F;log&#x2F;supervisor&#x2F;hbase-regionserver-stderr.out</span><br><span class="line">autostart&#x3D;true</span><br><span class="line">startsecs&#x3D;5</span><br><span class="line">priority&#x3D;95</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">; 下面只有需要的node才要配置</span><br><span class="line">; zookeeper只需要配置在三台有zookeeper的電腦上</span><br><span class="line">; namenode, zkfc跟hadoop-yarn-resourcemanager只需要配置在要hdfs, yarn做HA的那兩台上面</span><br><span class="line">; mesos-master跟hbase-master只需要配置在有zookeeper的電腦上</span><br><span class="line">[program:zookeeper]</span><br><span class="line">command&#x3D;&#x2F;bin&#x2F;bash -c &quot;$ZOOKEEPER_HOME&#x2F;bin&#x2F;zkServer.sh start-foreground&quot;</span><br><span class="line">stdout_logfile&#x3D;&#x2F;var&#x2F;log&#x2F;supervisor&#x2F;zookeeper-stdout.out</span><br><span class="line">stderr_logfile&#x3D;&#x2F;var&#x2F;log&#x2F;supervisor&#x2F;zookeeper-stderr.out</span><br><span class="line">autostart&#x3D;true</span><br><span class="line">startsecs&#x3D;10</span><br><span class="line">priority&#x3D;50</span><br><span class="line"></span><br><span class="line">[program:mesos-master]</span><br><span class="line">command&#x3D;&#x2F;bin&#x2F;bash -c &quot;&#x2F;usr&#x2F;bin&#x2F;mesos-init-wrapper master&quot;</span><br><span class="line">stdout_logfile&#x3D;&#x2F;var&#x2F;log&#x2F;supervisor&#x2F;mesos-master-stdout.out</span><br><span class="line">stderr_logfile&#x3D;&#x2F;var&#x2F;log&#x2F;supervisor&#x2F;mesos-master-stderr.out</span><br><span class="line">autostart&#x3D;true</span><br><span class="line">startsecs&#x3D;5</span><br><span class="line">priority&#x3D;60</span><br><span class="line"></span><br><span class="line">[program:hadoop-hdfs-namenode]</span><br><span class="line">command&#x3D;&#x2F;bin&#x2F;bash -c &quot;$HADOOP_HOME&#x2F;bin&#x2F;hdfs namenode&quot;</span><br><span class="line">stdout_logfile&#x3D;&#x2F;var&#x2F;log&#x2F;supervisor&#x2F;hadoop-hdfs-namenode-stdout.out</span><br><span class="line">stderr_logfile&#x3D;&#x2F;var&#x2F;log&#x2F;supervisor&#x2F;hadoop-hdfs-namenode-stderr.out</span><br><span class="line">autostart&#x3D;true</span><br><span class="line">startsecs&#x3D;5</span><br><span class="line">priority&#x3D;70</span><br><span class="line"></span><br><span class="line">[program:hadoop-hdfs-zkfc]</span><br><span class="line">command&#x3D;&#x2F;bin&#x2F;bash -c &quot;$HADOOP_HOME&#x2F;bin&#x2F;hdfs zkfc&quot;</span><br><span class="line">stdout_logfile&#x3D;&#x2F;var&#x2F;log&#x2F;supervisor&#x2F;hadoop-hdfs-zkfc-stdout.out</span><br><span class="line">stderr_logfile&#x3D;&#x2F;var&#x2F;log&#x2F;supervisor&#x2F;hadoop-hdfs-zkfc-stderr.out</span><br><span class="line">autostart&#x3D;true</span><br><span class="line">startsecs&#x3D;5</span><br><span class="line">priority&#x3D;75</span><br><span class="line"></span><br><span class="line">[program:hadoop-yarn-resourcemanager]</span><br><span class="line">command&#x3D;&#x2F;bin&#x2F;bash -c &quot;$HADOOP_HOME&#x2F;bin&#x2F;yarn resourcemanager&quot;</span><br><span class="line">stdout_logfile&#x3D;&#x2F;var&#x2F;log&#x2F;supervisor&#x2F;hadoop-yarn-resourcemanager-stdout.out</span><br><span class="line">stderr_logfile&#x3D;&#x2F;var&#x2F;log&#x2F;supervisor&#x2F;hadoop-yarn-resourcemanager-stderr.out</span><br><span class="line">autostart&#x3D;true</span><br><span class="line">startsecs&#x3D;5</span><br><span class="line">priority&#x3D;80</span><br><span class="line"></span><br><span class="line">[program:hbase-master]</span><br><span class="line">command&#x3D;&#x2F;bin&#x2F;bash -c &quot;$HBASE_HOME&#x2F;bin&#x2F;hbase master start&quot;</span><br><span class="line">stdout_logfile&#x3D;&#x2F;var&#x2F;log&#x2F;supervisor&#x2F;hbase-master-stdout.out</span><br><span class="line">stderr_logfile&#x3D;&#x2F;var&#x2F;log&#x2F;supervisor&#x2F;hbase-master-stderr.out</span><br><span class="line">autostart&#x3D;true</span><br><span class="line">startsecs&#x3D;5</span><br><span class="line">priority&#x3D;90</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">sudo systemctl restart supervisor.service</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>測試</li>
</ol>
<p>用網頁連到cassSpark1:50070跟cassSpark2:50070</p>
<p>cassSpark1:50070應該會顯示是active node (或是用 <code>hdfs haadmin -getServiceState nn1</code>)</p>
<p>cassSpark2:50070則會顯示是standby node (或是用 <code>hdfs haadmin -getServiceState nn2</code>)</p>
<p>(根據啟動順序不同，active的node不一定就是cassSpark1)</p>
<p>在active node上，輸入<code>sudo service hadoop-hdfs-namenode stop</code>停掉Hadoop namenode試試看</p>
<p>(如果安裝了自動啟動，就直接在supervisor的web UI直接操作即可)</p>
<p>等一下下，就可以看到cassSpark2:50070會變成active node，這樣hadoop的HA就完成了</p>
<p>至於YARN的HA就連到8081去看就好(或是用 <code>yarn rmadmin -getServiceState rm1</code>, <code>yarn rmadmin -getServiceState rm2</code>)</p>
<p>HBase則是16010，用一樣方式都可以測試到HA是否有成功</p>
<p>至於zookeeper, hadoop其他測試就看我之前發的那篇文章即可<a href="http://chingchuan-chen.github.io/hadoop/2016/07/23/deployment-spark-phoenix-hbase-yarn-zookeeper-hadoop.html">點這</a>就好</p>
<p>備註：版本記得改成這裡的2.7.3即可，一定要測試，不然後面出問題很難抓</p>
<p>而且記得要重開，看看是否全部服務都如同預期一樣啟動了</p>
<p>Reference:</p>
<ol>
<li><a href="http://debugo.com/yarn-rm-ha/">http://debugo.com/yarn-rm-ha/</a></li>
<li><a href="http://www.cnblogs.com/junrong624/p/3580477.html">http://www.cnblogs.com/junrong624/p/3580477.html</a></li>
<li><a href="http://www.cnblogs.com/captainlucky/p/4710642.html">http://www.cnblogs.com/captainlucky/p/4710642.html</a></li>
<li><a href="https://phoenix.apache.org/server.html">https://phoenix.apache.org/server.html</a></li>
</ol>
]]></content>
      <categories>
        <category>BigData</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>Hadoop</tag>
      </tags>
  </entry>
  <entry>
    <title>Performnace benchmark of the SQL tools on Hadoop</title>
    <url>/posts/201609/2016-09-23-performance-benchmark-of-the-sql-tools-on-Hadoop.html</url>
    <content><![CDATA[<p>就我手上現有的SQL on Hadoop工具</p>
<p>我做了一個簡單的benchmark去看效能</p>
<a id="more"></a>

<p>資料量不大，一個998177列、11欄的數據</p>
<p>(1欄字串、2欄double、7欄整數、一欄邏輯值)</p>
<p>存成json檔案(178MB), csv檔案(63MB)放置於hdfs</p>
<p>我們分別用HBase, Hive, Spark SQL, Drill去測試幾個簡單case</p>
<p>配備：</p>
<p>VM: 2-core with 4G ram x 3</p>
<p>版本：</p>
<table>
<thead>
<tr>
<th></th>
<th>Hadoop</th>
<th>HBase</th>
<th>Hive</th>
<th>Drill</th>
<th>Spark</th>
</tr>
</thead>
<tbody><tr>
<td>版本</td>
<td>2.7.3</td>
<td>1.2.2</td>
<td>2.1.0</td>
<td>1.8.0</td>
<td>2.0.0</td>
</tr>
</tbody></table>
<p>設備疲乏，可能只能給出一個簡單的比較</p>
<p>如果有更多機器，當然希望可以給出更多的比較</p>
<p>Hive可以使用mapreduce, tez或是Spark，儲存媒介也可以選hdfs或是hbase</p>
<p>但是這裡沒想測試那麼多，所以只測試mapreduce + hdfs的模式</p>
<p>而Spark就直接用Hive上的資料做Spark SQL</p>
<p>至於Drill則分別使用hdfs的json, csv檔案，以及透過HBase, Hive等方式去做</p>
<p>先稍微看一下資料：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">head tw5_df.csv</span><br><span class="line"><span class="comment"># nfbVD-5S-9.063,30,2015,1,1,0,0,5,TRUE,row1</span></span><br><span class="line"><span class="comment"># nfbVD-5N-9.013,11,2015,1,1,0,0,5,TRUE,row2</span></span><br><span class="line"><span class="comment"># nfbVD-5S-9.063,30,2015,1,1,0,1,5,TRUE,row3</span></span><br><span class="line"><span class="comment"># nfbVD-5N-9.013,11,2015,1,1,0,1,5,TRUE,row4</span></span><br><span class="line"><span class="comment"># nfbVD-5S-9.063,18,2015,1,1,0,2,5,TRUE,row5</span></span><br><span class="line"><span class="comment"># nfbVD-5N-9.013,5,2015,1,1,0,2,5,TRUE,row6</span></span><br><span class="line"><span class="comment"># nfbVD-5S-9.063,24,2015,1,1,0,3,5,TRUE,row7</span></span><br><span class="line"><span class="comment"># nfbVD-5N-9.013,6,2015,1,1,0,3,5,TRUE,row8</span></span><br><span class="line"><span class="comment"># nfbVD-5S-9.063,24,2015,1,1,0,4,5,TRUE,row9</span></span><br><span class="line"><span class="comment"># nfbVD-5N-9.013,6,2015,1,1,0,4,5,TRUE,row10</span></span><br><span class="line"></span><br><span class="line">head tw5_df_hbase.csv</span><br><span class="line"><span class="comment"># nfbVD-5S-9.063,30,2015,1,1,0,0,5,TRUE,row0000001</span></span><br><span class="line"><span class="comment"># nfbVD-5N-9.013,11,2015,1,1,0,0,5,TRUE,row0000002</span></span><br><span class="line"><span class="comment"># nfbVD-5S-9.063,30,2015,1,1,0,1,5,TRUE,row0000003</span></span><br><span class="line"><span class="comment"># nfbVD-5N-9.013,11,2015,1,1,0,1,5,TRUE,row0000004</span></span><br><span class="line"><span class="comment"># nfbVD-5S-9.063,18,2015,1,1,0,2,5,TRUE,row0000005</span></span><br><span class="line"><span class="comment"># nfbVD-5N-9.013,5,2015,1,1,0,2,5,TRUE,row0000006</span></span><br><span class="line"><span class="comment"># nfbVD-5S-9.063,24,2015,1,1,0,3,5,TRUE,row0000007</span></span><br><span class="line"><span class="comment"># nfbVD-5N-9.013,6,2015,1,1,0,3,5,TRUE,row0000008</span></span><br><span class="line"><span class="comment"># nfbVD-5S-9.063,24,2015,1,1,0,4,5,TRUE,row0000009</span></span><br><span class="line"><span class="comment"># nfbVD-5N-9.013,6,2015,1,1,0,4,5,TRUE,row0000010</span></span><br><span class="line"></span><br><span class="line">head tw5_df.json</span><br><span class="line"><span class="comment"># [</span></span><br><span class="line"><span class="comment"># &#123;&quot;vdid&quot;:&quot;nfbVD-5S-9.063&quot;,&quot;volume&quot;:30,&quot;date_year&quot;:2015,&quot;date_month&quot;:1,&quot;date_day&quot;:1,&quot;time_hour&quot;:0,&quot;time_minute&quot;:0,</span></span><br><span class="line"><span class="comment"># &quot;weekday&quot;:5,&quot;holiday&quot;:true,&quot;speed&quot;:&quot;84.26666667&quot;,&quot;laneoccupy&quot;:&quot;12.13333333&quot;&#125;,</span></span><br><span class="line"><span class="comment"># &#123;&quot;vdid&quot;:&quot;nfbVD-5N-9.013&quot;,&quot;volume&quot;:11,&quot;date_year&quot;:2015,&quot;date_month&quot;:1,&quot;date_day&quot;:1,&quot;time_hour&quot;:0,&quot;time_minute&quot;:0,</span></span><br><span class="line"><span class="comment"># &quot;weekday&quot;:5,&quot;holiday&quot;:true,&quot;speed&quot;:&quot;87.36363636&quot;,&quot;laneoccupy&quot;:&quot;4.00000000&quot;&#125;,</span></span><br><span class="line"><span class="comment"># &#123;&quot;vdid&quot;:&quot;nfbVD-5S-9.063&quot;,&quot;volume&quot;:30,&quot;date_year&quot;:2015,&quot;date_month&quot;:1,&quot;date_day&quot;:1,&quot;time_hour&quot;:0,&quot;time_minute&quot;:1,</span></span><br><span class="line"><span class="comment"># &quot;weekday&quot;:5,&quot;holiday&quot;:true,&quot;speed&quot;:&quot;84.26666667&quot;,&quot;laneoccupy&quot;:&quot;12.13333333&quot;&#125;,</span></span><br><span class="line"><span class="comment"># &#123;&quot;vdid&quot;:&quot;nfbVD-5N-9.013&quot;,&quot;volume&quot;:11,&quot;date_year&quot;:2015,&quot;date_month&quot;:1,&quot;date_day&quot;:1,&quot;time_hour&quot;:0,&quot;time_minute&quot;:1,</span></span><br><span class="line"><span class="comment"># &quot;weekday&quot;:5,&quot;holiday&quot;:true,&quot;speed&quot;:&quot;87.36363636&quot;,&quot;laneoccupy&quot;:&quot;4.00000000&quot;&#125;,</span></span><br><span class="line"><span class="comment"># &#123;&quot;vdid&quot;:&quot;nfbVD-5S-9.063&quot;,&quot;volume&quot;:18,&quot;date_year&quot;:2015,&quot;date_month&quot;:1,&quot;date_day&quot;:1,&quot;time_hour&quot;:0,&quot;time_minute&quot;:2,</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 放到hdfs上</span></span><br><span class="line">hdfs dfs -mkdir /drill</span><br><span class="line">hdfs dfs -put tw5_df.csv /drill/tw5_df.csv</span><br><span class="line">hdfs dfs -put tw5_df.csv /drill/tw5_df_hive.csv</span><br><span class="line">hdfs dfs -put tw5_df_hbase.csv /drill/tw5_df_hbase.csv</span><br><span class="line">hdfs dfs -put tw5_df.json /drill/tw5_df.json</span><br></pre></td></tr></table></figure>


<p>HBase使用hbase shell，然後用下面的script去input資料以及做query：</p>
<p><code>hbase shell &gt;</code>是打開hbase shell跑的意思，不然請在console跑</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">## hbase shell &gt; create &#x27;vddata&#x27;,&#x27;vdid&#x27;,&#x27;vd_info&#x27;,&#x27;datetime&#x27;</span></span><br><span class="line">hbase org.apache.hadoop.hbase.mapreduce.ImportTsv -Dimporttsv.columns=<span class="string">&quot;vdid,vd_info:volume,datetime:year,datetime:month,datetime:day,datetime:hour,datetime:minute,datetime:weekday,datetime:holiday,vd_info:speed,vd_info:laneoccupy,HBASE_ROW_KEY&quot;</span> <span class="string">&#x27;-Dimporttsv.separator=,&#x27;</span> vddata /drill/tw5_df_hbase.csv</span><br><span class="line"></span><br><span class="line"><span class="comment">## hbase shell &gt; scan &#x27;vddata&#x27;, &#123;LIMIT =&gt; 1&#125;</span></span><br><span class="line"><span class="comment"># ROW                                          COLUMN+CELL</span></span><br><span class="line"><span class="comment">#  row0000001                                  column=datetime:day, timestamp=1474478950775, value=2015</span></span><br><span class="line"><span class="comment">#  row0000001                                  column=datetime:holiday, timestamp=1474478950775, value=0</span></span><br><span class="line"><span class="comment">#  row0000001                                  column=datetime:hour, timestamp=1474478950775, value=1</span></span><br><span class="line"><span class="comment">#  row0000001                                  column=datetime:minute, timestamp=1474478950775, value=1</span></span><br><span class="line"><span class="comment">#  row0000001                                  column=datetime:month, timestamp=1474478950775, value=30</span></span><br><span class="line"><span class="comment">#  row0000001                                  column=datetime:weekday, timestamp=1474478950775, value=0</span></span><br><span class="line"><span class="comment">#  row0000001                                  column=datetime:year, timestamp=1474478950775, value=1.21333333333333E1</span></span><br><span class="line"><span class="comment">#  row0000001                                  column=vd_info:laneoccupy, timestamp=1474478950775, value=TRUE</span></span><br><span class="line"><span class="comment">#  row0000001                                  column=vd_info:speed, timestamp=1474478950775, value=5</span></span><br><span class="line"><span class="comment">#  row0000001                                  column=vd_info:volume, timestamp=1474478950775, value=8.42666666666667E1</span></span><br><span class="line"><span class="comment">#  row0000001                                  column=vdid:, timestamp=1474478950775, value=nfbVD-5S-9.063</span></span><br><span class="line"><span class="comment"># 1 row(s) in 0.0260 seconds</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 結果發現group by要用JAVA API去寫...就只好放棄了，留給Drill用</span></span><br></pre></td></tr></table></figure>


<p>Hive則用下面的SQL script：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> vddata (vdid <span class="keyword">STRING</span>, speed <span class="keyword">DOUBLE</span>, laneoccupy <span class="keyword">DOUBLE</span>, volume <span class="built_in">INT</span>, </span><br><span class="line">date_year <span class="built_in">INT</span>, date_month <span class="built_in">INT</span>, date_day <span class="built_in">INT</span>, time_hour <span class="built_in">INT</span>, time_minute <span class="built_in">INT</span>, </span><br><span class="line"><span class="keyword">weekday</span> <span class="built_in">INT</span>, holiday <span class="built_in">BOOLEAN</span>)</span><br><span class="line"><span class="keyword">ROW</span> <span class="keyword">FORMAT</span> <span class="keyword">DELIMITED</span></span><br><span class="line"><span class="keyword">FIELDS</span> <span class="keyword">TERMINATED</span> <span class="keyword">BY</span> <span class="string">&#x27;,&#x27;</span></span><br><span class="line"><span class="keyword">STORED</span> <span class="keyword">AS</span> TEXTFILE;</span><br><span class="line"></span><br><span class="line"><span class="keyword">LOAD</span> <span class="keyword">DATA</span> INPATH <span class="string">&#x27;/drill/tw5_df_hive.csv&#x27;</span></span><br><span class="line">OVERWRITE <span class="keyword">INTO</span> <span class="keyword">TABLE</span> vddata;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> vddata <span class="keyword">limit</span> <span class="number">5</span>;</span><br><span class="line"><span class="comment"># OK</span></span><br><span class="line"><span class="comment"># nfbVD-5S-9.063  30.0    2015    1       1       0       0       5       true</span></span><br><span class="line"><span class="comment"># nfbVD-5N-9.013  11.0    2015    1       1       0       0       5       true</span></span><br><span class="line"><span class="comment"># nfbVD-5S-9.063  30.0    2015    1       1       0       1       5       true</span></span><br><span class="line"><span class="comment"># nfbVD-5N-9.013  11.0    2015    1       1       0       1       5       true</span></span><br><span class="line"><span class="comment"># nfbVD-5S-9.063  18.0    2015    1       1       0       2       5       true</span></span><br><span class="line"><span class="comment"># Time taken: 0.86 seconds, Fetched: 5 row(s)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(vdid) <span class="keyword">from</span> vddata;</span><br><span class="line"><span class="comment"># Total MapReduce CPU Time Spent: 4 seconds 590 msec</span></span><br><span class="line"><span class="comment"># OK</span></span><br><span class="line"><span class="comment"># Time taken: 27.214 seconds, Fetched: 1 row(s)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> date_month,<span class="keyword">count</span>(vdid) <span class="keyword">from</span> vddata <span class="keyword">group</span> <span class="keyword">by</span> date_month;</span><br><span class="line"><span class="comment"># Total MapReduce CPU Time Spent: 4 seconds 330 msec</span></span><br><span class="line"><span class="comment"># Time taken: 23.09 seconds, Fetched: 12 row(s)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> date_month,<span class="keyword">avg</span>(speed),<span class="keyword">avg</span>(laneoccupy),<span class="keyword">avg</span>(volume) <span class="keyword">from</span> vddata <span class="keyword">group</span> <span class="keyword">by</span> date_month;</span><br><span class="line"><span class="comment"># Total MapReduce CPU Time Spent: 4 seconds 100 msec</span></span><br><span class="line"><span class="comment"># Time taken: 19.655 seconds, Fetched: 12 row(s)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> date_month,date_day,<span class="keyword">avg</span>(speed),<span class="keyword">avg</span>(laneoccupy),<span class="keyword">avg</span>(volume) <span class="keyword">from</span> vddata <span class="keyword">group</span> <span class="keyword">by</span> date_month,date_day;</span><br><span class="line"><span class="comment"># Total MapReduce CPU Time Spent: 5 seconds 230 msec</span></span><br><span class="line"><span class="comment"># Time taken: 19.033 seconds, Fetched: 364 row(s)</span></span><br></pre></td></tr></table></figure>


<p>再來是Spark SQL，要用Spark SQL就只能用</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">import org.apache.spark.sql.SparkSession</span><br><span class="line">import java.util.Calendar._</span><br><span class="line">import java.sql.Timestamp</span><br><span class="line"></span><br><span class="line">val spark = SparkSession.builder().appName(&quot;spark on hive&quot;)</span><br><span class="line">  .config(&quot;spark.sql.warehouse.dir&quot;, &quot;hdfs://hc1/spark&quot;)</span><br><span class="line">  .enableHiveSupport().getOrCreate()</span><br><span class="line"> </span><br><span class="line">val st = getInstance().getTime()</span><br><span class="line">val sql_res_1 = spark.sql(&quot;<span class="keyword">select</span> <span class="keyword">count</span>(vdid) <span class="keyword">from</span> vddata<span class="string">&quot;).collect()</span></span><br><span class="line"><span class="string">println(getInstance().getTime().getTime() - st.getTime())</span></span><br><span class="line"><span class="string">// 7724 ms</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">val st = getInstance().getTime()</span></span><br><span class="line"><span class="string">val sql_res_2 = spark.sql(&quot;</span><span class="keyword">select</span> date_month,<span class="keyword">count</span>(vdid) <span class="keyword">from</span> vddata <span class="keyword">group</span> <span class="keyword">by</span> date_month<span class="string">&quot;).collect()</span></span><br><span class="line"><span class="string">println(getInstance().getTime().getTime() - st.getTime())</span></span><br><span class="line"><span class="string">// 3729 ms</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">val st = getInstance().getTime()</span></span><br><span class="line"><span class="string">val sql_res_3 = spark.sql(&quot;</span><span class="keyword">select</span> date_month,<span class="keyword">avg</span>(speed),<span class="keyword">avg</span>(laneoccupy),<span class="keyword">avg</span>(volume) <span class="keyword">from</span> vddata <span class="keyword">group</span> <span class="keyword">by</span> date_month<span class="string">&quot;).collect()</span></span><br><span class="line"><span class="string">println(getInstance().getTime().getTime() - st.getTime())</span></span><br><span class="line"><span class="string">// 4520 ms</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">val st = getInstance().getTime()</span></span><br><span class="line"><span class="string">val sql_res_4 = spark.sql(&quot;</span><span class="keyword">select</span> date_month,date_day,<span class="keyword">avg</span>(speed),<span class="keyword">avg</span>(laneoccupy),<span class="keyword">avg</span>(volume) <span class="keyword">from</span> vddata <span class="keyword">group</span> <span class="keyword">by</span> date_month,date_day<span class="string">&quot;).collect()</span></span><br><span class="line"><span class="string">println(getInstance().getTime().getTime() - st.getTime())</span></span><br><span class="line"><span class="string">// 4353 ms</span></span><br></pre></td></tr></table></figure>

<p>最後是Drill：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># on HBase</span><br><span class="line">select count(vdid) from hbase.vddata;</span><br><span class="line"># 1.319s</span><br><span class="line">select vddata.datetime.&#96;month&#96;,count(vddata.vdid) from hbase.vddata group by vddata.datetime.&#96;month&#96;;</span><br><span class="line"># 11.125s	</span><br><span class="line">select vddata.datetime.&#96;month&#96;,avg(vddata.vd_info.volume) from hbase.vddata group by vddata.datetime.&#96;month&#96;;</span><br><span class="line"># datatype error</span><br><span class="line">select datetime.month,date_day,avg(vd_info.speed),avg(vd_info.laneoccupy),avg(vd_info.volume) </span><br><span class="line">from hbase.vddata group by datetime.month,datetime.day;</span><br><span class="line"># datatype error</span><br><span class="line"></span><br><span class="line"># on Hive</span><br><span class="line">select count(vdid) from hive_cassSpark1.vddata;</span><br><span class="line"># in time</span><br><span class="line">select date_month,count(vdid) from hive_cassSpark1.vddata group by date_month;</span><br><span class="line"># 2.203s	</span><br><span class="line">select date_month,avg(speed),avg(laneoccupy),avg(volume) from hive_cassSpark1.vddata group by date_month;</span><br><span class="line"># 2.632s</span><br><span class="line">select date_month,date_day,avg(speed),avg(laneoccupy),avg(volume) </span><br><span class="line">from hive_cassSpark1.vddata group by date_month,date_day;</span><br><span class="line"># 3.167s</span><br><span class="line"></span><br><span class="line"># on csv in hdfs</span><br><span class="line">select count(columns[0]) from dfs.&#96;&#x2F;drill&#x2F;tw5_df.csv&#96;;</span><br><span class="line"># 1.078s</span><br><span class="line">select columns[5],count(columns[0]) from dfs.&#96;&#x2F;drill&#x2F;tw5_df.csv&#96; group by columns[5];</span><br><span class="line"># 2.049s</span><br><span class="line">select columns[5],avg(columns[1]),avg(columns[2]),avg(columns[3]) from dfs.&#96;&#x2F;drill&#x2F;tw5_df.csv&#96; group by columns[5];</span><br><span class="line"># datatype error </span><br><span class="line">select columns[5],columns[6],avg(columns[1]),avg(columns[2]),avg(columns[3]) </span><br><span class="line">from dfs.&#96;&#x2F;drill&#x2F;tw5_df.csv&#96; group by columns[5],columns[6];</span><br><span class="line"># datatype error </span><br><span class="line"></span><br><span class="line"># on json in hdfs</span><br><span class="line">select count(vdid) from dfs.&#96;&#x2F;drill&#x2F;tw5_df.json&#96;;</span><br><span class="line"># 2.834s</span><br><span class="line">select date_month,count(vdid) from dfs.&#96;&#x2F;drill&#x2F;tw5_df.json&#96; group by date_month;</span><br><span class="line"># 5.778s	</span><br><span class="line">select date_month,avg(speed),avg(laneoccupy),avg(volume) from dfs.&#96;&#x2F;drill&#x2F;tw5_df.json&#96; group by date_month;</span><br><span class="line"># datatype error </span><br><span class="line">select date_month,date_day,avg(speed),avg(laneoccupy),avg(volume) from dfs.&#96;&#x2F;drill&#x2F;tw5_df.json&#96; group by date_month,date_day;</span><br><span class="line"># datatype error </span><br></pre></td></tr></table></figure>

<p>datatype error是因為裡面有int, double混在同一列，Drill現在還無法有效處理這種問題</p>
<p>因此，透過Hive去做storage會是比較好的選擇</p>
<p>小結一下，在這樣的資料量(1M x 11)下，其實用Spark SQL沒有輸Drill太多</p>
<p>接下來測試看看大一點的資料量</p>
<p>我從UCI下載了兩個資料下來：<a href="http://archive.ics.uci.edu/ml/datasets/SUSY">SUSY</a>跟<a href="http://archive.ics.uci.edu/ml/datasets/HIGGS">HIGGS</a></p>
<p>解壓縮後的大小分別是G跟G，然後直接用hive把資料放上去，分別用Spark SQL跟Drill去測試看看</p>
<p>先看一下資料長相</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">head SUSY.csv</span><br><span class="line"><span class="comment"># 0.000000000000000000e+00,9.728614687919616699e-01,6.538545489311218262e-01,1.176224589347839355e+00,1.157156467437744141e+00,-1.739873170852661133e+00,-8.743090629577636719e-01,5.677649974822998047e-01,-1.750000417232513428e-01,8.100607395172119141e-01,-2.525521218776702881e-01,1.921887040138244629e+00,8.896374106407165527e-01,4.107718467712402344e-01,1.145620822906494141e+00,1.932632088661193848e+00,9.944640994071960449e-01,1.367815494537353516e+00,4.071449860930442810e-02</span></span><br><span class="line"><span class="comment"># 1.000000000000000000e+00,1.667973041534423828e+00,6.419061869382858276e-02,-1.225171446800231934e+00,5.061022043228149414e-01,-3.389389812946319580e-01,1.672542810440063477e+00,3.475464344024658203e+00,-1.219136357307434082e+00,1.295456290245056152e-02,3.775173664093017578e+00,1.045977115631103516e+00,5.680512785911560059e-01,4.819284379482269287e-01,0.000000000000000000e+00,4.484102725982666016e-01,2.053557634353637695e-01,1.321893453598022461e+00,3.775840103626251221e-01  </span></span><br><span class="line"><span class="comment"># 1.000000000000000000e+00,4.448399245738983154e-01,-1.342980116605758667e-01,-7.099716067314147949e-01,4.517189264297485352e-01,-1.613871216773986816e+00,-7.686609029769897461e-01,1.219918131828308105e+00,5.040258169174194336e-01,1.831247568130493164e+00,-4.313853085041046143e-01,5.262832045555114746e-01,9.415140151977539062e-01,1.587535023689270020e+00,2.024308204650878906e+00,6.034975647926330566e-01,1.562373995780944824e+00,1.135454416275024414e+00,1.809100061655044556e-01</span></span><br><span class="line"><span class="comment"># 1.000000000000000000e+00,3.812560737133026123e-01,-9.761453866958618164e-01,6.931523084640502930e-01,4.489588439464569092e-01,8.917528986930847168e-01,-6.773284673690795898e-01,2.033060073852539062e+00,1.533040523529052734e+00,3.046259880065917969e+00,-1.005284786224365234e+00,5.693860650062561035e-01,1.015211343765258789e+00,1.582216739654541016e+00,1.551914215087890625e+00,7.612152099609375000e-01,1.715463757514953613e+00,1.492256760597229004e+00,9.071890264749526978e-02 </span></span><br><span class="line"><span class="comment"># 1.000000000000000000e+00,1.309996485710144043e+00,-6.900894641876220703e-01,-6.762592792510986328e-01,1.589282631874084473e+00,-6.933256387710571289e-01,6.229069828987121582e-01,1.087561845779418945e+00,-3.817416727542877197e-01,5.892043709754943848e-01,1.365478992462158203e+00,1.179295063018798828e+00,9.682182073593139648e-01,7.285631299018859863e-01,0.000000000000000000e+00,1.083157896995544434e+00,4.342924803495407104e-02,1.154853701591491699e+00,9.485860168933868408e-02</span></span><br><span class="line"></span><br><span class="line">head HIGGS.csv</span><br><span class="line"><span class="comment"># 1.000000000000000000e+00,8.692932128906250000e-01,-6.350818276405334473e-01,2.256902605295181274e-01,3.274700641632080078e-01,-6.899932026863098145e-01,7.542022466659545898e-01,-2.485731393098831177e-01,-1.092063903808593750e+00,0.000000000000000000e+00,1.374992132186889648e+00,-6.536741852760314941e-01,9.303491115570068359e-01,1.107436060905456543e+00,1.138904333114624023e+00,-1.578198313713073730e+00,-1.046985387802124023e+00,0.000000000000000000e+00,6.579295396804809570e-01,-1.045456994324922562e-02,-4.576716944575309753e-02,3.101961374282836914e+00,1.353760004043579102e+00,9.795631170272827148e-01,9.780761599540710449e-01,9.200048446655273438e-01,7.216574549674987793e-01,9.887509346008300781e-01,8.766783475875854492e-01&quot;</span></span><br><span class="line"><span class="comment"># 1.000000000000000000e+00,9.075421094894409180e-01,3.291472792625427246e-01,3.594118654727935791e-01,1.497969865798950195e+00,-3.130095303058624268e-01,1.095530629158020020e+00,-5.575249195098876953e-01,-1.588229775428771973e+00,2.173076152801513672e+00,8.125811815261840820e-01,-2.136419266462326050e-01,1.271014571189880371e+00,2.214872121810913086e+00,4.999939501285552979e-01,-1.261431813240051270e+00,7.321561574935913086e-01,0.000000000000000000e+00,3.987008929252624512e-01,-1.138930082321166992e+00,-8.191101951524615288e-04,0.000000000000000000e+00,3.022198975086212158e-01,8.330481648445129395e-01,9.856996536254882812e-01,9.780983924865722656e-01,7.797321677207946777e-01,9.923557639122009277e-01,7.983425855636596680e-01&quot;  </span></span><br><span class="line"><span class="comment"># 1.000000000000000000e+00,7.988347411155700684e-01,1.470638751983642578e+00,-1.635974764823913574e+00,4.537731707096099854e-01,4.256291687488555908e-01,1.104874610900878906e+00,1.282322287559509277e+00,1.381664276123046875e+00,0.000000000000000000e+00,8.517372012138366699e-01,1.540658950805664062e+00,-8.196895122528076172e-01,2.214872121810913086e+00,9.934899210929870605e-01,3.560801148414611816e-01,-2.087775468826293945e-01,2.548224449157714844e+00,1.256954550743103027e+00,1.128847599029541016e+00,9.004608392715454102e-01,0.000000000000000000e+00,9.097532629966735840e-01,1.108330488204956055e+00,9.856922030448913574e-01,9.513312578201293945e-01,8.032515048980712891e-01,8.659244179725646973e-01,7.801175713539123535e-01&quot;      </span></span><br><span class="line"><span class="comment"># 0.000000000000000000e+00,1.344384789466857910e+00,-8.766260147094726562e-01,9.359127283096313477e-01,1.992050051689147949e+00,8.824543952941894531e-01,1.786065936088562012e+00,-1.646777749061584473e+00,-9.423825144767761230e-01,0.000000000000000000e+00,2.423264741897583008e+00,-6.760157942771911621e-01,7.361586689949035645e-01,2.214872121810913086e+00,1.298719763755798340e+00,-1.430738091468811035e+00,-3.646581768989562988e-01,0.000000000000000000e+00,7.453126907348632812e-01,-6.783788204193115234e-01,-1.360356330871582031e+00,0.000000000000000000e+00,9.466524720191955566e-01,1.028703689575195312e+00,9.986560940742492676e-01,7.282806038856506348e-01,8.692002296447753906e-01,1.026736497879028320e+00,9.579039812088012695e-01&quot; </span></span><br><span class="line"><span class="comment"># 1.000000000000000000e+00,1.105008959770202637e+00,3.213555514812469482e-01,1.522401213645935059e+00,8.828076124191284180e-01,-1.205349326133728027e+00,6.814661026000976562e-01,-1.070463895797729492e+00,-9.218706488609313965e-01,0.000000000000000000e+00,8.008721470832824707e-01,1.020974040031433105e+00,9.714065194129943848e-01,2.214872121810913086e+00,5.967612862586975098e-01,-3.502728641033172607e-01,6.311942934989929199e-01,0.000000000000000000e+00,4.799988865852355957e-01,-3.735655248165130615e-01,1.130406111478805542e-01,0.000000000000000000e+00,7.558564543724060059e-01,1.361057043075561523e+00,9.866096973419189453e-01,8.380846381187438965e-01,1.133295178413391113e+00,8.722448945045471191e-01,8.084865212440490723e-01</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hdfs dfs -put SUSY.csv.gz /drill/SUSY.csv.gz</span><br><span class="line">hdfs dfs -put HIGGS.csv.gz /drill/HIGGS.csv.gz</span><br></pre></td></tr></table></figure>

<p>Hive上傳local file</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> susy_df (lepton1pt <span class="keyword">DOUBLE</span>, lepton1eta <span class="keyword">DOUBLE</span>, lepton1phi <span class="keyword">DOUBLE</span>, </span><br><span class="line">lepton2pt <span class="keyword">DOUBLE</span>, lepton2eta <span class="keyword">DOUBLE</span>, lepton2phi <span class="keyword">DOUBLE</span>, mem <span class="keyword">DOUBLE</span>, mep <span class="keyword">DOUBLE</span>, </span><br><span class="line">met_rel <span class="keyword">DOUBLE</span>, axialmet <span class="keyword">DOUBLE</span>, m_r <span class="keyword">DOUBLE</span>, m_tr_2 <span class="keyword">DOUBLE</span>, r <span class="keyword">DOUBLE</span>, mt2 <span class="keyword">DOUBLE</span>,</span><br><span class="line">s_r <span class="keyword">DOUBLE</span>, m_delta_r <span class="keyword">DOUBLE</span>, dphi_r_b <span class="keyword">DOUBLE</span>, cos_theta_r1 <span class="keyword">DOUBLE</span>)</span><br><span class="line"><span class="keyword">ROW</span> <span class="keyword">FORMAT</span> <span class="keyword">DELIMITED</span></span><br><span class="line"><span class="keyword">FIELDS</span> <span class="keyword">TERMINATED</span> <span class="keyword">BY</span> <span class="string">&#x27;,&#x27;</span></span><br><span class="line"><span class="keyword">STORED</span> <span class="keyword">AS</span> TEXTFILE;</span><br><span class="line"></span><br><span class="line"><span class="keyword">LOAD</span> <span class="keyword">DATA</span> <span class="keyword">LOCAL</span> INPATH <span class="string">&#x27;/home/tester/SUSY.csv.gz&#x27;</span></span><br><span class="line">OVERWRITE <span class="keyword">INTO</span> <span class="keyword">TABLE</span> susy_df;</span><br><span class="line"><span class="comment">-- Time taken: 19.125 seconds</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> higgs_df (lepton_pt <span class="keyword">DOUBLE</span>, lepton_eta <span class="keyword">DOUBLE</span>, lepton_phi <span class="keyword">DOUBLE</span>,</span><br><span class="line">mem <span class="keyword">DOUBLE</span>, mep <span class="keyword">DOUBLE</span>, jet1pt <span class="keyword">DOUBLE</span>, jet1eta <span class="keyword">DOUBLE</span>, jet1phi <span class="keyword">DOUBLE</span>, </span><br><span class="line">jet1b_tag <span class="keyword">DOUBLE</span>, jet2pt <span class="keyword">DOUBLE</span>, jet2eta <span class="keyword">DOUBLE</span>, jet2phi <span class="keyword">DOUBLE</span>, jet2b_tag <span class="keyword">DOUBLE</span>,</span><br><span class="line">jet3pt <span class="keyword">DOUBLE</span>, jet3eta <span class="keyword">DOUBLE</span>, jet3phi <span class="keyword">DOUBLE</span>, jet3b_tag <span class="keyword">DOUBLE</span>, jet4pt <span class="keyword">DOUBLE</span>,</span><br><span class="line">jet4eta <span class="keyword">DOUBLE</span>, jet4phi <span class="keyword">DOUBLE</span>, jet4b_tag <span class="keyword">DOUBLE</span>, m_jj <span class="keyword">DOUBLE</span>, m_jjj <span class="keyword">DOUBLE</span>,</span><br><span class="line">m_lv <span class="keyword">DOUBLE</span>, m_jlv <span class="keyword">DOUBLE</span>, m_bb <span class="keyword">DOUBLE</span>, m_wbb <span class="keyword">DOUBLE</span>, m_wwbb <span class="keyword">DOUBLE</span>)</span><br><span class="line"><span class="keyword">ROW</span> <span class="keyword">FORMAT</span> <span class="keyword">DELIMITED</span></span><br><span class="line"><span class="keyword">FIELDS</span> <span class="keyword">TERMINATED</span> <span class="keyword">BY</span> <span class="string">&#x27;,&#x27;</span></span><br><span class="line"><span class="keyword">STORED</span> <span class="keyword">AS</span> TEXTFILE;</span><br><span class="line"></span><br><span class="line"><span class="keyword">LOAD</span> <span class="keyword">DATA</span> <span class="keyword">LOCAL</span> INPATH <span class="string">&#x27;/home/tester/HIGGS.csv.gz&#x27;</span></span><br><span class="line">OVERWRITE <span class="keyword">INTO</span> <span class="keyword">TABLE</span> higgs_df;</span><br><span class="line"><span class="comment">-- Time taken: 50.145 seconds</span></span><br></pre></td></tr></table></figure>

<p>複雜一點的運算，或是filter，我的VM都撐不住，就只能等到有好電腦才有機會測試了</p>
<p>這裡就簡單測試aggregation</p>
<p><code>select count(lepton1phi) from susy_df group by lepton1pt</code><br><code>select count(lepton_phi) from higgs_df group by lepton_pt</code></p>
<table>
<thead>
<tr>
<th></th>
<th>Hive</th>
<th>Spark</th>
<th>Drill</th>
</tr>
</thead>
<tbody><tr>
<td>SUSY</td>
<td>44.374s</td>
<td>28.794s</td>
<td>29.262s</td>
</tr>
<tr>
<td>HIGGS</td>
<td>105.887s</td>
<td>58.748s</td>
<td>74s</td>
</tr>
</tbody></table>
<p>Spark script:</p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.spark.sql.<span class="type">SparkSession</span></span><br><span class="line"><span class="keyword">import</span> java.util.<span class="type">Calendar</span>._</span><br><span class="line"><span class="keyword">import</span> java.sql.<span class="type">Timestamp</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> spark = <span class="type">SparkSession</span>.builder().appName(<span class="string">&quot;spark on hive&quot;</span>).config(<span class="string">&quot;spark.sql.warehouse.dir&quot;</span>, <span class="string">&quot;hdfs://hc1/spark&quot;</span>).enableHiveSupport().getOrCreate()</span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> st = getInstance().getTime()</span><br><span class="line"><span class="keyword">val</span> susy_out_3 = spark.sql(<span class="string">&quot;select count(lepton1phi) from susy_df group by lepton1pt&quot;</span>).collect()</span><br><span class="line">println(getInstance().getTime().getTime() - st.getTime())</span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> st = getInstance().getTime()</span><br><span class="line"><span class="keyword">val</span> tmp = spark.sql(<span class="string">&quot;select count(lepton_phi) from higgs_df group by lepton_pt&quot;</span>).collect()</span><br><span class="line">println(getInstance().getTime().getTime() - st.getTime())</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Drill運行SQL script</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(lepton1phi) <span class="keyword">from</span> hive_cassSpark1.susy_df <span class="keyword">group</span> <span class="keyword">by</span> lepton1pt</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(lepton_phi) <span class="keyword">from</span> hive_cassSpark1.higgs_df <span class="keyword">group</span> <span class="keyword">by</span> lepton_pt</span><br></pre></td></tr></table></figure>

<p>在這麼大量的資料中，Spark用了三個核心，Drill只用了一個核心</p>
<p>這樣的差距都還在可以接受的範圍，Drill稍微微調後，應該可以在相同的電腦設備下</p>
<p>擁有比Spark SQL還強大的運算能力</p>
<p>結論，Drill在我看來會是比較長久的發展，只是它只適合用來做為讀取介面</p>
]]></content>
      <categories>
        <category>BigData</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>Hadoop</tag>
        <tag>HBase</tag>
        <tag>Hive</tag>
        <tag>Drill</tag>
        <tag>SQL</tag>
      </tags>
  </entry>
</search>
